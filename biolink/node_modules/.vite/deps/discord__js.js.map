{
  "version": 3,
  "sources": ["../../../../../../node_modules/tslib/tslib.es6.mjs", "../../../../../../node_modules/@discordjs/rest/node_modules/discord-api-types/gateway/common.js", "../../../../../../node_modules/@discordjs/rest/node_modules/discord-api-types/gateway/v10.ts", "../../../../../../node_modules/@discordjs/rest/node_modules/discord-api-types/globals.ts", "../../../../../../node_modules/@discordjs/rest/node_modules/discord-api-types/payloads/common.ts", "../../../../../../node_modules/@discordjs/rest/node_modules/discord-api-types/payloads/v10/application.ts", "../../../../../../node_modules/@discordjs/rest/node_modules/discord-api-types/payloads/v10/auditLog.ts", "../../../../../../node_modules/@discordjs/rest/node_modules/discord-api-types/payloads/v10/autoModeration.ts", "../../../../../../node_modules/@discordjs/rest/node_modules/discord-api-types/payloads/v10/channel.ts", "../../../../../../node_modules/@discordjs/rest/node_modules/discord-api-types/payloads/v10/gateway.ts", "../../../../../../node_modules/@discordjs/rest/node_modules/discord-api-types/payloads/v10/guild.ts", "../../../../../../node_modules/@discordjs/rest/node_modules/discord-api-types/payloads/v10/guildScheduledEvent.ts", "../../../../../../node_modules/@discordjs/rest/node_modules/discord-api-types/payloads/v10/_interactions/_applicationCommands/_chatInput/attachment.js", "../../../../../../node_modules/@discordjs/rest/node_modules/discord-api-types/payloads/v10/_interactions/_applicationCommands/_chatInput/base.js", "../../../../../../node_modules/@discordjs/rest/node_modules/discord-api-types/payloads/v10/_interactions/_applicationCommands/_chatInput/boolean.js", "../../../../../../node_modules/@discordjs/rest/node_modules/discord-api-types/payloads/v10/_interactions/_applicationCommands/_chatInput/channel.js", "../../../../../../node_modules/@discordjs/rest/node_modules/discord-api-types/payloads/v10/_interactions/_applicationCommands/_chatInput/integer.js", "../../../../../../node_modules/@discordjs/rest/node_modules/discord-api-types/payloads/v10/_interactions/_applicationCommands/_chatInput/mentionable.js", "../../../../../../node_modules/@discordjs/rest/node_modules/discord-api-types/payloads/v10/_interactions/_applicationCommands/_chatInput/number.js", "../../../../../../node_modules/@discordjs/rest/node_modules/discord-api-types/payloads/v10/_interactions/_applicationCommands/_chatInput/role.js", "../../../../../../node_modules/@discordjs/rest/node_modules/discord-api-types/payloads/v10/_interactions/_applicationCommands/_chatInput/shared.ts", "../../../../../../node_modules/@discordjs/rest/node_modules/discord-api-types/payloads/v10/_interactions/_applicationCommands/_chatInput/string.js", "../../../../../../node_modules/@discordjs/rest/node_modules/discord-api-types/payloads/v10/_interactions/_applicationCommands/_chatInput/subcommand.js", "../../../../../../node_modules/@discordjs/rest/node_modules/discord-api-types/payloads/v10/_interactions/_applicationCommands/_chatInput/subcommandGroup.js", "../../../../../../node_modules/@discordjs/rest/node_modules/discord-api-types/payloads/v10/_interactions/_applicationCommands/_chatInput/user.js", "../../../../../../node_modules/@discordjs/rest/node_modules/discord-api-types/payloads/v10/_interactions/_applicationCommands/chatInput.ts", "../../../../../../node_modules/@discordjs/rest/node_modules/discord-api-types/payloads/v10/_interactions/_applicationCommands/contextMenu.js", "../../../../../../node_modules/@discordjs/rest/node_modules/discord-api-types/payloads/v10/_interactions/_applicationCommands/permissions.ts", "../../../../../../node_modules/@discordjs/rest/node_modules/discord-api-types/payloads/v10/_interactions/applicationCommands.ts", "../../../../../../node_modules/@discordjs/rest/node_modules/discord-api-types/payloads/v10/_interactions/autocomplete.js", "../../../../../../node_modules/@discordjs/rest/node_modules/discord-api-types/payloads/v10/_interactions/base.js", "../../../../../../node_modules/@discordjs/rest/node_modules/discord-api-types/payloads/v10/_interactions/messageComponents.js", "../../../../../../node_modules/@discordjs/rest/node_modules/discord-api-types/payloads/v10/_interactions/modalSubmit.js", "../../../../../../node_modules/@discordjs/rest/node_modules/discord-api-types/payloads/v10/_interactions/ping.js", "../../../../../../node_modules/@discordjs/rest/node_modules/discord-api-types/payloads/v10/_interactions/responses.ts", "../../../../../../node_modules/@discordjs/rest/node_modules/discord-api-types/payloads/v10/interactions.ts", "../../../../../../node_modules/@discordjs/rest/node_modules/discord-api-types/payloads/v10/invite.ts", "../../../../../../node_modules/@discordjs/rest/node_modules/discord-api-types/payloads/v10/oauth2.ts", "../../../../../../node_modules/@discordjs/rest/node_modules/discord-api-types/payloads/v10/poll.ts", "../../../../../../node_modules/@discordjs/rest/node_modules/discord-api-types/payloads/v10/permissions.ts", "../../../../../../node_modules/@discordjs/rest/node_modules/discord-api-types/payloads/v10/stageInstance.ts", "../../../../../../node_modules/@discordjs/rest/node_modules/discord-api-types/payloads/v10/sticker.ts", "../../../../../../node_modules/@discordjs/rest/node_modules/discord-api-types/payloads/v10/teams.ts", "../../../../../../node_modules/@discordjs/rest/node_modules/discord-api-types/payloads/v10/user.ts", "../../../../../../node_modules/@discordjs/rest/node_modules/discord-api-types/payloads/v10/webhook.ts", "../../../../../../node_modules/@discordjs/rest/node_modules/discord-api-types/payloads/v10/monetization.ts", "../../../../../../node_modules/@discordjs/rest/node_modules/discord-api-types/payloads/v10/index.ts", "../../../../../../node_modules/@discordjs/rest/node_modules/discord-api-types/rest/common.ts", "../../../../../../node_modules/@discordjs/rest/node_modules/discord-api-types/rest/v10/application.js", "../../../../../../node_modules/@discordjs/rest/node_modules/discord-api-types/rest/v10/auditLog.js", "../../../../../../node_modules/@discordjs/rest/node_modules/discord-api-types/rest/v10/autoModeration.js", "../../../../../../node_modules/@discordjs/rest/node_modules/discord-api-types/rest/v10/channel.ts", "../../../../../../node_modules/@discordjs/rest/node_modules/discord-api-types/rest/v10/emoji.js", "../../../../../../node_modules/@discordjs/rest/node_modules/discord-api-types/rest/v10/gateway.js", "../../../../../../node_modules/@discordjs/rest/node_modules/discord-api-types/rest/v10/guild.js", "../../../../../../node_modules/@discordjs/rest/node_modules/discord-api-types/rest/v10/guildScheduledEvent.js", "../../../../../../node_modules/@discordjs/rest/node_modules/discord-api-types/rest/v10/interactions.js", "../../../../../../node_modules/@discordjs/rest/node_modules/discord-api-types/rest/v10/invite.js", "../../../../../../node_modules/@discordjs/rest/node_modules/discord-api-types/rest/v10/oauth2.js", "../../../../../../node_modules/@discordjs/rest/node_modules/discord-api-types/rest/v10/poll.js", "../../../../../../node_modules/@discordjs/rest/node_modules/discord-api-types/rest/v10/stageInstance.js", "../../../../../../node_modules/@discordjs/rest/node_modules/discord-api-types/rest/v10/sticker.js", "../../../../../../node_modules/@discordjs/rest/node_modules/discord-api-types/rest/v10/template.js", "../../../../../../node_modules/@discordjs/rest/node_modules/discord-api-types/rest/v10/user.js", "../../../../../../node_modules/@discordjs/rest/node_modules/discord-api-types/rest/v10/voice.js", "../../../../../../node_modules/@discordjs/rest/node_modules/discord-api-types/rest/v10/webhook.js", "../../../../../../node_modules/@discordjs/rest/node_modules/discord-api-types/rest/v10/monetization.ts", "../../../../../../node_modules/@discordjs/rest/node_modules/discord-api-types/rest/v10/index.ts", "../../../../../../node_modules/@discordjs/rest/node_modules/discord-api-types/rpc/common.ts", "../../../../../../node_modules/@discordjs/rest/node_modules/discord-api-types/rpc/v10.ts", "../../../../../../node_modules/@discordjs/rest/node_modules/discord-api-types/utils/v10.ts", "../../../../../../node_modules/@discordjs/rest/node_modules/discord-api-types/v10.ts", "../../../../../../node_modules/@discordjs/rest/node_modules/@discordjs/collection/src/index.ts", "../../../../../../node_modules/@discordjs/rest/node_modules/@discordjs/collection/src/collection.ts", "../../../../../../node_modules/@sapphire/snowflake/src/lib/Snowflake.ts", "../../../../../../node_modules/@sapphire/snowflake/src/lib/DiscordSnowflake.ts", "../../../../../../node_modules/@sapphire/snowflake/src/lib/TwitterSnowflake.ts", "../../../../../../node_modules/@vladfrangu/async_event_emitter/src/index.ts", "../../../../../../node_modules/magic-bytes.js/dist/model/toHex.js", "../../../../../../node_modules/magic-bytes.js/dist/model/tree.js", "../../../../../../node_modules/magic-bytes.js/dist/model/pattern-tree.js", "../../../../../../node_modules/magic-bytes.js/dist/index.js", "../../../../../../node_modules/@discordjs/rest/src/web.ts", "../../../../../../node_modules/@discordjs/rest/src/environment.ts", "../../../../../../node_modules/@discordjs/rest/src/lib/utils/constants.ts", "../../../../../../node_modules/@discordjs/rest/src/lib/errors/RateLimitError.ts", "../../../../../../node_modules/@discordjs/rest/src/lib/utils/types.ts", "../../../../../../node_modules/@discordjs/rest/src/lib/utils/utils.ts", "../../../../../../node_modules/@discordjs/rest/src/lib/CDN.ts", "../../../../../../node_modules/@discordjs/rest/src/lib/errors/DiscordAPIError.ts", "../../../../../../node_modules/@discordjs/rest/src/lib/errors/HTTPError.ts", "../../../../../../node_modules/@discordjs/rest/src/lib/REST.ts", "../../../../../../node_modules/@discordjs/rest/src/lib/handlers/Shared.ts", "../../../../../../node_modules/@discordjs/rest/src/lib/handlers/BurstHandler.ts", "../../../../../../node_modules/@discordjs/rest/src/lib/handlers/SequentialHandler.ts", "../../../../../../node_modules/@discordjs/rest/src/shared.ts", "../../../../../../node_modules/discord-api-types/gateway/common.js", "../../../../../../node_modules/discord-api-types/gateway/v10.ts", "../../../../../../node_modules/discord-api-types/globals.ts", "../../../../../../node_modules/discord-api-types/payloads/common.ts", "../../../../../../node_modules/discord-api-types/payloads/v10/application.ts", "../../../../../../node_modules/discord-api-types/payloads/v10/auditLog.ts", "../../../../../../node_modules/discord-api-types/payloads/v10/autoModeration.ts", "../../../../../../node_modules/discord-api-types/payloads/v10/channel.ts", "../../../../../../node_modules/discord-api-types/payloads/v10/gateway.ts", "../../../../../../node_modules/discord-api-types/payloads/v10/guild.ts", "../../../../../../node_modules/discord-api-types/payloads/v10/guildScheduledEvent.ts", "../../../../../../node_modules/discord-api-types/payloads/v10/_interactions/_applicationCommands/_chatInput/attachment.js", "../../../../../../node_modules/discord-api-types/payloads/v10/_interactions/_applicationCommands/_chatInput/base.js", "../../../../../../node_modules/discord-api-types/payloads/v10/_interactions/_applicationCommands/_chatInput/boolean.js", "../../../../../../node_modules/discord-api-types/payloads/v10/_interactions/_applicationCommands/_chatInput/channel.js", "../../../../../../node_modules/discord-api-types/payloads/v10/_interactions/_applicationCommands/_chatInput/integer.js", "../../../../../../node_modules/discord-api-types/payloads/v10/_interactions/_applicationCommands/_chatInput/mentionable.js", "../../../../../../node_modules/discord-api-types/payloads/v10/_interactions/_applicationCommands/_chatInput/number.js", "../../../../../../node_modules/discord-api-types/payloads/v10/_interactions/_applicationCommands/_chatInput/role.js", "../../../../../../node_modules/discord-api-types/payloads/v10/_interactions/_applicationCommands/_chatInput/shared.ts", "../../../../../../node_modules/discord-api-types/payloads/v10/_interactions/_applicationCommands/_chatInput/string.js", "../../../../../../node_modules/discord-api-types/payloads/v10/_interactions/_applicationCommands/_chatInput/subcommand.js", "../../../../../../node_modules/discord-api-types/payloads/v10/_interactions/_applicationCommands/_chatInput/subcommandGroup.js", "../../../../../../node_modules/discord-api-types/payloads/v10/_interactions/_applicationCommands/_chatInput/user.js", "../../../../../../node_modules/discord-api-types/payloads/v10/_interactions/_applicationCommands/chatInput.ts", "../../../../../../node_modules/discord-api-types/payloads/v10/_interactions/_applicationCommands/contextMenu.js", "../../../../../../node_modules/discord-api-types/payloads/v10/_interactions/_applicationCommands/permissions.ts", "../../../../../../node_modules/discord-api-types/payloads/v10/_interactions/applicationCommands.ts", "../../../../../../node_modules/discord-api-types/payloads/v10/_interactions/autocomplete.js", "../../../../../../node_modules/discord-api-types/payloads/v10/_interactions/base.js", "../../../../../../node_modules/discord-api-types/payloads/v10/_interactions/messageComponents.js", "../../../../../../node_modules/discord-api-types/payloads/v10/_interactions/modalSubmit.js", "../../../../../../node_modules/discord-api-types/payloads/v10/_interactions/ping.js", "../../../../../../node_modules/discord-api-types/payloads/v10/_interactions/responses.ts", "../../../../../../node_modules/discord-api-types/payloads/v10/interactions.ts", "../../../../../../node_modules/discord-api-types/payloads/v10/invite.ts", "../../../../../../node_modules/discord-api-types/payloads/v10/oauth2.ts", "../../../../../../node_modules/discord-api-types/payloads/v10/poll.ts", "../../../../../../node_modules/discord-api-types/payloads/v10/permissions.ts", "../../../../../../node_modules/discord-api-types/payloads/v10/stageInstance.ts", "../../../../../../node_modules/discord-api-types/payloads/v10/sticker.ts", "../../../../../../node_modules/discord-api-types/payloads/v10/teams.ts", "../../../../../../node_modules/discord-api-types/payloads/v10/user.ts", "../../../../../../node_modules/discord-api-types/payloads/v10/webhook.ts", "../../../../../../node_modules/discord-api-types/payloads/v10/monetization.ts", "../../../../../../node_modules/discord-api-types/payloads/v10/index.ts", "../../../../../../node_modules/discord-api-types/rest/common.ts", "../../../../../../node_modules/discord-api-types/rest/v10/application.js", "../../../../../../node_modules/discord-api-types/rest/v10/auditLog.js", "../../../../../../node_modules/discord-api-types/rest/v10/autoModeration.js", "../../../../../../node_modules/discord-api-types/rest/v10/channel.ts", "../../../../../../node_modules/discord-api-types/rest/v10/emoji.js", "../../../../../../node_modules/discord-api-types/rest/v10/gateway.js", "../../../../../../node_modules/discord-api-types/rest/v10/guild.js", "../../../../../../node_modules/discord-api-types/rest/v10/guildScheduledEvent.js", "../../../../../../node_modules/discord-api-types/rest/v10/interactions.js", "../../../../../../node_modules/discord-api-types/rest/v10/invite.js", "../../../../../../node_modules/discord-api-types/rest/v10/oauth2.js", "../../../../../../node_modules/discord-api-types/rest/v10/poll.js", "../../../../../../node_modules/discord-api-types/rest/v10/stageInstance.js", "../../../../../../node_modules/discord-api-types/rest/v10/sticker.js", "../../../../../../node_modules/discord-api-types/rest/v10/template.js", "../../../../../../node_modules/discord-api-types/rest/v10/user.js", "../../../../../../node_modules/discord-api-types/rest/v10/voice.js", "../../../../../../node_modules/discord-api-types/rest/v10/webhook.js", "../../../../../../node_modules/discord-api-types/rest/v10/monetization.ts", "../../../../../../node_modules/discord-api-types/rest/v10/index.ts", "../../../../../../node_modules/discord-api-types/rpc/common.ts", "../../../../../../node_modules/discord-api-types/rpc/v10.ts", "../../../../../../node_modules/discord-api-types/utils/v10.ts", "../../../../../../node_modules/discord-api-types/v10.ts", "../../../../../../node_modules/discord.js/src/errors/ErrorCodes.js", "../../../../../../node_modules/discord.js/src/errors/Messages.js", "../../../../../../node_modules/discord.js/src/errors/DJSError.js", "../../../../../../node_modules/discord.js/src/errors/index.js", "../../../../../../node_modules/lodash.snakecase/index.js", "../../../../../../node_modules/discord.js/src/util/Transformers.js", "../../../../../../node_modules/discord.js/package.json", "../../../../../../node_modules/discord.js/src/util/LimitedCollection.js", "../../../../../../node_modules/discord.js/src/util/Options.js", "../../../../../../node_modules/undici/lib/core/symbols.js", "../../../../../../node_modules/undici/lib/core/errors.js", "../../../../../../node_modules/undici/lib/core/constants.js", "../../../../../../node_modules/undici/lib/core/tree.js", "../../../../../../node_modules/undici/lib/core/util.js", "../../../../../../node_modules/undici/lib/core/diagnostics.js", "../../../../../../node_modules/undici/lib/core/request.js", "../../../../../../node_modules/undici/lib/dispatcher/dispatcher.js", "../../../../../../node_modules/undici/lib/dispatcher/dispatcher-base.js", "../../../../../../node_modules/undici/lib/core/connect.js", "../../../../../../node_modules/undici/lib/util/timers.js", "../../../../../../node_modules/undici/lib/llhttp/utils.js", "../../../../../../node_modules/undici/lib/llhttp/constants.js", "../../../../../../node_modules/undici/lib/llhttp/llhttp-wasm.js", "../../../../../../node_modules/undici/lib/llhttp/llhttp_simd-wasm.js", "../../../../../../node_modules/undici/lib/web/fetch/constants.js", "../../../../../../node_modules/undici/lib/web/fetch/global.js", "../../../../../../node_modules/undici/lib/web/fetch/data-url.js", "../../../../../../node_modules/undici/lib/web/fetch/webidl.js", "../../../../../../node_modules/undici/lib/web/fetch/util.js", "../../../../../../node_modules/undici/lib/web/fetch/symbols.js", "../../../../../../node_modules/undici/lib/web/fetch/file.js", "../../../../../../node_modules/undici/lib/web/fetch/formdata.js", "../../../../../../node_modules/undici/lib/web/fetch/formdata-parser.js", "../../../../../../node_modules/undici/lib/web/fetch/body.js", "../../../../../../node_modules/undici/lib/dispatcher/client-h1.js", "../../../../../../node_modules/undici/lib/dispatcher/client-h2.js", "../../../../../../node_modules/undici/lib/handler/redirect-handler.js", "../../../../../../node_modules/undici/lib/interceptor/redirect-interceptor.js", "../../../../../../node_modules/undici/lib/dispatcher/client.js", "../../../../../../node_modules/undici/lib/dispatcher/fixed-queue.js", "../../../../../../node_modules/undici/lib/dispatcher/pool-stats.js", "../../../../../../node_modules/undici/lib/dispatcher/pool-base.js", "../../../../../../node_modules/undici/lib/dispatcher/pool.js", "../../../../../../node_modules/undici/lib/dispatcher/balanced-pool.js", "../../../../../../node_modules/undici/lib/dispatcher/agent.js", "../../../../../../node_modules/undici/lib/dispatcher/proxy-agent.js", "../../../../../../node_modules/undici/lib/dispatcher/env-http-proxy-agent.js", "../../../../../../node_modules/undici/lib/handler/retry-handler.js", "../../../../../../node_modules/undici/lib/dispatcher/retry-agent.js", "../../../../../../node_modules/undici/lib/api/readable.js", "../../../../../../node_modules/undici/lib/api/util.js", "../../../../../../node_modules/undici/lib/api/api-request.js", "../../../../../../node_modules/undici/lib/api/abort-signal.js", "../../../../../../node_modules/undici/lib/api/api-stream.js", "../../../../../../node_modules/undici/lib/api/api-pipeline.js", "../../../../../../node_modules/undici/lib/api/api-upgrade.js", "../../../../../../node_modules/undici/lib/api/api-connect.js", "../../../../../../node_modules/undici/lib/api/index.js", "../../../../../../node_modules/undici/lib/mock/mock-errors.js", "../../../../../../node_modules/undici/lib/mock/mock-symbols.js", "../../../../../../node_modules/undici/lib/mock/mock-utils.js", "../../../../../../node_modules/undici/lib/mock/mock-interceptor.js", "../../../../../../node_modules/undici/lib/mock/mock-client.js", "../../../../../../node_modules/undici/lib/mock/mock-pool.js", "../../../../../../node_modules/undici/lib/mock/pluralizer.js", "../../../../../../node_modules/undici/lib/mock/pending-interceptors-formatter.js", "../../../../../../node_modules/undici/lib/mock/mock-agent.js", "../../../../../../node_modules/undici/lib/global.js", "../../../../../../node_modules/undici/lib/handler/decorator-handler.js", "../../../../../../node_modules/undici/lib/interceptor/redirect.js", "../../../../../../node_modules/undici/lib/interceptor/retry.js", "../../../../../../node_modules/undici/lib/interceptor/dump.js", "../../../../../../node_modules/undici/lib/web/fetch/headers.js", "../../../../../../node_modules/undici/lib/web/fetch/response.js", "../../../../../../node_modules/undici/lib/web/fetch/dispatcher-weakref.js", "../../../../../../node_modules/undici/lib/web/fetch/request.js", "../../../../../../node_modules/undici/lib/web/fetch/index.js", "../../../../../../node_modules/undici/lib/web/fileapi/symbols.js", "../../../../../../node_modules/undici/lib/web/fileapi/progressevent.js", "../../../../../../node_modules/undici/lib/web/fileapi/encoding.js", "../../../../../../node_modules/undici/lib/web/fileapi/util.js", "../../../../../../node_modules/undici/lib/web/fileapi/filereader.js", "../../../../../../node_modules/undici/lib/web/cache/symbols.js", "../../../../../../node_modules/undici/lib/web/cache/util.js", "../../../../../../node_modules/undici/lib/web/cache/cache.js", "../../../../../../node_modules/undici/lib/web/cache/cachestorage.js", "../../../../../../node_modules/undici/lib/web/cookies/constants.js", "../../../../../../node_modules/undici/lib/web/cookies/util.js", "../../../../../../node_modules/undici/lib/web/cookies/parse.js", "../../../../../../node_modules/undici/lib/web/cookies/index.js", "../../../../../../node_modules/undici/lib/web/websocket/events.js", "../../../../../../node_modules/undici/lib/web/websocket/constants.js", "../../../../../../node_modules/undici/lib/web/websocket/symbols.js", "../../../../../../node_modules/undici/lib/web/websocket/util.js", "../../../../../../node_modules/undici/lib/web/websocket/frame.js", "../../../../../../node_modules/undici/lib/web/websocket/connection.js", "../../../../../../node_modules/undici/lib/web/websocket/permessage-deflate.js", "../../../../../../node_modules/undici/lib/web/websocket/receiver.js", "../../../../../../node_modules/undici/lib/web/websocket/sender.js", "../../../../../../node_modules/undici/lib/web/websocket/websocket.js", "../../../../../../node_modules/undici/lib/web/eventsource/util.js", "../../../../../../node_modules/undici/lib/web/eventsource/eventsource-stream.js", "../../../../../../node_modules/undici/lib/web/eventsource/eventsource.js", "../../../../../../node_modules/undici/index.js", "../../../../../../node_modules/discord.js/src/util/Colors.js", "../../../../../../node_modules/discord.js/src/util/BitField.js", "../../../../../../node_modules/discord.js/src/util/AttachmentFlagsBitField.js", "../../../../../../node_modules/discord.js/src/structures/Attachment.js", "../../../../../../node_modules/discord.js/src/structures/Base.js", "../../../../../../node_modules/discord.js/src/util/ChannelFlagsBitField.js", "../../../../../../node_modules/discord.js/src/util/Constants.js", "../../../../../../node_modules/discord.js/src/structures/BaseChannel.js", "../../../../../../node_modules/discord.js/src/managers/BaseManager.js", "../../../../../../node_modules/discord.js/src/managers/DataManager.js", "../../../../../../node_modules/discord.js/src/util/Symbols.js", "../../../../../../node_modules/discord.js/src/managers/CachedManager.js", "../../../../../../node_modules/discord.js/src/util/PermissionsBitField.js", "../../../../../../node_modules/discord.js/src/util/RoleFlagsBitField.js", "../../../../../../node_modules/discord.js/src/structures/Role.js", "../../../../../../node_modules/discord.js/src/structures/PermissionOverwrites.js", "../../../../../../node_modules/discord.js/src/managers/PermissionOverwriteManager.js", "../../../../../../node_modules/discord.js/src/structures/GuildChannel.js", "../../../../../../node_modules/discord.js/src/util/SKUFlagsBitField.js", "../../../../../../node_modules/discord.js/src/structures/SKU.js", "../../../../../../node_modules/discord.js/src/util/Util.js", "../../../../../../node_modules/discord.js/src/client/BaseClient.js", "../../../../../../node_modules/discord.js/src/util/Enums.js", "../../../../../../node_modules/discord.js/src/util/Partials.js", "../../../../../../node_modules/discord.js/src/client/actions/Action.js", "../../../../../../node_modules/discord.js/src/util/Events.js", "../../../../../../node_modules/discord.js/src/client/actions/ApplicationCommandPermissionsUpdate.js", "../../../../../../node_modules/discord.js/src/structures/AutoModerationActionExecution.js", "../../../../../../node_modules/discord.js/src/client/actions/AutoModerationActionExecution.js", "../../../../../../node_modules/discord.js/src/client/actions/AutoModerationRuleCreate.js", "../../../../../../node_modules/discord.js/src/client/actions/AutoModerationRuleDelete.js", "../../../../../../node_modules/discord.js/src/client/actions/AutoModerationRuleUpdate.js", "../../../../../../node_modules/discord.js/src/client/actions/ChannelCreate.js", "../../../../../../node_modules/discord.js/src/client/actions/ChannelDelete.js", "../../../../../../node_modules/discord.js/src/managers/CategoryChannelChildManager.js", "../../../../../../node_modules/discord.js/src/structures/CategoryChannel.js", "../../../../../../node_modules/discord.js/src/structures/interfaces/Collector.js", "../../../../../../node_modules/discord.js/src/structures/InteractionCollector.js", "../../../../../../node_modules/discord.js/src/structures/MessageCollector.js", "../../../../../../node_modules/discord.js/src/structures/Component.js", "../../../../../../node_modules/discord.js/src/structures/ActionRow.js", "../../../../../../node_modules/discord.js/src/structures/ButtonBuilder.js", "../../../../../../node_modules/discord.js/src/structures/ButtonComponent.js", "../../../../../../node_modules/discord.js/src/structures/ChannelSelectMenuBuilder.js", "../../../../../../node_modules/discord.js/src/structures/BaseSelectMenuComponent.js", "../../../../../../node_modules/discord.js/src/structures/ChannelSelectMenuComponent.js", "../../../../../../node_modules/discord.js/src/structures/MentionableSelectMenuBuilder.js", "../../../../../../node_modules/discord.js/src/structures/MentionableSelectMenuComponent.js", "../../../../../../node_modules/discord.js/src/structures/RoleSelectMenuBuilder.js", "../../../../../../node_modules/discord.js/src/structures/RoleSelectMenuComponent.js", "../../../../../../node_modules/discord.js/src/structures/StringSelectMenuBuilder.js", "../../../../../../node_modules/discord.js/src/structures/StringSelectMenuComponent.js", "../../../../../../node_modules/discord.js/src/structures/TextInputBuilder.js", "../../../../../../node_modules/discord.js/src/structures/TextInputComponent.js", "../../../../../../node_modules/discord.js/src/structures/UserSelectMenuBuilder.js", "../../../../../../node_modules/discord.js/src/structures/UserSelectMenuComponent.js", "../../../../../../node_modules/discord.js/src/util/Components.js", "../../../../../../node_modules/discord.js/src/structures/ActionRowBuilder.js", "../../../../../../node_modules/discord.js/src/structures/GuildScheduledEvent.js", "../../../../../../node_modules/discord.js/src/structures/interfaces/Application.js", "../../../../../../node_modules/discord.js/src/structures/IntegrationApplication.js", "../../../../../../node_modules/discord.js/src/structures/InviteStageInstance.js", "../../../../../../node_modules/discord.js/src/structures/BaseGuild.js", "../../../../../../node_modules/discord.js/src/structures/AnonymousGuild.js", "../../../../../../node_modules/discord.js/src/structures/Emoji.js", "../../../../../../node_modules/discord.js/src/structures/WelcomeChannel.js", "../../../../../../node_modules/discord.js/src/structures/WelcomeScreen.js", "../../../../../../node_modules/discord.js/src/structures/InviteGuild.js", "../../../../../../node_modules/discord.js/src/structures/Invite.js", "../../../../../../node_modules/discord.js/src/structures/GuildTemplate.js", "../../../../../../node_modules/discord.js/src/util/DataResolver.js", "../../../../../../node_modules/discord.js/src/util/MessageFlagsBitField.js", "../../../../../../node_modules/discord.js/src/structures/BaseInteraction.js", "../../../../../../node_modules/discord.js/src/structures/ApplicationRoleConnectionMetadata.js", "../../../../../../node_modules/discord.js/src/structures/TeamMember.js", "../../../../../../node_modules/discord.js/src/structures/Team.js", "../../../../../../node_modules/discord.js/src/managers/ApplicationCommandPermissionsManager.js", "../../../../../../node_modules/discord.js/src/structures/ApplicationCommand.js", "../../../../../../node_modules/discord.js/src/managers/ApplicationCommandManager.js", "../../../../../../node_modules/discord.js/src/structures/ApplicationEmoji.js", "../../../../../../node_modules/discord.js/src/managers/ApplicationEmojiManager.js", "../../../../../../node_modules/discord.js/src/structures/Entitlement.js", "../../../../../../node_modules/discord.js/src/managers/EntitlementManager.js", "../../../../../../node_modules/discord.js/src/util/ApplicationFlagsBitField.js", "../../../../../../node_modules/discord.js/src/structures/ClientApplication.js", "../../../../../../node_modules/discord.js/src/structures/Embed.js", "../../../../../../node_modules/discord.js/src/structures/MessageMentions.js", "../../../../../../node_modules/discord.js/src/structures/PollAnswer.js", "../../../../../../node_modules/discord.js/src/structures/Poll.js", "../../../../../../node_modules/discord.js/src/structures/ReactionCollector.js", "../../../../../../node_modules/discord.js/src/structures/Sticker.js", "../../../../../../node_modules/discord.js/src/structures/BaseGuildEmoji.js", "../../../../../../node_modules/discord.js/src/managers/GuildEmojiRoleManager.js", "../../../../../../node_modules/discord.js/src/structures/GuildEmoji.js", "../../../../../../node_modules/discord.js/src/structures/ReactionEmoji.js", "../../../../../../node_modules/discord.js/src/util/UserFlagsBitField.js", "../../../../../../node_modules/discord.js/src/structures/User.js", "../../../../../../node_modules/discord.js/src/managers/ReactionUserManager.js", "../../../../../../node_modules/discord.js/src/structures/MessageReaction.js", "../../../../../../node_modules/discord.js/src/managers/ReactionManager.js", "../../../../../../node_modules/discord.js/src/structures/Message.js", "../../../../../../node_modules/discord.js/src/structures/Webhook.js", "../../../../../../node_modules/discord.js/src/client/WebhookClient.js", "../../../../../../node_modules/discord.js/src/structures/VoiceState.js", "../../../../../../node_modules/discord.js/src/managers/GuildMemberRoleManager.js", "../../../../../../node_modules/discord.js/src/util/GuildMemberFlagsBitField.js", "../../../../../../node_modules/discord.js/src/structures/GuildMember.js", "../../../../../../node_modules/discord.js/src/managers/MessageManager.js", "../../../../../../node_modules/discord.js/src/structures/InteractionWebhook.js", "../../../../../../node_modules/discord.js/src/structures/MessagePayload.js", "../../../../../../node_modules/discord.js/src/managers/GuildMessageManager.js", "../../../../../../node_modules/discord.js/src/structures/interfaces/TextBasedChannel.js", "../../../../../../node_modules/discord.js/src/managers/DMMessageManager.js", "../../../../../../node_modules/discord.js/src/structures/DMChannel.js", "../../../../../../node_modules/discord.js/src/managers/GuildForumThreadManager.js", "../../../../../../node_modules/discord.js/src/structures/ThreadOnlyChannel.js", "../../../../../../node_modules/discord.js/src/util/ThreadMemberFlagsBitField.js", "../../../../../../node_modules/discord.js/src/structures/ThreadMember.js", "../../../../../../node_modules/discord.js/src/managers/ThreadMemberManager.js", "../../../../../../node_modules/discord.js/src/structures/ThreadChannel.js", "../../../../../../node_modules/discord.js/src/managers/ThreadManager.js", "../../../../../../node_modules/discord.js/src/managers/GuildTextThreadManager.js", "../../../../../../node_modules/discord.js/src/structures/BaseGuildTextChannel.js", "../../../../../../node_modules/discord.js/src/structures/NewsChannel.js", "../../../../../../node_modules/discord.js/src/structures/BaseGuildVoiceChannel.js", "../../../../../../node_modules/discord.js/src/structures/StageChannel.js", "../../../../../../node_modules/discord.js/src/structures/TextChannel.js", "../../../../../../node_modules/discord.js/src/structures/VoiceChannel.js", "../../../../../../node_modules/discord.js/src/structures/DirectoryChannel.js", "../../../../../../node_modules/discord.js/src/managers/PartialGroupDMMessageManager.js", "../../../../../../node_modules/discord.js/src/structures/PartialGroupDMChannel.js", "../../../../../../node_modules/discord.js/src/structures/ForumChannel.js", "../../../../../../node_modules/discord.js/src/structures/MediaChannel.js", "../../../../../../node_modules/discord.js/src/util/Channels.js", "../../../../../../node_modules/discord.js/src/client/actions/ChannelUpdate.js", "../../../../../../node_modules/discord.js/src/client/actions/EntitlementCreate.js", "../../../../../../node_modules/discord.js/src/client/actions/EntitlementDelete.js", "../../../../../../node_modules/discord.js/src/client/actions/EntitlementUpdate.js", "../../../../../../node_modules/discord.js/src/structures/AutoModerationRule.js", "../../../../../../node_modules/discord.js/src/structures/GuildOnboardingPromptOption.js", "../../../../../../node_modules/discord.js/src/structures/GuildOnboardingPrompt.js", "../../../../../../node_modules/discord.js/src/structures/Integration.js", "../../../../../../node_modules/discord.js/src/structures/StageInstance.js", "../../../../../../node_modules/discord.js/src/structures/GuildAuditLogsEntry.js", "../../../../../../node_modules/discord.js/src/client/actions/GuildAuditLogEntryCreate.js", "../../../../../../node_modules/discord.js/src/client/actions/GuildBanAdd.js", "../../../../../../node_modules/discord.js/src/structures/GuildBan.js", "../../../../../../node_modules/discord.js/src/client/actions/GuildBanRemove.js", "../../../../../../node_modules/discord.js/src/client/actions/GuildChannelsPositionUpdate.js", "../../../../../../node_modules/discord.js/src/client/actions/GuildDelete.js", "../../../../../../node_modules/discord.js/src/client/actions/GuildEmojiCreate.js", "../../../../../../node_modules/discord.js/src/client/actions/GuildEmojiDelete.js", "../../../../../../node_modules/discord.js/src/client/actions/GuildEmojiUpdate.js", "../../../../../../node_modules/discord.js/src/client/actions/GuildEmojisUpdate.js", "../../../../../../node_modules/discord.js/src/client/actions/GuildIntegrationsUpdate.js", "../../../../../../node_modules/discord.js/src/util/Status.js", "../../../../../../node_modules/discord.js/src/client/actions/GuildMemberRemove.js", "../../../../../../node_modules/discord.js/src/client/actions/GuildMemberUpdate.js", "../../../../../../node_modules/discord.js/src/client/actions/GuildRoleCreate.js", "../../../../../../node_modules/discord.js/src/client/actions/GuildRoleDelete.js", "../../../../../../node_modules/discord.js/src/client/actions/GuildRoleUpdate.js", "../../../../../../node_modules/discord.js/src/client/actions/GuildRolesPositionUpdate.js", "../../../../../../node_modules/discord.js/src/client/actions/GuildScheduledEventCreate.js", "../../../../../../node_modules/discord.js/src/client/actions/GuildScheduledEventDelete.js", "../../../../../../node_modules/discord.js/src/client/actions/GuildScheduledEventUpdate.js", "../../../../../../node_modules/discord.js/src/client/actions/GuildScheduledEventUserAdd.js", "../../../../../../node_modules/discord.js/src/client/actions/GuildScheduledEventUserRemove.js", "../../../../../../node_modules/discord.js/src/client/actions/GuildStickerCreate.js", "../../../../../../node_modules/discord.js/src/client/actions/GuildStickerDelete.js", "../../../../../../node_modules/discord.js/src/client/actions/GuildStickerUpdate.js", "../../../../../../node_modules/discord.js/src/client/actions/GuildStickersUpdate.js", "../../../../../../node_modules/discord.js/src/client/actions/GuildUpdate.js", "../../../../../../node_modules/discord.js/src/structures/CommandInteractionOptionResolver.js", "../../../../../../node_modules/discord.js/src/structures/AutocompleteInteraction.js", "../../../../../../node_modules/discord.js/src/structures/InteractionResponse.js", "../../../../../../node_modules/discord.js/src/structures/interfaces/InteractionResponses.js", "../../../../../../node_modules/discord.js/src/structures/MessageComponentInteraction.js", "../../../../../../node_modules/discord.js/src/structures/ButtonInteraction.js", "../../../../../../node_modules/discord.js/src/structures/ChannelSelectMenuInteraction.js", "../../../../../../node_modules/discord.js/src/structures/CommandInteraction.js", "../../../../../../node_modules/discord.js/src/structures/ChatInputCommandInteraction.js", "../../../../../../node_modules/discord.js/src/structures/MentionableSelectMenuInteraction.js", "../../../../../../node_modules/discord.js/src/structures/ContextMenuCommandInteraction.js", "../../../../../../node_modules/discord.js/src/structures/MessageContextMenuCommandInteraction.js", "../../../../../../node_modules/discord.js/src/structures/ModalSubmitFields.js", "../../../../../../node_modules/discord.js/src/structures/ModalSubmitInteraction.js", "../../../../../../node_modules/discord.js/src/structures/RoleSelectMenuInteraction.js", "../../../../../../node_modules/discord.js/src/structures/StringSelectMenuInteraction.js", "../../../../../../node_modules/discord.js/src/structures/UserContextMenuCommandInteraction.js", "../../../../../../node_modules/discord.js/src/structures/UserSelectMenuInteraction.js", "../../../../../../node_modules/discord.js/src/client/actions/InteractionCreate.js", "../../../../../../node_modules/discord.js/src/client/actions/InviteCreate.js", "../../../../../../node_modules/discord.js/src/client/actions/InviteDelete.js", "../../../../../../node_modules/discord.js/src/client/actions/MessageCreate.js", "../../../../../../node_modules/discord.js/src/client/actions/MessageDelete.js", "../../../../../../node_modules/discord.js/src/client/actions/MessageDeleteBulk.js", "../../../../../../node_modules/discord.js/src/client/actions/MessagePollVoteAdd.js", "../../../../../../node_modules/discord.js/src/client/actions/MessagePollVoteRemove.js", "../../../../../../node_modules/discord.js/src/client/actions/MessageReactionAdd.js", "../../../../../../node_modules/discord.js/src/client/actions/MessageReactionRemove.js", "../../../../../../node_modules/discord.js/src/client/actions/MessageReactionRemoveAll.js", "../../../../../../node_modules/discord.js/src/client/actions/MessageReactionRemoveEmoji.js", "../../../../../../node_modules/discord.js/src/client/actions/MessageUpdate.js", "../../../../../../node_modules/discord.js/src/client/actions/PresenceUpdate.js", "../../../../../../node_modules/discord.js/src/client/actions/StageInstanceCreate.js", "../../../../../../node_modules/discord.js/src/client/actions/StageInstanceDelete.js", "../../../../../../node_modules/discord.js/src/client/actions/StageInstanceUpdate.js", "../../../../../../node_modules/discord.js/src/client/actions/ThreadCreate.js", "../../../../../../node_modules/discord.js/src/client/actions/ThreadDelete.js", "../../../../../../node_modules/discord.js/src/client/actions/ThreadListSync.js", "../../../../../../node_modules/discord.js/src/client/actions/ThreadMemberUpdate.js", "../../../../../../node_modules/discord.js/src/client/actions/ThreadMembersUpdate.js", "../../../../../../node_modules/discord.js/src/structures/Typing.js", "../../../../../../node_modules/discord.js/src/client/actions/TypingStart.js", "../../../../../../node_modules/discord.js/src/client/actions/UserUpdate.js", "../../../../../../node_modules/discord.js/src/client/actions/VoiceStateUpdate.js", "../../../../../../node_modules/discord.js/src/client/actions/WebhooksUpdate.js", "../../../../../../node_modules/discord.js/src/client/actions/ActionsManager.js", "../../../../../../node_modules/discord.js/src/client/voice/ClientVoiceManager.js", "browser-external:worker_threads", "../../../../../../node_modules/@discordjs/ws/node_modules/@discordjs/collection/src/index.ts", "../../../../../../node_modules/@discordjs/ws/node_modules/@discordjs/collection/src/collection.ts", "browser-external:timers", "browser-external:timers/promises", "browser-external:url", "browser-external:zlib", "../../../../../../node_modules/@discordjs/ws/node_modules/discord-api-types/gateway/common.js", "../../../../../../node_modules/@discordjs/ws/node_modules/discord-api-types/gateway/v10.ts", "../../../../../../node_modules/@discordjs/ws/node_modules/discord-api-types/globals.ts", "../../../../../../node_modules/@discordjs/ws/node_modules/discord-api-types/payloads/common.ts", "../../../../../../node_modules/@discordjs/ws/node_modules/discord-api-types/payloads/v10/application.ts", "../../../../../../node_modules/@discordjs/ws/node_modules/discord-api-types/payloads/v10/auditLog.ts", "../../../../../../node_modules/@discordjs/ws/node_modules/discord-api-types/payloads/v10/autoModeration.ts", "../../../../../../node_modules/@discordjs/ws/node_modules/discord-api-types/payloads/v10/channel.ts", "../../../../../../node_modules/@discordjs/ws/node_modules/discord-api-types/payloads/v10/gateway.ts", "../../../../../../node_modules/@discordjs/ws/node_modules/discord-api-types/payloads/v10/guild.ts", "../../../../../../node_modules/@discordjs/ws/node_modules/discord-api-types/payloads/v10/guildScheduledEvent.ts", "../../../../../../node_modules/@discordjs/ws/node_modules/discord-api-types/payloads/v10/_interactions/_applicationCommands/_chatInput/attachment.js", "../../../../../../node_modules/@discordjs/ws/node_modules/discord-api-types/payloads/v10/_interactions/_applicationCommands/_chatInput/base.js", "../../../../../../node_modules/@discordjs/ws/node_modules/discord-api-types/payloads/v10/_interactions/_applicationCommands/_chatInput/boolean.js", "../../../../../../node_modules/@discordjs/ws/node_modules/discord-api-types/payloads/v10/_interactions/_applicationCommands/_chatInput/channel.js", "../../../../../../node_modules/@discordjs/ws/node_modules/discord-api-types/payloads/v10/_interactions/_applicationCommands/_chatInput/integer.js", "../../../../../../node_modules/@discordjs/ws/node_modules/discord-api-types/payloads/v10/_interactions/_applicationCommands/_chatInput/mentionable.js", "../../../../../../node_modules/@discordjs/ws/node_modules/discord-api-types/payloads/v10/_interactions/_applicationCommands/_chatInput/number.js", "../../../../../../node_modules/@discordjs/ws/node_modules/discord-api-types/payloads/v10/_interactions/_applicationCommands/_chatInput/role.js", "../../../../../../node_modules/@discordjs/ws/node_modules/discord-api-types/payloads/v10/_interactions/_applicationCommands/_chatInput/shared.ts", "../../../../../../node_modules/@discordjs/ws/node_modules/discord-api-types/payloads/v10/_interactions/_applicationCommands/_chatInput/string.js", "../../../../../../node_modules/@discordjs/ws/node_modules/discord-api-types/payloads/v10/_interactions/_applicationCommands/_chatInput/subcommand.js", "../../../../../../node_modules/@discordjs/ws/node_modules/discord-api-types/payloads/v10/_interactions/_applicationCommands/_chatInput/subcommandGroup.js", "../../../../../../node_modules/@discordjs/ws/node_modules/discord-api-types/payloads/v10/_interactions/_applicationCommands/_chatInput/user.js", "../../../../../../node_modules/@discordjs/ws/node_modules/discord-api-types/payloads/v10/_interactions/_applicationCommands/chatInput.ts", "../../../../../../node_modules/@discordjs/ws/node_modules/discord-api-types/payloads/v10/_interactions/_applicationCommands/contextMenu.js", "../../../../../../node_modules/@discordjs/ws/node_modules/discord-api-types/payloads/v10/_interactions/_applicationCommands/permissions.ts", "../../../../../../node_modules/@discordjs/ws/node_modules/discord-api-types/payloads/v10/_interactions/applicationCommands.ts", "../../../../../../node_modules/@discordjs/ws/node_modules/discord-api-types/payloads/v10/_interactions/autocomplete.js", "../../../../../../node_modules/@discordjs/ws/node_modules/discord-api-types/payloads/v10/_interactions/base.js", "../../../../../../node_modules/@discordjs/ws/node_modules/discord-api-types/payloads/v10/_interactions/messageComponents.js", "../../../../../../node_modules/@discordjs/ws/node_modules/discord-api-types/payloads/v10/_interactions/modalSubmit.js", "../../../../../../node_modules/@discordjs/ws/node_modules/discord-api-types/payloads/v10/_interactions/ping.js", "../../../../../../node_modules/@discordjs/ws/node_modules/discord-api-types/payloads/v10/_interactions/responses.ts", "../../../../../../node_modules/@discordjs/ws/node_modules/discord-api-types/payloads/v10/interactions.ts", "../../../../../../node_modules/@discordjs/ws/node_modules/discord-api-types/payloads/v10/invite.ts", "../../../../../../node_modules/@discordjs/ws/node_modules/discord-api-types/payloads/v10/oauth2.ts", "../../../../../../node_modules/@discordjs/ws/node_modules/discord-api-types/payloads/v10/poll.ts", "../../../../../../node_modules/@discordjs/ws/node_modules/discord-api-types/payloads/v10/permissions.ts", "../../../../../../node_modules/@discordjs/ws/node_modules/discord-api-types/payloads/v10/stageInstance.ts", "../../../../../../node_modules/@discordjs/ws/node_modules/discord-api-types/payloads/v10/sticker.ts", "../../../../../../node_modules/@discordjs/ws/node_modules/discord-api-types/payloads/v10/teams.ts", "../../../../../../node_modules/@discordjs/ws/node_modules/discord-api-types/payloads/v10/user.ts", "../../../../../../node_modules/@discordjs/ws/node_modules/discord-api-types/payloads/v10/webhook.ts", "../../../../../../node_modules/@discordjs/ws/node_modules/discord-api-types/payloads/v10/monetization.ts", "../../../../../../node_modules/@discordjs/ws/node_modules/discord-api-types/payloads/v10/index.ts", "../../../../../../node_modules/@discordjs/ws/node_modules/discord-api-types/rest/common.ts", "../../../../../../node_modules/@discordjs/ws/node_modules/discord-api-types/rest/v10/application.js", "../../../../../../node_modules/@discordjs/ws/node_modules/discord-api-types/rest/v10/auditLog.js", "../../../../../../node_modules/@discordjs/ws/node_modules/discord-api-types/rest/v10/autoModeration.js", "../../../../../../node_modules/@discordjs/ws/node_modules/discord-api-types/rest/v10/channel.js", "../../../../../../node_modules/@discordjs/ws/node_modules/discord-api-types/rest/v10/emoji.js", "../../../../../../node_modules/@discordjs/ws/node_modules/discord-api-types/rest/v10/gateway.js", "../../../../../../node_modules/@discordjs/ws/node_modules/discord-api-types/rest/v10/guild.js", "../../../../../../node_modules/@discordjs/ws/node_modules/discord-api-types/rest/v10/guildScheduledEvent.js", "../../../../../../node_modules/@discordjs/ws/node_modules/discord-api-types/rest/v10/interactions.js", "../../../../../../node_modules/@discordjs/ws/node_modules/discord-api-types/rest/v10/invite.js", "../../../../../../node_modules/@discordjs/ws/node_modules/discord-api-types/rest/v10/oauth2.js", "../../../../../../node_modules/@discordjs/ws/node_modules/discord-api-types/rest/v10/poll.js", "../../../../../../node_modules/@discordjs/ws/node_modules/discord-api-types/rest/v10/stageInstance.js", "../../../../../../node_modules/@discordjs/ws/node_modules/discord-api-types/rest/v10/sticker.js", "../../../../../../node_modules/@discordjs/ws/node_modules/discord-api-types/rest/v10/template.js", "../../../../../../node_modules/@discordjs/ws/node_modules/discord-api-types/rest/v10/user.js", "../../../../../../node_modules/@discordjs/ws/node_modules/discord-api-types/rest/v10/voice.js", "../../../../../../node_modules/@discordjs/ws/node_modules/discord-api-types/rest/v10/webhook.js", "../../../../../../node_modules/@discordjs/ws/node_modules/discord-api-types/rest/v10/monetization.ts", "../../../../../../node_modules/@discordjs/ws/node_modules/discord-api-types/rest/v10/index.ts", "../../../../../../node_modules/@discordjs/ws/node_modules/discord-api-types/rpc/common.ts", "../../../../../../node_modules/@discordjs/ws/node_modules/discord-api-types/rpc/v10.ts", "../../../../../../node_modules/@discordjs/ws/node_modules/discord-api-types/utils/v10.ts", "../../../../../../node_modules/@discordjs/ws/node_modules/discord-api-types/v10.ts", "../../../../../../node_modules/@discordjs/ws/src/index.ts", "../../../../../../node_modules/@discordjs/ws/src/strategies/context/IContextFetchingStrategy.ts", "../../../../../../node_modules/@discordjs/ws/src/strategies/context/SimpleContextFetchingStrategy.ts", "../../../../../../node_modules/@discordjs/ws/src/strategies/context/WorkerContextFetchingStrategy.ts", "../../../../../../node_modules/@discordjs/ws/src/strategies/sharding/WorkerShardingStrategy.ts", "../../../../../../node_modules/@discordjs/ws/src/strategies/sharding/SimpleShardingStrategy.ts", "../../../../../../node_modules/@discordjs/ws/src/ws/WebSocketShard.ts", "../../../../../../node_modules/@discordjs/ws/src/utils/constants.ts", "../../../../../../node_modules/@discordjs/ws/src/throttling/SimpleIdentifyThrottler.ts", "../../../../../../node_modules/@discordjs/ws/src/utils/WorkerBootstrapper.ts", "../../../../../../node_modules/@discordjs/ws/src/ws/WebSocketManager.ts", "../../../../../../node_modules/discord.js/src/util/WebSocketShardEvents.js", "../../../../../../node_modules/discord.js/src/client/websocket/WebSocketShard.js", "../../../../../../node_modules/discord.js/src/client/websocket/handlers/APPLICATION_COMMAND_PERMISSIONS_UPDATE.js", "../../../../../../node_modules/discord.js/src/client/websocket/handlers/AUTO_MODERATION_ACTION_EXECUTION.js", "../../../../../../node_modules/discord.js/src/client/websocket/handlers/AUTO_MODERATION_RULE_CREATE.js", "../../../../../../node_modules/discord.js/src/client/websocket/handlers/AUTO_MODERATION_RULE_DELETE.js", "../../../../../../node_modules/discord.js/src/client/websocket/handlers/AUTO_MODERATION_RULE_UPDATE.js", "../../../../../../node_modules/discord.js/src/client/websocket/handlers/CHANNEL_CREATE.js", "../../../../../../node_modules/discord.js/src/client/websocket/handlers/CHANNEL_DELETE.js", "../../../../../../node_modules/discord.js/src/client/websocket/handlers/CHANNEL_PINS_UPDATE.js", "../../../../../../node_modules/discord.js/src/client/websocket/handlers/CHANNEL_UPDATE.js", "../../../../../../node_modules/discord.js/src/client/websocket/handlers/ENTITLEMENT_CREATE.js", "../../../../../../node_modules/discord.js/src/client/websocket/handlers/ENTITLEMENT_DELETE.js", "../../../../../../node_modules/discord.js/src/client/websocket/handlers/ENTITLEMENT_UPDATE.js", "../../../../../../node_modules/discord.js/src/client/websocket/handlers/GUILD_AUDIT_LOG_ENTRY_CREATE.js", "../../../../../../node_modules/discord.js/src/client/websocket/handlers/GUILD_BAN_ADD.js", "../../../../../../node_modules/discord.js/src/client/websocket/handlers/GUILD_BAN_REMOVE.js", "../../../../../../node_modules/discord.js/src/client/websocket/handlers/GUILD_CREATE.js", "../../../../../../node_modules/discord.js/src/client/websocket/handlers/GUILD_DELETE.js", "../../../../../../node_modules/discord.js/src/client/websocket/handlers/GUILD_EMOJIS_UPDATE.js", "../../../../../../node_modules/discord.js/src/client/websocket/handlers/GUILD_INTEGRATIONS_UPDATE.js", "../../../../../../node_modules/discord.js/src/client/websocket/handlers/GUILD_MEMBERS_CHUNK.js", "../../../../../../node_modules/discord.js/src/client/websocket/handlers/GUILD_MEMBER_ADD.js", "../../../../../../node_modules/discord.js/src/client/websocket/handlers/GUILD_MEMBER_REMOVE.js", "../../../../../../node_modules/discord.js/src/client/websocket/handlers/GUILD_MEMBER_UPDATE.js", "../../../../../../node_modules/discord.js/src/client/websocket/handlers/GUILD_ROLE_CREATE.js", "../../../../../../node_modules/discord.js/src/client/websocket/handlers/GUILD_ROLE_DELETE.js", "../../../../../../node_modules/discord.js/src/client/websocket/handlers/GUILD_ROLE_UPDATE.js", "../../../../../../node_modules/discord.js/src/client/websocket/handlers/GUILD_SCHEDULED_EVENT_CREATE.js", "../../../../../../node_modules/discord.js/src/client/websocket/handlers/GUILD_SCHEDULED_EVENT_DELETE.js", "../../../../../../node_modules/discord.js/src/client/websocket/handlers/GUILD_SCHEDULED_EVENT_UPDATE.js", "../../../../../../node_modules/discord.js/src/client/websocket/handlers/GUILD_SCHEDULED_EVENT_USER_ADD.js", "../../../../../../node_modules/discord.js/src/client/websocket/handlers/GUILD_SCHEDULED_EVENT_USER_REMOVE.js", "../../../../../../node_modules/discord.js/src/client/websocket/handlers/GUILD_STICKERS_UPDATE.js", "../../../../../../node_modules/discord.js/src/client/websocket/handlers/GUILD_UPDATE.js", "../../../../../../node_modules/discord.js/src/client/websocket/handlers/INTERACTION_CREATE.js", "../../../../../../node_modules/discord.js/src/client/websocket/handlers/INVITE_CREATE.js", "../../../../../../node_modules/discord.js/src/client/websocket/handlers/INVITE_DELETE.js", "../../../../../../node_modules/discord.js/src/client/websocket/handlers/MESSAGE_CREATE.js", "../../../../../../node_modules/discord.js/src/client/websocket/handlers/MESSAGE_DELETE.js", "../../../../../../node_modules/discord.js/src/client/websocket/handlers/MESSAGE_DELETE_BULK.js", "../../../../../../node_modules/discord.js/src/client/websocket/handlers/MESSAGE_POLL_VOTE_ADD.js", "../../../../../../node_modules/discord.js/src/client/websocket/handlers/MESSAGE_POLL_VOTE_REMOVE.js", "../../../../../../node_modules/discord.js/src/client/websocket/handlers/MESSAGE_REACTION_ADD.js", "../../../../../../node_modules/discord.js/src/client/websocket/handlers/MESSAGE_REACTION_REMOVE.js", "../../../../../../node_modules/discord.js/src/client/websocket/handlers/MESSAGE_REACTION_REMOVE_ALL.js", "../../../../../../node_modules/discord.js/src/client/websocket/handlers/MESSAGE_REACTION_REMOVE_EMOJI.js", "../../../../../../node_modules/discord.js/src/client/websocket/handlers/MESSAGE_UPDATE.js", "../../../../../../node_modules/discord.js/src/client/websocket/handlers/PRESENCE_UPDATE.js", "../../../../../../node_modules/discord.js/src/structures/ClientUser.js", "../../../../../../node_modules/discord.js/src/client/websocket/handlers/READY.js", "../../../../../../node_modules/discord.js/src/client/websocket/handlers/RESUMED.js", "../../../../../../node_modules/discord.js/src/client/websocket/handlers/STAGE_INSTANCE_CREATE.js", "../../../../../../node_modules/discord.js/src/client/websocket/handlers/STAGE_INSTANCE_DELETE.js", "../../../../../../node_modules/discord.js/src/client/websocket/handlers/STAGE_INSTANCE_UPDATE.js", "../../../../../../node_modules/discord.js/src/client/websocket/handlers/THREAD_CREATE.js", "../../../../../../node_modules/discord.js/src/client/websocket/handlers/THREAD_DELETE.js", "../../../../../../node_modules/discord.js/src/client/websocket/handlers/THREAD_LIST_SYNC.js", "../../../../../../node_modules/discord.js/src/client/websocket/handlers/THREAD_MEMBERS_UPDATE.js", "../../../../../../node_modules/discord.js/src/client/websocket/handlers/THREAD_MEMBER_UPDATE.js", "../../../../../../node_modules/discord.js/src/client/websocket/handlers/THREAD_UPDATE.js", "../../../../../../node_modules/discord.js/src/client/websocket/handlers/TYPING_START.js", "../../../../../../node_modules/discord.js/src/client/websocket/handlers/USER_UPDATE.js", "../../../../../../node_modules/discord.js/src/client/websocket/handlers/VOICE_SERVER_UPDATE.js", "../../../../../../node_modules/discord.js/src/client/websocket/handlers/VOICE_STATE_UPDATE.js", "../../../../../../node_modules/discord.js/src/client/websocket/handlers/WEBHOOKS_UPDATE.js", "../../../../../../node_modules/discord.js/src/client/websocket/handlers/index.js", "../../../../../../node_modules/discord.js/src/client/websocket/WebSocketManager.js", "../../../../../../node_modules/discord.js/src/managers/BaseGuildEmojiManager.js", "../../../../../../node_modules/discord.js/src/managers/ChannelManager.js", "../../../../../../node_modules/discord.js/src/sharding/ShardClientUtil.js", "../../../../../../node_modules/discord.js/src/structures/GuildAuditLogs.js", "../../../../../../node_modules/discord.js/src/structures/GuildOnboarding.js", "../../../../../../node_modules/discord.js/src/structures/GuildPreviewEmoji.js", "../../../../../../node_modules/discord.js/src/structures/GuildPreview.js", "../../../../../../node_modules/discord.js/src/managers/AutoModerationRuleManager.js", "../../../../../../node_modules/discord.js/src/managers/GuildApplicationCommandManager.js", "../../../../../../node_modules/discord.js/src/managers/GuildBanManager.js", "../../../../../../node_modules/discord.js/src/managers/GuildChannelManager.js", "../../../../../../node_modules/discord.js/src/managers/GuildEmojiManager.js", "../../../../../../node_modules/discord.js/src/managers/GuildInviteManager.js", "../../../../../../node_modules/discord.js/src/managers/GuildMemberManager.js", "../../../../../../node_modules/discord.js/src/managers/GuildScheduledEventManager.js", "../../../../../../node_modules/discord.js/src/managers/GuildStickerManager.js", "../../../../../../node_modules/discord.js/src/util/ActivityFlagsBitField.js", "../../../../../../node_modules/discord.js/src/structures/Presence.js", "../../../../../../node_modules/discord.js/src/managers/PresenceManager.js", "../../../../../../node_modules/discord.js/src/managers/RoleManager.js", "../../../../../../node_modules/discord.js/src/managers/StageInstanceManager.js", "../../../../../../node_modules/discord.js/src/managers/VoiceStateManager.js", "../../../../../../node_modules/discord.js/src/util/SystemChannelFlagsBitField.js", "../../../../../../node_modules/discord.js/src/structures/Guild.js", "../../../../../../node_modules/discord.js/src/structures/OAuth2Guild.js", "../../../../../../node_modules/discord.js/src/managers/GuildManager.js", "../../../../../../node_modules/discord.js/src/managers/UserManager.js", "../../../../../../node_modules/discord.js/src/structures/ClientPresence.js", "../../../../../../node_modules/discord.js/src/structures/StickerPack.js", "../../../../../../node_modules/discord.js/src/structures/VoiceRegion.js", "../../../../../../node_modules/discord.js/src/structures/WidgetMember.js", "../../../../../../node_modules/discord.js/src/structures/Widget.js", "../../../../../../node_modules/discord.js/src/util/IntentsBitField.js", "../../../../../../node_modules/discord.js/src/util/Sweepers.js", "../../../../../../node_modules/discord.js/src/client/Client.js", "../../../../../../node_modules/discord.js/src/util/ShardEvents.js", "../../../../../../node_modules/discord.js/src/sharding/Shard.js", "../../../../../../node_modules/discord.js/src/sharding/ShardingManager.js", "../../../../../../node_modules/discord.js/src/util/Formatters.js", "../../../../../../node_modules/discord.js/src/structures/EmbedBuilder.js", "../../../../../../node_modules/discord.js/src/structures/AttachmentBuilder.js", "../../../../../../node_modules/discord.js/src/structures/ModalBuilder.js", "../../../../../../node_modules/discord.js/src/structures/SelectMenuBuilder.js", "../../../../../../node_modules/discord.js/src/structures/SelectMenuComponent.js", "../../../../../../node_modules/discord.js/src/structures/SelectMenuInteraction.js", "../../../../../../node_modules/discord.js/src/structures/StringSelectMenuOptionBuilder.js", "../../../../../../node_modules/discord.js/src/structures/SelectMenuOptionBuilder.js", "../../../../../../node_modules/discord.js/src/index.js"],
  "sourcesContent": ["/******************************************************************************\nCopyright (c) Microsoft Corporation.\n\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\nPERFORMANCE OF THIS SOFTWARE.\n***************************************************************************** */\n/* global Reflect, Promise, SuppressedError, Symbol, Iterator */\n\nvar extendStatics = function(d, b) {\n  extendStatics = Object.setPrototypeOf ||\n      ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n      function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n  return extendStatics(d, b);\n};\n\nexport function __extends(d, b) {\n  if (typeof b !== \"function\" && b !== null)\n      throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n  extendStatics(d, b);\n  function __() { this.constructor = d; }\n  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n}\n\nexport var __assign = function() {\n  __assign = Object.assign || function __assign(t) {\n      for (var s, i = 1, n = arguments.length; i < n; i++) {\n          s = arguments[i];\n          for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n      return t;\n  }\n  return __assign.apply(this, arguments);\n}\n\nexport function __rest(s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n      t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n      for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n          if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n              t[p[i]] = s[p[i]];\n      }\n  return t;\n}\n\nexport function __decorate(decorators, target, key, desc) {\n  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n}\n\nexport function __param(paramIndex, decorator) {\n  return function (target, key) { decorator(target, key, paramIndex); }\n}\n\nexport function __esDecorate(ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {\n  function accept(f) { if (f !== void 0 && typeof f !== \"function\") throw new TypeError(\"Function expected\"); return f; }\n  var kind = contextIn.kind, key = kind === \"getter\" ? \"get\" : kind === \"setter\" ? \"set\" : \"value\";\n  var target = !descriptorIn && ctor ? contextIn[\"static\"] ? ctor : ctor.prototype : null;\n  var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});\n  var _, done = false;\n  for (var i = decorators.length - 1; i >= 0; i--) {\n      var context = {};\n      for (var p in contextIn) context[p] = p === \"access\" ? {} : contextIn[p];\n      for (var p in contextIn.access) context.access[p] = contextIn.access[p];\n      context.addInitializer = function (f) { if (done) throw new TypeError(\"Cannot add initializers after decoration has completed\"); extraInitializers.push(accept(f || null)); };\n      var result = (0, decorators[i])(kind === \"accessor\" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);\n      if (kind === \"accessor\") {\n          if (result === void 0) continue;\n          if (result === null || typeof result !== \"object\") throw new TypeError(\"Object expected\");\n          if (_ = accept(result.get)) descriptor.get = _;\n          if (_ = accept(result.set)) descriptor.set = _;\n          if (_ = accept(result.init)) initializers.unshift(_);\n      }\n      else if (_ = accept(result)) {\n          if (kind === \"field\") initializers.unshift(_);\n          else descriptor[key] = _;\n      }\n  }\n  if (target) Object.defineProperty(target, contextIn.name, descriptor);\n  done = true;\n};\n\nexport function __runInitializers(thisArg, initializers, value) {\n  var useValue = arguments.length > 2;\n  for (var i = 0; i < initializers.length; i++) {\n      value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);\n  }\n  return useValue ? value : void 0;\n};\n\nexport function __propKey(x) {\n  return typeof x === \"symbol\" ? x : \"\".concat(x);\n};\n\nexport function __setFunctionName(f, name, prefix) {\n  if (typeof name === \"symbol\") name = name.description ? \"[\".concat(name.description, \"]\") : \"\";\n  return Object.defineProperty(f, \"name\", { configurable: true, value: prefix ? \"\".concat(prefix, \" \", name) : name });\n};\n\nexport function __metadata(metadataKey, metadataValue) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\n}\n\nexport function __awaiter(thisArg, _arguments, P, generator) {\n  function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n  return new (P || (P = Promise))(function (resolve, reject) {\n      function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n      function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n      function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n      step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n}\n\nexport function __generator(thisArg, body) {\n  var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g = Object.create((typeof Iterator === \"function\" ? Iterator : Object).prototype);\n  return g.next = verb(0), g[\"throw\"] = verb(1), g[\"return\"] = verb(2), typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n  function verb(n) { return function (v) { return step([n, v]); }; }\n  function step(op) {\n      if (f) throw new TypeError(\"Generator is already executing.\");\n      while (g && (g = 0, op[0] && (_ = 0)), _) try {\n          if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n          if (y = 0, t) op = [op[0] & 2, t.value];\n          switch (op[0]) {\n              case 0: case 1: t = op; break;\n              case 4: _.label++; return { value: op[1], done: false };\n              case 5: _.label++; y = op[1]; op = [0]; continue;\n              case 7: op = _.ops.pop(); _.trys.pop(); continue;\n              default:\n                  if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                  if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                  if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                  if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                  if (t[2]) _.ops.pop();\n                  _.trys.pop(); continue;\n          }\n          op = body.call(thisArg, _);\n      } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n      if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n  }\n}\n\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n  }\n  Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nexport function __exportStar(m, o) {\n  for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\n}\n\nexport function __values(o) {\n  var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === \"number\") return {\n      next: function () {\n          if (o && i >= o.length) o = void 0;\n          return { value: o && o[i++], done: !o };\n      }\n  };\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n}\n\nexport function __read(o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o), r, ar = [], e;\n  try {\n      while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  }\n  catch (error) { e = { error: error }; }\n  finally {\n      try {\n          if (r && !r.done && (m = i[\"return\"])) m.call(i);\n      }\n      finally { if (e) throw e.error; }\n  }\n  return ar;\n}\n\n/** @deprecated */\nexport function __spread() {\n  for (var ar = [], i = 0; i < arguments.length; i++)\n      ar = ar.concat(__read(arguments[i]));\n  return ar;\n}\n\n/** @deprecated */\nexport function __spreadArrays() {\n  for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n  for (var r = Array(s), k = 0, i = 0; i < il; i++)\n      for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n          r[k] = a[j];\n  return r;\n}\n\nexport function __spreadArray(to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n      if (ar || !(i in from)) {\n          if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n          ar[i] = from[i];\n      }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n}\n\nexport function __await(v) {\n  return this instanceof __await ? (this.v = v, this) : new __await(v);\n}\n\nexport function __asyncGenerator(thisArg, _arguments, generator) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var g = generator.apply(thisArg, _arguments || []), i, q = [];\n  return i = Object.create((typeof AsyncIterator === \"function\" ? AsyncIterator : Object).prototype), verb(\"next\"), verb(\"throw\"), verb(\"return\", awaitReturn), i[Symbol.asyncIterator] = function () { return this; }, i;\n  function awaitReturn(f) { return function (v) { return Promise.resolve(v).then(f, reject); }; }\n  function verb(n, f) { if (g[n]) { i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; if (f) i[n] = f(i[n]); } }\n  function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\n  function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\n  function fulfill(value) { resume(\"next\", value); }\n  function reject(value) { resume(\"throw\", value); }\n  function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\n}\n\nexport function __asyncDelegator(o) {\n  var i, p;\n  return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\n  function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: false } : f ? f(v) : v; } : f; }\n}\n\nexport function __asyncValues(o) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var m = o[Symbol.asyncIterator], i;\n  return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\n  function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\n  function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\n}\n\nexport function __makeTemplateObject(cooked, raw) {\n  if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\n  return cooked;\n};\n\nvar __setModuleDefault = Object.create ? (function(o, v) {\n  Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n  o[\"default\"] = v;\n};\n\nvar ownKeys = function(o) {\n  ownKeys = Object.getOwnPropertyNames || function (o) {\n    var ar = [];\n    for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;\n    return ar;\n  };\n  return ownKeys(o);\n};\n\nexport function __importStar(mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== \"default\") __createBinding(result, mod, k[i]);\n  __setModuleDefault(result, mod);\n  return result;\n}\n\nexport function __importDefault(mod) {\n  return (mod && mod.__esModule) ? mod : { default: mod };\n}\n\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n  return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n}\n\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\n  if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n  return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n}\n\nexport function __classPrivateFieldIn(state, receiver) {\n  if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\n  return typeof state === \"function\" ? receiver === state : state.has(receiver);\n}\n\nexport function __addDisposableResource(env, value, async) {\n  if (value !== null && value !== void 0) {\n    if (typeof value !== \"object\" && typeof value !== \"function\") throw new TypeError(\"Object expected.\");\n    var dispose, inner;\n    if (async) {\n      if (!Symbol.asyncDispose) throw new TypeError(\"Symbol.asyncDispose is not defined.\");\n      dispose = value[Symbol.asyncDispose];\n    }\n    if (dispose === void 0) {\n      if (!Symbol.dispose) throw new TypeError(\"Symbol.dispose is not defined.\");\n      dispose = value[Symbol.dispose];\n      if (async) inner = dispose;\n    }\n    if (typeof dispose !== \"function\") throw new TypeError(\"Object not disposable.\");\n    if (inner) dispose = function() { try { inner.call(this); } catch (e) { return Promise.reject(e); } };\n    env.stack.push({ value: value, dispose: dispose, async: async });\n  }\n  else if (async) {\n    env.stack.push({ async: true });\n  }\n  return value;\n}\n\nvar _SuppressedError = typeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\n  var e = new Error(message);\n  return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\n};\n\nexport function __disposeResources(env) {\n  function fail(e) {\n    env.error = env.hasError ? new _SuppressedError(e, env.error, \"An error was suppressed during disposal.\") : e;\n    env.hasError = true;\n  }\n  var r, s = 0;\n  function next() {\n    while (r = env.stack.pop()) {\n      try {\n        if (!r.async && s === 1) return s = 0, env.stack.push(r), Promise.resolve().then(next);\n        if (r.dispose) {\n          var result = r.dispose.call(r.value);\n          if (r.async) return s |= 2, Promise.resolve(result).then(next, function(e) { fail(e); return next(); });\n        }\n        else s |= 1;\n      }\n      catch (e) {\n        fail(e);\n      }\n    }\n    if (s === 1) return env.hasError ? Promise.reject(env.error) : Promise.resolve();\n    if (env.hasError) throw env.error;\n  }\n  return next();\n}\n\nexport function __rewriteRelativeImportExtension(path, preserveJsx) {\n  if (typeof path === \"string\" && /^\\.\\.?\\//.test(path)) {\n      return path.replace(/\\.(tsx)$|((?:\\.d)?)((?:\\.[^./]+?)?)\\.([cm]?)ts$/i, function (m, tsx, d, ext, cm) {\n          return tsx ? preserveJsx ? \".jsx\" : \".js\" : d && (!ext || !cm) ? m : (d + ext + \".\" + cm.toLowerCase() + \"js\");\n      });\n  }\n  return path;\n}\n\nexport default {\n  __extends,\n  __assign,\n  __rest,\n  __decorate,\n  __param,\n  __esDecorate,\n  __runInitializers,\n  __propKey,\n  __setFunctionName,\n  __metadata,\n  __awaiter,\n  __generator,\n  __createBinding,\n  __exportStar,\n  __values,\n  __read,\n  __spread,\n  __spreadArrays,\n  __spreadArray,\n  __await,\n  __asyncGenerator,\n  __asyncDelegator,\n  __asyncValues,\n  __makeTemplateObject,\n  __importStar,\n  __importDefault,\n  __classPrivateFieldGet,\n  __classPrivateFieldSet,\n  __classPrivateFieldIn,\n  __addDisposableResource,\n  __disposeResources,\n  __rewriteRelativeImportExtension,\n};\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=common.js.map", null, null, null, null, null, null, null, null, null, null, "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=attachment.js.map", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=base.js.map", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=boolean.js.map", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=channel.js.map", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=integer.js.map", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=mentionable.js.map", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=number.js.map", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=role.js.map", null, "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=string.js.map", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=subcommand.js.map", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=subcommandGroup.js.map", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=user.js.map", null, "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=contextMenu.js.map", null, null, "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=autocomplete.js.map", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=base.js.map", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=messageComponents.js.map", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=modalSubmit.js.map", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=ping.js.map", null, null, null, null, null, null, null, null, null, null, null, null, null, null, "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=application.js.map", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=auditLog.js.map", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=autoModeration.js.map", null, "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=emoji.js.map", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=gateway.js.map", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=guild.js.map", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=guildScheduledEvent.js.map", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=interactions.js.map", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=invite.js.map", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=oauth2.js.map", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=poll.js.map", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=stageInstance.js.map", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=sticker.js.map", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=template.js.map", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=user.js.map", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=voice.js.map", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=webhook.js.map", null, null, null, null, null, null, "export * from './collection.js';\n\n/**\n * The {@link https://github.com/discordjs/discord.js/blob/main/packages/collection#readme | @discordjs/collection} version\n * that you are currently using.\n */\n// This needs to explicitly be `string` so it is not typed as a \"const string\" that gets injected by esbuild\nexport const version = '2.1.1' as string;\n", "/* eslint-disable no-param-reassign */\n/**\n * @internal\n */\nexport interface CollectionConstructor {\n\tnew (): Collection<unknown, unknown>;\n\tnew <Key, Value>(entries?: readonly (readonly [Key, Value])[] | null): Collection<Key, Value>;\n\tnew <Key, Value>(iterable: Iterable<readonly [Key, Value]>): Collection<Key, Value>;\n\treadonly prototype: Collection<unknown, unknown>;\n\treadonly [Symbol.species]: CollectionConstructor;\n}\n\n/**\n * Represents an immutable version of a collection\n */\nexport type ReadonlyCollection<Key, Value> = Omit<\n\tCollection<Key, Value>,\n\t'clear' | 'delete' | 'ensure' | 'forEach' | 'get' | 'reverse' | 'set' | 'sort' | 'sweep'\n> &\n\tReadonlyMap<Key, Value>;\n\n/**\n * Separate interface for the constructor so that emitted js does not have a constructor that overwrites itself\n *\n * @internal\n */\nexport interface Collection<Key, Value> extends Map<Key, Value> {\n\tconstructor: CollectionConstructor;\n}\n\n/**\n * A Map with additional utility methods. This is used throughout discord.js rather than Arrays for anything that has\n * an ID, for significantly improved performance and ease-of-use.\n *\n * @typeParam Key - The key type this collection holds\n * @typeParam Value - The value type this collection holds\n */\nexport class Collection<Key, Value> extends Map<Key, Value> {\n\t/**\n\t * Obtains the value of the given key if it exists, otherwise sets and returns the value provided by the default value generator.\n\t *\n\t * @param key - The key to get if it exists, or set otherwise\n\t * @param defaultValueGenerator - A function that generates the default value\n\t * @example\n\t * ```ts\n\t * collection.ensure(guildId, () => defaultGuildConfig);\n\t * ```\n\t */\n\tpublic ensure(key: Key, defaultValueGenerator: (key: Key, collection: this) => Value): Value {\n\t\tif (this.has(key)) return this.get(key)!;\n\t\tif (typeof defaultValueGenerator !== 'function') throw new TypeError(`${defaultValueGenerator} is not a function`);\n\t\tconst defaultValue = defaultValueGenerator(key, this);\n\t\tthis.set(key, defaultValue);\n\t\treturn defaultValue;\n\t}\n\n\t/**\n\t * Checks if all of the elements exist in the collection.\n\t *\n\t * @param keys - The keys of the elements to check for\n\t * @returns `true` if all of the elements exist, `false` if at least one does not exist.\n\t */\n\tpublic hasAll(...keys: Key[]) {\n\t\treturn keys.every((key) => super.has(key));\n\t}\n\n\t/**\n\t * Checks if any of the elements exist in the collection.\n\t *\n\t * @param keys - The keys of the elements to check for\n\t * @returns `true` if any of the elements exist, `false` if none exist.\n\t */\n\tpublic hasAny(...keys: Key[]) {\n\t\treturn keys.some((key) => super.has(key));\n\t}\n\n\t/**\n\t * Obtains the first value(s) in this collection.\n\t *\n\t * @param amount - Amount of values to obtain from the beginning\n\t * @returns A single value if no amount is provided or an array of values, starting from the end if amount is negative\n\t */\n\tpublic first(): Value | undefined;\n\tpublic first(amount: number): Value[];\n\tpublic first(amount?: number): Value | Value[] | undefined {\n\t\tif (amount === undefined) return this.values().next().value;\n\t\tif (amount < 0) return this.last(amount * -1);\n\t\tamount = Math.min(this.size, amount);\n\t\tconst iter = this.values();\n\t\treturn Array.from({ length: amount }, (): Value => iter.next().value!);\n\t}\n\n\t/**\n\t * Obtains the first key(s) in this collection.\n\t *\n\t * @param amount - Amount of keys to obtain from the beginning\n\t * @returns A single key if no amount is provided or an array of keys, starting from the end if\n\t * amount is negative\n\t */\n\tpublic firstKey(): Key | undefined;\n\tpublic firstKey(amount: number): Key[];\n\tpublic firstKey(amount?: number): Key | Key[] | undefined {\n\t\tif (amount === undefined) return this.keys().next().value;\n\t\tif (amount < 0) return this.lastKey(amount * -1);\n\t\tamount = Math.min(this.size, amount);\n\t\tconst iter = this.keys();\n\t\treturn Array.from({ length: amount }, (): Key => iter.next().value!);\n\t}\n\n\t/**\n\t * Obtains the last value(s) in this collection.\n\t *\n\t * @param amount - Amount of values to obtain from the end\n\t * @returns A single value if no amount is provided or an array of values, starting from the start if\n\t * amount is negative\n\t */\n\tpublic last(): Value | undefined;\n\tpublic last(amount: number): Value[];\n\tpublic last(amount?: number): Value | Value[] | undefined {\n\t\tconst arr = [...this.values()];\n\t\tif (amount === undefined) return arr[arr.length - 1];\n\t\tif (amount < 0) return this.first(amount * -1);\n\t\tif (!amount) return [];\n\t\treturn arr.slice(-amount);\n\t}\n\n\t/**\n\t * Obtains the last key(s) in this collection.\n\t *\n\t * @param amount - Amount of keys to obtain from the end\n\t * @returns A single key if no amount is provided or an array of keys, starting from the start if\n\t * amount is negative\n\t */\n\tpublic lastKey(): Key | undefined;\n\tpublic lastKey(amount: number): Key[];\n\tpublic lastKey(amount?: number): Key | Key[] | undefined {\n\t\tconst arr = [...this.keys()];\n\t\tif (amount === undefined) return arr[arr.length - 1];\n\t\tif (amount < 0) return this.firstKey(amount * -1);\n\t\tif (!amount) return [];\n\t\treturn arr.slice(-amount);\n\t}\n\n\t/**\n\t * Identical to {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/at | Array.at()}.\n\t * Returns the item at a given index, allowing for positive and negative integers.\n\t * Negative integers count back from the last item in the collection.\n\t *\n\t * @param index - The index of the element to obtain\n\t */\n\tpublic at(index: number) {\n\t\tindex = Math.floor(index);\n\t\tconst arr = [...this.values()];\n\t\treturn arr.at(index);\n\t}\n\n\t/**\n\t * Identical to {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/at | Array.at()}.\n\t * Returns the key at a given index, allowing for positive and negative integers.\n\t * Negative integers count back from the last item in the collection.\n\t *\n\t * @param index - The index of the key to obtain\n\t */\n\tpublic keyAt(index: number) {\n\t\tindex = Math.floor(index);\n\t\tconst arr = [...this.keys()];\n\t\treturn arr.at(index);\n\t}\n\n\t/**\n\t * Obtains unique random value(s) from this collection.\n\t *\n\t * @param amount - Amount of values to obtain randomly\n\t * @returns A single value if no amount is provided or an array of values\n\t */\n\tpublic random(): Value | undefined;\n\tpublic random(amount: number): Value[];\n\tpublic random(amount?: number): Value | Value[] | undefined {\n\t\tconst arr = [...this.values()];\n\t\tif (amount === undefined) return arr[Math.floor(Math.random() * arr.length)];\n\t\tif (!arr.length || !amount) return [];\n\t\treturn Array.from(\n\t\t\t{ length: Math.min(amount, arr.length) },\n\t\t\t(): Value => arr.splice(Math.floor(Math.random() * arr.length), 1)[0]!,\n\t\t);\n\t}\n\n\t/**\n\t * Obtains unique random key(s) from this collection.\n\t *\n\t * @param amount - Amount of keys to obtain randomly\n\t * @returns A single key if no amount is provided or an array\n\t */\n\tpublic randomKey(): Key | undefined;\n\tpublic randomKey(amount: number): Key[];\n\tpublic randomKey(amount?: number): Key | Key[] | undefined {\n\t\tconst arr = [...this.keys()];\n\t\tif (amount === undefined) return arr[Math.floor(Math.random() * arr.length)];\n\t\tif (!arr.length || !amount) return [];\n\t\treturn Array.from(\n\t\t\t{ length: Math.min(amount, arr.length) },\n\t\t\t(): Key => arr.splice(Math.floor(Math.random() * arr.length), 1)[0]!,\n\t\t);\n\t}\n\n\t/**\n\t * Identical to {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reverse | Array.reverse()}\n\t * but returns a Collection instead of an Array.\n\t */\n\tpublic reverse() {\n\t\tconst entries = [...this.entries()].reverse();\n\t\tthis.clear();\n\t\tfor (const [key, value] of entries) this.set(key, value);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Searches for a single item where the given function returns a truthy value. This behaves like\n\t * {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find | Array.find()}.\n\t * All collections used in Discord.js are mapped using their `id` property, and if you want to find by id you\n\t * should use the `get` method. See\n\t * {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map/get | MDN} for details.\n\t *\n\t * @param fn - The function to test with (should return a boolean)\n\t * @param thisArg - Value to use as `this` when executing the function\n\t * @example\n\t * ```ts\n\t * collection.find(user => user.username === 'Bob');\n\t * ```\n\t */\n\tpublic find<NewValue extends Value>(\n\t\tfn: (value: Value, key: Key, collection: this) => value is NewValue,\n\t): NewValue | undefined;\n\tpublic find(fn: (value: Value, key: Key, collection: this) => unknown): Value | undefined;\n\tpublic find<This, NewValue extends Value>(\n\t\tfn: (this: This, value: Value, key: Key, collection: this) => value is NewValue,\n\t\tthisArg: This,\n\t): NewValue | undefined;\n\tpublic find<This>(\n\t\tfn: (this: This, value: Value, key: Key, collection: this) => unknown,\n\t\tthisArg: This,\n\t): Value | undefined;\n\tpublic find(fn: (value: Value, key: Key, collection: this) => unknown, thisArg?: unknown): Value | undefined {\n\t\tif (typeof fn !== 'function') throw new TypeError(`${fn} is not a function`);\n\t\tif (thisArg !== undefined) fn = fn.bind(thisArg);\n\t\tfor (const [key, val] of this) {\n\t\t\tif (fn(val, key, this)) return val;\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n\t/**\n\t * Searches for the key of a single item where the given function returns a truthy value. This behaves like\n\t * {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/findIndex | Array.findIndex()},\n\t * but returns the key rather than the positional index.\n\t *\n\t * @param fn - The function to test with (should return a boolean)\n\t * @param thisArg - Value to use as `this` when executing the function\n\t * @example\n\t * ```ts\n\t * collection.findKey(user => user.username === 'Bob');\n\t * ```\n\t */\n\tpublic findKey<NewKey extends Key>(\n\t\tfn: (value: Value, key: Key, collection: this) => key is NewKey,\n\t): NewKey | undefined;\n\tpublic findKey(fn: (value: Value, key: Key, collection: this) => unknown): Key | undefined;\n\tpublic findKey<This, NewKey extends Key>(\n\t\tfn: (this: This, value: Value, key: Key, collection: this) => key is NewKey,\n\t\tthisArg: This,\n\t): NewKey | undefined;\n\tpublic findKey<This>(\n\t\tfn: (this: This, value: Value, key: Key, collection: this) => unknown,\n\t\tthisArg: This,\n\t): Key | undefined;\n\tpublic findKey(fn: (value: Value, key: Key, collection: this) => unknown, thisArg?: unknown): Key | undefined {\n\t\tif (typeof fn !== 'function') throw new TypeError(`${fn} is not a function`);\n\t\tif (thisArg !== undefined) fn = fn.bind(thisArg);\n\t\tfor (const [key, val] of this) {\n\t\t\tif (fn(val, key, this)) return key;\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n\t/**\n\t * Searches for a last item where the given function returns a truthy value. This behaves like\n\t * {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/findLast | Array.findLast()}.\n\t *\n\t * @param fn - The function to test with (should return a boolean)\n\t * @param thisArg - Value to use as `this` when executing the function\n\t */\n\tpublic findLast<NewValue extends Value>(\n\t\tfn: (value: Value, key: Key, collection: this) => value is NewValue,\n\t): NewValue | undefined;\n\tpublic findLast(fn: (value: Value, key: Key, collection: this) => unknown): Value | undefined;\n\tpublic findLast<This, NewValue extends Value>(\n\t\tfn: (this: This, value: Value, key: Key, collection: this) => value is NewValue,\n\t\tthisArg: This,\n\t): NewValue | undefined;\n\tpublic findLast<This>(\n\t\tfn: (this: This, value: Value, key: Key, collection: this) => unknown,\n\t\tthisArg: This,\n\t): Value | undefined;\n\tpublic findLast(fn: (value: Value, key: Key, collection: this) => unknown, thisArg?: unknown): Value | undefined {\n\t\tif (typeof fn !== 'function') throw new TypeError(`${fn} is not a function`);\n\t\tif (thisArg !== undefined) fn = fn.bind(thisArg);\n\t\tconst entries = [...this.entries()];\n\t\tfor (let index = entries.length - 1; index >= 0; index--) {\n\t\t\tconst val = entries[index]![1];\n\t\t\tconst key = entries[index]![0];\n\t\t\tif (fn(val, key, this)) return val;\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n\t/**\n\t * Searches for the key of a last item where the given function returns a truthy value. This behaves like\n\t * {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/findLastIndex | Array.findLastIndex()},\n\t * but returns the key rather than the positional index.\n\t *\n\t * @param fn - The function to test with (should return a boolean)\n\t * @param thisArg - Value to use as `this` when executing the function\n\t */\n\tpublic findLastKey<NewKey extends Key>(\n\t\tfn: (value: Value, key: Key, collection: this) => key is NewKey,\n\t): NewKey | undefined;\n\tpublic findLastKey(fn: (value: Value, key: Key, collection: this) => unknown): Key | undefined;\n\tpublic findLastKey<This, NewKey extends Key>(\n\t\tfn: (this: This, value: Value, key: Key, collection: this) => key is NewKey,\n\t\tthisArg: This,\n\t): NewKey | undefined;\n\tpublic findLastKey<This>(\n\t\tfn: (this: This, value: Value, key: Key, collection: this) => unknown,\n\t\tthisArg: This,\n\t): Key | undefined;\n\tpublic findLastKey(fn: (value: Value, key: Key, collection: this) => unknown, thisArg?: unknown): Key | undefined {\n\t\tif (typeof fn !== 'function') throw new TypeError(`${fn} is not a function`);\n\t\tif (thisArg !== undefined) fn = fn.bind(thisArg);\n\t\tconst entries = [...this.entries()];\n\t\tfor (let index = entries.length - 1; index >= 0; index--) {\n\t\t\tconst key = entries[index]![0];\n\t\t\tconst val = entries[index]![1];\n\t\t\tif (fn(val, key, this)) return key;\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n\t/**\n\t * Removes items that satisfy the provided filter function.\n\t *\n\t * @param fn - Function used to test (should return a boolean)\n\t * @param thisArg - Value to use as `this` when executing the function\n\t * @returns The number of removed entries\n\t */\n\tpublic sweep(fn: (value: Value, key: Key, collection: this) => unknown): number;\n\tpublic sweep<This>(fn: (this: This, value: Value, key: Key, collection: this) => unknown, thisArg: This): number;\n\tpublic sweep(fn: (value: Value, key: Key, collection: this) => unknown, thisArg?: unknown): number {\n\t\tif (typeof fn !== 'function') throw new TypeError(`${fn} is not a function`);\n\t\tif (thisArg !== undefined) fn = fn.bind(thisArg);\n\t\tconst previousSize = this.size;\n\t\tfor (const [key, val] of this) {\n\t\t\tif (fn(val, key, this)) this.delete(key);\n\t\t}\n\n\t\treturn previousSize - this.size;\n\t}\n\n\t/**\n\t * Identical to\n\t * {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter | Array.filter()},\n\t * but returns a Collection instead of an Array.\n\t *\n\t * @param fn - The function to test with (should return a boolean)\n\t * @param thisArg - Value to use as `this` when executing the function\n\t * @example\n\t * ```ts\n\t * collection.filter(user => user.username === 'Bob');\n\t * ```\n\t */\n\tpublic filter<NewKey extends Key>(\n\t\tfn: (value: Value, key: Key, collection: this) => key is NewKey,\n\t): Collection<NewKey, Value>;\n\tpublic filter<NewValue extends Value>(\n\t\tfn: (value: Value, key: Key, collection: this) => value is NewValue,\n\t): Collection<Key, NewValue>;\n\tpublic filter(fn: (value: Value, key: Key, collection: this) => unknown): Collection<Key, Value>;\n\tpublic filter<This, NewKey extends Key>(\n\t\tfn: (this: This, value: Value, key: Key, collection: this) => key is NewKey,\n\t\tthisArg: This,\n\t): Collection<NewKey, Value>;\n\tpublic filter<This, NewValue extends Value>(\n\t\tfn: (this: This, value: Value, key: Key, collection: this) => value is NewValue,\n\t\tthisArg: This,\n\t): Collection<Key, NewValue>;\n\tpublic filter<This>(\n\t\tfn: (this: This, value: Value, key: Key, collection: this) => unknown,\n\t\tthisArg: This,\n\t): Collection<Key, Value>;\n\tpublic filter(fn: (value: Value, key: Key, collection: this) => unknown, thisArg?: unknown): Collection<Key, Value> {\n\t\tif (typeof fn !== 'function') throw new TypeError(`${fn} is not a function`);\n\t\tif (thisArg !== undefined) fn = fn.bind(thisArg);\n\t\tconst results = new this.constructor[Symbol.species]<Key, Value>();\n\t\tfor (const [key, val] of this) {\n\t\t\tif (fn(val, key, this)) results.set(key, val);\n\t\t}\n\n\t\treturn results;\n\t}\n\n\t/**\n\t * Partitions the collection into two collections where the first collection\n\t * contains the items that passed and the second contains the items that failed.\n\t *\n\t * @param fn - Function used to test (should return a boolean)\n\t * @param thisArg - Value to use as `this` when executing the function\n\t * @example\n\t * ```ts\n\t * const [big, small] = collection.partition(guild => guild.memberCount > 250);\n\t * ```\n\t */\n\tpublic partition<NewKey extends Key>(\n\t\tfn: (value: Value, key: Key, collection: this) => key is NewKey,\n\t): [Collection<NewKey, Value>, Collection<Exclude<Key, NewKey>, Value>];\n\tpublic partition<NewValue extends Value>(\n\t\tfn: (value: Value, key: Key, collection: this) => value is NewValue,\n\t): [Collection<Key, NewValue>, Collection<Key, Exclude<Value, NewValue>>];\n\tpublic partition(\n\t\tfn: (value: Value, key: Key, collection: this) => unknown,\n\t): [Collection<Key, Value>, Collection<Key, Value>];\n\tpublic partition<This, NewKey extends Key>(\n\t\tfn: (this: This, value: Value, key: Key, collection: this) => key is NewKey,\n\t\tthisArg: This,\n\t): [Collection<NewKey, Value>, Collection<Exclude<Key, NewKey>, Value>];\n\tpublic partition<This, NewValue extends Value>(\n\t\tfn: (this: This, value: Value, key: Key, collection: this) => value is NewValue,\n\t\tthisArg: This,\n\t): [Collection<Key, NewValue>, Collection<Key, Exclude<Value, NewValue>>];\n\tpublic partition<This>(\n\t\tfn: (this: This, value: Value, key: Key, collection: this) => unknown,\n\t\tthisArg: This,\n\t): [Collection<Key, Value>, Collection<Key, Value>];\n\tpublic partition(\n\t\tfn: (value: Value, key: Key, collection: this) => unknown,\n\t\tthisArg?: unknown,\n\t): [Collection<Key, Value>, Collection<Key, Value>] {\n\t\tif (typeof fn !== 'function') throw new TypeError(`${fn} is not a function`);\n\t\tif (thisArg !== undefined) fn = fn.bind(thisArg);\n\t\tconst results: [Collection<Key, Value>, Collection<Key, Value>] = [\n\t\t\tnew this.constructor[Symbol.species]<Key, Value>(),\n\t\t\tnew this.constructor[Symbol.species]<Key, Value>(),\n\t\t];\n\t\tfor (const [key, val] of this) {\n\t\t\tif (fn(val, key, this)) {\n\t\t\t\tresults[0].set(key, val);\n\t\t\t} else {\n\t\t\t\tresults[1].set(key, val);\n\t\t\t}\n\t\t}\n\n\t\treturn results;\n\t}\n\n\t/**\n\t * Maps each item into a Collection, then joins the results into a single Collection. Identical in behavior to\n\t * {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/flatMap | Array.flatMap()}.\n\t *\n\t * @param fn - Function that produces a new Collection\n\t * @param thisArg - Value to use as `this` when executing the function\n\t * @example\n\t * ```ts\n\t * collection.flatMap(guild => guild.members.cache);\n\t * ```\n\t */\n\tpublic flatMap<NewValue>(\n\t\tfn: (value: Value, key: Key, collection: this) => Collection<Key, NewValue>,\n\t): Collection<Key, NewValue>;\n\tpublic flatMap<NewValue, This>(\n\t\tfn: (this: This, value: Value, key: Key, collection: this) => Collection<Key, NewValue>,\n\t\tthisArg: This,\n\t): Collection<Key, NewValue>;\n\tpublic flatMap<NewValue>(\n\t\tfn: (value: Value, key: Key, collection: this) => Collection<Key, NewValue>,\n\t\tthisArg?: unknown,\n\t): Collection<Key, NewValue> {\n\t\t// eslint-disable-next-line unicorn/no-array-method-this-argument\n\t\tconst collections = this.map(fn, thisArg);\n\t\treturn new this.constructor[Symbol.species]<Key, NewValue>().concat(...collections);\n\t}\n\n\t/**\n\t * Maps each item to another value into an array. Identical in behavior to\n\t * {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map | Array.map()}.\n\t *\n\t * @param fn - Function that produces an element of the new array, taking three arguments\n\t * @param thisArg - Value to use as `this` when executing the function\n\t * @example\n\t * ```ts\n\t * collection.map(user => user.tag);\n\t * ```\n\t */\n\tpublic map<NewValue>(fn: (value: Value, key: Key, collection: this) => NewValue): NewValue[];\n\tpublic map<This, NewValue>(\n\t\tfn: (this: This, value: Value, key: Key, collection: this) => NewValue,\n\t\tthisArg: This,\n\t): NewValue[];\n\tpublic map<NewValue>(fn: (value: Value, key: Key, collection: this) => NewValue, thisArg?: unknown): NewValue[] {\n\t\tif (typeof fn !== 'function') throw new TypeError(`${fn} is not a function`);\n\t\tif (thisArg !== undefined) fn = fn.bind(thisArg);\n\t\tconst iter = this.entries();\n\t\treturn Array.from({ length: this.size }, (): NewValue => {\n\t\t\tconst [key, value] = iter.next().value!;\n\t\t\treturn fn(value, key, this);\n\t\t});\n\t}\n\n\t/**\n\t * Maps each item to another value into a collection. Identical in behavior to\n\t * {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map | Array.map()}.\n\t *\n\t * @param fn - Function that produces an element of the new collection, taking three arguments\n\t * @param thisArg - Value to use as `this` when executing the function\n\t * @example\n\t * ```ts\n\t * collection.mapValues(user => user.tag);\n\t * ```\n\t */\n\tpublic mapValues<NewValue>(fn: (value: Value, key: Key, collection: this) => NewValue): Collection<Key, NewValue>;\n\tpublic mapValues<This, NewValue>(\n\t\tfn: (this: This, value: Value, key: Key, collection: this) => NewValue,\n\t\tthisArg: This,\n\t): Collection<Key, NewValue>;\n\tpublic mapValues<NewValue>(\n\t\tfn: (value: Value, key: Key, collection: this) => NewValue,\n\t\tthisArg?: unknown,\n\t): Collection<Key, NewValue> {\n\t\tif (typeof fn !== 'function') throw new TypeError(`${fn} is not a function`);\n\t\tif (thisArg !== undefined) fn = fn.bind(thisArg);\n\t\tconst coll = new this.constructor[Symbol.species]<Key, NewValue>();\n\t\tfor (const [key, val] of this) coll.set(key, fn(val, key, this));\n\t\treturn coll;\n\t}\n\n\t/**\n\t * Checks if there exists an item that passes a test. Identical in behavior to\n\t * {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some | Array.some()}.\n\t *\n\t * @param fn - Function used to test (should return a boolean)\n\t * @param thisArg - Value to use as `this` when executing the function\n\t * @example\n\t * ```ts\n\t * collection.some(user => user.discriminator === '0000');\n\t * ```\n\t */\n\tpublic some(fn: (value: Value, key: Key, collection: this) => unknown): boolean;\n\tpublic some<This>(fn: (this: This, value: Value, key: Key, collection: this) => unknown, thisArg: This): boolean;\n\tpublic some(fn: (value: Value, key: Key, collection: this) => unknown, thisArg?: unknown): boolean {\n\t\tif (typeof fn !== 'function') throw new TypeError(`${fn} is not a function`);\n\t\tif (thisArg !== undefined) fn = fn.bind(thisArg);\n\t\tfor (const [key, val] of this) {\n\t\t\tif (fn(val, key, this)) return true;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * Checks if all items passes a test. Identical in behavior to\n\t * {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/every | Array.every()}.\n\t *\n\t * @param fn - Function used to test (should return a boolean)\n\t * @param thisArg - Value to use as `this` when executing the function\n\t * @example\n\t * ```ts\n\t * collection.every(user => !user.bot);\n\t * ```\n\t */\n\tpublic every<NewKey extends Key>(\n\t\tfn: (value: Value, key: Key, collection: this) => key is NewKey,\n\t): this is Collection<NewKey, Value>;\n\tpublic every<NewValue extends Value>(\n\t\tfn: (value: Value, key: Key, collection: this) => value is NewValue,\n\t): this is Collection<Key, NewValue>;\n\tpublic every(fn: (value: Value, key: Key, collection: this) => unknown): boolean;\n\tpublic every<This, NewKey extends Key>(\n\t\tfn: (this: This, value: Value, key: Key, collection: this) => key is NewKey,\n\t\tthisArg: This,\n\t): this is Collection<NewKey, Value>;\n\tpublic every<This, NewValue extends Value>(\n\t\tfn: (this: This, value: Value, key: Key, collection: this) => value is NewValue,\n\t\tthisArg: This,\n\t): this is Collection<Key, NewValue>;\n\tpublic every<This>(fn: (this: This, value: Value, key: Key, collection: this) => unknown, thisArg: This): boolean;\n\tpublic every(fn: (value: Value, key: Key, collection: this) => unknown, thisArg?: unknown): boolean {\n\t\tif (typeof fn !== 'function') throw new TypeError(`${fn} is not a function`);\n\t\tif (thisArg !== undefined) fn = fn.bind(thisArg);\n\t\tfor (const [key, val] of this) {\n\t\t\tif (!fn(val, key, this)) return false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Applies a function to produce a single value. Identical in behavior to\n\t * {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce | Array.reduce()}.\n\t *\n\t * @param fn - Function used to reduce, taking four arguments; `accumulator`, `currentValue`, `currentKey`,\n\t * and `collection`\n\t * @param initialValue - Starting value for the accumulator\n\t * @example\n\t * ```ts\n\t * collection.reduce((acc, guild) => acc + guild.memberCount, 0);\n\t * ```\n\t */\n\tpublic reduce(\n\t\tfn: (accumulator: Value, value: Value, key: Key, collection: this) => Value,\n\t\tinitialValue?: Value,\n\t): Value;\n\tpublic reduce<InitialValue>(\n\t\tfn: (accumulator: InitialValue, value: Value, key: Key, collection: this) => InitialValue,\n\t\tinitialValue: InitialValue,\n\t): InitialValue;\n\tpublic reduce<InitialValue>(\n\t\tfn: (accumulator: InitialValue, value: Value, key: Key, collection: this) => InitialValue,\n\t\tinitialValue?: InitialValue,\n\t): InitialValue {\n\t\tif (typeof fn !== 'function') throw new TypeError(`${fn} is not a function`);\n\t\tlet accumulator!: InitialValue;\n\n\t\tconst iterator = this.entries();\n\t\tif (initialValue === undefined) {\n\t\t\tif (this.size === 0) throw new TypeError('Reduce of empty collection with no initial value');\n\t\t\taccumulator = iterator.next().value![1] as unknown as InitialValue;\n\t\t} else {\n\t\t\taccumulator = initialValue;\n\t\t}\n\n\t\tfor (const [key, value] of iterator) {\n\t\t\taccumulator = fn(accumulator, value, key, this);\n\t\t}\n\n\t\treturn accumulator;\n\t}\n\n\t/**\n\t * Applies a function to produce a single value. Identical in behavior to\n\t * {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduceRight | Array.reduceRight()}.\n\t *\n\t * @param fn - Function used to reduce, taking four arguments; `accumulator`, `value`, `key`, and `collection`\n\t * @param initialValue - Starting value for the accumulator\n\t */\n\tpublic reduceRight(\n\t\tfn: (accumulator: Value, value: Value, key: Key, collection: this) => Value,\n\t\tinitialValue?: Value,\n\t): Value;\n\tpublic reduceRight<InitialValue>(\n\t\tfn: (accumulator: InitialValue, value: Value, key: Key, collection: this) => InitialValue,\n\t\tinitialValue: InitialValue,\n\t): InitialValue;\n\tpublic reduceRight<InitialValue>(\n\t\tfn: (accumulator: InitialValue, value: Value, key: Key, collection: this) => InitialValue,\n\t\tinitialValue?: InitialValue,\n\t): InitialValue {\n\t\tif (typeof fn !== 'function') throw new TypeError(`${fn} is not a function`);\n\t\tconst entries = [...this.entries()];\n\t\tlet accumulator!: InitialValue;\n\n\t\tlet index: number;\n\t\tif (initialValue === undefined) {\n\t\t\tif (entries.length === 0) throw new TypeError('Reduce of empty collection with no initial value');\n\t\t\taccumulator = entries[entries.length - 1]![1] as unknown as InitialValue;\n\t\t\tindex = entries.length - 1;\n\t\t} else {\n\t\t\taccumulator = initialValue;\n\t\t\tindex = entries.length;\n\t\t}\n\n\t\twhile (--index >= 0) {\n\t\t\tconst key = entries[index]![0];\n\t\t\tconst val = entries[index]![1];\n\t\t\taccumulator = fn(accumulator, val, key, this);\n\t\t}\n\n\t\treturn accumulator;\n\t}\n\n\t/**\n\t * Identical to\n\t * {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map/forEach | Map.forEach()},\n\t * but returns the collection instead of undefined.\n\t *\n\t * @param fn - Function to execute for each element\n\t * @param thisArg - Value to use as `this` when executing the function\n\t * @example\n\t * ```ts\n\t * collection\n\t *  .each(user => console.log(user.username))\n\t *  .filter(user => user.bot)\n\t *  .each(user => console.log(user.username));\n\t * ```\n\t */\n\tpublic each(fn: (value: Value, key: Key, collection: this) => void): this;\n\tpublic each<This>(fn: (this: This, value: Value, key: Key, collection: this) => void, thisArg: This): this;\n\tpublic each(fn: (value: Value, key: Key, collection: this) => void, thisArg?: unknown): this {\n\t\tif (typeof fn !== 'function') throw new TypeError(`${fn} is not a function`);\n\t\tif (thisArg !== undefined) fn = fn.bind(thisArg);\n\n\t\tfor (const [key, value] of this) {\n\t\t\tfn(value, key, this);\n\t\t}\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * Runs a function on the collection and returns the collection.\n\t *\n\t * @param fn - Function to execute\n\t * @param thisArg - Value to use as `this` when executing the function\n\t * @example\n\t * ```ts\n\t * collection\n\t *  .tap(coll => console.log(coll.size))\n\t *  .filter(user => user.bot)\n\t *  .tap(coll => console.log(coll.size))\n\t * ```\n\t */\n\tpublic tap(fn: (collection: this) => void): this;\n\tpublic tap<This>(fn: (this: This, collection: this) => void, thisArg: This): this;\n\tpublic tap(fn: (collection: this) => void, thisArg?: unknown): this {\n\t\tif (typeof fn !== 'function') throw new TypeError(`${fn} is not a function`);\n\t\tif (thisArg !== undefined) fn = fn.bind(thisArg);\n\t\tfn(this);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Creates an identical shallow copy of this collection.\n\t *\n\t * @example\n\t * ```ts\n\t * const newColl = someColl.clone();\n\t * ```\n\t */\n\tpublic clone(): Collection<Key, Value> {\n\t\treturn new this.constructor[Symbol.species](this);\n\t}\n\n\t/**\n\t * Combines this collection with others into a new collection. None of the source collections are modified.\n\t *\n\t * @param collections - Collections to merge\n\t * @example\n\t * ```ts\n\t * const newColl = someColl.concat(someOtherColl, anotherColl, ohBoyAColl);\n\t * ```\n\t */\n\tpublic concat(...collections: ReadonlyCollection<Key, Value>[]) {\n\t\tconst newColl = this.clone();\n\t\tfor (const coll of collections) {\n\t\t\tfor (const [key, val] of coll) newColl.set(key, val);\n\t\t}\n\n\t\treturn newColl;\n\t}\n\n\t/**\n\t * Checks if this collection shares identical items with another.\n\t * This is different to checking for equality using equal-signs, because\n\t * the collections may be different objects, but contain the same data.\n\t *\n\t * @param collection - Collection to compare with\n\t * @returns Whether the collections have identical contents\n\t */\n\tpublic equals(collection: ReadonlyCollection<Key, Value>) {\n\t\tif (!collection) return false; // runtime check\n\t\tif (this === collection) return true;\n\t\tif (this.size !== collection.size) return false;\n\t\tfor (const [key, value] of this) {\n\t\t\tif (!collection.has(key) || value !== collection.get(key)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * The sort method sorts the items of a collection in place and returns it.\n\t * The sort is not necessarily stable in Node 10 or older.\n\t * The default sort order is according to string Unicode code points.\n\t *\n\t * @param compareFunction - Specifies a function that defines the sort order.\n\t * If omitted, the collection is sorted according to each character's Unicode code point value, according to the string conversion of each element.\n\t * @example\n\t * ```ts\n\t * collection.sort((userA, userB) => userA.createdTimestamp - userB.createdTimestamp);\n\t * ```\n\t */\n\tpublic sort(compareFunction: Comparator<Key, Value> = Collection.defaultSort) {\n\t\tconst entries = [...this.entries()];\n\t\tentries.sort((a, b): number => compareFunction(a[1], b[1], a[0], b[0]));\n\n\t\t// Perform clean-up\n\t\tsuper.clear();\n\n\t\t// Set the new entries\n\t\tfor (const [key, value] of entries) {\n\t\t\tsuper.set(key, value);\n\t\t}\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * The intersection method returns a new collection containing the items where the key is present in both collections.\n\t *\n\t * @param other - The other Collection to filter against\n\t * @example\n\t * ```ts\n\t * const col1 = new Collection([['a', 1], ['b', 2]]);\n\t * const col2 = new Collection([['a', 1], ['c', 3]]);\n\t * const intersection = col1.intersection(col2);\n\t * console.log(col1.intersection(col2));\n\t * // => Collection { 'a' => 1 }\n\t * ```\n\t */\n\tpublic intersection(other: ReadonlyCollection<Key, any>): Collection<Key, Value> {\n\t\tconst coll = new this.constructor[Symbol.species]<Key, Value>();\n\n\t\tfor (const [key, value] of this) {\n\t\t\tif (other.has(key)) coll.set(key, value);\n\t\t}\n\n\t\treturn coll;\n\t}\n\n\t/**\n\t * Returns a new collection containing the items where the key is present in either of the collections.\n\t *\n\t * @remarks\n\t *\n\t * If the collections have any items with the same key, the value from the first collection will be used.\n\t * @param other - The other Collection to filter against\n\t * @example\n\t * ```ts\n\t * const col1 = new Collection([['a', 1], ['b', 2]]);\n\t * const col2 = new Collection([['a', 1], ['b', 3], ['c', 3]]);\n\t * const union = col1.union(col2);\n\t * console.log(union);\n\t * // => Collection { 'a' => 1, 'b' => 2, 'c' => 3 }\n\t * ```\n\t */\n\tpublic union<OtherValue>(other: ReadonlyCollection<Key, OtherValue>): Collection<Key, OtherValue | Value> {\n\t\tconst coll = new this.constructor[Symbol.species]<Key, OtherValue | Value>(this);\n\n\t\tfor (const [key, value] of other) {\n\t\t\tif (!coll.has(key)) coll.set(key, value);\n\t\t}\n\n\t\treturn coll;\n\t}\n\n\t/**\n\t * Returns a new collection containing the items where the key is present in this collection but not the other.\n\t *\n\t * @param other - The other Collection to filter against\n\t * @example\n\t * ```ts\n\t * const col1 = new Collection([['a', 1], ['b', 2]]);\n\t * const col2 = new Collection([['a', 1], ['c', 3]]);\n\t * console.log(col1.difference(col2));\n\t * // => Collection { 'b' => 2 }\n\t * console.log(col2.difference(col1));\n\t * // => Collection { 'c' => 3 }\n\t * ```\n\t */\n\tpublic difference(other: ReadonlyCollection<Key, any>): Collection<Key, Value> {\n\t\tconst coll = new this.constructor[Symbol.species]<Key, Value>();\n\n\t\tfor (const [key, value] of this) {\n\t\t\tif (!other.has(key)) coll.set(key, value);\n\t\t}\n\n\t\treturn coll;\n\t}\n\n\t/**\n\t * Returns a new collection containing only the items where the keys are present in either collection, but not both.\n\t *\n\t * @param other - The other Collection to filter against\n\t * @example\n\t * ```ts\n\t * const col1 = new Collection([['a', 1], ['b', 2]]);\n\t * const col2 = new Collection([['a', 1], ['c', 3]]);\n\t * const symmetricDifference = col1.symmetricDifference(col2);\n\t * console.log(col1.symmetricDifference(col2));\n\t * // => Collection { 'b' => 2, 'c' => 3 }\n\t * ```\n\t */\n\tpublic symmetricDifference<OtherValue>(\n\t\tother: ReadonlyCollection<Key, OtherValue>,\n\t): Collection<Key, OtherValue | Value> {\n\t\tconst coll = new this.constructor[Symbol.species]<Key, OtherValue | Value>();\n\n\t\tfor (const [key, value] of this) {\n\t\t\tif (!other.has(key)) coll.set(key, value);\n\t\t}\n\n\t\tfor (const [key, value] of other) {\n\t\t\tif (!this.has(key)) coll.set(key, value);\n\t\t}\n\n\t\treturn coll;\n\t}\n\n\t/**\n\t * Merges two Collections together into a new Collection.\n\t *\n\t * @param other - The other Collection to merge with\n\t * @param whenInSelf - Function getting the result if the entry only exists in this Collection\n\t * @param whenInOther - Function getting the result if the entry only exists in the other Collection\n\t * @param whenInBoth - Function getting the result if the entry exists in both Collections\n\t * @example\n\t * ```ts\n\t * // Sums up the entries in two collections.\n\t * coll.merge(\n\t *  other,\n\t *  x => ({ keep: true, value: x }),\n\t *  y => ({ keep: true, value: y }),\n\t *  (x, y) => ({ keep: true, value: x + y }),\n\t * );\n\t * ```\n\t * @example\n\t * ```ts\n\t * // Intersects two collections in a left-biased manner.\n\t * coll.merge(\n\t *  other,\n\t *  x => ({ keep: false }),\n\t *  y => ({ keep: false }),\n\t *  (x, _) => ({ keep: true, value: x }),\n\t * );\n\t * ```\n\t */\n\tpublic merge<OtherValue, ResultValue>(\n\t\tother: ReadonlyCollection<Key, OtherValue>,\n\t\twhenInSelf: (value: Value, key: Key) => Keep<ResultValue>,\n\t\twhenInOther: (valueOther: OtherValue, key: Key) => Keep<ResultValue>,\n\t\twhenInBoth: (value: Value, valueOther: OtherValue, key: Key) => Keep<ResultValue>,\n\t): Collection<Key, ResultValue> {\n\t\tconst coll = new this.constructor[Symbol.species]<Key, ResultValue>();\n\t\tconst keys = new Set([...this.keys(), ...other.keys()]);\n\n\t\tfor (const key of keys) {\n\t\t\tconst hasInSelf = this.has(key);\n\t\t\tconst hasInOther = other.has(key);\n\n\t\t\tif (hasInSelf && hasInOther) {\n\t\t\t\tconst result = whenInBoth(this.get(key)!, other.get(key)!, key);\n\t\t\t\tif (result.keep) coll.set(key, result.value);\n\t\t\t} else if (hasInSelf) {\n\t\t\t\tconst result = whenInSelf(this.get(key)!, key);\n\t\t\t\tif (result.keep) coll.set(key, result.value);\n\t\t\t} else if (hasInOther) {\n\t\t\t\tconst result = whenInOther(other.get(key)!, key);\n\t\t\t\tif (result.keep) coll.set(key, result.value);\n\t\t\t}\n\t\t}\n\n\t\treturn coll;\n\t}\n\n\t/**\n\t * Identical to {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/toReversed | Array.toReversed()}\n\t * but returns a Collection instead of an Array.\n\t */\n\tpublic toReversed() {\n\t\treturn new this.constructor[Symbol.species](this).reverse();\n\t}\n\n\t/**\n\t * The sorted method sorts the items of a collection and returns it.\n\t * The sort is not necessarily stable in Node 10 or older.\n\t * The default sort order is according to string Unicode code points.\n\t *\n\t * @param compareFunction - Specifies a function that defines the sort order.\n\t * If omitted, the collection is sorted according to each character's Unicode code point value,\n\t * according to the string conversion of each element.\n\t * @example\n\t * ```ts\n\t * collection.sorted((userA, userB) => userA.createdTimestamp - userB.createdTimestamp);\n\t * ```\n\t */\n\tpublic toSorted(compareFunction: Comparator<Key, Value> = Collection.defaultSort) {\n\t\treturn new this.constructor[Symbol.species](this).sort((av, bv, ak, bk) => compareFunction(av, bv, ak, bk));\n\t}\n\n\tpublic toJSON() {\n\t\t// toJSON is called recursively by JSON.stringify.\n\t\treturn [...this.entries()];\n\t}\n\n\tprivate static defaultSort<Value>(firstValue: Value, secondValue: Value): number {\n\t\treturn Number(firstValue > secondValue) || Number(firstValue === secondValue) - 1;\n\t}\n\n\t/**\n\t * Creates a Collection from a list of entries.\n\t *\n\t * @param entries - The list of entries\n\t * @param combine - Function to combine an existing entry with a new one\n\t * @example\n\t * ```ts\n\t * Collection.combineEntries([[\"a\", 1], [\"b\", 2], [\"a\", 2]], (x, y) => x + y);\n\t * // returns Collection { \"a\" => 3, \"b\" => 2 }\n\t * ```\n\t */\n\tpublic static combineEntries<Key, Value>(\n\t\tentries: Iterable<[Key, Value]>,\n\t\tcombine: (firstValue: Value, secondValue: Value, key: Key) => Value,\n\t): Collection<Key, Value> {\n\t\tconst coll = new Collection<Key, Value>();\n\t\tfor (const [key, value] of entries) {\n\t\t\tif (coll.has(key)) {\n\t\t\t\tcoll.set(key, combine(coll.get(key)!, value, key));\n\t\t\t} else {\n\t\t\t\tcoll.set(key, value);\n\t\t\t}\n\t\t}\n\n\t\treturn coll;\n\t}\n}\n\n/**\n * @internal\n */\nexport type Keep<Value> = { keep: false } | { keep: true; value: Value };\n\n/**\n * @internal\n */\nexport type Comparator<Key, Value> = (firstValue: Value, secondValue: Value, firstKey: Key, secondKey: Key) => number;\n", "const IncrementSymbol = Symbol('@sapphire/snowflake.increment');\nconst EpochSymbol = Symbol('@sapphire/snowflake.epoch');\nconst ProcessIdSymbol = Symbol('@sapphire/snowflake.processId');\nconst WorkerIdSymbol = Symbol('@sapphire/snowflake.workerId');\n\n/**\n * The maximum value the `workerId` field accepts in snowflakes.\n */\nexport const MaximumWorkerId = 0b11111n;\n\n/**\n * The maximum value the `processId` field accepts in snowflakes.\n */\nexport const MaximumProcessId = 0b11111n;\n\n/**\n * The maximum value the `increment` field accepts in snowflakes.\n */\nexport const MaximumIncrement = 0b111111111111n;\n\n/**\n * A class for generating and deconstructing Twitter snowflakes.\n *\n * A {@link https://developer.twitter.com/en/docs/twitter-ids Twitter snowflake}\n * is a 64-bit unsigned integer with 4 fields that have a fixed epoch value.\n *\n * If we have a snowflake `266241948824764416` we can represent it as binary:\n * ```\n * 64                                          22     17     12          0\n *  000000111011000111100001101001000101000000  00001  00000  000000000000\n *           number of ms since epoch           worker  pid    increment\n * ```\n */\nexport class Snowflake {\n\t/**\n\t * Alias for {@link deconstruct}\n\t */\n\t// eslint-disable-next-line @typescript-eslint/unbound-method\n\tpublic decode = this.deconstruct;\n\n\t/**\n\t * Internal reference of the epoch passed in the constructor\n\t * @internal\n\t */\n\tprivate readonly [EpochSymbol]: bigint;\n\n\t/**\n\t * Internal incrementor for generating snowflakes\n\t * @internal\n\t */\n\tprivate [IncrementSymbol] = 0n;\n\n\t/**\n\t * The process ID that will be used by default in the generate method\n\t * @internal\n\t */\n\tprivate [ProcessIdSymbol] = 1n;\n\n\t/**\n\t * The worker ID that will be used by default in the generate method\n\t * @internal\n\t */\n\tprivate [WorkerIdSymbol] = 0n;\n\n\t/**\n\t * @param epoch the epoch to use\n\t */\n\tpublic constructor(epoch: number | bigint | Date) {\n\t\tthis[EpochSymbol] = BigInt(epoch instanceof Date ? epoch.getTime() : epoch);\n\t}\n\n\t/**\n\t * The epoch for this snowflake\n\t */\n\tpublic get epoch(): bigint {\n\t\treturn this[EpochSymbol];\n\t}\n\n\t/**\n\t * Gets the configured process ID\n\t */\n\tpublic get processId(): bigint {\n\t\treturn this[ProcessIdSymbol];\n\t}\n\n\t/**\n\t * Sets the process ID that will be used by default for the {@link generate} method\n\t * @param value The new value, will be coerced to BigInt and masked with `0b11111n`\n\t */\n\tpublic set processId(value: number | bigint) {\n\t\tthis[ProcessIdSymbol] = BigInt(value) & MaximumProcessId;\n\t}\n\n\t/**\n\t * Gets the configured worker ID\n\t */\n\tpublic get workerId(): bigint {\n\t\treturn this[WorkerIdSymbol];\n\t}\n\n\t/**\n\t * Sets the worker ID that will be used by default for the {@link generate} method\n\t * @param value The new value, will be coerced to BigInt and masked with `0b11111n`\n\t */\n\tpublic set workerId(value: number | bigint) {\n\t\tthis[WorkerIdSymbol] = BigInt(value) & MaximumWorkerId;\n\t}\n\n\t/**\n\t * Generates a snowflake given an epoch and optionally a timestamp\n\t * @param options options to pass into the generator, see {@link SnowflakeGenerateOptions}\n\t *\n\t * **note** when `increment` is not provided it defaults to the private `increment` of the instance\n\t * @example\n\t * ```typescript\n\t * const epoch = new Date('2000-01-01T00:00:00.000Z');\n\t * const snowflake = new Snowflake(epoch).generate();\n\t * ```\n\t * @returns A unique snowflake\n\t */\n\tpublic generate({\n\t\tincrement,\n\t\ttimestamp = Date.now(),\n\t\tworkerId = this[WorkerIdSymbol],\n\t\tprocessId = this[ProcessIdSymbol]\n\t}: SnowflakeGenerateOptions = {}) {\n\t\tif (timestamp instanceof Date) timestamp = BigInt(timestamp.getTime());\n\t\telse if (typeof timestamp === 'number') timestamp = BigInt(timestamp);\n\t\telse if (typeof timestamp !== 'bigint') {\n\t\t\tthrow new TypeError(`\"timestamp\" argument must be a number, bigint, or Date (received ${typeof timestamp})`);\n\t\t}\n\n\t\tif (typeof increment !== 'bigint') {\n\t\t\tincrement = this[IncrementSymbol];\n\t\t\tthis[IncrementSymbol] = (increment + 1n) & MaximumIncrement;\n\t\t}\n\n\t\t// timestamp, workerId, processId, increment\n\t\treturn (\n\t\t\t((timestamp - this[EpochSymbol]) << 22n) |\n\t\t\t((workerId & MaximumWorkerId) << 17n) |\n\t\t\t((processId & MaximumProcessId) << 12n) |\n\t\t\t(increment & MaximumIncrement)\n\t\t);\n\t}\n\n\t/**\n\t * Deconstructs a snowflake given a snowflake ID\n\t * @param id the snowflake to deconstruct\n\t * @returns a deconstructed snowflake\n\t * @example\n\t * ```typescript\n\t * const epoch = new Date('2000-01-01T00:00:00.000Z');\n\t * const snowflake = new Snowflake(epoch).deconstruct('3971046231244935168');\n\t * ```\n\t */\n\tpublic deconstruct(id: string | bigint): DeconstructedSnowflake {\n\t\tconst bigIntId = BigInt(id);\n\t\tconst epoch = this[EpochSymbol];\n\t\treturn {\n\t\t\tid: bigIntId,\n\t\t\ttimestamp: (bigIntId >> 22n) + epoch,\n\t\t\tworkerId: (bigIntId >> 17n) & MaximumWorkerId,\n\t\t\tprocessId: (bigIntId >> 12n) & MaximumProcessId,\n\t\t\tincrement: bigIntId & MaximumIncrement,\n\t\t\tepoch\n\t\t};\n\t}\n\n\t/**\n\t * Retrieves the timestamp field's value from a snowflake.\n\t * @param id The snowflake to get the timestamp value from.\n\t * @returns The UNIX timestamp that is stored in `id`.\n\t */\n\tpublic timestampFrom(id: string | bigint): number {\n\t\treturn Number((BigInt(id) >> 22n) + this[EpochSymbol]);\n\t}\n\n\t/**\n\t * Returns a number indicating whether a reference snowflake comes before, or after, or is same as the given\n\t * snowflake in sort order.\n\t * @param a The first snowflake to compare.\n\t * @param b The second snowflake to compare.\n\t * @returns `-1` if `a` is older than `b`, `0` if `a` and `b` are equals, `1` if `a` is newer than `b`.\n\t * @example Sort snowflakes in ascending order\n\t * ```typescript\n\t * const ids = ['737141877803057244', '1056191128120082432', '254360814063058944'];\n\t * console.log(ids.sort((a, b) => Snowflake.compare(a, b)));\n\t * // → ['254360814063058944', '737141877803057244', '1056191128120082432'];\n\t * ```\n\t * @example Sort snowflakes in descending order\n\t * ```typescript\n\t * const ids = ['737141877803057244', '1056191128120082432', '254360814063058944'];\n\t * console.log(ids.sort((a, b) => -Snowflake.compare(a, b)));\n\t * // → ['1056191128120082432', '737141877803057244', '254360814063058944'];\n\t * ```\n\t */\n\tpublic static compare(a: string | bigint, b: string | bigint): -1 | 0 | 1 {\n\t\tconst typeA = typeof a;\n\t\treturn typeA === typeof b\n\t\t\t? typeA === 'string'\n\t\t\t\t? cmpString(a as string, b as string)\n\t\t\t\t: cmpBigInt(a as bigint, b as bigint)\n\t\t\t: cmpBigInt(BigInt(a), BigInt(b));\n\t}\n}\n\n/** @internal */\nfunction cmpBigInt(a: bigint, b: bigint) {\n\treturn a === b ? 0 : a < b ? -1 : 1;\n}\n\n/** @internal */\nfunction cmpString(a: string, b: string) {\n\treturn a === b ? 0 : a.length < b.length ? -1 : a.length > b.length ? 1 : a < b ? -1 : 1;\n}\n\n/**\n * Options for Snowflake#generate\n */\nexport interface SnowflakeGenerateOptions {\n\t/**\n\t * Timestamp or date of the snowflake to generate\n\t * @default Date.now()\n\t */\n\ttimestamp?: number | bigint | Date;\n\n\t/**\n\t * The increment to use\n\t * @default 0n\n\t * @remark keep in mind that this bigint is auto-incremented between generate calls\n\t */\n\tincrement?: bigint;\n\n\t/**\n\t * The worker ID to use, will be truncated to 5 bits (0-31)\n\t * @default 0n\n\t */\n\tworkerId?: bigint;\n\n\t/**\n\t * The process ID to use, will be truncated to 5 bits (0-31)\n\t * @default 1n\n\t */\n\tprocessId?: bigint;\n}\n\n/**\n * Object returned by Snowflake#deconstruct\n */\nexport interface DeconstructedSnowflake {\n\t/**\n\t * The id in BigInt form\n\t */\n\tid: bigint;\n\n\t/**\n\t * The timestamp stored in the snowflake\n\t */\n\ttimestamp: bigint;\n\n\t/**\n\t * The worker id stored in the snowflake\n\t */\n\tworkerId: bigint;\n\n\t/**\n\t * The process id stored in the snowflake\n\t */\n\tprocessId: bigint;\n\n\t/**\n\t * The increment stored in the snowflake\n\t */\n\tincrement: bigint;\n\n\t/**\n\t * The epoch to use in the snowflake\n\t */\n\tepoch: bigint;\n}\n", "import { Snowflake } from './Snowflake';\n\n/**\n * A class for parsing snowflake ids using Discord's snowflake epoch\n *\n * Which is 2015-01-01 at 00:00:00.000 UTC+0, {@linkplain https://discord.com/developers/docs/reference#snowflakes}\n */\nexport const DiscordSnowflake = new Snowflake(1420070400000n);\n", "import { Snowflake } from './Snowflake';\n\n/**\n * A class for parsing snowflake ids using Twitter's snowflake epoch\n *\n * Which is 2010-11-04 at 01:42:54.657 UTC+0, found in the archived snowflake repository {@linkplain https://github.com/twitter-archive/snowflake/blob/b3f6a3c6ca8e1b6847baa6ff42bf72201e2c2231/src/main/scala/com/twitter/service/snowflake/IdWorker.scala#L25}\n */\nexport const TwitterSnowflake = new Snowflake(1288834974657n);\n", "/* eslint-disable @typescript-eslint/ban-types */\n/* eslint-disable @typescript-eslint/dot-notation */\nfunction validateListener(input: unknown): asserts input is (...args: unknown[]) => void {\n\tif (typeof input !== 'function') {\n\t\tthrow new TypeError(`The listener argument must be a function. Received ${typeof input}`);\n\t}\n}\n\nfunction validateAbortSignal(input: unknown): asserts input is AbortSignal | undefined {\n\t// Only validate that the signal is a signal if its defined\n\tif (input && !(input instanceof AbortSignal)) {\n\t\t// eslint-disable-next-line @typescript-eslint/no-base-to-string\n\t\tthrow new TypeError(`The signal option must be an AbortSignal. Received ${input}`);\n\t}\n}\n\n// Inspired from https://github.com/nodejs/node/blob/42ad967d68137df1a80a877e7b5ad56403fc157f/lib/internal/util.js#L397\nfunction spliceOne(list: unknown[], index: number) {\n\tfor (; index + 1 < list.length; index++) {\n\t\tlist[index] = list[index + 1];\n\t}\n\n\tlist.pop();\n}\n\n// Inspired from https://github.com/nodejs/node/blob/42ad967d68137df1a80a877e7b5ad56403fc157f/lib/events.js#L889\nfunction arrayClone<T extends unknown[]>(arr: T): T {\n\t// At least since V8 8.3, this implementation is faster than the previous\n\t// which always used a simple for-loop\n\tswitch (arr.length) {\n\t\tcase 2:\n\t\t\treturn [arr[0], arr[1]] as T;\n\t\tcase 3:\n\t\t\treturn [arr[0], arr[1], arr[2]] as T;\n\t\tcase 4:\n\t\t\treturn [arr[0], arr[1], arr[2], arr[3]] as T;\n\t\tcase 5:\n\t\t\treturn [arr[0], arr[1], arr[2], arr[3], arr[4]] as T;\n\t\tcase 6:\n\t\t\treturn [arr[0], arr[1], arr[2], arr[3], arr[4], arr[5]] as T;\n\t}\n\n\treturn arr.slice() as T;\n}\n\n// Inspired from https://github.com/nodejs/node/blob/42ad967d68137df1a80a877e7b5ad56403fc157f/lib/events.js#L427-L475\nfunction identicalSequenceRange(a: unknown[], b: unknown[]): [number, number] {\n\tfor (let i = 0; i < a.length - 3; i++) {\n\t\t// Find the first entry of b that matches the current entry of a.\n\t\tconst pos = b.indexOf(a[i]);\n\t\tif (pos !== -1) {\n\t\t\tconst rest = b.length - pos;\n\t\t\tif (rest > 3) {\n\t\t\t\tlet len = 1;\n\t\t\t\tconst maxLen = Math.min(a.length - i, rest);\n\t\t\t\t// Count the number of consecutive entries.\n\t\t\t\twhile (maxLen > len && a[i + len] === b[pos + len]) {\n\t\t\t\t\tlen++;\n\t\t\t\t}\n\t\t\t\tif (len > 3) {\n\t\t\t\t\treturn [len, i];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn [0, 0];\n}\n\nfunction enhanceStackTrace(this: AsyncEventEmitter<any>, err: Error, own: Error) {\n\tlet ctorInfo = '';\n\ttry {\n\t\tconst { name } = this.constructor;\n\t\tif (name !== 'AsyncEventEmitter') ctorInfo = ` on ${name} instance`;\n\t} catch {\n\t\t// Continue regardless of error.\n\t}\n\tconst sep = `\\nEmitted 'error' event${ctorInfo} at:\\n`;\n\n\tconst errStack = err.stack!.split('\\n').slice(1);\n\tconst ownStack = own.stack!.split('\\n').slice(1);\n\n\tconst { 0: len, 1: off } = identicalSequenceRange(ownStack, errStack);\n\tif (len > 0) {\n\t\townStack.splice(off + 1, len - 2, '    [... lines matching original stack trace ...]');\n\t}\n\n\treturn err.stack + sep + ownStack.join('\\n');\n}\n\ninterface InternalEventMap extends Array<Listener> {\n\t_hasWarnedAboutMaxListeners?: boolean;\n}\n\ntype InternalGetAsyncEventEmitterEventParameters<\n\tEE extends AsyncEventEmitter<any>,\n\tEventName extends PropertyKey,\n\tEvents extends Record<PropertyKey, unknown[]> = EE extends AsyncEventEmitter<infer Events> ? Events\n\t:\tRecord<PropertyKey, unknown[]>,\n> =\n\tEventName extends keyof AsyncEventEmitterPredefinedEvents ?\n\t\tEventName extends keyof Events ?\n\t\t\tAsyncEventEmitterPredefinedEvents[EventName] | (Events & Record<PropertyKey, unknown[]>)[EventName]\n\t\t:\tAsyncEventEmitterPredefinedEvents[EventName]\n\t: EventName extends keyof Events ? (Events & Record<PropertyKey, unknown[]>)[EventName]\n\t: any[];\n\nexport type GetAsyncEventEmitterEventParameters<\n\tEE extends AsyncEventEmitter<any>,\n\tEventName extends PropertyKey | keyof AsyncEventEmitterPredefinedEvents,\n> = InternalGetAsyncEventEmitterEventParameters<EE, EventName>;\n\ntype InternalAsyncEventEmitterInternalListenerForEvent<\n\tEE extends AsyncEventEmitter<any>,\n\tEventName extends PropertyKey,\n\tEvents extends Record<PropertyKey, unknown[]> = EE extends AsyncEventEmitter<infer Events> ? Events\n\t:\tRecord<PropertyKey, unknown[]>,\n> =\n\tEventName extends keyof AsyncEventEmitterPredefinedEvents ?\n\t\tEventName extends keyof Events ?\n\t\t\tListener<\n\t\t\t\tAsyncEventEmitterPredefinedEvents[EventName] | (Events & Record<PropertyKey, unknown[]>)[EventName]\n\t\t\t>\n\t\t:\tListener<AsyncEventEmitterPredefinedEvents[EventName]>\n\t: EventName extends keyof Events ? Listener<(Events & Record<PropertyKey, unknown[]>)[EventName]>\n\t: Listener<any[]>;\n\nexport type AsyncEventEmitterInternalListenerForEvent<\n\tEE extends AsyncEventEmitter<any>,\n\tEventName extends PropertyKey | keyof AsyncEventEmitterPredefinedEvents,\n> = InternalAsyncEventEmitterInternalListenerForEvent<EE, EventName>;\n\nexport type AsyncEventEmitterListenerForEvent<\n\tEE extends AsyncEventEmitter<any>,\n\tEventName extends PropertyKey | keyof AsyncEventEmitterPredefinedEvents,\n> = Exclude<AsyncEventEmitterInternalListenerForEvent<EE, EventName>['listener'], undefined>;\n\nconst brandSymbol = Symbol.for('async-event-emitter.ts-brand');\n\nexport class AsyncEventEmitter<Events extends {} = {}> {\n\t/**\n\t * This field doesn't actually exist, it's just a way to make TS properly infer the events from classes that extend AsyncEventEmitter\n\t */\n\tprotected readonly [brandSymbol]!: Events;\n\n\tprivate _events: Record<string | symbol, Listener | InternalEventMap> = {\n\t\t__proto__: null,\n\t} as Record<keyof Events | keyof AsyncEventEmitterPredefinedEvents, Listener | InternalEventMap>;\n\n\tprivate _eventCount = 0;\n\tprivate _maxListeners = 10;\n\tprivate _internalPromiseMap: Map<string, Promise<void>> = new Map();\n\tprivate _wrapperId = 0n;\n\n\tpublic addListener<K extends keyof Events | keyof AsyncEventEmitterPredefinedEvents>(\n\t\teventName: K,\n\t\tlistener: AsyncEventEmitterListenerForEvent<AsyncEventEmitter<Events>, K>,\n\t): this;\n\n\tpublic addListener<K extends string | symbol>(\n\t\teventName: K,\n\t\tlistener: AsyncEventEmitterListenerForEvent<AsyncEventEmitter<Events>, K>,\n\t): this;\n\n\tpublic addListener<K extends string | symbol>(\n\t\teventName: K,\n\t\tlistener: AsyncEventEmitterListenerForEvent<AsyncEventEmitter<Events>, K>,\n\t): this {\n\t\tvalidateListener(listener);\n\n\t\tconst wrapped = this._wrapListener(eventName, listener, false);\n\n\t\tthis._addListener(eventName, wrapped, false);\n\n\t\treturn this;\n\t}\n\n\tpublic on<K extends keyof Events | keyof AsyncEventEmitterPredefinedEvents>(\n\t\teventName: K,\n\t\tlistener: AsyncEventEmitterListenerForEvent<AsyncEventEmitter<Events>, K>,\n\t): this;\n\n\tpublic on<K extends string | symbol>(\n\t\teventName: K,\n\t\tlistener: AsyncEventEmitterListenerForEvent<AsyncEventEmitter<Events>, K>,\n\t): this;\n\n\tpublic on<K extends string | symbol>(\n\t\teventName: K,\n\t\tlistener: AsyncEventEmitterListenerForEvent<AsyncEventEmitter<Events>, K>,\n\t): this {\n\t\treturn this.addListener(eventName, listener);\n\t}\n\n\tpublic once<K extends keyof Events | keyof AsyncEventEmitterPredefinedEvents>(\n\t\teventName: K,\n\t\tlistener: AsyncEventEmitterListenerForEvent<AsyncEventEmitter<Events>, K>,\n\t): this;\n\n\tpublic once<K extends string | symbol>(\n\t\teventName: K,\n\t\tlistener: AsyncEventEmitterListenerForEvent<AsyncEventEmitter<Events>, K>,\n\t): this;\n\n\tpublic once<K extends string | symbol>(\n\t\teventName: K,\n\t\tlistener: AsyncEventEmitterListenerForEvent<AsyncEventEmitter<Events>, K>,\n\t): this {\n\t\tvalidateListener(listener);\n\n\t\tconst wrapped = this._wrapListener(eventName, listener, true);\n\n\t\tthis._addListener(eventName, wrapped, false);\n\n\t\treturn this;\n\t}\n\n\tpublic removeListener<K extends keyof Events | keyof AsyncEventEmitterPredefinedEvents>(\n\t\teventName: K,\n\t\tlistener: AsyncEventEmitterListenerForEvent<AsyncEventEmitter<Events>, K>,\n\t): this;\n\n\tpublic removeListener<K extends string | symbol>(\n\t\teventName: K,\n\t\tlistener: AsyncEventEmitterListenerForEvent<AsyncEventEmitter<Events>, K>,\n\t): this;\n\n\tpublic removeListener<K extends string | symbol>(\n\t\teventName: K,\n\t\tlistener: AsyncEventEmitterListenerForEvent<AsyncEventEmitter<Events>, K>,\n\t): this {\n\t\tvalidateListener(listener);\n\n\t\tconst events = this._events;\n\t\tconst eventList = events[eventName];\n\n\t\tif (eventList === undefined) {\n\t\t\treturn this;\n\t\t}\n\n\t\tif (eventList === listener || (eventList as Listener).listener === listener) {\n\t\t\tif (--this._eventCount === 0) {\n\t\t\t\tthis._events = { __proto__: null } as Record<\n\t\t\t\t\tkeyof Events | keyof AsyncEventEmitterPredefinedEvents,\n\t\t\t\t\tListener | InternalEventMap\n\t\t\t\t>;\n\t\t\t} else {\n\t\t\t\tdelete events[eventName];\n\t\t\t\tif (events.removeListener) {\n\t\t\t\t\tthis.emit(\n\t\t\t\t\t\t'removeListener',\n\t\t\t\t\t\teventName as string,\n\t\t\t\t\t\t((eventList as Listener).listener ?? eventList) as (...args: any[]) => void,\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (typeof eventList !== 'function') {\n\t\t\tlet position = -1;\n\n\t\t\tfor (let i = eventList.length - 1; i >= 0; i--) {\n\t\t\t\tif (eventList[i] === listener || (eventList[i] as Listener).listener === listener) {\n\t\t\t\t\tposition = i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (position < 0) {\n\t\t\t\treturn this;\n\t\t\t}\n\n\t\t\tif (position === 0) {\n\t\t\t\teventList.shift();\n\t\t\t} else {\n\t\t\t\tspliceOne(eventList, position);\n\t\t\t}\n\n\t\t\tif (eventList.length === 0) {\n\t\t\t\tdelete events[eventName];\n\t\t\t\t--this._eventCount;\n\t\t\t}\n\n\t\t\tif (events.removeListener !== undefined) {\n\t\t\t\tthis.emit('removeListener', eventName, listener);\n\t\t\t}\n\t\t}\n\n\t\treturn this;\n\t}\n\n\tpublic off<K extends keyof Events | keyof AsyncEventEmitterPredefinedEvents>(\n\t\teventName: K,\n\t\tlistener: AsyncEventEmitterListenerForEvent<AsyncEventEmitter<Events>, K>,\n\t): this;\n\n\tpublic off<K extends string | symbol>(\n\t\teventName: K,\n\t\tlistener: AsyncEventEmitterListenerForEvent<AsyncEventEmitter<Events>, K>,\n\t): this;\n\n\tpublic off<K extends string | symbol>(\n\t\teventName: K,\n\t\tlistener: AsyncEventEmitterListenerForEvent<AsyncEventEmitter<Events>, K>,\n\t): this {\n\t\treturn this.removeListener(eventName, listener);\n\t}\n\n\tpublic removeAllListeners<K extends keyof Events | keyof AsyncEventEmitterPredefinedEvents>(event: K): this;\n\n\tpublic removeAllListeners<K extends keyof Events | keyof AsyncEventEmitterPredefinedEvents>(\n\t\tevent?: K | undefined,\n\t): this;\n\n\tpublic removeAllListeners(event: string | symbol): this;\n\n\tpublic removeAllListeners(event?: string | symbol | undefined): this;\n\n\tpublic removeAllListeners(event?: string | symbol | undefined): this {\n\t\tconst events = this._events;\n\n\t\t// Not listening for removeListener, no need to emit\n\t\tif (events.removeListener === undefined) {\n\t\t\tif (!event) {\n\t\t\t\tthis._events = { __proto__: null } as Record<\n\t\t\t\t\tkeyof Events | keyof AsyncEventEmitterPredefinedEvents,\n\t\t\t\t\tInternalEventMap\n\t\t\t\t>;\n\t\t\t\tthis._eventCount = 0;\n\t\t\t} else if (events[event] !== undefined) {\n\t\t\t\tif (--this._eventCount === 0) {\n\t\t\t\t\tthis._events = { __proto__: null } as Record<\n\t\t\t\t\t\tkeyof Events | keyof AsyncEventEmitterPredefinedEvents,\n\t\t\t\t\t\tInternalEventMap\n\t\t\t\t\t>;\n\t\t\t\t} else {\n\t\t\t\t\tdelete events[event];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\t// Emit removeListener for all listeners on all events\n\t\tif (!event) {\n\t\t\tfor (const key of Reflect.ownKeys(events) as (keyof Events | keyof AsyncEventEmitterPredefinedEvents)[]) {\n\t\t\t\tif (key === 'removeListener') {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tthis.removeAllListeners(key);\n\t\t\t}\n\n\t\t\tthis.removeAllListeners('removeListener');\n\t\t\tthis._events = { __proto__: null } as Record<\n\t\t\t\tkeyof Events | keyof AsyncEventEmitterPredefinedEvents,\n\t\t\t\tInternalEventMap\n\t\t\t>;\n\t\t\tthis._eventCount = 0;\n\n\t\t\treturn this;\n\t\t}\n\n\t\tconst listeners = events[event];\n\n\t\tif (typeof listeners === 'function') {\n\t\t\tthis.removeListener(event, listeners as any);\n\t\t} else if (listeners !== undefined) {\n\t\t\t// LIFO order\n\t\t\tfor (let i = listeners.length - 1; i >= 0; i--) {\n\t\t\t\tthis.removeListener(event, listeners[i] as any);\n\t\t\t}\n\t\t}\n\n\t\treturn this;\n\t}\n\n\tpublic setMaxListeners(n: number): this {\n\t\tif (typeof n !== 'number' || n < 0 || Number.isNaN(n)) {\n\t\t\tthrow new RangeError(`Expected to get a non-negative number for \"setMaxListeners\", got ${n} instead`);\n\t\t}\n\n\t\tthis._maxListeners = n;\n\n\t\treturn this;\n\t}\n\n\tpublic getMaxListeners(): number {\n\t\treturn this._maxListeners;\n\t}\n\n\tpublic listeners<K extends keyof Events | keyof AsyncEventEmitterPredefinedEvents>(\n\t\teventName: K,\n\t): AsyncEventEmitterListenerForEvent<AsyncEventEmitter<Events>, K>[];\n\n\tpublic listeners<K extends string | symbol>(\n\t\teventName: K,\n\t): AsyncEventEmitterListenerForEvent<AsyncEventEmitter<Events>, K>[];\n\n\tpublic listeners<K extends string | symbol>(\n\t\teventName: K,\n\t): AsyncEventEmitterListenerForEvent<AsyncEventEmitter<Events>, K>[] {\n\t\tconst eventList = this._events[eventName];\n\n\t\tif (eventList === undefined) {\n\t\t\treturn [];\n\t\t}\n\n\t\tif (typeof eventList === 'function') {\n\t\t\treturn [eventList.listener ?? eventList] as AsyncEventEmitterListenerForEvent<\n\t\t\t\tAsyncEventEmitter<Events>,\n\t\t\t\tK\n\t\t\t>[];\n\t\t}\n\n\t\tconst ret = arrayClone(eventList) as AsyncEventEmitterListenerForEvent<AsyncEventEmitter<Events>, K>[];\n\n\t\tfor (let i = 0; i < ret.length; ++i) {\n\t\t\tconst orig = (ret[i] as Listener).listener;\n\t\t\tif (typeof orig === 'function') {\n\t\t\t\tret[i] = orig as AsyncEventEmitterListenerForEvent<AsyncEventEmitter<Events>, K>;\n\t\t\t}\n\t\t}\n\n\t\treturn ret;\n\t}\n\n\tpublic rawListeners<K extends keyof Events | keyof AsyncEventEmitterPredefinedEvents>(\n\t\teventName: K,\n\t): AsyncEventEmitterInternalListenerForEvent<AsyncEventEmitter<Events>, K>[];\n\n\tpublic rawListeners<K extends string | symbol>(\n\t\teventName: K,\n\t): AsyncEventEmitterInternalListenerForEvent<AsyncEventEmitter<Events>, K>[];\n\n\tpublic rawListeners<K extends string | symbol>(\n\t\teventName: K,\n\t): AsyncEventEmitterInternalListenerForEvent<AsyncEventEmitter<Events>, K>[] {\n\t\tconst eventList = this._events[eventName];\n\n\t\tif (eventList === undefined) {\n\t\t\treturn [];\n\t\t}\n\n\t\tif (typeof eventList === 'function') {\n\t\t\treturn [eventList] as AsyncEventEmitterInternalListenerForEvent<AsyncEventEmitter<Events>, K>[];\n\t\t}\n\n\t\treturn arrayClone(eventList) as AsyncEventEmitterInternalListenerForEvent<AsyncEventEmitter<Events>, K>[];\n\t}\n\n\tpublic emit<K extends keyof Events | keyof AsyncEventEmitterPredefinedEvents>(\n\t\teventName: K,\n\t\t...args: GetAsyncEventEmitterEventParameters<AsyncEventEmitter<Events>, K>\n\t): boolean;\n\n\tpublic emit<K extends string | symbol>(\n\t\teventName: K,\n\t\t...args: GetAsyncEventEmitterEventParameters<AsyncEventEmitter<Events>, K>\n\t): boolean;\n\n\tpublic emit<K extends string | symbol>(\n\t\teventName: K,\n\t\t...args: GetAsyncEventEmitterEventParameters<AsyncEventEmitter<Events>, K>\n\t): boolean {\n\t\tlet doError = eventName === 'error';\n\n\t\tconst events = this._events;\n\t\tif (events !== undefined) {\n\t\t\tdoError = doError && events.error === undefined;\n\t\t} else if (!doError) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (doError) {\n\t\t\tlet er: unknown;\n\n\t\t\tif (args.length > 0) {\n\t\t\t\t// eslint-disable-next-line prefer-destructuring\n\t\t\t\ter = args[0];\n\t\t\t}\n\n\t\t\tif (er instanceof Error) {\n\t\t\t\ttry {\n\t\t\t\t\tconst capture = {};\n\t\t\t\t\t// eslint-disable-next-line @typescript-eslint/unbound-method\n\t\t\t\t\tError.captureStackTrace(capture, AsyncEventEmitter.prototype.emit);\n\t\t\t\t\tObject.defineProperty(er, 'stack', {\n\t\t\t\t\t\tvalue: enhanceStackTrace.call(this, er, capture as Error),\n\t\t\t\t\t\tconfigurable: true,\n\t\t\t\t\t});\n\t\t\t\t} catch {\n\t\t\t\t\t// Continue regardless of error\n\t\t\t\t}\n\n\t\t\t\tthrow er; // Unhandled 'error' event\n\t\t\t}\n\n\t\t\tconst stringifiedError = String(er);\n\n\t\t\t// Give some error to user\n\t\t\tconst err = new Error(`Unhandled 'error' event emitted, received ${stringifiedError}`);\n\t\t\t// @ts-expect-error Add context to error too\n\t\t\terr.context = er;\n\n\t\t\tthrow err; // Unhandled 'error' event\n\t\t}\n\n\t\tconst handlers = events[eventName];\n\n\t\tif (handlers === undefined) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (typeof handlers === 'function') {\n\t\t\tconst result = handlers.apply(this, args);\n\n\t\t\tif (result !== undefined && result !== null) {\n\t\t\t\thandleMaybeAsync(this, result);\n\t\t\t}\n\t\t} else {\n\t\t\tconst len = handlers.length;\n\t\t\tconst listeners = arrayClone(handlers as InternalEventMap);\n\n\t\t\tfor (let i = 0; i < len; ++i) {\n\t\t\t\t// We call all listeners regardless of the result, as we already handle possible error emits in the wrapped func\n\t\t\t\tconst result = listeners[i].apply(this, args);\n\n\t\t\t\tif (result !== undefined && result !== null) {\n\t\t\t\t\thandleMaybeAsync(this, result);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tpublic listenerCount<K extends keyof Events | keyof AsyncEventEmitterPredefinedEvents>(eventName: K): number;\n\n\tpublic listenerCount(eventName: string | symbol): number;\n\n\tpublic listenerCount(eventName: string | symbol): number {\n\t\tconst events = this._events;\n\n\t\tif (events === undefined) {\n\t\t\treturn 0;\n\t\t}\n\n\t\tconst eventListeners = events[eventName];\n\n\t\tif (typeof eventListeners === 'function') {\n\t\t\treturn 1;\n\t\t}\n\n\t\treturn eventListeners?.length ?? 0;\n\t}\n\n\tpublic prependListener<K extends keyof Events | keyof AsyncEventEmitterPredefinedEvents>(\n\t\teventName: K,\n\t\tlistener: AsyncEventEmitterListenerForEvent<AsyncEventEmitter<Events>, K>,\n\t): this;\n\n\tpublic prependListener<K extends string | symbol>(\n\t\teventName: K,\n\t\tlistener: AsyncEventEmitterListenerForEvent<AsyncEventEmitter<Events>, K>,\n\t): this;\n\n\tpublic prependListener<K extends string | symbol>(\n\t\teventName: K,\n\t\tlistener: AsyncEventEmitterListenerForEvent<AsyncEventEmitter<Events>, K>,\n\t): this {\n\t\tvalidateListener(listener);\n\n\t\tconst wrapped = this._wrapListener(eventName, listener, false);\n\n\t\tthis._addListener(eventName, wrapped, true);\n\n\t\treturn this;\n\t}\n\n\tpublic prependOnceListener<K extends keyof Events | keyof AsyncEventEmitterPredefinedEvents>(\n\t\teventName: K,\n\t\tlistener: AsyncEventEmitterListenerForEvent<AsyncEventEmitter<Events>, K>,\n\t): this;\n\n\tpublic prependOnceListener<K extends string | symbol>(\n\t\teventName: K,\n\t\tlistener: AsyncEventEmitterListenerForEvent<AsyncEventEmitter<Events>, K>,\n\t): this;\n\n\tpublic prependOnceListener<K extends string | symbol>(\n\t\teventName: K,\n\t\tlistener: AsyncEventEmitterListenerForEvent<AsyncEventEmitter<Events>, K>,\n\t): this {\n\t\tvalidateListener(listener);\n\n\t\tconst wrapped = this._wrapListener(eventName, listener, true);\n\n\t\tthis._addListener(eventName, wrapped, true);\n\n\t\treturn this;\n\t}\n\n\tpublic eventNames(): (string | symbol)[] & (keyof AsyncEventEmitterPredefinedEvents)[] & (keyof Events)[] {\n\t\treturn this._eventCount > 0 ?\n\t\t\t\t(Reflect.ownKeys(this._events) as (string | symbol)[] &\n\t\t\t\t\t(keyof AsyncEventEmitterPredefinedEvents)[] &\n\t\t\t\t\t(keyof Events)[])\n\t\t\t:\t[];\n\t}\n\n\tpublic async waitForAllListenersToComplete() {\n\t\tconst promises = [...this._internalPromiseMap.values()];\n\n\t\tif (promises.length === 0) {\n\t\t\treturn false;\n\t\t}\n\n\t\tawait Promise.all(promises);\n\n\t\treturn true;\n\t}\n\n\tprivate _addListener(eventName: PropertyKey, wrappedListener: Listener, prepend: boolean) {\n\t\t// Emit newListener first in the event someone is listening for it\n\t\tif (this._events.newListener !== undefined) {\n\t\t\t// Thanks TypeScript for the cast... now with more what the fuck\n\t\t\tthis.emit(\n\t\t\t\t'newListener',\n\t\t\t\teventName as string | symbol,\n\t\t\t\t((wrappedListener as Listener).listener ?? wrappedListener) as (...args: any[]) => void,\n\t\t\t);\n\t\t}\n\n\t\tlet existing = this._events[eventName];\n\n\t\tif (existing === undefined) {\n\t\t\t// eslint-disable-next-line no-multi-assign\n\t\t\texisting = this._events[eventName] = wrappedListener;\n\t\t\t++this._eventCount;\n\t\t} else if (typeof existing === 'function') {\n\t\t\t// Adding the second element, need to change to array.\n\t\t\t// eslint-disable-next-line no-multi-assign\n\t\t\texisting = this._events[eventName] = prepend ? [wrappedListener, existing] : [existing, wrappedListener];\n\t\t\t// If we've already got an array, just append.\n\t\t} else if (prepend) {\n\t\t\texisting.unshift(wrappedListener);\n\t\t} else {\n\t\t\texisting.push(wrappedListener);\n\t\t}\n\n\t\tconst existingWarnedAboutMaxListeners = Reflect.get(existing, '_hasWarnedAboutMaxListeners') as boolean;\n\n\t\tif (this._maxListeners > 0 && existing.length > this._maxListeners && !existingWarnedAboutMaxListeners) {\n\t\t\tReflect.set(existing, '_hasWarnedAboutMaxListeners', true);\n\t\t\tconst warningMessage = [\n\t\t\t\t`Possible AsyncEventEmitter memory leak detected. ${existing.length} ${String(\n\t\t\t\t\teventName,\n\t\t\t\t)} listeners added to ${this.constructor.name}.`,\n\t\t\t\t`Use emitter.setMaxListeners() to increase the limit.`,\n\t\t\t].join(' ');\n\t\t\tconsole.warn(warningMessage);\n\t\t}\n\t}\n\n\tprivate _wrapListener(eventName: PropertyKey, listener: (...args: any[]) => void, once: boolean): Listener {\n\t\tif (!once) {\n\t\t\treturn listener as Listener;\n\t\t}\n\n\t\tconst state = {\n\t\t\tfired: false,\n\t\t\twrapFn: undefined!,\n\t\t\teventEmitter: this,\n\t\t\teventName,\n\t\t\tlistener,\n\t\t} as WrappedOnceState<any[]>;\n\n\t\tconst aliased = onceWrapper<any[]>;\n\n\t\tconst wrapped = aliased.bind(state) as Listener<any[]>;\n\t\twrapped.listener = listener as Listener<any[]>;\n\t\tstate.wrapFn = wrapped;\n\n\t\treturn wrapped as Listener;\n\t}\n\n\tpublic static listenerCount<\n\t\tEventMap extends {},\n\t\tEventName extends PropertyKey = keyof EventMap | keyof AsyncEventEmitterPredefinedEvents,\n\t>(emitter: AsyncEventEmitter<EventMap>, eventName: EventName | keyof AsyncEventEmitterPredefinedEvents): number;\n\n\tpublic static listenerCount(emitter: AsyncEventEmitter<any>, eventName: string | symbol): number;\n\n\tpublic static listenerCount(emitter: AsyncEventEmitter<any>, eventName: string | symbol) {\n\t\treturn emitter.listenerCount(eventName);\n\t}\n\n\tpublic static async once<\n\t\tEventMap extends {},\n\t\tEventName extends PropertyKey = keyof EventMap | keyof AsyncEventEmitterPredefinedEvents,\n\t>(\n\t\temitter: AsyncEventEmitter<EventMap>,\n\t\teventName: EventName,\n\t\toptions?: AbortableMethods,\n\t): Promise<GetAsyncEventEmitterEventParameters<AsyncEventEmitter<EventMap>, EventName>>;\n\n\tpublic static async once(\n\t\temitter: AsyncEventEmitter<any>,\n\t\teventName: string | symbol,\n\t\toptions?: AbortableMethods,\n\t): Promise<any[]>;\n\n\tpublic static async once(\n\t\temitter: AsyncEventEmitter<any>,\n\t\teventName: string | symbol,\n\t\toptions: AbortableMethods = {},\n\t) {\n\t\tconst signal = options?.signal;\n\t\tvalidateAbortSignal(signal);\n\n\t\tif (signal?.aborted) {\n\t\t\tthrow new AbortError(undefined, { cause: getReason(signal) });\n\t\t}\n\n\t\treturn new Promise<any[]>((resolve, reject) => {\n\t\t\tconst errorListener = (err: unknown) => {\n\t\t\t\temitter.removeListener(eventName, resolver);\n\n\t\t\t\tif (signal) {\n\t\t\t\t\teventTargetAgnosticRemoveListener(emitter, eventName, abortListener);\n\t\t\t\t}\n\n\t\t\t\treject(err);\n\t\t\t};\n\n\t\t\tconst resolver = (...args: any[]) => {\n\t\t\t\temitter.removeListener('error', errorListener);\n\n\t\t\t\tif (signal) {\n\t\t\t\t\teventTargetAgnosticRemoveListener(signal, 'abort', abortListener);\n\t\t\t\t}\n\n\t\t\t\tresolve(args as any[]);\n\t\t\t};\n\n\t\t\temitter.once(eventName, resolver);\n\t\t\tif (eventName !== 'error') {\n\t\t\t\temitter.once('error', errorListener);\n\t\t\t}\n\n\t\t\tconst abortListener = () => {\n\t\t\t\teventTargetAgnosticRemoveListener(emitter, eventName, resolver);\n\t\t\t\teventTargetAgnosticRemoveListener(emitter, 'error', errorListener);\n\t\t\t\treject(new AbortError(undefined, { cause: getReason(signal) }));\n\t\t\t};\n\n\t\t\tif (signal) {\n\t\t\t\teventTargetAgnosticAddListener(signal, 'abort', abortListener, { once: true });\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic static on<\n\t\tEventMap extends {},\n\t\tEventName extends PropertyKey = keyof EventMap | keyof AsyncEventEmitterPredefinedEvents,\n\t>(\n\t\temitter: AsyncEventEmitter<EventMap>,\n\t\teventName: EventName,\n\t\toptions?: AbortableMethods,\n\t): AsyncGenerator<GetAsyncEventEmitterEventParameters<AsyncEventEmitter<EventMap>, EventName>, void>;\n\n\tpublic static on(\n\t\temitter: AsyncEventEmitter<any>,\n\t\teventName: string | symbol,\n\t\toptions?: AbortableMethods,\n\t): AsyncGenerator<any[], void>;\n\n\tpublic static on(\n\t\temitter: AsyncEventEmitter<any>,\n\t\teventName: string | symbol,\n\t\toptions: AbortableMethods = {},\n\t): AsyncGenerator<any[], void> {\n\t\tconst signal = options?.signal;\n\t\tvalidateAbortSignal(signal);\n\n\t\tif (signal?.aborted) {\n\t\t\tthrow new AbortError(undefined, { cause: getReason(signal) });\n\t\t}\n\n\t\tconst unconsumedEvents: unknown[][] = [];\n\t\tconst unconsumedPromises: { resolve: (value?: unknown) => void; reject: (reason?: unknown) => void }[] = [];\n\t\tlet error: unknown = null;\n\t\tlet finished = false;\n\n\t\tconst abortListener = () => {\n\t\t\terrorHandler(new AbortError(undefined, { cause: getReason(signal) }));\n\t\t};\n\n\t\tconst eventHandler = (...args: unknown[]) => {\n\t\t\tconst promise = unconsumedPromises.shift();\n\t\t\tif (promise) {\n\t\t\t\tpromise.resolve(createIterResult(args, false));\n\t\t\t} else {\n\t\t\t\tunconsumedEvents.push(args);\n\t\t\t}\n\t\t};\n\n\t\tconst errorHandler = (err: unknown) => {\n\t\t\tfinished = true;\n\n\t\t\tconst toError = unconsumedPromises.shift();\n\n\t\t\tif (toError) {\n\t\t\t\ttoError.reject(err);\n\t\t\t} else {\n\t\t\t\terror = err;\n\t\t\t}\n\n\t\t\tvoid iterator.return();\n\t\t};\n\n\t\tconst iterator: AsyncGenerator<any[], void> = Object.setPrototypeOf(\n\t\t\t{\n\t\t\t\tnext() {\n\t\t\t\t\t// First, we consume all unread events\n\t\t\t\t\tconst value = unconsumedEvents.shift();\n\t\t\t\t\tif (value) {\n\t\t\t\t\t\treturn Promise.resolve(createIterResult(value, false));\n\t\t\t\t\t}\n\n\t\t\t\t\t// Then we error, if an error happened\n\t\t\t\t\t// This happens one time if at all, because after 'error'\n\t\t\t\t\t// we stop listening\n\t\t\t\t\tif (error) {\n\t\t\t\t\t\tconst p = Promise.reject(error);\n\t\t\t\t\t\t// Only the first element errors\n\t\t\t\t\t\terror = null;\n\t\t\t\t\t\treturn p;\n\t\t\t\t\t}\n\n\t\t\t\t\t// If the iterator is finished, resolve to done\n\t\t\t\t\tif (finished) {\n\t\t\t\t\t\treturn Promise.resolve(createIterResult(undefined, true));\n\t\t\t\t\t}\n\n\t\t\t\t\t// Wait until an event happens\n\t\t\t\t\treturn new Promise((resolve, reject) => {\n\t\t\t\t\t\tunconsumedPromises.push({ resolve, reject });\n\t\t\t\t\t});\n\t\t\t\t},\n\n\t\t\t\treturn() {\n\t\t\t\t\temitter.off(eventName, eventHandler);\n\t\t\t\t\temitter.off('error', errorHandler);\n\n\t\t\t\t\tif (signal) {\n\t\t\t\t\t\teventTargetAgnosticRemoveListener(signal, 'abort', abortListener);\n\t\t\t\t\t}\n\n\t\t\t\t\tfinished = true;\n\n\t\t\t\t\tconst doneResult = createIterResult(undefined, true);\n\t\t\t\t\tfor (const promise of unconsumedPromises) {\n\t\t\t\t\t\tpromise.resolve(doneResult);\n\t\t\t\t\t}\n\n\t\t\t\t\treturn Promise.resolve(doneResult);\n\t\t\t\t},\n\n\t\t\t\tthrow(err: unknown) {\n\t\t\t\t\tif (!err || !(err instanceof Error)) {\n\t\t\t\t\t\tthrow new TypeError(\n\t\t\t\t\t\t\t`Expected Error instance to be thrown in AsyncEventEmitter.AsyncIterator. Got ${err}`,\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\n\t\t\t\t\terror = err;\n\t\t\t\t\temitter.off(eventName, eventHandler);\n\t\t\t\t\temitter.off('error', errorHandler);\n\t\t\t\t},\n\n\t\t\t\t[Symbol.asyncIterator]() {\n\t\t\t\t\treturn this;\n\t\t\t\t},\n\t\t\t},\n\t\t\tAsyncIteratorPrototype,\n\t\t);\n\n\t\temitter.on(eventName, eventHandler);\n\t\tif (eventName !== 'error') {\n\t\t\temitter.on('error', errorHandler);\n\t\t}\n\n\t\tif (signal) {\n\t\t\teventTargetAgnosticAddListener(signal, 'abort', abortListener);\n\t\t}\n\n\t\treturn iterator;\n\t}\n}\n\nexport interface AsyncEventEmitterPredefinedEvents {\n\tnewListener: [eventName: string | symbol, listener: (...args: any[]) => void];\n\tremoveListener: [eventName: string | symbol, listener: (...args: any[]) => void];\n}\n\ninterface WrappedOnceState<Args extends unknown[] = unknown[]> {\n\tlistener: (...args: Args) => void;\n\tfired: boolean;\n\teventName: string | symbol;\n\teventEmitter: AsyncEventEmitter<any>;\n\twrapFn: (...args: Args) => void;\n}\n\nexport interface Listener<Args extends any[] = any[]> {\n\t(...args: Args): void;\n\tlistener?: (...args: Args) => void;\n\t// _hasWarnedAboutMaxListeners?: boolean;\n}\n\nexport interface AbortableMethods {\n\tsignal?: AbortSignal;\n}\n\n// @ts-ignore Not all paths returning is fine just fine:tm:\nfunction onceWrapper<Args extends any[] = any[]>(this: WrappedOnceState<Args>) {\n\tif (!this.fired) {\n\t\tthis.eventEmitter.removeListener(this.eventName, this.wrapFn);\n\t\tthis.fired = true;\n\t\t// eslint-disable-next-line @typescript-eslint/dot-notation\n\t\tif (arguments.length === 0) {\n\t\t\t// @ts-expect-error Types can be hell\n\t\t\treturn this.listener.call(this.eventEmitter);\n\t\t}\n\n\t\t// eslint-disable-next-line prefer-rest-params\n\t\treturn this.listener.apply(this.eventEmitter, arguments as unknown as Args);\n\t}\n}\n\n/**\n * A TypeScript not-compliant way of accessing AbortSignal#reason\n * Because DOM types have it, NodeJS types don't. -w-\n */\nfunction getReason(signal: any) {\n\treturn signal?.reason;\n}\n\nfunction eventTargetAgnosticRemoveListener(\n\temitter: any,\n\tname: PropertyKey,\n\tlistener: (...args: unknown[]) => any,\n\tflags?: InternalAgnosticFlags,\n) {\n\tif (typeof emitter.off === 'function') {\n\t\temitter.off(name, listener);\n\t} else if (typeof emitter.removeEventListener === 'function') {\n\t\temitter.removeEventListener(name, listener, flags);\n\t}\n}\n\nfunction eventTargetAgnosticAddListener(\n\temitter: any,\n\tname: string | symbol,\n\tlistener: (...args: unknown[]) => any,\n\tflags?: InternalAgnosticFlags,\n) {\n\tif (typeof emitter.on === 'function') {\n\t\tif (flags?.once) {\n\t\t\temitter.once!(name, listener);\n\t\t} else {\n\t\t\temitter.on(name, listener);\n\t\t}\n\t} else if (typeof emitter.addEventListener === 'function') {\n\t\temitter.addEventListener(name, listener, flags);\n\t}\n}\n\ninterface InternalAgnosticFlags {\n\tonce?: boolean;\n}\n\n// eslint-disable-next-line func-names, @typescript-eslint/no-empty-function\nconst AsyncIteratorPrototype = Object.getPrototypeOf(Object.getPrototypeOf(async function* () {}).prototype);\n\nfunction createIterResult(value: unknown, done: boolean) {\n\treturn { value, done };\n}\n\nexport interface AbortErrorOptions {\n\tcause?: unknown;\n}\n\nexport class AbortError extends Error {\n\tpublic readonly code = 'ABORT_ERR';\n\tpublic override readonly name = 'AbortError';\n\n\tpublic constructor(message = 'The operation was aborted', options: AbortErrorOptions | undefined = undefined) {\n\t\tif (options !== undefined && typeof options !== 'object') {\n\t\t\tthrow new TypeError(`Failed to create AbortError: options is not an object or undefined`);\n\t\t}\n\n\t\tsuper(message, options);\n\t}\n}\n\nfunction handleMaybeAsync(emitter: AsyncEventEmitter<any>, result: any) {\n\ttry {\n\t\tconst the = result.then;\n\t\tconst fin = result.finally;\n\n\t\tif (typeof the === 'function') {\n\t\t\tthe.call(result, undefined, (error: any) => {\n\t\t\t\t// Emit on next tick\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\temitter.emit('error', error);\n\t\t\t\t}, 0);\n\t\t\t});\n\t\t}\n\n\t\tif (typeof fin === 'function') {\n\t\t\tconst promiseId = String(++emitter['_wrapperId']);\n\t\t\temitter['_internalPromiseMap'].set(promiseId, result);\n\t\t\tfin.call(result, function final() {\n\t\t\t\temitter['_internalPromiseMap'].delete(promiseId);\n\t\t\t});\n\t\t}\n\t} catch (err) {\n\t\temitter.emit('error', err);\n\t}\n}\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.fromHex = exports.toHex = void 0;\nconst hex = (num) => new Number(num).toString(16).toLowerCase();\nconst toHex = (num) => `0x${hex(num).length === 1 ? \"0\" + hex(num) : hex(num)}`;\nexports.toHex = toHex;\nconst fromHex = (hex) => new Number(hex);\nexports.fromHex = fromHex;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createComplexNode = exports.createNode = exports.merge = void 0;\nconst createMatch = (leaf) => ({\n    typename: leaf.typename,\n    mime: leaf.info.mime,\n    extension: leaf.info.extension,\n});\nconst isMatchingNode = (tree, path) => tree && path.length === 0;\nconst head = (arr) => arr[0];\nconst tail = (arr) => arr.slice(1, arr.length);\nconst merge = (node, tree) => {\n    if (node.bytes.length === 0)\n        return tree;\n    const currentByte = head(node.bytes); // 0\n    const path = tail(node.bytes); // [1,2]\n    const currentTree = tree.bytes[currentByte];\n    // traversed to end. Just add key to leaf.\n    if (isMatchingNode(currentTree, path)) {\n        const matchingNode = tree.bytes[currentByte];\n        tree.bytes[currentByte] = {\n            ...matchingNode,\n            matches: [\n                ...(matchingNode.matches ? matchingNode.matches : []),\n                createMatch(node),\n            ],\n        };\n        return tree;\n    }\n    // Path exists already, Merge subtree\n    if (tree.bytes[currentByte]) {\n        tree.bytes[currentByte] = exports.merge(exports.createNode(node.typename, path, node.info), tree.bytes[currentByte]);\n        return tree;\n    }\n    // Tree did not exist before\n    if (!tree.bytes[currentByte]) {\n        tree.bytes[currentByte] = {\n            ...tree.bytes[currentByte],\n            ...exports.createComplexNode(node.typename, path, node.info),\n        };\n    }\n    return tree;\n};\nexports.merge = merge;\nconst createNode = (typename, bytes, info) => {\n    return { typename, bytes, info: info ? info : {} };\n};\nexports.createNode = createNode;\nconst createComplexNode = (typename, bytes, info) => {\n    let obj = {\n        bytes: {},\n        matches: undefined,\n    };\n    const currentKey = head(bytes); // 0\n    const path = tail(bytes); // [1,2]\n    if (bytes.length === 0) {\n        return {\n            matches: [\n                createMatch({\n                    typename: typename,\n                    info: info ? { extension: info.extension, mime: info.mime } : {},\n                }),\n            ],\n            bytes: {},\n        };\n    }\n    obj.bytes[currentKey] = exports.createComplexNode(typename, path, info);\n    return obj;\n};\nexports.createComplexNode = createComplexNode;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst toHex_1 = require(\"./toHex\");\nconst tree_1 = require(\"./tree\");\n// https://en.wikipedia.org/wiki/List_of_file_signatures\nlet tree = {\n    noOffset: null,\n    offset: {},\n};\nconst add = (typename, signature, additionalInfo, offset) => {\n    if (offset) {\n        const existing = tree.offset[toHex_1.toHex(offset)];\n        if (!existing) {\n            tree.offset[toHex_1.toHex(offset)] = tree_1.createComplexNode(typename, signature.map((e) => e.toLowerCase()), additionalInfo);\n        }\n        else {\n            const merged = tree_1.merge(tree_1.createNode(typename, signature.map((e) => e.toLowerCase()), additionalInfo), { ...existing });\n            tree.offset[toHex_1.toHex(offset)] = merged;\n        }\n    }\n    else {\n        if (tree.noOffset === null) {\n            tree.noOffset = tree_1.createComplexNode(typename, signature.map((e) => e.toLowerCase()), additionalInfo);\n        }\n        else {\n            tree.noOffset = tree_1.merge(tree_1.createNode(typename, signature.map((e) => e.toLowerCase()), additionalInfo), tree.noOffset);\n        }\n    }\n};\nadd(\"gif\", [\"0x47\", \"0x49\", \"0x46\", \"0x38\", \"0x37\", \"0x61\"], {\n    mime: \"image/gif\",\n    extension: \"gif\",\n});\nadd(\"gif\", [\"0x47\", \"0x49\", \"0x46\", \"0x38\", \"0x39\", \"0x61\"], {\n    mime: \"image/gif\",\n    extension: \"gif\",\n});\nadd(\"jpg\", [\"0xFF\", \"0xD8\", \"0xFF\"], {\n    mime: \"image/jpeg\",\n    extension: \"jpeg\",\n});\nadd(\"webp\", [\n    \"0x52\",\n    \"0x49\",\n    \"0x46\",\n    \"0x46\",\n    \"?\",\n    \"?\",\n    \"?\",\n    \"?\",\n    \"0x57\",\n    \"0x45\",\n    \"0x42\",\n    \"0x50\",\n], { mime: \"image/webp\", extension: \"webp\" });\nadd(\"heif\", [\"0x66\", \"0x74\", \"0x79\", \"0x70\", \"0x6D\", \"0x69\", \"0x66\", \"0x31\"], { mime: \"image/heif\", extension: \"heif\" }, 4);\nadd(\"heif\", [\"0x66\", \"0x74\", \"0x79\", \"0x70\", \"0x68\", \"0x65\", \"0x69\", \"0x63\"], { mime: \"image/heif\", extension: \"heic\" }, 4);\nadd(\"rpm\", [\"0xed\", \"0xab\", \"0xee\", \"0xdb\"]);\nadd(\"bin\", [\"0x53\", \"0x50\", \"0x30\", \"0x31\"], {\n    mime: \"application/octet-stream\",\n    extension: \"bin\",\n});\nadd(\"pic\", [\"0x00\"]);\nadd(\"pif\", [\"0x00\"]);\nadd(\"sea\", [\"0x00\"]);\nadd(\"ytr\", [\"0x00\"]);\n// 66747970\n// 6D703432\nadd(\"mp4\", [\"0x66\", \"0x74\", \"0x79\", \"0x70\"], { mime: \"video/mp4\", extension: \"mp4\" }, 0x4);\nadd(\"ttf\", [\"0x00\", \"0x01\", \"0x00\", \"0x00\", \"0x00\"], {\n    mime: \"font/ttf\",\n    extension: \"ttf\",\n});\nadd(\"otf\", [\"0x4F\", \"0x54\", \"0x54\", \"0x4F\"], {\n    mime: \"font/otf\",\n    extension: \"otf\",\n});\nadd(\"eot\", [\"0x50\", \"0x4C\"], {\n    mime: \"application/vnd.ms-fontobject\",\n    extension: \"eot\",\n});\nadd(\"woff\", [\"0x77\", \"0x4F\", \"0x46\", \"0x46\"], {\n    mime: \"font/woff\",\n    extension: \"woff\",\n});\nadd(\"woff2\", [\"0x77\", \"0x4F\", \"0x46\", \"0x32\"], {\n    mime: \"font/woff2\",\n    extension: \"woff2\",\n});\nadd(\"pdb\", [\n    \"0x00\",\n    \"0x00\",\n    \"0x00\",\n    \"0x00\",\n    \"0x00\",\n    \"0x00\",\n    \"0x00\",\n    \"0x00\",\n    \"0x00\",\n    \"0x00\",\n    \"0x00\",\n    \"0x00\",\n    \"0x00\",\n    \"0x00\",\n    \"0x00\",\n    \"0x00\",\n    \"0x00\",\n    \"0x00\",\n    \"0x00\",\n    \"0x00\",\n    \"0x00\",\n    \"0x00\",\n    \"0x00\",\n    \"0x00\",\n]);\nadd(\"dba\", [\"0xBE\", \"0xBA\", \"0xFE\", \"0xCA\"]);\nadd(\"dba2\", [\"0x00\", \"0x01\", \"0x42\", \"0x44\"]);\nadd(\"tda\", [\"0x00\", \"0x01\", \"0x44\", \"0x54\"]);\nadd(\"tda2\", [\"0x00\", \"0x01\", \"0x00\", \"0x00\"]);\nadd(\"ico\", [\"0x00\", \"0x00\", \"0x01\", \"0x00\"], {\n    mime: \"image/x-icon\",\n    extension: \"ico\",\n});\nadd(\"3gp\", [\"0x66\", \"0x74\", \"0x79\", \"0x70\", \"0x33\", \"0x67\"]);\nadd(\"z\", [\"0x1F\", \"0x9D\"]);\nadd(\"tar.z\", [\"0x1F\", \"0xA0\"]);\nadd(\"bac\", [\n    \"0x42\",\n    \"0x41\",\n    \"0x43\",\n    \"0x4B\",\n    \"0x4D\",\n    \"0x49\",\n    \"0x4B\",\n    \"0x45\",\n    \"0x44\",\n    \"0x49\",\n    \"0x53\",\n    \"0x4B\",\n]);\nadd(\"bz2\", [\"0x42\", \"0x5A\", \"0x68\"], {\n    mime: \"application/x-bzip2\",\n    extension: \"bz2\",\n});\nadd(\"tif\", [\"0x49\", \"0x49\", \"0x2A\", \"0x00\"], {\n    mime: \"image/tiff\",\n    extension: \"tif\",\n});\nadd(\"tiff\", [\"0x4D\", \"0x4D\", \"0x00\", \"0x2A\"], {\n    mime: \"image/tiff\",\n    extension: \"tiff\",\n});\nadd(\"cr2\", [\n    \"0x49\",\n    \"0x49\",\n    \"0x2A\",\n    \"0x00\",\n    \"0x10\",\n    \"0x00\",\n    \"0x00\",\n    \"0x00\",\n    \"0x43\",\n    \"0x52\",\n]);\nadd(\"cin\", [\"0x80\", \"0x2A\", \"0x5F\", \"0xD7\"]);\nadd(\"cin1\", [\"0x52\", \"0x4E\", \"0x43\", \"0x01\"]);\nadd(\"cin2\", [\"0x52\", \"0x4E\", \"0x43\", \"0x02\"]);\nadd(\"dpx\", [\"0x53\", \"0x44\", \"0x50\", \"0x58\"]);\nadd(\"dpx2\", [\"0x58\", \"0x50\", \"0x44\", \"0x53\"]);\nadd(\"exr\", [\"0x76\", \"0x2F\", \"0x31\", \"0x01\"]);\nadd(\"bpg\", [\"0x42\", \"0x50\", \"0x47\", \"0xFB\"]);\nadd(\"ilbm\", [\n    \"0x46\",\n    \"0x4F\",\n    \"0x52\",\n    \"0x4D\",\n    \"?\",\n    \"?\",\n    \"?\",\n    \"?\",\n    \"0x49\",\n    \"0x4C\",\n    \"0x42\",\n    \"0x4D\",\n]);\nadd(\"8svx\", [\n    \"0x46\",\n    \"0x4F\",\n    \"0x52\",\n    \"0x4D\",\n    \"?\",\n    \"?\",\n    \"?\",\n    \"?\",\n    \"0x38\",\n    \"0x53\",\n    \"0x56\",\n    \"0x58\",\n]);\nadd(\"acbm\", [\n    \"0x46\",\n    \"0x4F\",\n    \"0x52\",\n    \"0x4D\",\n    \"?\",\n    \"?\",\n    \"?\",\n    \"?\",\n    \"0x41\",\n    \"0x43\",\n    \"0x42\",\n    \"0x4D\",\n]);\nadd(\"anbm\", [\n    \"0x46\",\n    \"0x4F\",\n    \"0x52\",\n    \"0x4D\",\n    \"?\",\n    \"?\",\n    \"?\",\n    \"?\",\n    \"0x41\",\n    \"0x4E\",\n    \"0x42\",\n    \"0x4D\",\n]);\nadd(\"anim\", [\n    \"0x46\",\n    \"0x4F\",\n    \"0x52\",\n    \"0x4D\",\n    \"?\",\n    \"?\",\n    \"?\",\n    \"?\",\n    \"0x41\",\n    \"0x4E\",\n    \"0x49\",\n    \"0x4D\",\n]);\nadd(\"faxx\", [\n    \"0x46\",\n    \"0x4F\",\n    \"0x52\",\n    \"0x4D\",\n    \"?\",\n    \"?\",\n    \"?\",\n    \"?\",\n    \"0x46\",\n    \"0x41\",\n    \"0x58\",\n    \"0x58\",\n]);\nadd(\"ftxt\", [\n    \"0x46\",\n    \"0x4F\",\n    \"0x52\",\n    \"0x4D\",\n    \"?\",\n    \"?\",\n    \"?\",\n    \"?\",\n    \"0x46\",\n    \"0x54\",\n    \"0x58\",\n    \"0x54\",\n]);\nadd(\"smus\", [\n    \"0x46\",\n    \"0x4F\",\n    \"0x52\",\n    \"0x4D\",\n    \"?\",\n    \"?\",\n    \"?\",\n    \"?\",\n    \"0x53\",\n    \"0x4D\",\n    \"0x55\",\n    \"0x53\",\n]);\nadd(\"cmus\", [\n    \"0x46\",\n    \"0x4F\",\n    \"0x52\",\n    \"0x4D\",\n    \"?\",\n    \"?\",\n    \"?\",\n    \"?\",\n    \"0x43\",\n    \"0x4D\",\n    \"0x55\",\n    \"0x53\",\n]);\nadd(\"yuvn\", [\n    \"0x46\",\n    \"0x4F\",\n    \"0x52\",\n    \"0x4D\",\n    \"?\",\n    \"?\",\n    \"?\",\n    \"?\",\n    \"0x59\",\n    \"0x55\",\n    \"0x56\",\n    \"0x4E\",\n]);\nadd(\"iff\", [\n    \"0x46\",\n    \"0x4F\",\n    \"0x52\",\n    \"0x4D\",\n    \"?\",\n    \"?\",\n    \"?\",\n    \"?\",\n    \"0x46\",\n    \"0x41\",\n    \"0x4E\",\n    \"0x54\",\n]);\nadd(\"aiff\", [\n    \"0x46\",\n    \"0x4F\",\n    \"0x52\",\n    \"0x4D\",\n    \"?\",\n    \"?\",\n    \"?\",\n    \"?\",\n    \"0x41\",\n    \"0x49\",\n    \"0x46\",\n    \"0x46\",\n], { mime: \"audio/x-aiff\", extension: \"aiff\" });\nadd(\"idx\", [\"0x49\", \"0x4E\", \"0x44\", \"0x58\"]);\nadd(\"lz\", [\"0x4C\", \"0x5A\", \"0x49\", \"0x50\"]);\nadd(\"exe\", [\"0x4D\", \"0x5A\"]);\nadd(\"zip\", [\"0x50\", \"0x4B\", \"0x03\", \"0x04\"], {\n    mime: \"application/zip\",\n    extension: \"zip\",\n});\nadd(\"zip\", [\"0x50\", \"0x4B\", \"0x05\", \"0x06\"], {\n    mime: \"application/zip\",\n    extension: \"zip\",\n});\nadd(\"zip\", [\"0x50\", \"0x4B\", \"0x07\", \"0x08\"], {\n    mime: \"application/zip\",\n    extension: \"zip\",\n});\nadd(\"jar\", [\"0x50\", \"0x4B\", \"0x03\", \"0x04\"], {\n    mime: \"application/java-archive\",\n    extension: \"jar\",\n});\nadd(\"jar\", [\"0x50\", \"0x4B\", \"0x05\", \"0x06\"], {\n    mime: \"application/java-archive\",\n    extension: \"jar\",\n});\nadd(\"jar\", [\"0x50\", \"0x4B\", \"0x07\", \"0x08\"], {\n    mime: \"application/java-archive\",\n    extension: \"jar\",\n});\nadd(\"odt\", [\"0x50\", \"0x4B\", \"0x03\", \"0x04\"], {\n    mime: \"application/vnd.oasis.opendocument.text\",\n    extension: \"odt\",\n});\nadd(\"odt\", [\"0x50\", \"0x4B\", \"0x05\", \"0x06\"], {\n    mime: \"application/vnd.oasis.opendocument.text\",\n    extension: \"odt\",\n});\nadd(\"odt\", [\"0x50\", \"0x4B\", \"0x07\", \"0x08\"], {\n    mime: \"application/vnd.oasis.opendocument.text\",\n    extension: \"odt\",\n});\nadd(\"ods\", [\"0x50\", \"0x4B\", \"0x03\", \"0x04\"], {\n    mime: \"application/vnd.oasis.opendocument.spreadsheet\",\n    extension: \"ods\",\n});\nadd(\"ods\", [\"0x50\", \"0x4B\", \"0x05\", \"0x06\"], {\n    mime: \"application/vnd.oasis.opendocument.spreadsheet\",\n    extension: \"ods\",\n});\nadd(\"ods\", [\"0x50\", \"0x4B\", \"0x07\", \"0x08\"], {\n    mime: \"application/vnd.oasis.opendocument.spreadsheet\",\n    extension: \"ods\",\n});\nadd(\"odp\", [\"0x50\", \"0x4B\", \"0x03\", \"0x04\"], {\n    mime: \"application/vnd.oasis.opendocument.presentation\",\n    extension: \"odp\",\n});\nadd(\"odp\", [\"0x50\", \"0x4B\", \"0x05\", \"0x06\"], {\n    mime: \"application/vnd.oasis.opendocument.presentation\",\n    extension: \"odp\",\n});\nadd(\"odp\", [\"0x50\", \"0x4B\", \"0x07\", \"0x08\"], {\n    mime: \"application/vnd.oasis.opendocument.presentation\",\n    extension: \"odp\",\n});\nadd(\"docx\", [\"0x50\", \"0x4B\", \"0x03\", \"0x04\"], {\n    mime: \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\",\n    extension: \"docx\",\n});\nadd(\"docx\", [\"0x50\", \"0x4B\", \"0x05\", \"0x06\"], {\n    mime: \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\",\n    extension: \"docx\",\n});\nadd(\"docx\", [\"0x50\", \"0x4B\", \"0x07\", \"0x08\"], {\n    mime: \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\",\n    extension: \"docx\",\n});\nadd(\"xlsx\", [\"0x50\", \"0x4B\", \"0x03\", \"0x04\"], {\n    mime: \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",\n    extension: \"xlsx\",\n});\nadd(\"xlsx\", [\"0x50\", \"0x4B\", \"0x05\", \"0x06\"], {\n    mime: \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",\n    extension: \"xlsx\",\n});\nadd(\"xlsx\", [\"0x50\", \"0x4B\", \"0x07\", \"0x08\"], {\n    mime: \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",\n    extension: \"xlsx\",\n});\nadd(\"pptx\", [\"0x50\", \"0x4B\", \"0x03\", \"0x04\"], {\n    mime: \"application/vnd.openxmlformats-officedocument.presentationml.presentation\",\n    extension: \"pptx\",\n});\nadd(\"pptx\", [\"0x50\", \"0x4B\", \"0x05\", \"0x06\"], {\n    mime: \"application/vnd.openxmlformats-officedocument.presentationml.presentation\",\n    extension: \"pptx\",\n});\nadd(\"pptx\", [\"0x50\", \"0x4B\", \"0x07\", \"0x08\"], {\n    mime: \"application/vnd.openxmlformats-officedocument.presentationml.presentation\",\n    extension: \"pptx\",\n});\nadd(\"vsdx\", [\"0x50\", \"0x4B\", \"0x03\", \"0x04\"], {\n    mime: \"application/vnd.ms-visio.drawing\",\n    extension: \"vsdx\",\n});\nadd(\"vsdx\", [\"0x50\", \"0x4B\", \"0x05\", \"0x06\"], {\n    mime: \"application/vnd.ms-visio.drawing\",\n    extension: \"vsdx\",\n});\nadd(\"vsdx\", [\"0x50\", \"0x4B\", \"0x07\", \"0x08\"], {\n    mime: \"application/vnd.ms-visio.drawing\",\n    extension: \"vsdx\",\n});\nadd(\"apk\", [\"0x50\", \"0x4B\", \"0x03\", \"0x04\"], {\n    mime: \"application/vnd.android.package-archive\",\n    extension: \"apk\",\n});\nadd(\"apk\", [\"0x50\", \"0x4B\", \"0x05\", \"0x06\"], {\n    mime: \"application/vnd.android.package-archive\",\n    extension: \"apk\",\n});\nadd(\"apk\", [\"0x50\", \"0x4B\", \"0x07\", \"0x08\"], {\n    mime: \"application/vnd.android.package-archive\",\n    extension: \"apk\",\n});\nadd(\"aar\", [\"0x50\", \"0x4B\", \"0x03\", \"0x04\"], {\n    mime: \"application/vnd.android.package-archive\",\n    extension: \"aar\",\n});\nadd(\"aar\", [\"0x50\", \"0x4B\", \"0x05\", \"0x06\"], {\n    mime: \"application/vnd.android.package-archive\",\n    extension: \"aar\",\n});\nadd(\"aar\", [\"0x50\", \"0x4B\", \"0x07\", \"0x08\"], {\n    mime: \"application/vnd.android.package-archive\",\n    extension: \"aar\",\n});\nadd(\"rar\", [\"0x52\", \"0x61\", \"0x72\", \"0x21\", \"0x1A\", \"0x07\", \"0x00\"], {\n    mime: \"application/vnd.rar\",\n    extension: \"rar\",\n});\nadd(\"rar\", [\"0x52\", \"0x61\", \"0x72\", \"0x21\", \"0x1A\", \"0x07\", \"0x01\", \"0x00\"], {\n    mime: \"application/vnd.rar\",\n    extension: \"rar\",\n});\nadd(\"rar\", [\"0x7F\", \"0x45\", \"0x4C\", \"0x46\"], {\n    mime: \"application/vnd.rar\",\n    extension: \"rar\",\n});\nadd(\"png\", [\"0x89\", \"0x50\", \"0x4E\", \"0x47\", \"0x0D\", \"0x0A\", \"0x1A\", \"0x0A\"], {\n    mime: \"image/png\",\n    extension: \"png\",\n});\nadd(\"apng\", [\"0x89\", \"0x50\", \"0x4E\", \"0x47\", \"0x0D\", \"0x0A\", \"0x1A\", \"0x0A\"], {\n    mime: \"image/apng\",\n    extension: \"apng\",\n});\nadd(\"class\", [\"0xCA\", \"0xFE\", \"0xBA\", \"0xBE\"]);\nadd(\"class\", [\"0xEF\", \"0xBB\", \"0xBF\"]);\nadd(\"class\", [\"0xFE\", \"0xed\", \"0xFA\", \"0xCE\"], undefined, 0x1000);\nadd(\"class\", [\"0xFE\", \"0xed\", \"0xFA\", \"0xCF\"], undefined, 0x1000);\nadd(\"class\", [\"0xCE\", \"0xFA\", \"0xed\", \"0xFE\"]);\nadd(\"class\", [\"0xCF\", \"0xFA\", \"0xed\", \"0xFE\"]);\nadd(\"class\", [\"0xFF\", \"0xFE\"]);\nadd(\"class\", [\"0xFF\", \"0xFE\"]);\nadd(\"class\", [\"0xFF\", \"0xFE\", \"0x00\", \"0x00\"]);\nadd(\"ps\", [\"0x25\", \"0x21\", \"0x50\", \"0x53\"], {\n    mime: \"application/postscript\",\n    extension: \".ps\"\n});\nadd(\"pdf\", [\"0x25\", \"0x50\", \"0x44\", \"0x46\"], {\n    mime: \"application/pdf\",\n    extension: \"pdf\",\n});\nadd(\"asf\", [\n    \"0x30\",\n    \"0x26\",\n    \"0xB2\",\n    \"0x75\",\n    \"0x8E\",\n    \"0x66\",\n    \"0xCF\",\n    \"0x11\",\n    \"0xA6\",\n    \"0xD9\",\n    \"0x00\",\n    \"0xAA\",\n    \"0x00\",\n    \"0x62\",\n    \"0xCE\",\n    \"0x6C\",\n]);\nadd(\"wma\", [\n    \"0x30\",\n    \"0x26\",\n    \"0xB2\",\n    \"0x75\",\n    \"0x8E\",\n    \"0x66\",\n    \"0xCF\",\n    \"0x11\",\n    \"0xA6\",\n    \"0xD9\",\n    \"0x00\",\n    \"0xAA\",\n    \"0x00\",\n    \"0x62\",\n    \"0xCE\",\n    \"0x6C\",\n]);\nadd(\"wmv\", [\n    \"0x30\",\n    \"0x26\",\n    \"0xB2\",\n    \"0x75\",\n    \"0x8E\",\n    \"0x66\",\n    \"0xCF\",\n    \"0x11\",\n    \"0xA6\",\n    \"0xD9\",\n    \"0x00\",\n    \"0xAA\",\n    \"0x00\",\n    \"0x62\",\n    \"0xCE\",\n    \"0x6C\",\n]);\nadd(\"deploymentimage\", [\n    \"0x24\",\n    \"0x53\",\n    \"0x44\",\n    \"0x49\",\n    \"0x30\",\n    \"0x30\",\n    \"0x30\",\n    \"0x31\",\n]);\n// ogg video ' theora'\nadd(\"ogv\", [\n    \"0x4F\",\n    \"0x67\",\n    \"0x67\",\n    \"0x53\",\n    \"?\",\n    \"?\",\n    \"?\",\n    \"?\",\n    \"?\",\n    \"?\",\n    \"?\",\n    \"?\",\n    \"?\",\n    \"?\",\n    \"?\",\n    \"?\",\n    \"?\",\n    \"?\",\n    \"?\",\n    \"?\",\n    \"?\",\n    \"?\",\n    \"?\",\n    \"?\",\n    \"?\",\n    \"?\",\n    \"?\",\n    \"?\",\n    \"0x80\",\n    \"0x74\",\n    \"0x68\",\n    \"0x65\",\n    \"0x6F\",\n    \"0x72\",\n    \"0x61\",\n], {\n    mime: \"video/ogg\",\n    extension: \"ogv\",\n});\n// ogg video '\\x01video'\nadd(\"ogm\", [\n    \"0x4F\",\n    \"0x67\",\n    \"0x67\",\n    \"0x53\",\n    \"?\",\n    \"?\",\n    \"?\",\n    \"?\",\n    \"?\",\n    \"?\",\n    \"?\",\n    \"?\",\n    \"?\",\n    \"?\",\n    \"?\",\n    \"?\",\n    \"?\",\n    \"?\",\n    \"?\",\n    \"?\",\n    \"?\",\n    \"?\",\n    \"?\",\n    \"?\",\n    \"?\",\n    \"?\",\n    \"?\",\n    \"?\",\n    \"0x01\",\n    \"0x76\",\n    \"0x69\",\n    \"0x64\",\n    \"0x65\",\n    \"0x6F\",\n    \"0x00\",\n], {\n    mime: \"video/ogg\",\n    extension: \"ogm\",\n});\n// ogg audio ' FLAC'\nadd(\"oga\", [\n    \"0x4F\",\n    \"0x67\",\n    \"0x67\",\n    \"0x53\",\n    \"?\",\n    \"?\",\n    \"?\",\n    \"?\",\n    \"?\",\n    \"?\",\n    \"?\",\n    \"?\",\n    \"?\",\n    \"?\",\n    \"?\",\n    \"?\",\n    \"?\",\n    \"?\",\n    \"?\",\n    \"?\",\n    \"?\",\n    \"?\",\n    \"?\",\n    \"?\",\n    \"?\",\n    \"?\",\n    \"?\",\n    \"?\",\n    \"0x7F\",\n    \"0x46\",\n    \"0x4C\",\n    \"0x41\",\n    \"0x43\",\n], {\n    mime: \"audio/ogg\",\n    extension: \"oga\",\n});\n// ogg audio 'Speex  '\nadd(\"spx\", [\n    \"0x4F\",\n    \"0x67\",\n    \"0x67\",\n    \"0x53\",\n    \"?\",\n    \"?\",\n    \"?\",\n    \"?\",\n    \"?\",\n    \"?\",\n    \"?\",\n    \"?\",\n    \"?\",\n    \"?\",\n    \"?\",\n    \"?\",\n    \"?\",\n    \"?\",\n    \"?\",\n    \"?\",\n    \"?\",\n    \"?\",\n    \"?\",\n    \"?\",\n    \"?\",\n    \"?\",\n    \"?\",\n    \"?\",\n    \"0x53\",\n    \"0x70\",\n    \"0x65\",\n    \"0x65\",\n    \"0x78\",\n    \"0x20\",\n    \"0x20\",\n], {\n    mime: \"audio/ogg\",\n    extension: \"spx\",\n});\n// ogg audio '\\x01vorbis '\nadd(\"ogg\", [\n    \"0x4F\",\n    \"0x67\",\n    \"0x67\",\n    \"0x53\",\n    \"?\",\n    \"?\",\n    \"?\",\n    \"?\",\n    \"?\",\n    \"?\",\n    \"?\",\n    \"?\",\n    \"?\",\n    \"?\",\n    \"?\",\n    \"?\",\n    \"?\",\n    \"?\",\n    \"?\",\n    \"?\",\n    \"?\",\n    \"?\",\n    \"?\",\n    \"?\",\n    \"?\",\n    \"?\",\n    \"?\",\n    \"?\",\n    \"0x01\",\n    \"0x76\",\n    \"0x6F\",\n    \"0x72\",\n    \"0x62\",\n    \"0x69\",\n    \"0x73\",\n], {\n    mime: \"audio/ogg\",\n    extension: \"ogg\",\n});\n// default OGG container\nadd(\"ogx\", [\"0x4F\", \"0x67\", \"0x67\", \"0x53\"], {\n    mime: \"application/ogg\",\n    extension: \"ogx\",\n});\nadd(\"psd\", [\"0x38\", \"0x42\", \"0x50\", \"0x53\"], {\n    mime: \"application/x-photoshop\",\n    extension: \"psd\",\n});\nadd(\"clip\", [\"0x43\", \"0x53\", \"0x46\", \"0x43\", \"0x48\", \"0x55\", \"0x4e\", \"0x4b\"]);\nadd(\"wav\", [\n    \"0x52\",\n    \"0x49\",\n    \"0x46\",\n    \"0x46\",\n    \"?\",\n    \"?\",\n    \"?\",\n    \"?\",\n    \"0x57\",\n    \"0x41\",\n    \"0x56\",\n    \"0x45\",\n], { mime: \"audio/x-wav\", extension: \"wav\" });\nadd(\"avi\", [\n    \"0x52\",\n    \"0x49\",\n    \"0x46\",\n    \"0x46\",\n    \"?\",\n    \"?\",\n    \"?\",\n    \"?\",\n    \"0x41\",\n    \"0x56\",\n    \"0x49\",\n    \"0x20\",\n], { mime: \"video/x-msvideo\", extension: \"avi\" });\nadd(\"mp3\", [\"0xFF\", \"0xFB\"], { mime: \"audio/mpeg\", extension: \"mp3\" });\nadd(\"mp3\", [\"0xFF\", \"0xF3\"], { mime: \"audio/mpeg\", extension: \"mp3\" });\nadd(\"mp3\", [\"0xFF\", \"0xF2\"], { mime: \"audio/mpeg\", extension: \"mp3\" });\nadd(\"mp3\", [\"0x49\", \"0x44\", \"0x33\"], { mime: \"audio/mpeg\", extension: \"mp3\" });\nadd(\"bmp\", [\"0x42\", \"0x4D\"], { mime: \"image/bmp\", extension: \"bmp\" });\nadd(\"iso\", [\"0x43\", \"0x44\", \"0x30\", \"0x30\", \"0x31\"]);\nadd(\"flac\", [\"0x66\", \"0x4C\", \"0x61\", \"0x43\"]);\nadd(\"mid\", [\"0x4D\", \"0x54\", \"0x68\", \"0x64\"], {\n    mime: \"audio/midi\",\n    extension: \"mid\",\n});\nadd(\"midi\", [\"0x4D\", \"0x54\", \"0x68\", \"0x64\"], {\n    mime: \"audio/midi\",\n    extension: \"midi\",\n});\nadd(\"doc\", [\"0xD0\", \"0xCF\", \"0x11\", \"0xE0\", \"0xA1\", \"0xB1\", \"0x1A\", \"0xE1\"], {\n    mime: \"application/msword\",\n    extension: \"doc\",\n});\nadd(\"xls\", [\"0xD0\", \"0xCF\", \"0x11\", \"0xE0\", \"0xA1\", \"0xB1\", \"0x1A\", \"0xE1\"], {\n    mime: \"application/vnd.ms-excel\",\n    extension: \"xls\",\n});\nadd(\"ppt\", [\"0xD0\", \"0xCF\", \"0x11\", \"0xE0\", \"0xA1\", \"0xB1\", \"0x1A\", \"0xE1\"], {\n    mime: \"application/vnd.ms-powerpoint\",\n    extension: \"ppt\",\n});\nadd(\"msg\", [\"0xD0\", \"0xCF\", \"0x11\", \"0xE0\", \"0xA1\", \"0xB1\", \"0x1A\", \"0xE1\"]);\nadd(\"dex\", [\"0x64\", \"0x65\", \"0x78\", \"0x0A\", \"0x30\", \"0x33\", \"0x35\", \"0x00\"]);\nadd(\"vmdk\", [\"0x4B\", \"0x44\", \"0x4D\"]);\nadd(\"crx\", [\"0x43\", \"0x72\", \"0x32\", \"0x34\"]);\nadd(\"fh8\", [\"0x41\", \"0x47\", \"0x44\", \"0x33\"]);\nadd(\"cwk\", [\n    \"0x05\",\n    \"0x07\",\n    \"0x00\",\n    \"0x00\",\n    \"0x42\",\n    \"0x4F\",\n    \"0x42\",\n    \"0x4F\",\n    \"0x05\",\n    \"0x07\",\n    \"0x00\",\n    \"0x00\",\n    \"0x00\",\n    \"0x00\",\n    \"0x00\",\n    \"0x00\",\n    \"0x00\",\n    \"0x00\",\n    \"0x00\",\n    \"0x00\",\n    \"0x00\",\n    \"0x01\",\n]);\nadd(\"cwk\", [\n    \"0x06\",\n    \"0x07\",\n    \"0xE1\",\n    \"0x00\",\n    \"0x42\",\n    \"0x4F\",\n    \"0x42\",\n    \"0x4F\",\n    \"0x06\",\n    \"0x07\",\n    \"0xE1\",\n    \"0x00\",\n    \"0x00\",\n    \"0x00\",\n    \"0x00\",\n    \"0x00\",\n    \"0x00\",\n    \"0x00\",\n    \"0x00\",\n    \"0x00\",\n    \"0x00\",\n    \"0x01\",\n]);\nadd(\"toast\", [\"0x45\", \"0x52\", \"0x02\", \"0x00\", \"0x00\", \"0x00\"]);\nadd(\"toast\", [\"0x8B\", \"0x45\", \"0x52\", \"0x02\", \"0x00\", \"0x00\", \"0x00\"]);\nadd(\"dmg\", [\"0x78\", \"0x01\", \"0x73\", \"0x0D\", \"0x62\", \"0x62\", \"0x60\"]);\nadd(\"xar\", [\"0x78\", \"0x61\", \"0x72\", \"0x21\"]);\nadd(\"dat\", [\"0x50\", \"0x4D\", \"0x4F\", \"0x43\", \"0x43\", \"0x4D\", \"0x4F\", \"0x43\"]);\nadd(\"nes\", [\"0x4E\", \"0x45\", \"0x53\", \"0x1A\"]);\nadd(\"tar\", [\"0x75\", \"0x73\", \"0x74\", \"0x61\", \"0x72\", \"0x00\", \"0x30\", \"0x30\"], {\n    // As per Mozilla documentation available at:\n    // https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types/Common_types\n    // or wikipedia page:\n    // https://en.wikipedia.org/wiki/List_of_archive_formats\n    mime: \"application/x-tar\",\n    extension: \"tar\"\n}, 0x101);\nadd(\"tar\", [\"0x75\", \"0x73\", \"0x74\", \"0x61\", \"0x72\", \"0x20\", \"0x20\", \"0x00\"], {\n    mime: \"application/x-tar\",\n    extension: \"tar\"\n}, 0x101);\nadd(\"tox\", [\"0x74\", \"0x6F\", \"0x78\", \"0x33\"]);\nadd(\"mlv\", [\"0x4D\", \"0x4C\", \"0x56\", \"0x49\"]);\nadd(\"windowsupdate\", [\n    \"0x44\",\n    \"0x43\",\n    \"0x4D\",\n    \"0x01\",\n    \"0x50\",\n    \"0x41\",\n    \"0x33\",\n    \"0x30\",\n]);\nadd(\"7z\", [\"0x37\", \"0x7A\", \"0xBC\", \"0xAF\", \"0x27\", \"0x1C\"], {\n    mime: \"application/x-7z-compressed\",\n    extension: \"7z\",\n});\nadd(\"gz\", [\"0x1F\", \"0x8B\"], { mime: \"application/gzip\", extension: \"gz\" });\nadd(\"tar.gz\", [\"0x1F\", \"0x8B\"], {\n    mime: \"application/gzip\",\n    extension: \"tar.gz\",\n});\nadd(\"xz\", [\"0xFD\", \"0x37\", \"0x7A\", \"0x58\", \"0x5A\", \"0x00\", \"0x00\"], {\n    mime: \"application/gzip\",\n    extension: \"xz\",\n});\nadd(\"tar.xz\", [\"0xFD\", \"0x37\", \"0x7A\", \"0x58\", \"0x5A\", \"0x00\", \"0x00\"], {\n    mime: \"application/gzip\",\n    extension: \"tar.xz\",\n});\nadd(\"lz2\", [\"0x04\", \"0x22\", \"0x4D\", \"0x18\"]);\nadd(\"cab\", [\"0x4D\", \"0x53\", \"0x43\", \"0x46\"]);\nadd(\"mkv\", [\"0x1A\", \"0x45\", \"0xDF\", \"0xA3\"], {\n    mime: \"video/x-matroska\",\n    extension: \"mkv\",\n});\nadd(\"mka\", [\"0x1A\", \"0x45\", \"0xDF\", \"0xA3\"], {\n    mime: \"audio/x-matroska\",\n    extension: \"mka\",\n});\nadd(\"mks\", [\"0x1A\", \"0x45\", \"0xDF\", \"0xA3\"], {\n    mime: \"video/x-matroska\",\n    extension: \"mks\",\n});\nadd(\"mk3d\", [\"0x1A\", \"0x45\", \"0xDF\", \"0xA3\"]);\nadd(\"webm\", [\"0x1A\", \"0x45\", \"0xDF\", \"0xA3\"], {\n    mime: \"audio/webm\",\n    extension: \"webm\",\n});\nadd(\"dcm\", [\"0x44\", \"0x49\", \"0x43\", \"0x4D\"], undefined, 0x80);\nadd(\"xml\", [\"0x3C\", \"0x3f\", \"0x78\", \"0x6d\", \"0x6C\", \"0x20\"], {\n    mime: \"application/xml\",\n    extension: \"xml\",\n});\nadd(\"wasm\", [\"0x00\", \"0x61\", \"0x73\", \"0x6d\"], {\n    mime: \"application/wasm\",\n    extension: \"wasm\",\n});\nadd(\"lep\", [\"0xCF\", \"0x84\", \"0x01\"]);\nadd(\"swf\", [\"0x43\", \"0x57\", \"0x53\"], {\n    mime: \"application/x-shockwave-flash\",\n    extension: \"swf\",\n});\nadd(\"swf\", [\"0x46\", \"0x57\", \"0x53\"], {\n    mime: \"application/x-shockwave-flash\",\n    extension: \"swf\",\n});\nadd(\"deb\", [\"0x21\", \"0x3C\", \"0x61\", \"0x72\", \"0x63\", \"0x68\", \"0x3E\"]);\nadd(\"rtf\", [\"0x7B\", \"0x5C\", \"0x72\", \"0x74\", \"0x66\", \"0x31\"], {\n    mime: \"application/rtf\",\n    extension: \"rtf\",\n});\nadd(\"m2p\", [\"0x00\", \"0x00\", \"0x01\", \"0xBA\"]);\nadd(\"vob\", [\"0x00\", \"0x00\", \"0x01\", \"0xBA\"]);\nadd(\"mpg\", [\"0x00\", \"0x00\", \"0x01\", \"0xBA\"], {\n    mime: \"video/mpeg\",\n    extension: \"mpg\",\n});\nadd(\"mpeg\", [\"0x00\", \"0x00\", \"0x01\", \"0xBA\"], {\n    mime: \"video/mpeg\",\n    extension: \"mpeg\",\n});\nadd(\"mpeg\", [\"0x47\"], { mime: \"video/mpeg\", extension: \"mpeg\" });\nadd(\"mpeg\", [\"0x00\", \"0x00\", \"0x01\", \"0xB3\"], {\n    mime: \"video/mpeg\",\n    extension: \"mpeg\",\n});\n// mov 'free' TODO: find test file\nadd(\"mov\", [\"0x66\", \"0x72\", \"0x65\", \"0x65\"], {\n    mime: \"video/quicktime\",\n    extension: \"mov\",\n}, 0x4);\n// mov 'mdat'\nadd(\"mov\", [\"0x6D\", \"0x64\", \"0x61\", \"0x74\"], {\n    mime: \"video/quicktime\",\n    extension: \"mov\",\n}, 0x4);\n// mov 'moov' TODO: find test file\nadd(\"mov\", [\"0x6D\", \"0x6F\", \"0x6F\", \"0x76\"], {\n    mime: \"video/quicktime\",\n    extension: \"mov\",\n}, 0x4);\n// move 'wide' TODO: find test file\nadd(\"mov\", [\"0x77\", \"0x69\", \"0x64\", \"0x65\"], {\n    mime: \"video/quicktime\",\n    extension: \"mov\",\n}, 0x4);\n// mov 'ftypqt'\nadd(\"mov\", [\"0x66\", \"0x74\", \"0x79\", \"0x70\", \"0x71\", \"0x74\"], {\n    mime: \"video/quicktime\",\n    extension: \"mov\",\n}, 0x4);\nadd(\"hl2demo\", [\"0x48\", \"0x4C\", \"0x32\", \"0x44\", \"0x45\", \"0x4D\", \"0x4F\"]);\nadd(\"txt\", [\"0xEF\", \"0xBB\", \"0xBF\"], {\n    mime: \"text/plain; charset=UTF-8\",\n    extension: \"txt\",\n});\nadd(\"txt\", [\"0xFF\", \"0xFE\"], {\n    mime: \"text/plain; charset=UTF-16LE\",\n    extension: \"txt\",\n});\nadd(\"txt\", [\"0xFE\", \"0xFF\"], {\n    mime: \"text/plain; charset=UTF-16BE\",\n    extension: \"txt\",\n});\nadd(\"txt\", [\"0xFF\", \"0xFE\", \"0x00\", \"0x00\"], {\n    mime: \"text/plain; charset=UTF-32LE\",\n    extension: \"txt\",\n});\nadd(\"txt\", [\"0x00\", \"0x00\", \"0xFE\", \"0xFF\"], {\n    mime: \"text/plain; charset=UTF-32BE\",\n    extension: \"txt\",\n});\nadd(\"SubRip\", [\"0x31\", \"0x0D\", \"0x0A\", \"0x30\", \"0x30\", \"0x3A\"], {\n    mime: \"application/x-subrip\",\n    extension: \"srt\",\n});\nadd(\"WebVTT\", [\n    \"0xEF\",\n    \"0xBB\",\n    \"0xBF\",\n    \"0x57\",\n    \"0x45\",\n    \"0x42\",\n    \"0x56\",\n    \"0x54\",\n    \"0x54\",\n    \"0x0A\",\n], {\n    mime: \"text/vtt\",\n    extension: \"vtt\",\n});\nadd(\"WebVTT\", [\n    \"0xEF\",\n    \"0xBB\",\n    \"0xBF\",\n    \"0x57\",\n    \"0x45\",\n    \"0x42\",\n    \"0x56\",\n    \"0x54\",\n    \"0x54\",\n    \"0x0D\",\n], {\n    mime: \"text/vtt\",\n    extension: \"vtt\",\n});\nadd(\"WebVTT\", [\n    \"0xEF\",\n    \"0xBB\",\n    \"0xBF\",\n    \"0x57\",\n    \"0x45\",\n    \"0x42\",\n    \"0x56\",\n    \"0x54\",\n    \"0x54\",\n    \"0x20\",\n], {\n    mime: \"text/vtt\",\n    extension: \"vtt\",\n});\nadd(\"WebVTT\", [\n    \"0xEF\",\n    \"0xBB\",\n    \"0xBF\",\n    \"0x57\",\n    \"0x45\",\n    \"0x42\",\n    \"0x56\",\n    \"0x54\",\n    \"0x54\",\n    \"0x09\",\n], {\n    mime: \"text/vtt\",\n    extension: \"vtt\",\n});\nadd(\"WebVTT\", [\"0x57\", \"0x45\", \"0x42\", \"0x56\", \"0x54\", \"0x54\", \"0x0A\"], {\n    mime: \"text/vtt\",\n    extension: \"vtt\",\n});\nadd(\"WebVTT\", [\"0x57\", \"0x45\", \"0x42\", \"0x56\", \"0x54\", \"0x54\", \"0x0D\"], {\n    mime: \"text/vtt\",\n    extension: \"vtt\",\n});\nadd(\"WebVTT\", [\"0x57\", \"0x45\", \"0x42\", \"0x56\", \"0x54\", \"0x54\", \"0x20\"], {\n    mime: \"text/vtt\",\n    extension: \"vtt\",\n});\nadd(\"WebVTT\", [\"0x57\", \"0x45\", \"0x42\", \"0x56\", \"0x54\", \"0x54\", \"0x09\"], {\n    mime: \"text/vtt\",\n    extension: \"vtt\",\n});\nadd(\"Json\", [\"0x7B\"], {\n    mime: \"application/json\",\n    extension: \".json\",\n});\nadd(\"Json\", [\"0x5B\"], {\n    mime: \"application/json\",\n    extension: \".json\",\n});\nadd(\"ELF\", [\"0x7F\", \"0x45\", \"0x4C\", \"0x46\"], {\n    mime: \"application/x-executable\",\n    extension: \".elf\",\n});\nadd(\"Mach-O\", [\"0xFE\", \"0xED\", \"0xFA\", \"0xC\"], {\n    mime: \"application/x-mach-binary\",\n    extension: \".o\",\n});\nadd(\"Mach-O\", [\"0xFE\", \"0xED\", \"0xFA\", \"0xCF\"], {\n    mime: \"application/x-executable\",\n    extension: \"elf\",\n});\nadd(\"EML\", [\"0x52\", \"0x65\", \"0x63\", \"0x65\", \"0x69\", \"0x76\", \"0x65\", \"0x64\", \"0x3A\"], {\n    mime: \"message/rfc822\",\n    extension: \".eml\",\n});\nadd(\"SVG\", [\"0x3c\", \"0x73\", \"0x76\", \"0x67\"], {\n    mime: \"image/svg+xml\",\n    extension: \"svg\",\n});\nexports.default = () => tree;\n", "\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.filetypeextension = exports.filetypemime = exports.filetypename = exports.filetypeinfo = void 0;\nconst pattern_tree_1 = __importDefault(require(\"./model/pattern-tree\"));\nconst toHex_1 = require(\"./model/toHex\");\nconst patternTree = pattern_tree_1.default();\nconst filetypeinfo = (bytes) => {\n    let tree = patternTree;\n    for (const k of Object.keys(tree.offset)) {\n        const offset = toHex_1.fromHex(k);\n        const offsetExceedsFile = offset >= bytes.length;\n        if (offsetExceedsFile) {\n            continue;\n        }\n        const node = patternTree.offset[k];\n        const guessed = walkTree(offset, bytes, node);\n        if (guessed.length > 0) {\n            return guessed;\n        }\n    }\n    if (tree.noOffset === null) {\n        return [];\n    }\n    return walkTree(0, bytes, tree.noOffset);\n};\nexports.filetypeinfo = filetypeinfo;\nconst walkTree = (index, bytes, node) => {\n    let step = node;\n    let guessFile = [];\n    while (true) {\n        const currentByte = toHex_1.toHex(bytes[index]);\n        if (step.bytes[\"?\"] && !step.bytes[currentByte]) {\n            step = step.bytes[\"?\"];\n        }\n        else {\n            step = step.bytes[currentByte];\n        }\n        if (!step) {\n            return guessFile;\n        }\n        if (step && step.matches) {\n            guessFile = step.matches.slice(0);\n        }\n        index += 1;\n    }\n};\nexports.default = exports.filetypeinfo;\nconst filetypename = (bytes) => exports.filetypeinfo(bytes).map((e) => e.typename);\nexports.filetypename = filetypename;\nconst filetypemime = (bytes) => exports.filetypeinfo(bytes)\n    .map((e) => (e.mime ? e.mime : null))\n    .filter((x) => x !== null);\nexports.filetypemime = filetypemime;\nconst filetypeextension = (bytes) => exports.filetypeinfo(bytes)\n    .map((e) => (e.extension ? e.extension : null))\n    .filter((x) => x !== null);\nexports.filetypeextension = filetypeextension;\n", "import { setDefaultStrategy } from './environment.js';\n\nsetDefaultStrategy(fetch);\n\nexport * from './shared.js';\n", "import type { RESTOptions } from './shared.js';\n\nlet defaultStrategy: RESTOptions['makeRequest'];\n\nexport function setDefaultStrategy(newStrategy: RESTOptions['makeRequest']) {\n\tdefaultStrategy = newStrategy;\n}\n\nexport function getDefaultStrategy() {\n\treturn defaultStrategy;\n}\n", "import { getUserAgentAppendix } from '@discordjs/util';\nimport { APIVersion } from 'discord-api-types/v10';\nimport { getDefaultStrategy } from '../../environment.js';\nimport type { RESTOptions, ResponseLike } from './types.js';\n\nexport const DefaultUserAgent =\n\t`DiscordBot (https://discord.js.org, 2.4.0)` as `DiscordBot (https://discord.js.org, ${string})`;\n\n/**\n * The default string to append onto the user agent.\n */\nexport const DefaultUserAgentAppendix = getUserAgentAppendix();\n\nexport const DefaultRestOptions = {\n\tagent: null,\n\tapi: 'https://discord.com/api',\n\tauthPrefix: 'Bot',\n\tcdn: 'https://cdn.discordapp.com',\n\theaders: {},\n\tinvalidRequestWarningInterval: 0,\n\tglobalRequestsPerSecond: 50,\n\toffset: 50,\n\trejectOnRateLimit: null,\n\tretries: 3,\n\ttimeout: 15_000,\n\tuserAgentAppendix: DefaultUserAgentAppendix,\n\tversion: APIVersion,\n\thashSweepInterval: 14_400_000, // 4 Hours\n\thashLifetime: 86_400_000, // 24 Hours\n\thandlerSweepInterval: 3_600_000, // 1 Hour\n\tasync makeRequest(...args): Promise<ResponseLike> {\n\t\treturn getDefaultStrategy()(...args);\n\t},\n\tmediaProxy: 'https://media.discordapp.net',\n} as const satisfies Required<RESTOptions>;\n\n/**\n * The events that the REST manager emits\n */\nexport enum RESTEvents {\n\tDebug = 'restDebug',\n\tHandlerSweep = 'handlerSweep',\n\tHashSweep = 'hashSweep',\n\tInvalidRequestWarning = 'invalidRequestWarning',\n\tRateLimited = 'rateLimited',\n\tResponse = 'response',\n}\n\nexport const ALLOWED_EXTENSIONS = ['webp', 'png', 'jpg', 'jpeg', 'gif'] as const satisfies readonly string[];\nexport const ALLOWED_STICKER_EXTENSIONS = ['png', 'json', 'gif'] as const satisfies readonly string[];\nexport const ALLOWED_SIZES = [16, 32, 64, 128, 256, 512, 1_024, 2_048, 4_096] as const satisfies readonly number[];\n\nexport type ImageExtension = (typeof ALLOWED_EXTENSIONS)[number];\nexport type StickerExtension = (typeof ALLOWED_STICKER_EXTENSIONS)[number];\nexport type ImageSize = (typeof ALLOWED_SIZES)[number];\n\nexport const OverwrittenMimeTypes = {\n\t// https://github.com/discordjs/discord.js/issues/8557\n\t'image/apng': 'image/png',\n} as const satisfies Readonly<Record<string, string>>;\n\nexport const BurstHandlerMajorIdKey = 'burst';\n\n/**\n * Prefix for deprecation warnings.\n *\n * @internal\n */\nexport const DEPRECATION_WARNING_PREFIX = 'DeprecationWarning' as const;\n", "import type { RateLimitData } from '../utils/types.js';\n\nexport class RateLimitError extends Error implements RateLimitData {\n\tpublic timeToReset: number;\n\n\tpublic limit: number;\n\n\tpublic method: string;\n\n\tpublic hash: string;\n\n\tpublic url: string;\n\n\tpublic route: string;\n\n\tpublic majorParameter: string;\n\n\tpublic global: boolean;\n\n\tpublic retryAfter: number;\n\n\tpublic sublimitTimeout: number;\n\n\tpublic scope: RateLimitData['scope'];\n\n\tpublic constructor({\n\t\ttimeToReset,\n\t\tlimit,\n\t\tmethod,\n\t\thash,\n\t\turl,\n\t\troute,\n\t\tmajorParameter,\n\t\tglobal,\n\t\tretryAfter,\n\t\tsublimitTimeout,\n\t\tscope,\n\t}: RateLimitData) {\n\t\tsuper();\n\t\tthis.timeToReset = timeToReset;\n\t\tthis.limit = limit;\n\t\tthis.method = method;\n\t\tthis.hash = hash;\n\t\tthis.url = url;\n\t\tthis.route = route;\n\t\tthis.majorParameter = majorParameter;\n\t\tthis.global = global;\n\t\tthis.retryAfter = retryAfter;\n\t\tthis.sublimitTimeout = sublimitTimeout;\n\t\tthis.scope = scope;\n\t}\n\n\t/**\n\t * The name of the error\n\t */\n\tpublic override get name(): string {\n\t\treturn `${RateLimitError.name}[${this.route}]`;\n\t}\n}\n", "import type { Readable } from 'node:stream';\nimport type { ReadableStream } from 'node:stream/web';\nimport type { Collection } from '@discordjs/collection';\nimport type { Awaitable } from '@discordjs/util';\nimport type { Agent, Dispatcher, RequestInit, BodyInit, Response } from 'undici';\nimport type { IHandler } from '../interfaces/Handler.js';\n\nexport interface RestEvents {\n\thandlerSweep: [sweptHandlers: Collection<string, IHandler>];\n\thashSweep: [sweptHashes: Collection<string, HashData>];\n\tinvalidRequestWarning: [invalidRequestInfo: InvalidRequestWarningData];\n\trateLimited: [rateLimitInfo: RateLimitData];\n\tresponse: [request: APIRequest, response: ResponseLike];\n\trestDebug: [info: string];\n}\n\nexport interface RestEventsMap extends RestEvents {}\n\n/**\n * Options to be passed when creating the REST instance\n */\nexport interface RESTOptions {\n\t/**\n\t * The agent to set globally\n\t */\n\tagent: Dispatcher | null;\n\t/**\n\t * The base api path, without version\n\t *\n\t * @defaultValue `'https://discord.com/api'`\n\t */\n\tapi: string;\n\t/**\n\t * The authorization prefix to use for requests, useful if you want to use\n\t * bearer tokens\n\t *\n\t * @defaultValue `'Bot'`\n\t */\n\tauthPrefix: 'Bearer' | 'Bot';\n\t/**\n\t * The cdn path\n\t *\n\t * @defaultValue `'https://cdn.discordapp.com'`\n\t */\n\tcdn: string;\n\t/**\n\t * How many requests to allow sending per second (Infinity for unlimited, 50 for the standard global limit used by Discord)\n\t *\n\t * @defaultValue `50`\n\t */\n\tglobalRequestsPerSecond: number;\n\t/**\n\t * The amount of time in milliseconds that passes between each hash sweep. (defaults to 1h)\n\t *\n\t * @defaultValue `3_600_000`\n\t */\n\thandlerSweepInterval: number;\n\t/**\n\t * The maximum amount of time a hash can exist in milliseconds without being hit with a request (defaults to 24h)\n\t *\n\t * @defaultValue `86_400_000`\n\t */\n\thashLifetime: number;\n\t/**\n\t * The amount of time in milliseconds that passes between each hash sweep. (defaults to 4h)\n\t *\n\t * @defaultValue `14_400_000`\n\t */\n\thashSweepInterval: number;\n\t/**\n\t * Additional headers to send for all API requests\n\t *\n\t * @defaultValue `{}`\n\t */\n\theaders: Record<string, string>;\n\t/**\n\t * The number of invalid REST requests (those that return 401, 403, or 429) in a 10 minute window between emitted warnings (0 for no warnings).\n\t * That is, if set to 500, warnings will be emitted at invalid request number 500, 1000, 1500, and so on.\n\t *\n\t * @defaultValue `0`\n\t */\n\tinvalidRequestWarningInterval: number;\n\t/**\n\t * The method called to perform the actual HTTP request given a url and web `fetch` options\n\t * For example, to use global fetch, simply provide `makeRequest: fetch`\n\t */\n\tmakeRequest(url: string, init: RequestInit): Promise<ResponseLike>;\n\t/**\n\t * The media proxy path\n\t *\n\t * @defaultValue `'https://media.discordapp.net'`\n\t */\n\tmediaProxy: string;\n\t/**\n\t * The extra offset to add to rate limits in milliseconds\n\t *\n\t * @defaultValue `50`\n\t */\n\toffset: GetRateLimitOffsetFunction | number;\n\t/**\n\t * Determines how rate limiting and pre-emptive throttling should be handled.\n\t * When an array of strings, each element is treated as a prefix for the request route\n\t * (e.g. `/channels` to match any route starting with `/channels` such as `/channels/:id/messages`)\n\t * for which to throw {@link RateLimitError}s. All other request routes will be queued normally\n\t *\n\t * @defaultValue `null`\n\t */\n\trejectOnRateLimit: RateLimitQueueFilter | string[] | null;\n\t/**\n\t * The number of retries for errors with the 500 code, or errors\n\t * that timeout\n\t *\n\t * @defaultValue `3`\n\t */\n\tretries: number;\n\t/**\n\t * The time to wait in milliseconds before a request is aborted\n\t *\n\t * @defaultValue `15_000`\n\t */\n\ttimeout: number;\n\t/**\n\t * Extra information to add to the user agent\n\t *\n\t * @defaultValue DefaultUserAgentAppendix\n\t */\n\tuserAgentAppendix: string;\n\t/**\n\t * The version of the API to use\n\t *\n\t * @defaultValue `'10'`\n\t */\n\tversion: string;\n}\n\n/**\n * Data emitted on `RESTEvents.RateLimited`\n */\nexport interface RateLimitData {\n\t/**\n\t * Whether the rate limit that was reached was the global limit\n\t */\n\tglobal: boolean;\n\t/**\n\t * The bucket hash for this request\n\t */\n\thash: string;\n\t/**\n\t * The amount of requests we can perform before locking requests\n\t */\n\tlimit: number;\n\t/**\n\t * The major parameter of the route\n\t *\n\t * For example, in `/channels/x`, this will be `x`.\n\t * If there is no major parameter (e.g: `/bot/gateway`) this will be `global`.\n\t */\n\tmajorParameter: string;\n\t/**\n\t * The HTTP method being performed\n\t */\n\tmethod: string;\n\t/**\n\t * The time, in milliseconds, that will need to pass before this specific request can be retried\n\t */\n\tretryAfter: number;\n\t/**\n\t * The route being hit in this request\n\t */\n\troute: string;\n\t/**\n\t * The scope of the rate limit that was hit.\n\t *\n\t * This can be `user` for rate limits that are per client, `global` for rate limits that affect all clients or `shared` for rate limits that\n\t * are shared per resource.\n\t */\n\tscope: 'global' | 'shared' | 'user';\n\t/**\n\t * The time, in milliseconds, that will need to pass before the sublimit lock for the route resets, and requests that fall under a sublimit\n\t * can be retried\n\t *\n\t * This is only present on certain sublimits, and `0` otherwise\n\t */\n\tsublimitTimeout: number;\n\t/**\n\t * The time, in milliseconds, until the route's request-lock is reset\n\t */\n\ttimeToReset: number;\n\t/**\n\t * The full URL for this request\n\t */\n\turl: string;\n}\n\n/**\n * A function that determines whether the rate limit hit should throw an Error\n */\nexport type RateLimitQueueFilter = (rateLimitData: RateLimitData) => Awaitable<boolean>;\n\n/**\n * A function that determines the rate limit offset for a given request.\n */\nexport type GetRateLimitOffsetFunction = (route: string) => number;\n\nexport interface APIRequest {\n\t/**\n\t * The data that was used to form the body of this request\n\t */\n\tdata: HandlerRequestData;\n\t/**\n\t * The HTTP method used in this request\n\t */\n\tmethod: string;\n\t/**\n\t * Additional HTTP options for this request\n\t */\n\toptions: RequestInit;\n\t/**\n\t * The full path used to make the request\n\t */\n\tpath: RouteLike;\n\t/**\n\t * The number of times this request has been attempted\n\t */\n\tretries: number;\n\t/**\n\t * The API route identifying the ratelimit for this request\n\t */\n\troute: string;\n}\n\nexport interface ResponseLike\n\textends Pick<Response, 'arrayBuffer' | 'bodyUsed' | 'headers' | 'json' | 'ok' | 'status' | 'statusText' | 'text'> {\n\tbody: Readable | ReadableStream | null;\n}\n\nexport interface InvalidRequestWarningData {\n\t/**\n\t * Number of invalid requests that have been made in the window\n\t */\n\tcount: number;\n\t/**\n\t * Time in milliseconds remaining before the count resets\n\t */\n\tremainingTime: number;\n}\n\n/**\n * Represents a file to be added to the request\n */\nexport interface RawFile {\n\t/**\n\t * Content-Type of the file\n\t */\n\tcontentType?: string;\n\t/**\n\t * The actual data for the file\n\t */\n\tdata: Buffer | Uint8Array | boolean | number | string;\n\t/**\n\t * An explicit key to use for key of the formdata field for this file.\n\t * When not provided, the index of the file in the files array is used in the form `files[${index}]`.\n\t * If you wish to alter the placeholder snowflake, you must provide this property in the same form (`files[${placeholder}]`)\n\t */\n\tkey?: string;\n\t/**\n\t * The name of the file\n\t */\n\tname: string;\n}\n\n/**\n * Represents possible data to be given to an endpoint\n */\nexport interface RequestData {\n\t/**\n\t * Whether to append JSON data to form data instead of `payload_json` when sending files\n\t */\n\tappendToFormData?: boolean;\n\t/**\n\t * If this request needs the `Authorization` header\n\t *\n\t * @defaultValue `true`\n\t */\n\tauth?: boolean;\n\t/**\n\t * The authorization prefix to use for this request, useful if you use this with bearer tokens\n\t *\n\t * @defaultValue `'Bot'`\n\t */\n\tauthPrefix?: 'Bearer' | 'Bot';\n\t/**\n\t * The body to send to this request.\n\t * If providing as BodyInit, set `passThroughBody: true`\n\t */\n\tbody?: BodyInit | unknown;\n\t/**\n\t * The {@link https://undici.nodejs.org/#/docs/api/Agent | Agent} to use for the request.\n\t */\n\tdispatcher?: Agent;\n\t/**\n\t * Files to be attached to this request\n\t */\n\tfiles?: RawFile[] | undefined;\n\t/**\n\t * Additional headers to add to this request\n\t */\n\theaders?: Record<string, string>;\n\t/**\n\t * Whether to pass-through the body property directly to `fetch()`.\n\t * <warn>This only applies when files is NOT present</warn>\n\t */\n\tpassThroughBody?: boolean;\n\t/**\n\t * Query string parameters to append to the called endpoint\n\t */\n\tquery?: URLSearchParams;\n\t/**\n\t * Reason to show in the audit logs\n\t */\n\treason?: string | undefined;\n\t/**\n\t * The signal to abort the queue entry or the REST call, where applicable\n\t */\n\tsignal?: AbortSignal | undefined;\n\t/**\n\t * If this request should be versioned\n\t *\n\t * @defaultValue `true`\n\t */\n\tversioned?: boolean;\n}\n\n/**\n * Possible headers for an API call\n */\nexport interface RequestHeaders {\n\tAuthorization?: string;\n\t'User-Agent': string;\n\t'X-Audit-Log-Reason'?: string;\n}\n\n/**\n * Possible API methods to be used when doing requests\n */\nexport enum RequestMethod {\n\tDelete = 'DELETE',\n\tGet = 'GET',\n\tPatch = 'PATCH',\n\tPost = 'POST',\n\tPut = 'PUT',\n}\n\nexport type RouteLike = `/${string}`;\n\n/**\n * Internal request options\n *\n * @internal\n */\nexport interface InternalRequest extends RequestData {\n\tfullRoute: RouteLike;\n\tmethod: RequestMethod;\n}\n\nexport type HandlerRequestData = Pick<InternalRequest, 'auth' | 'body' | 'files' | 'signal'>;\n\n/**\n * Parsed route data for an endpoint\n *\n * @internal\n */\nexport interface RouteData {\n\tbucketRoute: string;\n\tmajorParameter: string;\n\toriginal: RouteLike;\n}\n\n/**\n * Represents a hash and its associated fields\n *\n * @internal\n */\nexport interface HashData {\n\tlastAccess: number;\n\tvalue: string;\n}\n", "import type { RESTPatchAPIChannelJSONBody, Snowflake } from 'discord-api-types/v10';\nimport type { REST } from '../REST.js';\nimport { RateLimitError } from '../errors/RateLimitError.js';\nimport { DEPRECATION_WARNING_PREFIX } from './constants.js';\nimport { RequestMethod } from './types.js';\nimport type { GetRateLimitOffsetFunction, RateLimitData, ResponseLike } from './types.js';\n\nfunction serializeSearchParam(value: unknown): string | null {\n\tswitch (typeof value) {\n\t\tcase 'string':\n\t\t\treturn value;\n\t\tcase 'number':\n\t\tcase 'bigint':\n\t\tcase 'boolean':\n\t\t\treturn value.toString();\n\t\tcase 'object':\n\t\t\tif (value === null) return null;\n\t\t\tif (value instanceof Date) {\n\t\t\t\treturn Number.isNaN(value.getTime()) ? null : value.toISOString();\n\t\t\t}\n\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-base-to-string\n\t\t\tif (typeof value.toString === 'function' && value.toString !== Object.prototype.toString) return value.toString();\n\t\t\treturn null;\n\t\tdefault:\n\t\t\treturn null;\n\t}\n}\n\n/**\n * Creates and populates an URLSearchParams instance from an object, stripping\n * out null and undefined values, while also coercing non-strings to strings.\n *\n * @param options - The options to use\n * @returns A populated URLSearchParams instance\n */\nexport function makeURLSearchParams<OptionsType extends object>(options?: Readonly<OptionsType>) {\n\tconst params = new URLSearchParams();\n\tif (!options) return params;\n\n\tfor (const [key, value] of Object.entries(options)) {\n\t\tconst serialized = serializeSearchParam(value);\n\t\tif (serialized !== null) params.append(key, serialized);\n\t}\n\n\treturn params;\n}\n\n/**\n * Converts the response to usable data\n *\n * @param res - The fetch response\n */\nexport async function parseResponse(res: ResponseLike): Promise<unknown> {\n\tif (res.headers.get('Content-Type')?.startsWith('application/json')) {\n\t\treturn res.json();\n\t}\n\n\treturn res.arrayBuffer();\n}\n\n/**\n * Check whether a request falls under a sublimit\n *\n * @param bucketRoute - The buckets route identifier\n * @param body - The options provided as JSON data\n * @param method - The HTTP method that will be used to make the request\n * @returns Whether the request falls under a sublimit\n */\nexport function hasSublimit(bucketRoute: string, body?: unknown, method?: string): boolean {\n\t// TODO: Update for new sublimits\n\t// Currently known sublimits:\n\t// Editing channel `name` or `topic`\n\tif (bucketRoute === '/channels/:id') {\n\t\tif (typeof body !== 'object' || body === null) return false;\n\t\t// This should never be a POST body, but just in case\n\t\tif (method !== RequestMethod.Patch) return false;\n\t\tconst castedBody = body as RESTPatchAPIChannelJSONBody;\n\t\treturn ['name', 'topic'].some((key) => Reflect.has(castedBody, key));\n\t}\n\n\t// If we are checking if a request has a sublimit on a route not checked above, sublimit all requests to avoid a flood of 429s\n\treturn true;\n}\n\n/**\n * Check whether an error indicates that a retry can be attempted\n *\n * @param error - The error thrown by the network request\n * @returns Whether the error indicates a retry should be attempted\n */\nexport function shouldRetry(error: Error | NodeJS.ErrnoException) {\n\t// Retry for possible timed out requests\n\tif (error.name === 'AbortError') return true;\n\t// Downlevel ECONNRESET to retry as it may be recoverable\n\treturn ('code' in error && error.code === 'ECONNRESET') || error.message.includes('ECONNRESET');\n}\n\n/**\n * Determines whether the request should be queued or whether a RateLimitError should be thrown\n *\n * @internal\n */\nexport async function onRateLimit(manager: REST, rateLimitData: RateLimitData) {\n\tconst { options } = manager;\n\tif (!options.rejectOnRateLimit) return;\n\n\tconst shouldThrow =\n\t\ttypeof options.rejectOnRateLimit === 'function'\n\t\t\t? await options.rejectOnRateLimit(rateLimitData)\n\t\t\t: options.rejectOnRateLimit.some((route) => rateLimitData.route.startsWith(route.toLowerCase()));\n\tif (shouldThrow) {\n\t\tthrow new RateLimitError(rateLimitData);\n\t}\n}\n\n/**\n * Calculates the default avatar index for a given user id.\n *\n * @param userId - The user id to calculate the default avatar index for\n */\nexport function calculateUserDefaultAvatarIndex(userId: Snowflake) {\n\treturn Number(BigInt(userId) >> 22n) % 6;\n}\n\n/**\n * Sleeps for a given amount of time.\n *\n * @param ms - The amount of time (in milliseconds) to sleep for\n */\nexport async function sleep(ms: number): Promise<void> {\n\treturn new Promise<void>((resolve) => {\n\t\tsetTimeout(() => resolve(), ms);\n\t});\n}\n\n/**\n * Verifies that a value is a buffer-like object.\n *\n * @param value - The value to check\n */\nexport function isBufferLike(value: unknown): value is ArrayBuffer | Buffer | Uint8Array | Uint8ClampedArray {\n\treturn value instanceof ArrayBuffer || value instanceof Uint8Array || value instanceof Uint8ClampedArray;\n}\n\n/**\n * Irrespective environment warning.\n *\n * @remarks Only the message is needed. The deprecation prefix is handled already.\n * @param message - A string the warning will emit with\n * @internal\n */\nexport function deprecationWarning(message: string) {\n\tif (typeof globalThis.process === 'undefined') {\n\t\tconsole.warn(`${DEPRECATION_WARNING_PREFIX}: ${message}`);\n\t} else {\n\t\tprocess.emitWarning(message, DEPRECATION_WARNING_PREFIX);\n\t}\n}\n\n/**\n * Normalizes the offset for rate limits. Applies a Math.max(0, N) to prevent negative offsets,\n * also deals with callbacks.\n *\n * @internal\n */\nexport function normalizeRateLimitOffset(offset: GetRateLimitOffsetFunction | number, route: string): number {\n\tif (typeof offset === 'number') {\n\t\treturn Math.max(0, offset);\n\t}\n\n\tconst result = offset(route);\n\treturn Math.max(0, result);\n}\n", "/* eslint-disable jsdoc/check-param-names */\nimport {\n\tALLOWED_EXTENSIONS,\n\tALLOWED_SIZES,\n\tALLOWED_STICKER_EXTENSIONS,\n\tDefaultRestOptions,\n\ttype ImageExtension,\n\ttype ImageSize,\n\ttype StickerExtension,\n} from './utils/constants.js';\nimport { deprecationWarning } from './utils/utils.js';\n\nlet deprecationEmittedForEmoji = false;\n\n/**\n * The options used for image URLs\n */\nexport interface BaseImageURLOptions {\n\t/**\n\t * The extension to use for the image URL\n\t *\n\t * @defaultValue `'webp'`\n\t */\n\textension?: ImageExtension;\n\t/**\n\t * The size specified in the image URL\n\t */\n\tsize?: ImageSize;\n}\n\n/**\n * The options used for image URLs with animated content\n */\nexport interface ImageURLOptions extends BaseImageURLOptions {\n\t/**\n\t * Whether or not to prefer the static version of an image asset.\n\t */\n\tforceStatic?: boolean;\n}\n\n/**\n * The options to use when making a CDN URL\n */\nexport interface MakeURLOptions {\n\t/**\n\t * The allowed extensions that can be used\n\t */\n\tallowedExtensions?: readonly string[];\n\t/**\n\t * The base URL.\n\t *\n\t * @defaultValue `DefaultRestOptions.cdn`\n\t */\n\tbase?: string;\n\t/**\n\t * The extension to use for the image URL\n\t *\n\t * @defaultValue `'webp'`\n\t */\n\textension?: string | undefined;\n\t/**\n\t * The size specified in the image URL\n\t */\n\tsize?: ImageSize;\n}\n\n/**\n * The CDN link builder\n */\nexport class CDN {\n\tpublic constructor(\n\t\tprivate readonly cdn: string = DefaultRestOptions.cdn,\n\t\tprivate readonly mediaProxy: string = DefaultRestOptions.mediaProxy,\n\t) {}\n\n\t/**\n\t * Generates an app asset URL for a client's asset.\n\t *\n\t * @param clientId - The client id that has the asset\n\t * @param assetHash - The hash provided by Discord for this asset\n\t * @param options - Optional options for the asset\n\t */\n\tpublic appAsset(clientId: string, assetHash: string, options?: Readonly<BaseImageURLOptions>): string {\n\t\treturn this.makeURL(`/app-assets/${clientId}/${assetHash}`, options);\n\t}\n\n\t/**\n\t * Generates an app icon URL for a client's icon.\n\t *\n\t * @param clientId - The client id that has the icon\n\t * @param iconHash - The hash provided by Discord for this icon\n\t * @param options - Optional options for the icon\n\t */\n\tpublic appIcon(clientId: string, iconHash: string, options?: Readonly<BaseImageURLOptions>): string {\n\t\treturn this.makeURL(`/app-icons/${clientId}/${iconHash}`, options);\n\t}\n\n\t/**\n\t * Generates an avatar URL, e.g. for a user or a webhook.\n\t *\n\t * @param id - The id that has the icon\n\t * @param avatarHash - The hash provided by Discord for this avatar\n\t * @param options - Optional options for the avatar\n\t */\n\tpublic avatar(id: string, avatarHash: string, options?: Readonly<ImageURLOptions>): string {\n\t\treturn this.dynamicMakeURL(`/avatars/${id}/${avatarHash}`, avatarHash, options);\n\t}\n\n\t/**\n\t * Generates a user avatar decoration preset URL.\n\t *\n\t * @param asset - The avatar decoration hash\n\t */\n\tpublic avatarDecoration(asset: string): string;\n\n\t/**\n\t * Generates a user avatar decoration URL.\n\t *\n\t * @deprecated This overload is deprecated. Pass a hash instead.\n\t * @param userId - The id of the user\n\t * @param userAvatarDecoration - The hash provided by Discord for this avatar decoration\n\t * @param options - Optional options for the avatar decoration\n\t */\n\tpublic avatarDecoration(\n\t\tuserId: string,\n\t\tuserAvatarDecoration: string,\n\t\t// eslint-disable-next-line @typescript-eslint/unified-signatures\n\t\toptions?: Readonly<BaseImageURLOptions>,\n\t): string;\n\n\tpublic avatarDecoration(\n\t\tuserIdOrAsset: string,\n\t\tuserAvatarDecoration?: string,\n\t\toptions?: Readonly<BaseImageURLOptions>,\n\t): string {\n\t\tif (userAvatarDecoration) {\n\t\t\treturn this.makeURL(`/avatar-decorations/${userIdOrAsset}/${userAvatarDecoration}`, options);\n\t\t}\n\n\t\treturn this.makeURL(`/avatar-decoration-presets/${userIdOrAsset}`, { extension: 'png' });\n\t}\n\n\t/**\n\t * Generates a banner URL, e.g. for a user or a guild.\n\t *\n\t * @param id - The id that has the banner splash\n\t * @param bannerHash - The hash provided by Discord for this banner\n\t * @param options - Optional options for the banner\n\t */\n\tpublic banner(id: string, bannerHash: string, options?: Readonly<ImageURLOptions>): string {\n\t\treturn this.dynamicMakeURL(`/banners/${id}/${bannerHash}`, bannerHash, options);\n\t}\n\n\t/**\n\t * Generates an icon URL for a channel, e.g. a group DM.\n\t *\n\t * @param channelId - The channel id that has the icon\n\t * @param iconHash - The hash provided by Discord for this channel\n\t * @param options - Optional options for the icon\n\t */\n\tpublic channelIcon(channelId: string, iconHash: string, options?: Readonly<BaseImageURLOptions>): string {\n\t\treturn this.makeURL(`/channel-icons/${channelId}/${iconHash}`, options);\n\t}\n\n\t/**\n\t * Generates a default avatar URL\n\t *\n\t * @param index - The default avatar index\n\t * @remarks\n\t * To calculate the index for a user do `(userId >> 22) % 6`,\n\t * or `discriminator % 5` if they're using the legacy username system.\n\t */\n\tpublic defaultAvatar(index: number): string {\n\t\treturn this.makeURL(`/embed/avatars/${index}`, { extension: 'png' });\n\t}\n\n\t/**\n\t * Generates a discovery splash URL for a guild's discovery splash.\n\t *\n\t * @param guildId - The guild id that has the discovery splash\n\t * @param splashHash - The hash provided by Discord for this splash\n\t * @param options - Optional options for the splash\n\t */\n\tpublic discoverySplash(guildId: string, splashHash: string, options?: Readonly<BaseImageURLOptions>): string {\n\t\treturn this.makeURL(`/discovery-splashes/${guildId}/${splashHash}`, options);\n\t}\n\n\t/**\n\t * Generates an emoji's URL for an emoji.\n\t *\n\t * @param emojiId - The emoji id\n\t * @param options - Optional options for the emoji\n\t */\n\tpublic emoji(emojiId: string, options?: Readonly<BaseImageURLOptions>): string;\n\n\t/**\n\t * Generates an emoji's URL for an emoji.\n\t *\n\t * @param emojiId - The emoji id\n\t * @param extension - The extension of the emoji\n\t * @deprecated This overload is deprecated. Pass an object containing the extension instead.\n\t */\n\t// eslint-disable-next-line @typescript-eslint/unified-signatures\n\tpublic emoji(emojiId: string, extension?: ImageExtension): string;\n\n\tpublic emoji(emojiId: string, options?: ImageExtension | Readonly<BaseImageURLOptions>): string {\n\t\tlet resolvedOptions;\n\n\t\tif (typeof options === 'string') {\n\t\t\tif (!deprecationEmittedForEmoji) {\n\t\t\t\tdeprecationWarning(\n\t\t\t\t\t'Passing a string for the second parameter of CDN#emoji() is deprecated. Use an object instead.',\n\t\t\t\t);\n\n\t\t\t\tdeprecationEmittedForEmoji = true;\n\t\t\t}\n\n\t\t\tresolvedOptions = { extension: options };\n\t\t} else {\n\t\t\tresolvedOptions = options;\n\t\t}\n\n\t\treturn this.makeURL(`/emojis/${emojiId}`, resolvedOptions);\n\t}\n\n\t/**\n\t * Generates a guild member avatar URL.\n\t *\n\t * @param guildId - The id of the guild\n\t * @param userId - The id of the user\n\t * @param avatarHash - The hash provided by Discord for this avatar\n\t * @param options - Optional options for the avatar\n\t */\n\tpublic guildMemberAvatar(\n\t\tguildId: string,\n\t\tuserId: string,\n\t\tavatarHash: string,\n\t\toptions?: Readonly<ImageURLOptions>,\n\t): string {\n\t\treturn this.dynamicMakeURL(`/guilds/${guildId}/users/${userId}/avatars/${avatarHash}`, avatarHash, options);\n\t}\n\n\t/**\n\t * Generates a guild member banner URL.\n\t *\n\t * @param guildId - The id of the guild\n\t * @param userId - The id of the user\n\t * @param bannerHash - The hash provided by Discord for this banner\n\t * @param options - Optional options for the banner\n\t */\n\tpublic guildMemberBanner(\n\t\tguildId: string,\n\t\tuserId: string,\n\t\tbannerHash: string,\n\t\toptions?: Readonly<ImageURLOptions>,\n\t): string {\n\t\treturn this.dynamicMakeURL(`/guilds/${guildId}/users/${userId}/banner`, bannerHash, options);\n\t}\n\n\t/**\n\t * Generates an icon URL, e.g. for a guild.\n\t *\n\t * @param id - The id that has the icon splash\n\t * @param iconHash - The hash provided by Discord for this icon\n\t * @param options - Optional options for the icon\n\t */\n\tpublic icon(id: string, iconHash: string, options?: Readonly<ImageURLOptions>): string {\n\t\treturn this.dynamicMakeURL(`/icons/${id}/${iconHash}`, iconHash, options);\n\t}\n\n\t/**\n\t * Generates a URL for the icon of a role\n\t *\n\t * @param roleId - The id of the role that has the icon\n\t * @param roleIconHash - The hash provided by Discord for this role icon\n\t * @param options - Optional options for the role icon\n\t */\n\tpublic roleIcon(roleId: string, roleIconHash: string, options?: Readonly<BaseImageURLOptions>): string {\n\t\treturn this.makeURL(`/role-icons/${roleId}/${roleIconHash}`, options);\n\t}\n\n\t/**\n\t * Generates a guild invite splash URL for a guild's invite splash.\n\t *\n\t * @param guildId - The guild id that has the invite splash\n\t * @param splashHash - The hash provided by Discord for this splash\n\t * @param options - Optional options for the splash\n\t */\n\tpublic splash(guildId: string, splashHash: string, options?: Readonly<BaseImageURLOptions>): string {\n\t\treturn this.makeURL(`/splashes/${guildId}/${splashHash}`, options);\n\t}\n\n\t/**\n\t * Generates a sticker URL.\n\t *\n\t * @param stickerId - The sticker id\n\t * @param extension - The extension of the sticker\n\t * @privateRemarks\n\t * Stickers cannot have a `.webp` extension, so we default to a `.png`.\n\t * Sticker GIFs do not use the CDN base URL.\n\t */\n\tpublic sticker(stickerId: string, extension: StickerExtension = 'png'): string {\n\t\treturn this.makeURL(`/stickers/${stickerId}`, {\n\t\t\tallowedExtensions: ALLOWED_STICKER_EXTENSIONS,\n\t\t\tbase: extension === 'gif' ? this.mediaProxy : this.cdn,\n\t\t\textension,\n\t\t});\n\t}\n\n\t/**\n\t * Generates a sticker pack banner URL.\n\t *\n\t * @param bannerId - The banner id\n\t * @param options - Optional options for the banner\n\t */\n\tpublic stickerPackBanner(bannerId: string, options?: Readonly<BaseImageURLOptions>): string {\n\t\treturn this.makeURL(`/app-assets/710982414301790216/store/${bannerId}`, options);\n\t}\n\n\t/**\n\t * Generates a team icon URL for a team's icon.\n\t *\n\t * @param teamId - The team id that has the icon\n\t * @param iconHash - The hash provided by Discord for this icon\n\t * @param options - Optional options for the icon\n\t */\n\tpublic teamIcon(teamId: string, iconHash: string, options?: Readonly<BaseImageURLOptions>): string {\n\t\treturn this.makeURL(`/team-icons/${teamId}/${iconHash}`, options);\n\t}\n\n\t/**\n\t * Generates a cover image for a guild scheduled event.\n\t *\n\t * @param scheduledEventId - The scheduled event id\n\t * @param coverHash - The hash provided by discord for this cover image\n\t * @param options - Optional options for the cover image\n\t */\n\tpublic guildScheduledEventCover(\n\t\tscheduledEventId: string,\n\t\tcoverHash: string,\n\t\toptions?: Readonly<BaseImageURLOptions>,\n\t): string {\n\t\treturn this.makeURL(`/guild-events/${scheduledEventId}/${coverHash}`, options);\n\t}\n\n\t/**\n\t * Constructs the URL for the resource, checking whether or not `hash` starts with `a_` if `dynamic` is set to `true`.\n\t *\n\t * @param route - The base cdn route\n\t * @param hash - The hash provided by Discord for this icon\n\t * @param options - Optional options for the link\n\t */\n\tprivate dynamicMakeURL(\n\t\troute: string,\n\t\thash: string,\n\t\t{ forceStatic = false, ...options }: Readonly<ImageURLOptions> = {},\n\t): string {\n\t\treturn this.makeURL(route, !forceStatic && hash.startsWith('a_') ? { ...options, extension: 'gif' } : options);\n\t}\n\n\t/**\n\t * Constructs the URL for the resource\n\t *\n\t * @param route - The base cdn route\n\t * @param options - The extension/size options for the link\n\t */\n\tprivate makeURL(\n\t\troute: string,\n\t\t{\n\t\t\tallowedExtensions = ALLOWED_EXTENSIONS,\n\t\t\tbase = this.cdn,\n\t\t\textension = 'webp',\n\t\t\tsize,\n\t\t}: Readonly<MakeURLOptions> = {},\n\t): string {\n\t\t// eslint-disable-next-line no-param-reassign\n\t\textension = String(extension).toLowerCase();\n\n\t\tif (!allowedExtensions.includes(extension)) {\n\t\t\tthrow new RangeError(`Invalid extension provided: ${extension}\\nMust be one of: ${allowedExtensions.join(', ')}`);\n\t\t}\n\n\t\tif (size && !ALLOWED_SIZES.includes(size)) {\n\t\t\tthrow new RangeError(`Invalid size provided: ${size}\\nMust be one of: ${ALLOWED_SIZES.join(', ')}`);\n\t\t}\n\n\t\tconst url = new URL(`${base}${route}.${extension}`);\n\n\t\tif (size) {\n\t\t\turl.searchParams.set('size', String(size));\n\t\t}\n\n\t\treturn url.toString();\n\t}\n}\n", "import type { InternalRequest, RawFile } from '../utils/types.js';\n\ninterface DiscordErrorFieldInformation {\n\tcode: string;\n\tmessage: string;\n}\n\ninterface DiscordErrorGroupWrapper {\n\t_errors: DiscordError[];\n}\n\ntype DiscordError = DiscordErrorFieldInformation | DiscordErrorGroupWrapper | string | { [k: string]: DiscordError };\n\nexport interface DiscordErrorData {\n\tcode: number;\n\terrors?: DiscordError;\n\tmessage: string;\n}\n\nexport interface OAuthErrorData {\n\terror: string;\n\terror_description?: string;\n}\n\nexport interface RequestBody {\n\tfiles: RawFile[] | undefined;\n\tjson: unknown | undefined;\n}\n\nfunction isErrorGroupWrapper(error: DiscordError): error is DiscordErrorGroupWrapper {\n\treturn Reflect.has(error as Record<string, unknown>, '_errors');\n}\n\nfunction isErrorResponse(error: DiscordError): error is DiscordErrorFieldInformation {\n\treturn typeof Reflect.get(error as Record<string, unknown>, 'message') === 'string';\n}\n\n/**\n * Represents an API error returned by Discord\n */\nexport class DiscordAPIError extends Error {\n\tpublic requestBody: RequestBody;\n\n\t/**\n\t * @param rawError - The error reported by Discord\n\t * @param code - The error code reported by Discord\n\t * @param status - The status code of the response\n\t * @param method - The method of the request that erred\n\t * @param url - The url of the request that erred\n\t * @param bodyData - The unparsed data for the request that errored\n\t */\n\tpublic constructor(\n\t\tpublic rawError: DiscordErrorData | OAuthErrorData,\n\t\tpublic code: number | string,\n\t\tpublic status: number,\n\t\tpublic method: string,\n\t\tpublic url: string,\n\t\tbodyData: Pick<InternalRequest, 'body' | 'files'>,\n\t) {\n\t\tsuper(DiscordAPIError.getMessage(rawError));\n\n\t\tthis.requestBody = { files: bodyData.files, json: bodyData.body };\n\t}\n\n\t/**\n\t * The name of the error\n\t */\n\tpublic override get name(): string {\n\t\treturn `${DiscordAPIError.name}[${this.code}]`;\n\t}\n\n\tprivate static getMessage(error: DiscordErrorData | OAuthErrorData) {\n\t\tlet flattened = '';\n\t\tif ('code' in error) {\n\t\t\tif (error.errors) {\n\t\t\t\tflattened = [...this.flattenDiscordError(error.errors)].join('\\n');\n\t\t\t}\n\n\t\t\treturn error.message && flattened\n\t\t\t\t? `${error.message}\\n${flattened}`\n\t\t\t\t: error.message || flattened || 'Unknown Error';\n\t\t}\n\n\t\treturn error.error_description ?? 'No Description';\n\t}\n\n\tprivate static *flattenDiscordError(obj: DiscordError, key = ''): IterableIterator<string> {\n\t\tif (isErrorResponse(obj)) {\n\t\t\treturn yield `${key.length ? `${key}[${obj.code}]` : `${obj.code}`}: ${obj.message}`.trim();\n\t\t}\n\n\t\tfor (const [otherKey, val] of Object.entries(obj)) {\n\t\t\tconst nextKey = otherKey.startsWith('_')\n\t\t\t\t? key\n\t\t\t\t: key\n\t\t\t\t\t? Number.isNaN(Number(otherKey))\n\t\t\t\t\t\t? `${key}.${otherKey}`\n\t\t\t\t\t\t: `${key}[${otherKey}]`\n\t\t\t\t\t: otherKey;\n\n\t\t\tif (typeof val === 'string') {\n\t\t\t\tyield val;\n\t\t\t} else if (isErrorGroupWrapper(val)) {\n\t\t\t\tfor (const error of val._errors) {\n\t\t\t\t\tyield* this.flattenDiscordError(error, nextKey);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tyield* this.flattenDiscordError(val, nextKey);\n\t\t\t}\n\t\t}\n\t}\n}\n", "import type { InternalRequest } from '../utils/types.js';\nimport type { RequestBody } from './DiscordAPIError.js';\n\n/**\n * Represents a HTTP error\n */\nexport class HTTPError extends Error {\n\tpublic requestBody: RequestBody;\n\n\tpublic override name = HTTPError.name;\n\n\t/**\n\t * @param status - The status code of the response\n\t * @param statusText - The status text of the response\n\t * @param method - The method of the request that erred\n\t * @param url - The url of the request that erred\n\t * @param bodyData - The unparsed data for the request that errored\n\t */\n\tpublic constructor(\n\t\tpublic status: number,\n\t\tstatusText: string,\n\t\tpublic method: string,\n\t\tpublic url: string,\n\t\tbodyData: Pick<InternalRequest, 'body' | 'files'>,\n\t) {\n\t\tsuper(statusText);\n\t\tthis.requestBody = { files: bodyData.files, json: bodyData.body };\n\t}\n}\n", "import { Collection } from '@discordjs/collection';\nimport { DiscordSnowflake } from '@sapphire/snowflake';\nimport { AsyncEventEmitter } from '@vladfrangu/async_event_emitter';\nimport { filetypeinfo } from 'magic-bytes.js';\nimport type { RequestInit, BodyInit, Dispatcher } from 'undici';\nimport { CDN } from './CDN.js';\nimport { BurstHandler } from './handlers/BurstHandler.js';\nimport { SequentialHandler } from './handlers/SequentialHandler.js';\nimport type { IHandler } from './interfaces/Handler.js';\nimport {\n\tBurstHandlerMajorIdKey,\n\tDefaultRestOptions,\n\tDefaultUserAgent,\n\tOverwrittenMimeTypes,\n\tRESTEvents,\n} from './utils/constants.js';\nimport { RequestMethod } from './utils/types.js';\nimport type {\n\tRESTOptions,\n\tResponseLike,\n\tRestEvents,\n\tHashData,\n\tInternalRequest,\n\tRouteLike,\n\tRequestHeaders,\n\tRouteData,\n\tRequestData,\n} from './utils/types.js';\nimport { isBufferLike, parseResponse } from './utils/utils.js';\n\n/**\n * Represents the class that manages handlers for endpoints\n */\nexport class REST extends AsyncEventEmitter<RestEvents> {\n\t/**\n\t * The {@link https://undici.nodejs.org/#/docs/api/Agent | Agent} for all requests\n\t * performed by this manager.\n\t */\n\tpublic agent: Dispatcher | null = null;\n\n\tpublic readonly cdn: CDN;\n\n\t/**\n\t * The number of requests remaining in the global bucket\n\t */\n\tpublic globalRemaining: number;\n\n\t/**\n\t * The promise used to wait out the global rate limit\n\t */\n\tpublic globalDelay: Promise<void> | null = null;\n\n\t/**\n\t * The timestamp at which the global bucket resets\n\t */\n\tpublic globalReset = -1;\n\n\t/**\n\t * API bucket hashes that are cached from provided routes\n\t */\n\tpublic readonly hashes = new Collection<string, HashData>();\n\n\t/**\n\t * Request handlers created from the bucket hash and the major parameters\n\t */\n\tpublic readonly handlers = new Collection<string, IHandler>();\n\n\t#token: string | null = null;\n\n\tprivate hashTimer!: NodeJS.Timer | number;\n\n\tprivate handlerTimer!: NodeJS.Timer | number;\n\n\tpublic readonly options: RESTOptions;\n\n\tpublic constructor(options: Partial<RESTOptions> = {}) {\n\t\tsuper();\n\t\tthis.cdn = new CDN(options.cdn ?? DefaultRestOptions.cdn, options.mediaProxy ?? DefaultRestOptions.mediaProxy);\n\t\tthis.options = { ...DefaultRestOptions, ...options };\n\t\tthis.globalRemaining = Math.max(1, this.options.globalRequestsPerSecond);\n\t\tthis.agent = options.agent ?? null;\n\n\t\t// Start sweepers\n\t\tthis.setupSweepers();\n\t}\n\n\tprivate setupSweepers() {\n\t\t// eslint-disable-next-line unicorn/consistent-function-scoping\n\t\tconst validateMaxInterval = (interval: number) => {\n\t\t\tif (interval > 14_400_000) {\n\t\t\t\tthrow new Error('Cannot set an interval greater than 4 hours');\n\t\t\t}\n\t\t};\n\n\t\tif (this.options.hashSweepInterval !== 0 && this.options.hashSweepInterval !== Number.POSITIVE_INFINITY) {\n\t\t\tvalidateMaxInterval(this.options.hashSweepInterval);\n\t\t\tthis.hashTimer = setInterval(() => {\n\t\t\t\tconst sweptHashes = new Collection<string, HashData>();\n\t\t\t\tconst currentDate = Date.now();\n\n\t\t\t\t// Begin sweeping hash based on lifetimes\n\t\t\t\tthis.hashes.sweep((val, key) => {\n\t\t\t\t\t// `-1` indicates a global hash\n\t\t\t\t\tif (val.lastAccess === -1) return false;\n\n\t\t\t\t\t// Check if lifetime has been exceeded\n\t\t\t\t\tconst shouldSweep = Math.floor(currentDate - val.lastAccess) > this.options.hashLifetime;\n\n\t\t\t\t\t// Add hash to collection of swept hashes\n\t\t\t\t\tif (shouldSweep) {\n\t\t\t\t\t\t// Add to swept hashes\n\t\t\t\t\t\tsweptHashes.set(key, val);\n\n\t\t\t\t\t\t// Emit debug information\n\t\t\t\t\t\tthis.emit(RESTEvents.Debug, `Hash ${val.value} for ${key} swept due to lifetime being exceeded`);\n\t\t\t\t\t}\n\n\t\t\t\t\treturn shouldSweep;\n\t\t\t\t});\n\n\t\t\t\t// Fire event\n\t\t\t\tthis.emit(RESTEvents.HashSweep, sweptHashes);\n\t\t\t}, this.options.hashSweepInterval);\n\n\t\t\tthis.hashTimer.unref?.();\n\t\t}\n\n\t\tif (this.options.handlerSweepInterval !== 0 && this.options.handlerSweepInterval !== Number.POSITIVE_INFINITY) {\n\t\t\tvalidateMaxInterval(this.options.handlerSweepInterval);\n\t\t\tthis.handlerTimer = setInterval(() => {\n\t\t\t\tconst sweptHandlers = new Collection<string, IHandler>();\n\n\t\t\t\t// Begin sweeping handlers based on activity\n\t\t\t\tthis.handlers.sweep((val, key) => {\n\t\t\t\t\tconst { inactive } = val;\n\n\t\t\t\t\t// Collect inactive handlers\n\t\t\t\t\tif (inactive) {\n\t\t\t\t\t\tsweptHandlers.set(key, val);\n\t\t\t\t\t\tthis.emit(RESTEvents.Debug, `Handler ${val.id} for ${key} swept due to being inactive`);\n\t\t\t\t\t}\n\n\t\t\t\t\treturn inactive;\n\t\t\t\t});\n\n\t\t\t\t// Fire event\n\t\t\t\tthis.emit(RESTEvents.HandlerSweep, sweptHandlers);\n\t\t\t}, this.options.handlerSweepInterval);\n\n\t\t\tthis.handlerTimer.unref?.();\n\t\t}\n\t}\n\n\t/**\n\t * Runs a get request from the api\n\t *\n\t * @param fullRoute - The full route to query\n\t * @param options - Optional request options\n\t */\n\tpublic async get(fullRoute: RouteLike, options: RequestData = {}) {\n\t\treturn this.request({ ...options, fullRoute, method: RequestMethod.Get });\n\t}\n\n\t/**\n\t * Runs a delete request from the api\n\t *\n\t * @param fullRoute - The full route to query\n\t * @param options - Optional request options\n\t */\n\tpublic async delete(fullRoute: RouteLike, options: RequestData = {}) {\n\t\treturn this.request({ ...options, fullRoute, method: RequestMethod.Delete });\n\t}\n\n\t/**\n\t * Runs a post request from the api\n\t *\n\t * @param fullRoute - The full route to query\n\t * @param options - Optional request options\n\t */\n\tpublic async post(fullRoute: RouteLike, options: RequestData = {}) {\n\t\treturn this.request({ ...options, fullRoute, method: RequestMethod.Post });\n\t}\n\n\t/**\n\t * Runs a put request from the api\n\t *\n\t * @param fullRoute - The full route to query\n\t * @param options - Optional request options\n\t */\n\tpublic async put(fullRoute: RouteLike, options: RequestData = {}) {\n\t\treturn this.request({ ...options, fullRoute, method: RequestMethod.Put });\n\t}\n\n\t/**\n\t * Runs a patch request from the api\n\t *\n\t * @param fullRoute - The full route to query\n\t * @param options - Optional request options\n\t */\n\tpublic async patch(fullRoute: RouteLike, options: RequestData = {}) {\n\t\treturn this.request({ ...options, fullRoute, method: RequestMethod.Patch });\n\t}\n\n\t/**\n\t * Runs a request from the api\n\t *\n\t * @param options - Request options\n\t */\n\tpublic async request(options: InternalRequest) {\n\t\tconst response = await this.queueRequest(options);\n\t\treturn parseResponse(response);\n\t}\n\n\t/**\n\t * Sets the default agent to use for requests performed by this manager\n\t *\n\t * @param agent - The agent to use\n\t */\n\tpublic setAgent(agent: Dispatcher) {\n\t\tthis.agent = agent;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Sets the authorization token that should be used for requests\n\t *\n\t * @param token - The authorization token to use\n\t */\n\tpublic setToken(token: string) {\n\t\tthis.#token = token;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Queues a request to be sent\n\t *\n\t * @param request - All the information needed to make a request\n\t * @returns The response from the api request\n\t */\n\tpublic async queueRequest(request: InternalRequest): Promise<ResponseLike> {\n\t\t// Generalize the endpoint to its route data\n\t\tconst routeId = REST.generateRouteData(request.fullRoute, request.method);\n\t\t// Get the bucket hash for the generic route, or point to a global route otherwise\n\t\tconst hash = this.hashes.get(`${request.method}:${routeId.bucketRoute}`) ?? {\n\t\t\tvalue: `Global(${request.method}:${routeId.bucketRoute})`,\n\t\t\tlastAccess: -1,\n\t\t};\n\n\t\t// Get the request handler for the obtained hash, with its major parameter\n\t\tconst handler =\n\t\t\tthis.handlers.get(`${hash.value}:${routeId.majorParameter}`) ??\n\t\t\tthis.createHandler(hash.value, routeId.majorParameter);\n\n\t\t// Resolve the request into usable fetch options\n\t\tconst { url, fetchOptions } = await this.resolveRequest(request);\n\n\t\t// Queue the request\n\t\treturn handler.queueRequest(routeId, url, fetchOptions, {\n\t\t\tbody: request.body,\n\t\t\tfiles: request.files,\n\t\t\tauth: request.auth !== false,\n\t\t\tsignal: request.signal,\n\t\t});\n\t}\n\n\t/**\n\t * Creates a new rate limit handler from a hash, based on the hash and the major parameter\n\t *\n\t * @param hash - The hash for the route\n\t * @param majorParameter - The major parameter for this handler\n\t * @internal\n\t */\n\tprivate createHandler(hash: string, majorParameter: string) {\n\t\t// Create the async request queue to handle requests\n\t\tconst queue =\n\t\t\tmajorParameter === BurstHandlerMajorIdKey\n\t\t\t\t? new BurstHandler(this, hash, majorParameter)\n\t\t\t\t: new SequentialHandler(this, hash, majorParameter);\n\t\t// Save the queue based on its id\n\t\tthis.handlers.set(queue.id, queue);\n\n\t\treturn queue;\n\t}\n\n\t/**\n\t * Formats the request data to a usable format for fetch\n\t *\n\t * @param request - The request data\n\t */\n\tprivate async resolveRequest(request: InternalRequest): Promise<{ fetchOptions: RequestInit; url: string }> {\n\t\tconst { options } = this;\n\n\t\tlet query = '';\n\n\t\t// If a query option is passed, use it\n\t\tif (request.query) {\n\t\t\tconst resolvedQuery = request.query.toString();\n\t\t\tif (resolvedQuery !== '') {\n\t\t\t\tquery = `?${resolvedQuery}`;\n\t\t\t}\n\t\t}\n\n\t\t// Create the required headers\n\t\tconst headers: RequestHeaders = {\n\t\t\t...this.options.headers,\n\t\t\t'User-Agent': `${DefaultUserAgent} ${options.userAgentAppendix}`.trim(),\n\t\t};\n\n\t\t// If this request requires authorization (allowing non-\"authorized\" requests for webhooks)\n\t\tif (request.auth !== false) {\n\t\t\t// If we haven't received a token, throw an error\n\t\t\tif (!this.#token) {\n\t\t\t\tthrow new Error('Expected token to be set for this request, but none was present');\n\t\t\t}\n\n\t\t\theaders.Authorization = `${request.authPrefix ?? this.options.authPrefix} ${this.#token}`;\n\t\t}\n\n\t\t// If a reason was set, set its appropriate header\n\t\tif (request.reason?.length) {\n\t\t\theaders['X-Audit-Log-Reason'] = encodeURIComponent(request.reason);\n\t\t}\n\n\t\t// Format the full request URL (api base, optional version, endpoint, optional querystring)\n\t\tconst url = `${options.api}${request.versioned === false ? '' : `/v${options.version}`}${\n\t\t\trequest.fullRoute\n\t\t}${query}`;\n\n\t\tlet finalBody: RequestInit['body'];\n\t\tlet additionalHeaders: Record<string, string> = {};\n\n\t\tif (request.files?.length) {\n\t\t\tconst formData = new FormData();\n\n\t\t\t// Attach all files to the request\n\t\t\tfor (const [index, file] of request.files.entries()) {\n\t\t\t\tconst fileKey = file.key ?? `files[${index}]`;\n\n\t\t\t\t// https://developer.mozilla.org/en-US/docs/Web/API/FormData/append#parameters\n\t\t\t\t// FormData.append only accepts a string or Blob.\n\t\t\t\t// https://developer.mozilla.org/en-US/docs/Web/API/Blob/Blob#parameters\n\t\t\t\t// The Blob constructor accepts TypedArray/ArrayBuffer, strings, and Blobs.\n\t\t\t\tif (isBufferLike(file.data)) {\n\t\t\t\t\t// Try to infer the content type from the buffer if one isn't passed\n\t\t\t\t\tlet contentType = file.contentType;\n\n\t\t\t\t\tif (!contentType) {\n\t\t\t\t\t\tconst [parsedType] = filetypeinfo(file.data);\n\n\t\t\t\t\t\tif (parsedType) {\n\t\t\t\t\t\t\tcontentType =\n\t\t\t\t\t\t\t\tOverwrittenMimeTypes[parsedType.mime as keyof typeof OverwrittenMimeTypes] ??\n\t\t\t\t\t\t\t\tparsedType.mime ??\n\t\t\t\t\t\t\t\t'application/octet-stream';\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tformData.append(fileKey, new Blob([file.data], { type: contentType }), file.name);\n\t\t\t\t} else {\n\t\t\t\t\tformData.append(fileKey, new Blob([`${file.data}`], { type: file.contentType }), file.name);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// If a JSON body was added as well, attach it to the form data, using payload_json unless otherwise specified\n\t\t\t// eslint-disable-next-line no-eq-null, eqeqeq\n\t\t\tif (request.body != null) {\n\t\t\t\tif (request.appendToFormData) {\n\t\t\t\t\tfor (const [key, value] of Object.entries(request.body as Record<string, unknown>)) {\n\t\t\t\t\t\tformData.append(key, value);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tformData.append('payload_json', JSON.stringify(request.body));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Set the final body to the form data\n\t\t\tfinalBody = formData;\n\n\t\t\t// eslint-disable-next-line no-eq-null, eqeqeq\n\t\t} else if (request.body != null) {\n\t\t\tif (request.passThroughBody) {\n\t\t\t\tfinalBody = request.body as BodyInit;\n\t\t\t} else {\n\t\t\t\t// Stringify the JSON data\n\t\t\t\tfinalBody = JSON.stringify(request.body);\n\t\t\t\t// Set the additional headers to specify the content-type\n\t\t\t\tadditionalHeaders = { 'Content-Type': 'application/json' };\n\t\t\t}\n\t\t}\n\n\t\tconst method = request.method.toUpperCase();\n\n\t\t// The non null assertions in the following block are due to exactOptionalPropertyTypes, they have been tested to work with undefined\n\t\tconst fetchOptions: RequestInit = {\n\t\t\t// Set body to null on get / head requests. This does not follow fetch spec (likely because it causes subtle bugs) but is aligned with what request was doing\n\t\t\tbody: ['GET', 'HEAD'].includes(method) ? null : finalBody!,\n\t\t\theaders: { ...request.headers, ...additionalHeaders, ...headers } as Record<string, string>,\n\t\t\tmethod,\n\t\t\t// Prioritize setting an agent per request, use the agent for this instance otherwise.\n\t\t\tdispatcher: request.dispatcher ?? this.agent ?? undefined!,\n\t\t};\n\n\t\treturn { url, fetchOptions };\n\t}\n\n\t/**\n\t * Stops the hash sweeping interval\n\t */\n\tpublic clearHashSweeper() {\n\t\tclearInterval(this.hashTimer);\n\t}\n\n\t/**\n\t * Stops the request handler sweeping interval\n\t */\n\tpublic clearHandlerSweeper() {\n\t\tclearInterval(this.handlerTimer);\n\t}\n\n\t/**\n\t * Generates route data for an endpoint:method\n\t *\n\t * @param endpoint - The raw endpoint to generalize\n\t * @param method - The HTTP method this endpoint is called without\n\t * @internal\n\t */\n\tprivate static generateRouteData(endpoint: RouteLike, method: RequestMethod): RouteData {\n\t\tif (endpoint.startsWith('/interactions/') && endpoint.endsWith('/callback')) {\n\t\t\treturn {\n\t\t\t\tmajorParameter: BurstHandlerMajorIdKey,\n\t\t\t\tbucketRoute: '/interactions/:id/:token/callback',\n\t\t\t\toriginal: endpoint,\n\t\t\t};\n\t\t}\n\n\t\tconst majorIdMatch = /(?:^\\/webhooks\\/(\\d{17,19}\\/[^/?]+))|(?:^\\/(?:channels|guilds|webhooks)\\/(\\d{17,19}))/.exec(\n\t\t\tendpoint,\n\t\t);\n\n\t\t// Get the major id or id + token for this route - global otherwise\n\t\tconst majorId = majorIdMatch?.[2] ?? majorIdMatch?.[1] ?? 'global';\n\n\t\tconst baseRoute = endpoint\n\t\t\t// Strip out all ids\n\t\t\t.replaceAll(/\\d{17,19}/g, ':id')\n\t\t\t// Strip out reaction as they fall under the same bucket\n\t\t\t.replace(/\\/reactions\\/(.*)/, '/reactions/:reaction')\n\t\t\t// Strip out webhook tokens\n\t\t\t.replace(/\\/webhooks\\/:id\\/[^/?]+/, '/webhooks/:id/:token');\n\n\t\tlet exceptions = '';\n\n\t\t// Hard-Code Old Message Deletion Exception (2 week+ old messages are a different bucket)\n\t\t// https://github.com/discord/discord-api-docs/issues/1295\n\t\tif (method === RequestMethod.Delete && baseRoute === '/channels/:id/messages/:id') {\n\t\t\tconst id = /\\d{17,19}$/.exec(endpoint)![0]!;\n\t\t\tconst timestamp = DiscordSnowflake.timestampFrom(id);\n\t\t\tif (Date.now() - timestamp > 1_000 * 60 * 60 * 24 * 14) {\n\t\t\t\texceptions += '/Delete Old Message';\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\tmajorParameter: majorId,\n\t\t\tbucketRoute: baseRoute + exceptions,\n\t\t\toriginal: endpoint,\n\t\t};\n\t}\n}\n", "import type { RequestInit } from 'undici';\nimport type { REST } from '../REST.js';\nimport type { DiscordErrorData, OAuthErrorData } from '../errors/DiscordAPIError.js';\nimport { DiscordAPIError } from '../errors/DiscordAPIError.js';\nimport { HTTPError } from '../errors/HTTPError.js';\nimport { RESTEvents } from '../utils/constants.js';\nimport type { ResponseLike, HandlerRequestData, RouteData } from '../utils/types.js';\nimport { parseResponse, shouldRetry } from '../utils/utils.js';\n\n/**\n * Invalid request limiting is done on a per-IP basis, not a per-token basis.\n * The best we can do is track invalid counts process-wide (on the theory that\n * users could have multiple bots run from one process) rather than per-bot.\n * Therefore, store these at file scope here rather than in the client's\n * RESTManager object.\n */\nlet invalidCount = 0;\nlet invalidCountResetTime: number | null = null;\n\n/**\n * Increment the invalid request count and emit warning if necessary\n *\n * @internal\n */\nexport function incrementInvalidCount(manager: REST) {\n\tif (!invalidCountResetTime || invalidCountResetTime < Date.now()) {\n\t\tinvalidCountResetTime = Date.now() + 1_000 * 60 * 10;\n\t\tinvalidCount = 0;\n\t}\n\n\tinvalidCount++;\n\n\tconst emitInvalid =\n\t\tmanager.options.invalidRequestWarningInterval > 0 &&\n\t\tinvalidCount % manager.options.invalidRequestWarningInterval === 0;\n\tif (emitInvalid) {\n\t\t// Let library users know periodically about invalid requests\n\t\tmanager.emit(RESTEvents.InvalidRequestWarning, {\n\t\t\tcount: invalidCount,\n\t\t\tremainingTime: invalidCountResetTime - Date.now(),\n\t\t});\n\t}\n}\n\n/**\n * Performs the actual network request for a request handler\n *\n * @param manager - The manager that holds options and emits informational events\n * @param routeId - The generalized api route with literal ids for major parameters\n * @param url - The fully resolved url to make the request to\n * @param options - The fetch options needed to make the request\n * @param requestData - Extra data from the user's request needed for errors and additional processing\n * @param retries - The number of retries this request has already attempted (recursion occurs on the handler)\n * @returns The respond from the network or `null` when the request should be retried\n * @internal\n */\nexport async function makeNetworkRequest(\n\tmanager: REST,\n\trouteId: RouteData,\n\turl: string,\n\toptions: RequestInit,\n\trequestData: HandlerRequestData,\n\tretries: number,\n) {\n\tconst controller = new AbortController();\n\tconst timeout = setTimeout(() => controller.abort(), manager.options.timeout);\n\tif (requestData.signal) {\n\t\t// If the user signal was aborted, abort the controller, else abort the local signal.\n\t\t// The reason why we don't re-use the user's signal, is because users may use the same signal for multiple\n\t\t// requests, and we do not want to cause unexpected side-effects.\n\t\tif (requestData.signal.aborted) controller.abort();\n\t\telse requestData.signal.addEventListener('abort', () => controller.abort());\n\t}\n\n\tlet res: ResponseLike;\n\ttry {\n\t\tres = await manager.options.makeRequest(url, { ...options, signal: controller.signal });\n\t} catch (error: unknown) {\n\t\tif (!(error instanceof Error)) throw error;\n\t\t// Retry the specified number of times if needed\n\t\tif (shouldRetry(error) && retries !== manager.options.retries) {\n\t\t\t// Retry is handled by the handler upon receiving null\n\t\t\treturn null;\n\t\t}\n\n\t\tthrow error;\n\t} finally {\n\t\tclearTimeout(timeout);\n\t}\n\n\tif (manager.listenerCount(RESTEvents.Response)) {\n\t\tmanager.emit(\n\t\t\tRESTEvents.Response,\n\t\t\t{\n\t\t\t\tmethod: options.method ?? 'get',\n\t\t\t\tpath: routeId.original,\n\t\t\t\troute: routeId.bucketRoute,\n\t\t\t\toptions,\n\t\t\t\tdata: requestData,\n\t\t\t\tretries,\n\t\t\t},\n\t\t\tres instanceof Response ? res.clone() : { ...res },\n\t\t);\n\t}\n\n\treturn res;\n}\n\n/**\n * Handles 5xx and 4xx errors (not 429's) conventionally. 429's should be handled before calling this function\n *\n * @param manager - The manager that holds options and emits informational events\n * @param res - The response received from {@link makeNetworkRequest}\n * @param method - The method used to make the request\n * @param url - The fully resolved url to make the request to\n * @param requestData - Extra data from the user's request needed for errors and additional processing\n * @param retries - The number of retries this request has already attempted (recursion occurs on the handler)\n * @returns The response if the status code is not handled or null to request a retry\n */\nexport async function handleErrors(\n\tmanager: REST,\n\tres: ResponseLike,\n\tmethod: string,\n\turl: string,\n\trequestData: HandlerRequestData,\n\tretries: number,\n) {\n\tconst status = res.status;\n\tif (status >= 500 && status < 600) {\n\t\t// Retry the specified number of times for possible server side issues\n\t\tif (retries !== manager.options.retries) {\n\t\t\treturn null;\n\t\t}\n\n\t\t// We are out of retries, throw an error\n\t\tthrow new HTTPError(status, res.statusText, method, url, requestData);\n\t} else {\n\t\t// Handle possible malformed requests\n\t\tif (status >= 400 && status < 500) {\n\t\t\t// If we receive this status code, it means the token we had is no longer valid.\n\t\t\tif (status === 401 && requestData.auth) {\n\t\t\t\tmanager.setToken(null!);\n\t\t\t}\n\n\t\t\t// The request will not succeed for some reason, parse the error returned from the api\n\t\t\tconst data = (await parseResponse(res)) as DiscordErrorData | OAuthErrorData;\n\t\t\t// throw the API error\n\t\t\tthrow new DiscordAPIError(data, 'code' in data ? data.code : data.error, status, method, url, requestData);\n\t\t}\n\n\t\treturn res;\n\t}\n}\n", "import type { RequestInit } from 'undici';\nimport type { REST } from '../REST.js';\nimport type { IHandler } from '../interfaces/Handler.js';\nimport { RESTEvents } from '../utils/constants.js';\nimport type { ResponseLike, HandlerRequestData, RouteData, RateLimitData } from '../utils/types.js';\nimport { normalizeRateLimitOffset, onRateLimit, sleep } from '../utils/utils.js';\nimport { handleErrors, incrementInvalidCount, makeNetworkRequest } from './Shared.js';\n\n/**\n * The structure used to handle burst requests for a given bucket.\n * Burst requests have no ratelimit handling but allow for pre- and post-processing\n * of data in the same manner as sequentially queued requests.\n *\n * @remarks\n * This queue may still emit a rate limit error if an unexpected 429 is hit\n */\nexport class BurstHandler implements IHandler {\n\t/**\n\t * {@inheritdoc IHandler.id}\n\t */\n\tpublic readonly id: string;\n\n\t/**\n\t * {@inheritDoc IHandler.inactive}\n\t */\n\tpublic inactive = false;\n\n\t/**\n\t * @param manager - The request manager\n\t * @param hash - The hash that this RequestHandler handles\n\t * @param majorParameter - The major parameter for this handler\n\t */\n\tpublic constructor(\n\t\tprivate readonly manager: REST,\n\t\tprivate readonly hash: string,\n\t\tprivate readonly majorParameter: string,\n\t) {\n\t\tthis.id = `${hash}:${majorParameter}`;\n\t}\n\n\t/**\n\t * Emits a debug message\n\t *\n\t * @param message - The message to debug\n\t */\n\tprivate debug(message: string) {\n\t\tthis.manager.emit(RESTEvents.Debug, `[REST ${this.id}] ${message}`);\n\t}\n\n\t/**\n\t * {@inheritDoc IHandler.queueRequest}\n\t */\n\tpublic async queueRequest(\n\t\trouteId: RouteData,\n\t\turl: string,\n\t\toptions: RequestInit,\n\t\trequestData: HandlerRequestData,\n\t): Promise<ResponseLike> {\n\t\treturn this.runRequest(routeId, url, options, requestData);\n\t}\n\n\t/**\n\t * The method that actually makes the request to the API, and updates info about the bucket accordingly\n\t *\n\t * @param routeId - The generalized API route with literal ids for major parameters\n\t * @param url - The fully resolved URL to make the request to\n\t * @param options - The fetch options needed to make the request\n\t * @param requestData - Extra data from the user's request needed for errors and additional processing\n\t * @param retries - The number of retries this request has already attempted (recursion)\n\t */\n\tprivate async runRequest(\n\t\trouteId: RouteData,\n\t\turl: string,\n\t\toptions: RequestInit,\n\t\trequestData: HandlerRequestData,\n\t\tretries = 0,\n\t): Promise<ResponseLike> {\n\t\tconst method = options.method ?? 'get';\n\n\t\tconst res = await makeNetworkRequest(this.manager, routeId, url, options, requestData, retries);\n\n\t\t// Retry requested\n\t\tif (res === null) {\n\t\t\t// eslint-disable-next-line no-param-reassign\n\t\t\treturn this.runRequest(routeId, url, options, requestData, ++retries);\n\t\t}\n\n\t\tconst status = res.status;\n\t\tlet retryAfter = 0;\n\t\tconst retry = res.headers.get('Retry-After');\n\n\t\t// Amount of time in milliseconds until we should retry if rate limited (globally or otherwise)\n\t\tconst offset = normalizeRateLimitOffset(this.manager.options.offset, routeId.bucketRoute);\n\t\tif (retry) retryAfter = Number(retry) * 1_000 + offset;\n\n\t\t// Count the invalid requests\n\t\tif (status === 401 || status === 403 || status === 429) {\n\t\t\tincrementInvalidCount(this.manager);\n\t\t}\n\n\t\tif (status >= 200 && status < 300) {\n\t\t\treturn res;\n\t\t} else if (status === 429) {\n\t\t\t// Unexpected ratelimit\n\t\t\tconst isGlobal = res.headers.has('X-RateLimit-Global');\n\t\t\tconst scope = (res.headers.get('X-RateLimit-Scope') ?? 'user') as RateLimitData['scope'];\n\n\t\t\tawait onRateLimit(this.manager, {\n\t\t\t\tglobal: isGlobal,\n\t\t\t\tmethod,\n\t\t\t\turl,\n\t\t\t\troute: routeId.bucketRoute,\n\t\t\t\tmajorParameter: this.majorParameter,\n\t\t\t\thash: this.hash,\n\t\t\t\tlimit: Number.POSITIVE_INFINITY,\n\t\t\t\ttimeToReset: retryAfter,\n\t\t\t\tretryAfter,\n\t\t\t\tsublimitTimeout: 0,\n\t\t\t\tscope,\n\t\t\t});\n\n\t\t\tthis.debug(\n\t\t\t\t[\n\t\t\t\t\t'Encountered unexpected 429 rate limit',\n\t\t\t\t\t`  Global         : ${isGlobal}`,\n\t\t\t\t\t`  Method         : ${method}`,\n\t\t\t\t\t`  URL            : ${url}`,\n\t\t\t\t\t`  Bucket         : ${routeId.bucketRoute}`,\n\t\t\t\t\t`  Major parameter: ${routeId.majorParameter}`,\n\t\t\t\t\t`  Hash           : ${this.hash}`,\n\t\t\t\t\t`  Limit          : ${Number.POSITIVE_INFINITY}`,\n\t\t\t\t\t`  Retry After    : ${retryAfter}ms`,\n\t\t\t\t\t`  Sublimit       : None`,\n\t\t\t\t\t`  Scope          : ${scope}`,\n\t\t\t\t].join('\\n'),\n\t\t\t);\n\n\t\t\t// We are bypassing all other limits, but an encountered limit should be respected (it's probably a non-punished rate limit anyways)\n\t\t\tawait sleep(retryAfter);\n\n\t\t\t// Since this is not a server side issue, the next request should pass, so we don't bump the retries counter\n\t\t\treturn this.runRequest(routeId, url, options, requestData, retries);\n\t\t} else {\n\t\t\tconst handled = await handleErrors(this.manager, res, method, url, requestData, retries);\n\t\t\tif (handled === null) {\n\t\t\t\t// eslint-disable-next-line no-param-reassign\n\t\t\t\treturn this.runRequest(routeId, url, options, requestData, ++retries);\n\t\t\t}\n\n\t\t\treturn handled;\n\t\t}\n\t}\n}\n", "import { AsyncQueue } from '@sapphire/async-queue';\nimport type { RequestInit } from 'undici';\nimport type { REST } from '../REST.js';\nimport type { IHandler } from '../interfaces/Handler.js';\nimport { RESTEvents } from '../utils/constants.js';\nimport type { RateLimitData, ResponseLike, HandlerRequestData, RouteData } from '../utils/types.js';\nimport { hasSublimit, normalizeRateLimitOffset, onRateLimit, sleep } from '../utils/utils.js';\nimport { handleErrors, incrementInvalidCount, makeNetworkRequest } from './Shared.js';\n\nconst enum QueueType {\n\tStandard,\n\tSublimit,\n}\n\n/**\n * The structure used to handle sequential requests for a given bucket\n */\nexport class SequentialHandler implements IHandler {\n\t/**\n\t * {@inheritDoc IHandler.id}\n\t */\n\tpublic readonly id: string;\n\n\t/**\n\t * The time this rate limit bucket will reset\n\t */\n\tprivate reset = -1;\n\n\t/**\n\t * The remaining requests that can be made before we are rate limited\n\t */\n\tprivate remaining = 1;\n\n\t/**\n\t * The total number of requests that can be made before we are rate limited\n\t */\n\tprivate limit = Number.POSITIVE_INFINITY;\n\n\t/**\n\t * The interface used to sequence async requests sequentially\n\t */\n\t#asyncQueue = new AsyncQueue();\n\n\t/**\n\t * The interface used to sequence sublimited async requests sequentially\n\t */\n\t#sublimitedQueue: AsyncQueue | null = null;\n\n\t/**\n\t * A promise wrapper for when the sublimited queue is finished being processed or null when not being processed\n\t */\n\t#sublimitPromise: { promise: Promise<void>; resolve(): void } | null = null;\n\n\t/**\n\t * Whether the sublimit queue needs to be shifted in the finally block\n\t */\n\t#shiftSublimit = false;\n\n\t/**\n\t * @param manager - The request manager\n\t * @param hash - The hash that this RequestHandler handles\n\t * @param majorParameter - The major parameter for this handler\n\t */\n\tpublic constructor(\n\t\tprivate readonly manager: REST,\n\t\tprivate readonly hash: string,\n\t\tprivate readonly majorParameter: string,\n\t) {\n\t\tthis.id = `${hash}:${majorParameter}`;\n\t}\n\n\t/**\n\t * {@inheritDoc IHandler.inactive}\n\t */\n\tpublic get inactive(): boolean {\n\t\treturn (\n\t\t\tthis.#asyncQueue.remaining === 0 &&\n\t\t\t(this.#sublimitedQueue === null || this.#sublimitedQueue.remaining === 0) &&\n\t\t\t!this.limited\n\t\t);\n\t}\n\n\t/**\n\t * If the rate limit bucket is currently limited by the global limit\n\t */\n\tprivate get globalLimited(): boolean {\n\t\treturn this.manager.globalRemaining <= 0 && Date.now() < this.manager.globalReset;\n\t}\n\n\t/**\n\t * If the rate limit bucket is currently limited by its limit\n\t */\n\tprivate get localLimited(): boolean {\n\t\treturn this.remaining <= 0 && Date.now() < this.reset;\n\t}\n\n\t/**\n\t * If the rate limit bucket is currently limited\n\t */\n\tprivate get limited(): boolean {\n\t\treturn this.globalLimited || this.localLimited;\n\t}\n\n\t/**\n\t * The time until queued requests can continue\n\t */\n\tprivate getTimeToReset(routeId: RouteData): number {\n\t\tconst offset = normalizeRateLimitOffset(this.manager.options.offset, routeId.bucketRoute);\n\t\treturn this.reset + offset - Date.now();\n\t}\n\n\t/**\n\t * Emits a debug message\n\t *\n\t * @param message - The message to debug\n\t */\n\tprivate debug(message: string) {\n\t\tthis.manager.emit(RESTEvents.Debug, `[REST ${this.id}] ${message}`);\n\t}\n\n\t/**\n\t * Delay all requests for the specified amount of time, handling global rate limits\n\t *\n\t * @param time - The amount of time to delay all requests for\n\t */\n\tprivate async globalDelayFor(time: number): Promise<void> {\n\t\tawait sleep(time);\n\t\tthis.manager.globalDelay = null;\n\t}\n\n\t/**\n\t * {@inheritDoc IHandler.queueRequest}\n\t */\n\tpublic async queueRequest(\n\t\trouteId: RouteData,\n\t\turl: string,\n\t\toptions: RequestInit,\n\t\trequestData: HandlerRequestData,\n\t): Promise<ResponseLike> {\n\t\tlet queue = this.#asyncQueue;\n\t\tlet queueType = QueueType.Standard;\n\t\t// Separate sublimited requests when already sublimited\n\t\tif (this.#sublimitedQueue && hasSublimit(routeId.bucketRoute, requestData.body, options.method)) {\n\t\t\tqueue = this.#sublimitedQueue!;\n\t\t\tqueueType = QueueType.Sublimit;\n\t\t}\n\n\t\t// Wait for any previous requests to be completed before this one is run\n\t\tawait queue.wait({ signal: requestData.signal });\n\t\t// This set handles retroactively sublimiting requests\n\t\tif (queueType === QueueType.Standard) {\n\t\t\tif (this.#sublimitedQueue && hasSublimit(routeId.bucketRoute, requestData.body, options.method)) {\n\t\t\t\t/**\n\t\t\t\t * Remove the request from the standard queue, it should never be possible to get here while processing the\n\t\t\t\t * sublimit queue so there is no need to worry about shifting the wrong request\n\t\t\t\t */\n\t\t\t\tqueue = this.#sublimitedQueue!;\n\t\t\t\tconst wait = queue.wait();\n\t\t\t\tthis.#asyncQueue.shift();\n\t\t\t\tawait wait;\n\t\t\t} else if (this.#sublimitPromise) {\n\t\t\t\t// Stall requests while the sublimit queue gets processed\n\t\t\t\tawait this.#sublimitPromise.promise;\n\t\t\t}\n\t\t}\n\n\t\ttry {\n\t\t\t// Make the request, and return the results\n\t\t\treturn await this.runRequest(routeId, url, options, requestData);\n\t\t} finally {\n\t\t\t// Allow the next request to fire\n\t\t\tqueue.shift();\n\t\t\tif (this.#shiftSublimit) {\n\t\t\t\tthis.#shiftSublimit = false;\n\t\t\t\tthis.#sublimitedQueue?.shift();\n\t\t\t}\n\n\t\t\t// If this request is the last request in a sublimit\n\t\t\tif (this.#sublimitedQueue?.remaining === 0) {\n\t\t\t\tthis.#sublimitPromise?.resolve();\n\t\t\t\tthis.#sublimitedQueue = null;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * The method that actually makes the request to the api, and updates info about the bucket accordingly\n\t *\n\t * @param routeId - The generalized api route with literal ids for major parameters\n\t * @param url - The fully resolved url to make the request to\n\t * @param options - The fetch options needed to make the request\n\t * @param requestData - Extra data from the user's request needed for errors and additional processing\n\t * @param retries - The number of retries this request has already attempted (recursion)\n\t */\n\tprivate async runRequest(\n\t\trouteId: RouteData,\n\t\turl: string,\n\t\toptions: RequestInit,\n\t\trequestData: HandlerRequestData,\n\t\tretries = 0,\n\t): Promise<ResponseLike> {\n\t\t/*\n\t\t * After calculations have been done, pre-emptively stop further requests\n\t\t * Potentially loop until this task can run if e.g. the global rate limit is hit twice\n\t\t */\n\t\twhile (this.limited) {\n\t\t\tconst isGlobal = this.globalLimited;\n\t\t\tlet limit: number;\n\t\t\tlet timeout: number;\n\t\t\tlet delay: Promise<void>;\n\n\t\t\tif (isGlobal) {\n\t\t\t\tconst offset = normalizeRateLimitOffset(this.manager.options.offset, routeId.bucketRoute);\n\n\t\t\t\t// Set RateLimitData based on the global limit\n\t\t\t\tlimit = this.manager.options.globalRequestsPerSecond;\n\t\t\t\ttimeout = this.manager.globalReset + offset - Date.now();\n\t\t\t\t// If this is the first task to reach the global timeout, set the global delay\n\t\t\t\tif (!this.manager.globalDelay) {\n\t\t\t\t\t// The global delay function clears the global delay state when it is resolved\n\t\t\t\t\tthis.manager.globalDelay = this.globalDelayFor(timeout);\n\t\t\t\t}\n\n\t\t\t\tdelay = this.manager.globalDelay;\n\t\t\t} else {\n\t\t\t\t// Set RateLimitData based on the route-specific limit\n\t\t\t\tlimit = this.limit;\n\t\t\t\ttimeout = this.getTimeToReset(routeId);\n\t\t\t\tdelay = sleep(timeout);\n\t\t\t}\n\n\t\t\tconst rateLimitData: RateLimitData = {\n\t\t\t\tglobal: isGlobal,\n\t\t\t\tmethod: options.method ?? 'get',\n\t\t\t\turl,\n\t\t\t\troute: routeId.bucketRoute,\n\t\t\t\tmajorParameter: this.majorParameter,\n\t\t\t\thash: this.hash,\n\t\t\t\tlimit,\n\t\t\t\ttimeToReset: timeout,\n\t\t\t\tretryAfter: timeout,\n\t\t\t\tsublimitTimeout: 0,\n\t\t\t\tscope: 'user',\n\t\t\t};\n\n\t\t\t// Let library users know they have hit a rate limit\n\t\t\tthis.manager.emit(RESTEvents.RateLimited, rateLimitData);\n\t\t\t// Determine whether a RateLimitError should be thrown\n\t\t\tawait onRateLimit(this.manager, rateLimitData);\n\n\t\t\t// When not erroring, emit debug for what is happening\n\t\t\tif (isGlobal) {\n\t\t\t\tthis.debug(`Global rate limit hit, blocking all requests for ${timeout}ms`);\n\t\t\t} else {\n\t\t\t\tthis.debug(`Waiting ${timeout}ms for rate limit to pass`);\n\t\t\t}\n\n\t\t\t// Wait the remaining time left before the rate limit resets\n\t\t\tawait delay;\n\t\t}\n\n\t\t// As the request goes out, update the global usage information\n\t\tif (!this.manager.globalReset || this.manager.globalReset < Date.now()) {\n\t\t\tthis.manager.globalReset = Date.now() + 1_000;\n\t\t\tthis.manager.globalRemaining = this.manager.options.globalRequestsPerSecond;\n\t\t}\n\n\t\tthis.manager.globalRemaining--;\n\n\t\tconst method = options.method ?? 'get';\n\n\t\tconst res = await makeNetworkRequest(this.manager, routeId, url, options, requestData, retries);\n\n\t\t// Retry requested\n\t\tif (res === null) {\n\t\t\t// eslint-disable-next-line no-param-reassign\n\t\t\treturn this.runRequest(routeId, url, options, requestData, ++retries);\n\t\t}\n\n\t\tconst status = res.status;\n\t\tlet retryAfter = 0;\n\n\t\tconst limit = res.headers.get('X-RateLimit-Limit');\n\t\tconst remaining = res.headers.get('X-RateLimit-Remaining');\n\t\tconst reset = res.headers.get('X-RateLimit-Reset-After');\n\t\tconst hash = res.headers.get('X-RateLimit-Bucket');\n\t\tconst retry = res.headers.get('Retry-After');\n\t\tconst scope = (res.headers.get('X-RateLimit-Scope') ?? 'user') as RateLimitData['scope'];\n\n\t\tconst offset = normalizeRateLimitOffset(this.manager.options.offset, routeId.bucketRoute);\n\n\t\t// Update the total number of requests that can be made before the rate limit resets\n\t\tthis.limit = limit ? Number(limit) : Number.POSITIVE_INFINITY;\n\t\t// Update the number of remaining requests that can be made before the rate limit resets\n\t\tthis.remaining = remaining ? Number(remaining) : 1;\n\t\t// Update the time when this rate limit resets (reset-after is in seconds)\n\t\tthis.reset = reset ? Number(reset) * 1_000 + Date.now() + offset : Date.now();\n\n\t\t// Amount of time in milliseconds until we should retry if rate limited (globally or otherwise)\n\t\tif (retry) retryAfter = Number(retry) * 1_000 + offset;\n\n\t\t// Handle buckets via the hash header retroactively\n\t\tif (hash && hash !== this.hash) {\n\t\t\t// Let library users know when rate limit buckets have been updated\n\t\t\tthis.debug(['Received bucket hash update', `  Old Hash  : ${this.hash}`, `  New Hash  : ${hash}`].join('\\n'));\n\t\t\t// This queue will eventually be eliminated via attrition\n\t\t\tthis.manager.hashes.set(`${method}:${routeId.bucketRoute}`, { value: hash, lastAccess: Date.now() });\n\t\t} else if (hash) {\n\t\t\t// Handle the case where hash value doesn't change\n\t\t\t// Fetch the hash data from the manager\n\t\t\tconst hashData = this.manager.hashes.get(`${method}:${routeId.bucketRoute}`);\n\n\t\t\t// When fetched, update the last access of the hash\n\t\t\tif (hashData) {\n\t\t\t\thashData.lastAccess = Date.now();\n\t\t\t}\n\t\t}\n\n\t\t// Handle retryAfter, which means we have actually hit a rate limit\n\t\tlet sublimitTimeout: number | null = null;\n\t\tif (retryAfter > 0) {\n\t\t\tif (res.headers.has('X-RateLimit-Global')) {\n\t\t\t\tthis.manager.globalRemaining = 0;\n\t\t\t\tthis.manager.globalReset = Date.now() + retryAfter;\n\t\t\t} else if (!this.localLimited) {\n\t\t\t\t/*\n\t\t\t\t * This is a sublimit (e.g. 2 channel name changes/10 minutes) since the headers don't indicate a\n\t\t\t\t * route-wide rate limit. Don't update remaining or reset to avoid rate limiting the whole\n\t\t\t\t * endpoint, just set a reset time on the request itself to avoid retrying too soon.\n\t\t\t\t */\n\t\t\t\tsublimitTimeout = retryAfter;\n\t\t\t}\n\t\t}\n\n\t\t// Count the invalid requests\n\t\tif (status === 401 || status === 403 || status === 429) {\n\t\t\tincrementInvalidCount(this.manager);\n\t\t}\n\n\t\tif (res.ok) {\n\t\t\treturn res;\n\t\t} else if (status === 429) {\n\t\t\t// A rate limit was hit - this may happen if the route isn't associated with an official bucket hash yet, or when first globally rate limited\n\t\t\tconst isGlobal = this.globalLimited;\n\t\t\tlet limit: number;\n\t\t\tlet timeout: number;\n\n\t\t\tif (isGlobal) {\n\t\t\t\tconst offset = normalizeRateLimitOffset(this.manager.options.offset, routeId.bucketRoute);\n\n\t\t\t\t// Set RateLimitData based on the global limit\n\t\t\t\tlimit = this.manager.options.globalRequestsPerSecond;\n\t\t\t\ttimeout = this.manager.globalReset + offset - Date.now();\n\t\t\t} else {\n\t\t\t\t// Set RateLimitData based on the route-specific limit\n\t\t\t\tlimit = this.limit;\n\t\t\t\ttimeout = this.getTimeToReset(routeId);\n\t\t\t}\n\n\t\t\tawait onRateLimit(this.manager, {\n\t\t\t\tglobal: isGlobal,\n\t\t\t\tmethod,\n\t\t\t\turl,\n\t\t\t\troute: routeId.bucketRoute,\n\t\t\t\tmajorParameter: this.majorParameter,\n\t\t\t\thash: this.hash,\n\t\t\t\tlimit,\n\t\t\t\ttimeToReset: timeout,\n\t\t\t\tretryAfter,\n\t\t\t\tsublimitTimeout: sublimitTimeout ?? 0,\n\t\t\t\tscope,\n\t\t\t});\n\n\t\t\tthis.debug(\n\t\t\t\t[\n\t\t\t\t\t'Encountered unexpected 429 rate limit',\n\t\t\t\t\t`  Global         : ${isGlobal.toString()}`,\n\t\t\t\t\t`  Method         : ${method}`,\n\t\t\t\t\t`  URL            : ${url}`,\n\t\t\t\t\t`  Bucket         : ${routeId.bucketRoute}`,\n\t\t\t\t\t`  Major parameter: ${routeId.majorParameter}`,\n\t\t\t\t\t`  Hash           : ${this.hash}`,\n\t\t\t\t\t`  Limit          : ${limit}`,\n\t\t\t\t\t`  Retry After    : ${retryAfter}ms`,\n\t\t\t\t\t`  Sublimit       : ${sublimitTimeout ? `${sublimitTimeout}ms` : 'None'}`,\n\t\t\t\t\t`  Scope          : ${scope}`,\n\t\t\t\t].join('\\n'),\n\t\t\t);\n\n\t\t\t// If caused by a sublimit, wait it out here so other requests on the route can be handled\n\t\t\tif (sublimitTimeout) {\n\t\t\t\t// Normally the sublimit queue will not exist, however, if a sublimit is hit while in the sublimit queue, it will\n\t\t\t\tconst firstSublimit = !this.#sublimitedQueue;\n\t\t\t\tif (firstSublimit) {\n\t\t\t\t\tthis.#sublimitedQueue = new AsyncQueue();\n\t\t\t\t\tvoid this.#sublimitedQueue.wait();\n\t\t\t\t\tthis.#asyncQueue.shift();\n\t\t\t\t}\n\n\t\t\t\tthis.#sublimitPromise?.resolve();\n\t\t\t\tthis.#sublimitPromise = null;\n\t\t\t\tawait sleep(sublimitTimeout);\n\t\t\t\tlet resolve: () => void;\n\t\t\t\t// eslint-disable-next-line promise/param-names, no-promise-executor-return\n\t\t\t\tconst promise = new Promise<void>((res) => (resolve = res));\n\t\t\t\tthis.#sublimitPromise = { promise, resolve: resolve! };\n\t\t\t\tif (firstSublimit) {\n\t\t\t\t\t// Re-queue this request so it can be shifted by the finally\n\t\t\t\t\tawait this.#asyncQueue.wait();\n\t\t\t\t\tthis.#shiftSublimit = true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Since this is not a server side issue, the next request should pass, so we don't bump the retries counter\n\t\t\treturn this.runRequest(routeId, url, options, requestData, retries);\n\t\t} else {\n\t\t\tconst handled = await handleErrors(this.manager, res, method, url, requestData, retries);\n\t\t\tif (handled === null) {\n\t\t\t\t// eslint-disable-next-line no-param-reassign\n\t\t\t\treturn this.runRequest(routeId, url, options, requestData, ++retries);\n\t\t\t}\n\n\t\t\treturn handled;\n\t\t}\n\t}\n}\n", "export * from './lib/CDN.js';\nexport * from './lib/errors/DiscordAPIError.js';\nexport * from './lib/errors/HTTPError.js';\nexport * from './lib/errors/RateLimitError.js';\nexport * from './lib/REST.js';\nexport * from './lib/utils/constants.js';\nexport * from './lib/utils/types.js';\nexport { calculateUserDefaultAvatarIndex, makeURLSearchParams, parseResponse } from './lib/utils/utils.js';\n\n/**\n * The {@link https://github.com/discordjs/discord.js/blob/main/packages/rest#readme | @discordjs/rest} version\n * that you are currently using.\n */\n// This needs to explicitly be `string` so it is not typed as a \"const string\" that gets injected by esbuild\nexport const version = '2.4.0' as string;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=common.js.map", null, null, null, null, null, null, null, null, null, null, "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=attachment.js.map", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=base.js.map", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=boolean.js.map", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=channel.js.map", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=integer.js.map", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=mentionable.js.map", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=number.js.map", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=role.js.map", null, "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=string.js.map", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=subcommand.js.map", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=subcommandGroup.js.map", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=user.js.map", null, "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=contextMenu.js.map", null, null, "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=autocomplete.js.map", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=base.js.map", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=messageComponents.js.map", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=modalSubmit.js.map", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=ping.js.map", null, null, null, null, null, null, null, null, null, null, null, null, null, null, "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=application.js.map", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=auditLog.js.map", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=autoModeration.js.map", null, "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=emoji.js.map", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=gateway.js.map", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=guild.js.map", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=guildScheduledEvent.js.map", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=interactions.js.map", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=invite.js.map", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=oauth2.js.map", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=poll.js.map", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=stageInstance.js.map", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=sticker.js.map", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=template.js.map", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=user.js.map", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=voice.js.map", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=webhook.js.map", null, null, null, null, null, null, "'use strict';\n\n/**\n * @typedef {Object} DiscordjsErrorCodes\n\n * @property {'ClientInvalidOption'} ClientInvalidOption\n * @property {'ClientInvalidProvidedShards'} ClientInvalidProvidedShards\n * @property {'ClientMissingIntents'} ClientMissingIntents\n * @property {'ClientNotReady'} ClientNotReady\n\n * @property {'TokenInvalid'} TokenInvalid\n * @property {'TokenMissing'} TokenMissing\n * @property {'ApplicationCommandPermissionsTokenMissing'} ApplicationCommandPermissionsTokenMissing\n\n * @property {'WSCloseRequested'} WSCloseRequested\n * <warn>This property is deprecated.</warn>\n * @property {'WSConnectionExists'} WSConnectionExists\n * <warn>This property is deprecated.</warn>\n * @property {'WSNotOpen'} WSNotOpen\n * <warn>This property is deprecated.</warn>\n * @property {'ManagerDestroyed'} ManagerDestroyed\n * <warn>This property is deprecated.</warn>\n\n * @property {'BitFieldInvalid'} BitFieldInvalid\n\n * @property {'ShardingInvalid'} ShardingInvalid\n * <warn>This property is deprecated.</warn>\n * @property {'ShardingRequired'} ShardingRequired\n * <warn>This property is deprecated.</warn>\n * @property {'InvalidIntents'} InvalidIntents\n * <warn>This property is deprecated.</warn>\n * @property {'DisallowedIntents'} DisallowedIntents\n * <warn>This property is deprecated.</warn>\n * @property {'ShardingNoShards'} ShardingNoShards\n * @property {'ShardingInProcess'} ShardingInProcess\n * @property {'ShardingInvalidEvalBroadcast'} ShardingInvalidEvalBroadcast\n * @property {'ShardingShardNotFound'} ShardingShardNotFound\n * @property {'ShardingAlreadySpawned'} ShardingAlreadySpawned\n * @property {'ShardingProcessExists'} ShardingProcessExists\n * @property {'ShardingWorkerExists'} ShardingWorkerExists\n * @property {'ShardingReadyTimeout'} ShardingReadyTimeout\n * @property {'ShardingReadyDisconnected'} ShardingReadyDisconnected\n * @property {'ShardingReadyDied'} ShardingReadyDied\n * @property {'ShardingNoChildExists'} ShardingNoChildExists\n * @property {'ShardingShardMiscalculation'} ShardingShardMiscalculation\n\n * @property {'ColorRange'} ColorRange\n * @property {'ColorConvert'} ColorConvert\n\n * @property {'InviteOptionsMissingChannel'} InviteOptionsMissingChannel\n\n * @property {'ButtonLabel'} ButtonLabel\n * <warn>This property is deprecated.</warn>\n * @property {'ButtonURL'} ButtonURL\n * <warn>This property is deprecated.</warn>\n * @property {'ButtonCustomId'} ButtonCustomId\n * <warn>This property is deprecated.</warn>\n\n * @property {'SelectMenuCustomId'} SelectMenuCustomId\n * <warn>This property is deprecated.</warn>\n * @property {'SelectMenuPlaceholder'} SelectMenuPlaceholder\n * <warn>This property is deprecated.</warn>\n * @property {'SelectOptionLabel'} SelectOptionLabel\n * <warn>This property is deprecated.</warn>\n * @property {'SelectOptionValue'} SelectOptionValue\n * <warn>This property is deprecated.</warn>\n * @property {'SelectOptionDescription'} SelectOptionDescription\n * <warn>This property is deprecated.</warn>\n\n * @property {'InteractionCollectorError'} InteractionCollectorError\n\n * @property {'FileNotFound'} FileNotFound\n\n * @property {'UserBannerNotFetched'} UserBannerNotFetched\n * <warn>This property is deprecated.</warn>\n * @property {'UserNoDMChannel'} UserNoDMChannel\n\n * @property {'VoiceNotStageChannel'} VoiceNotStageChannel\n\n * @property {'VoiceStateNotOwn'} VoiceStateNotOwn\n * @property {'VoiceStateInvalidType'} VoiceStateInvalidType\n\n * @property {'ReqResourceType'} ReqResourceType\n\n * @property {'ImageFormat'} ImageFormat\n * <warn>This property is deprecated.</warn>\n * @property {'ImageSize'} ImageSize\n * <warn>This property is deprecated.</warn>\n\n * @property {'MessageBulkDeleteType'} MessageBulkDeleteType\n * @property {'MessageContentType'} MessageContentType\n * @property {'MessageNonceRequired'} MessageNonceRequired\n * @property {'MessageNonceType'} MessageNonceType\n\n * @property {'SplitMaxLen'} SplitMaxLen\n * <warn>This property is deprecated.</warn>\n\n * @property {'BanResolveId'} BanResolveId\n * @property {'FetchBanResolveId'} FetchBanResolveId\n\n * @property {'PruneDaysType'} PruneDaysType\n\n * @property {'GuildChannelResolve'} GuildChannelResolve\n * @property {'GuildVoiceChannelResolve'} GuildVoiceChannelResolve\n * @property {'GuildChannelOrphan'} GuildChannelOrphan\n * @property {'GuildChannelUnowned'} GuildChannelUnowned\n * @property {'GuildOwned'} GuildOwned\n * @property {'GuildMembersTimeout'} GuildMembersTimeout\n * @property {'GuildUncachedMe'} GuildUncachedMe\n * @property {'ChannelNotCached'} ChannelNotCached\n * @property {'StageChannelResolve'} StageChannelResolve\n * @property {'GuildScheduledEventResolve'} GuildScheduledEventResolve\n * @property {'FetchOwnerId'} FetchOwnerId\n\n * @property {'InvalidType'} InvalidType\n * @property {'InvalidElement'} InvalidElement\n\n * @property {'MessageThreadParent'} MessageThreadParent\n * @property {'MessageExistingThread'} MessageExistingThread\n * @property {'ThreadInvitableType'} ThreadInvitableType\n\n * @property {'WebhookMessage'} WebhookMessage\n * @property {'WebhookTokenUnavailable'} WebhookTokenUnavailable\n * @property {'WebhookURLInvalid'} WebhookURLInvalid\n * @property {'WebhookApplication'} WebhookApplication\n * @property {'MessageReferenceMissing'} MessageReferenceMissing\n\n * @property {'EmojiType'} EmojiType\n * @property {'EmojiManaged'} EmojiManaged\n * @property {'MissingManageGuildExpressionsPermission'} MissingManageGuildExpressionsPermission\n * @property {'MissingManageEmojisAndStickersPermission'} MissingManageEmojisAndStickersPermission\n * <warn>This property is deprecated. Use `MissingManageGuildExpressionsPermission` instead.</warn>\n *\n * @property {'NotGuildSticker'} NotGuildSticker\n\n * @property {'ReactionResolveUser'} ReactionResolveUser\n\n * @property {'VanityURL'} VanityURL\n * <warn>This property is deprecated.</warn>\n\n * @property {'InviteResolveCode'} InviteResolveCode\n\n * @property {'InviteNotFound'} InviteNotFound\n\n * @property {'DeleteGroupDMChannel'} DeleteGroupDMChannel\n * @property {'FetchGroupDMChannel'} FetchGroupDMChannel\n\n * @property {'MemberFetchNonceLength'} MemberFetchNonceLength\n\n * @property {'GlobalCommandPermissions'} GlobalCommandPermissions\n * @property {'GuildUncachedEntityResolve'} GuildUncachedEntityResolve\n\n * @property {'InteractionAlreadyReplied'} InteractionAlreadyReplied\n * @property {'InteractionNotReplied'} InteractionNotReplied\n * @property {'InteractionEphemeralReplied'} InteractionEphemeralReplied\n * <warn>This property is deprecated.</warn>\n\n * @property {'CommandInteractionOptionNotFound'} CommandInteractionOptionNotFound\n * @property {'CommandInteractionOptionType'} CommandInteractionOptionType\n * @property {'CommandInteractionOptionEmpty'} CommandInteractionOptionEmpty\n * @property {'CommandInteractionOptionNoSubcommand'} CommandInteractionOptionNoSubcommand\n * @property {'CommandInteractionOptionNoSubcommandGroup'} CommandInteractionOptionNoSubcommandGroup\n * @property {'CommandInteractionOptionInvalidChannelType'} CommandInteractionOptionInvalidChannelType\n * @property {'AutocompleteInteractionOptionNoFocusedOption'} AutocompleteInteractionOptionNoFocusedOption\n\n * @property {'ModalSubmitInteractionFieldNotFound'} ModalSubmitInteractionFieldNotFound\n * @property {'ModalSubmitInteractionFieldType'} ModalSubmitInteractionFieldType\n\n * @property {'InvalidMissingScopes'} InvalidMissingScopes\n * @property {'InvalidScopesWithPermissions'} InvalidScopesWithPermissions\n\n * @property {'NotImplemented'} NotImplemented\n\n * @property {'GuildForumMessageRequired'} GuildForumMessageRequired\n\n * @property {'SweepFilterReturn'} SweepFilterReturn\n\n * @property {'EntitlementCreateInvalidOwner'} EntitlementCreateInvalidOwner\n\n * @property {'BulkBanUsersOptionEmpty'} BulkBanUsersOptionEmpty\n\n * @property {'PollAlreadyExpired'} PollAlreadyExpired\n */\n\nconst keys = [\n  'ClientInvalidOption',\n  'ClientInvalidProvidedShards',\n  'ClientMissingIntents',\n  'ClientNotReady',\n\n  'TokenInvalid',\n  'TokenMissing',\n  'ApplicationCommandPermissionsTokenMissing',\n\n  'WSCloseRequested',\n  'WSConnectionExists',\n  'WSNotOpen',\n  'ManagerDestroyed',\n\n  'BitFieldInvalid',\n\n  'ShardingInvalid',\n  'ShardingRequired',\n  'InvalidIntents',\n  'DisallowedIntents',\n  'ShardingNoShards',\n  'ShardingInProcess',\n  'ShardingInvalidEvalBroadcast',\n  'ShardingShardNotFound',\n  'ShardingAlreadySpawned',\n  'ShardingProcessExists',\n  'ShardingWorkerExists',\n  'ShardingReadyTimeout',\n  'ShardingReadyDisconnected',\n  'ShardingReadyDied',\n  'ShardingNoChildExists',\n  'ShardingShardMiscalculation',\n\n  'ColorRange',\n  'ColorConvert',\n\n  'InviteOptionsMissingChannel',\n\n  'ButtonLabel',\n  'ButtonURL',\n  'ButtonCustomId',\n\n  'SelectMenuCustomId',\n  'SelectMenuPlaceholder',\n  'SelectOptionLabel',\n  'SelectOptionValue',\n  'SelectOptionDescription',\n\n  'InteractionCollectorError',\n\n  'FileNotFound',\n\n  'UserBannerNotFetched',\n  'UserNoDMChannel',\n\n  'VoiceNotStageChannel',\n\n  'VoiceStateNotOwn',\n  'VoiceStateInvalidType',\n\n  'ReqResourceType',\n\n  'ImageFormat',\n  'ImageSize',\n\n  'MessageBulkDeleteType',\n  'MessageContentType',\n  'MessageNonceRequired',\n  'MessageNonceType',\n\n  'SplitMaxLen',\n\n  'BanResolveId',\n  'FetchBanResolveId',\n\n  'PruneDaysType',\n\n  'GuildChannelResolve',\n  'GuildVoiceChannelResolve',\n  'GuildChannelOrphan',\n  'GuildChannelUnowned',\n  'GuildOwned',\n  'GuildMembersTimeout',\n  'GuildUncachedMe',\n  'ChannelNotCached',\n  'StageChannelResolve',\n  'GuildScheduledEventResolve',\n  'FetchOwnerId',\n\n  'InvalidType',\n  'InvalidElement',\n\n  'MessageThreadParent',\n  'MessageExistingThread',\n  'ThreadInvitableType',\n\n  'WebhookMessage',\n  'WebhookTokenUnavailable',\n  'WebhookURLInvalid',\n  'WebhookApplication',\n  'MessageReferenceMissing',\n\n  'EmojiType',\n  'EmojiManaged',\n  'MissingManageGuildExpressionsPermission',\n  'MissingManageEmojisAndStickersPermission',\n\n  'NotGuildSticker',\n\n  'ReactionResolveUser',\n\n  'VanityURL',\n\n  'InviteResolveCode',\n\n  'InviteNotFound',\n\n  'DeleteGroupDMChannel',\n  'FetchGroupDMChannel',\n\n  'MemberFetchNonceLength',\n\n  'GlobalCommandPermissions',\n  'GuildUncachedEntityResolve',\n\n  'InteractionAlreadyReplied',\n  'InteractionNotReplied',\n  'InteractionEphemeralReplied',\n\n  'CommandInteractionOptionNotFound',\n  'CommandInteractionOptionType',\n  'CommandInteractionOptionEmpty',\n  'CommandInteractionOptionNoSubcommand',\n  'CommandInteractionOptionNoSubcommandGroup',\n  'CommandInteractionOptionInvalidChannelType',\n  'AutocompleteInteractionOptionNoFocusedOption',\n\n  'ModalSubmitInteractionFieldNotFound',\n  'ModalSubmitInteractionFieldType',\n\n  'InvalidMissingScopes',\n  'InvalidScopesWithPermissions',\n\n  'NotImplemented',\n\n  'SweepFilterReturn',\n\n  'GuildForumMessageRequired',\n\n  'EntitlementCreateInvalidOwner',\n\n  'BulkBanUsersOptionEmpty',\n\n  'PollAlreadyExpired',\n];\n\n// JSDoc for IntelliSense purposes\n/**\n * @type {DiscordjsErrorCodes}\n * @ignore\n */\nmodule.exports = Object.fromEntries(keys.map(key => [key, key]));\n", "'use strict';\n\nconst DjsErrorCodes = require('./ErrorCodes');\n\nconst Messages = {\n  [DjsErrorCodes.ClientInvalidOption]: (prop, must) => `The ${prop} option must be ${must}`,\n  [DjsErrorCodes.ClientInvalidProvidedShards]: 'None of the provided shards were valid.',\n  [DjsErrorCodes.ClientMissingIntents]: 'Valid intents must be provided for the Client.',\n  [DjsErrorCodes.ClientNotReady]: action => `The client needs to be logged in to ${action}.`,\n\n  [DjsErrorCodes.TokenInvalid]: 'An invalid token was provided.',\n  [DjsErrorCodes.TokenMissing]: 'Request to use token, but token was unavailable to the client.',\n  [DjsErrorCodes.ApplicationCommandPermissionsTokenMissing]:\n    'Editing application command permissions requires an OAuth2 bearer token, but none was provided.',\n\n  [DjsErrorCodes.WSCloseRequested]: 'WebSocket closed due to user request.',\n  [DjsErrorCodes.WSConnectionExists]: 'There is already an existing WebSocket connection.',\n  [DjsErrorCodes.WSNotOpen]: (data = 'data') => `WebSocket not open to send ${data}`,\n  [DjsErrorCodes.ManagerDestroyed]: 'Manager was destroyed.',\n\n  [DjsErrorCodes.BitFieldInvalid]: bit => `Invalid bitfield flag or number: ${bit}.`,\n\n  [DjsErrorCodes.ShardingInvalid]: 'Invalid shard settings were provided.',\n  [DjsErrorCodes.ShardingRequired]: 'This session would have handled too many guilds - Sharding is required.',\n  [DjsErrorCodes.InvalidIntents]: 'Invalid intent provided for WebSocket intents.',\n  [DjsErrorCodes.DisallowedIntents]: 'Privileged intent provided is not enabled or whitelisted.',\n  [DjsErrorCodes.ShardingNoShards]: 'No shards have been spawned.',\n  [DjsErrorCodes.ShardingInProcess]: 'Shards are still being spawned.',\n  [DjsErrorCodes.ShardingInvalidEvalBroadcast]: 'Script to evaluate must be a function',\n  [DjsErrorCodes.ShardingShardNotFound]: id => `Shard ${id} could not be found.`,\n  [DjsErrorCodes.ShardingAlreadySpawned]: count => `Already spawned ${count} shards.`,\n  [DjsErrorCodes.ShardingProcessExists]: id => `Shard ${id} already has an active process.`,\n  [DjsErrorCodes.ShardingWorkerExists]: id => `Shard ${id} already has an active worker.`,\n  [DjsErrorCodes.ShardingReadyTimeout]: id => `Shard ${id}'s Client took too long to become ready.`,\n  [DjsErrorCodes.ShardingReadyDisconnected]: id => `Shard ${id}'s Client disconnected before becoming ready.`,\n  [DjsErrorCodes.ShardingReadyDied]: id => `Shard ${id}'s process exited before its Client became ready.`,\n  [DjsErrorCodes.ShardingNoChildExists]: id => `Shard ${id} has no active process or worker.`,\n  [DjsErrorCodes.ShardingShardMiscalculation]: (shard, guild, count) =>\n    `Calculated invalid shard ${shard} for guild ${guild} with ${count} shards.`,\n\n  [DjsErrorCodes.ColorRange]: 'Color must be within the range 0 - 16777215 (0xFFFFFF).',\n  [DjsErrorCodes.ColorConvert]: color => `Unable to convert \"${color}\" to a number.`,\n\n  [DjsErrorCodes.InviteOptionsMissingChannel]:\n    'A valid guild channel must be provided when GuildScheduledEvent is EXTERNAL.',\n\n  [DjsErrorCodes.ButtonLabel]: 'MessageButton label must be a string',\n  [DjsErrorCodes.ButtonURL]: 'MessageButton URL must be a string',\n  [DjsErrorCodes.ButtonCustomId]: 'MessageButton customId must be a string',\n\n  [DjsErrorCodes.SelectMenuCustomId]: 'MessageSelectMenu customId must be a string',\n  [DjsErrorCodes.SelectMenuPlaceholder]: 'MessageSelectMenu placeholder must be a string',\n  [DjsErrorCodes.SelectOptionLabel]: 'MessageSelectOption label must be a string',\n  [DjsErrorCodes.SelectOptionValue]: 'MessageSelectOption value must be a string',\n  [DjsErrorCodes.SelectOptionDescription]: 'MessageSelectOption description must be a string',\n\n  [DjsErrorCodes.InteractionCollectorError]: reason =>\n    `Collector received no interactions before ending with reason: ${reason}`,\n\n  [DjsErrorCodes.FileNotFound]: file => `File could not be found: ${file}`,\n\n  [DjsErrorCodes.UserBannerNotFetched]: \"You must fetch this user's banner before trying to generate its URL!\",\n  [DjsErrorCodes.UserNoDMChannel]: 'No DM Channel exists!',\n\n  [DjsErrorCodes.VoiceNotStageChannel]: 'You are only allowed to do this in stage channels.',\n\n  [DjsErrorCodes.VoiceStateNotOwn]:\n    'You cannot self-deafen/mute/request to speak on VoiceStates that do not belong to the ClientUser.',\n  [DjsErrorCodes.VoiceStateInvalidType]: name => `${name} must be a boolean.`,\n\n  [DjsErrorCodes.ReqResourceType]: 'The resource must be a string, Buffer or a valid file stream.',\n\n  [DjsErrorCodes.ImageFormat]: format => `Invalid image format: ${format}`,\n  [DjsErrorCodes.ImageSize]: size => `Invalid image size: ${size}`,\n\n  [DjsErrorCodes.MessageBulkDeleteType]: 'The messages must be an Array, Collection, or number.',\n  [DjsErrorCodes.MessageContentType]: 'Message content must be a string.',\n  [DjsErrorCodes.MessageNonceRequired]: 'Message nonce is required when enforceNonce is true.',\n  [DjsErrorCodes.MessageNonceType]: 'Message nonce must be an integer or a string.',\n\n  [DjsErrorCodes.SplitMaxLen]: 'Chunk exceeds the max length and contains no split characters.',\n\n  [DjsErrorCodes.BanResolveId]: (ban = false) => `Couldn't resolve the user id to ${ban ? 'ban' : 'unban'}.`,\n  [DjsErrorCodes.FetchBanResolveId]: \"Couldn't resolve the user id to fetch the ban.\",\n\n  [DjsErrorCodes.PruneDaysType]: 'Days must be a number',\n\n  [DjsErrorCodes.GuildChannelResolve]: 'Could not resolve channel to a guild channel.',\n  [DjsErrorCodes.GuildVoiceChannelResolve]: 'Could not resolve channel to a guild voice channel.',\n  [DjsErrorCodes.GuildChannelOrphan]: 'Could not find a parent to this guild channel.',\n  [DjsErrorCodes.GuildChannelUnowned]: \"The fetched channel does not belong to this manager's guild.\",\n  [DjsErrorCodes.GuildOwned]: 'Guild is owned by the client.',\n  [DjsErrorCodes.GuildMembersTimeout]: \"Members didn't arrive in time.\",\n  [DjsErrorCodes.GuildUncachedMe]: 'The client user as a member of this guild is uncached.',\n  [DjsErrorCodes.ChannelNotCached]: 'Could not find the channel where this message came from in the cache!',\n  [DjsErrorCodes.StageChannelResolve]: 'Could not resolve channel to a stage channel.',\n  [DjsErrorCodes.GuildScheduledEventResolve]: 'Could not resolve the guild scheduled event.',\n  [DjsErrorCodes.FetchOwnerId]: type => `Couldn't resolve the ${type} ownerId to fetch the ${type} member.`,\n\n  [DjsErrorCodes.InvalidType]: (name, expected, an = false) => `Supplied ${name} is not a${an ? 'n' : ''} ${expected}.`,\n  [DjsErrorCodes.InvalidElement]: (type, name, elem) => `Supplied ${type} ${name} includes an invalid element: ${elem}`,\n\n  [DjsErrorCodes.MessageThreadParent]: 'The message was not sent in a guild text or news channel',\n  [DjsErrorCodes.MessageExistingThread]: 'The message already has a thread',\n  [DjsErrorCodes.ThreadInvitableType]: type => `Invitable cannot be edited on ${type}`,\n\n  [DjsErrorCodes.WebhookMessage]: 'The message was not sent by a webhook.',\n  [DjsErrorCodes.WebhookTokenUnavailable]: 'This action requires a webhook token, but none is available.',\n  [DjsErrorCodes.WebhookURLInvalid]: 'The provided webhook URL is not valid.',\n  [DjsErrorCodes.WebhookApplication]: 'This message webhook belongs to an application and cannot be fetched.',\n  [DjsErrorCodes.MessageReferenceMissing]: 'The message does not reference another message',\n\n  [DjsErrorCodes.EmojiType]: 'Emoji must be a string or GuildEmoji/ReactionEmoji',\n  [DjsErrorCodes.EmojiManaged]: 'Emoji is managed and has no Author.',\n  [DjsErrorCodes.MissingManageGuildExpressionsPermission]: guild =>\n    `Client must have Manage Guild Expressions permission in guild ${guild} to see emoji authors.`,\n  [DjsErrorCodes.MissingManageEmojisAndStickersPermission]: guild =>\n    `Client must have Manage Emojis and Stickers permission in guild ${guild} to see emoji authors.`,\n\n  [DjsErrorCodes.NotGuildSticker]: 'Sticker is a standard (non-guild) sticker and has no author.',\n\n  [DjsErrorCodes.ReactionResolveUser]: \"Couldn't resolve the user id to remove from the reaction.\",\n\n  [DjsErrorCodes.VanityURL]: 'This guild does not have the vanity URL feature enabled.',\n\n  [DjsErrorCodes.InviteResolveCode]: 'Could not resolve the code to fetch the invite.',\n\n  [DjsErrorCodes.InviteNotFound]: 'Could not find the requested invite.',\n\n  [DjsErrorCodes.DeleteGroupDMChannel]: \"Bots don't have access to Group DM Channels and cannot delete them\",\n  [DjsErrorCodes.FetchGroupDMChannel]: \"Bots don't have access to Group DM Channels and cannot fetch them\",\n\n  [DjsErrorCodes.MemberFetchNonceLength]: 'Nonce length must not exceed 32 characters.',\n\n  [DjsErrorCodes.GlobalCommandPermissions]:\n    'Permissions for global commands may only be fetched or modified by providing a GuildResolvable ' +\n    \"or from a guild's application command manager.\",\n  [DjsErrorCodes.GuildUncachedEntityResolve]: type =>\n    `Cannot resolve ${type} from an arbitrary guild, provide an id instead`,\n\n  [DjsErrorCodes.InteractionAlreadyReplied]: 'The reply to this interaction has already been sent or deferred.',\n  [DjsErrorCodes.InteractionNotReplied]: 'The reply to this interaction has not been sent or deferred.',\n  [DjsErrorCodes.InteractionEphemeralReplied]: 'Ephemeral responses cannot be deleted.',\n\n  [DjsErrorCodes.CommandInteractionOptionNotFound]: name => `Required option \"${name}\" not found.`,\n  [DjsErrorCodes.CommandInteractionOptionType]: (name, type, expected) =>\n    `Option \"${name}\" is of type: ${type}; expected ${expected}.`,\n  [DjsErrorCodes.CommandInteractionOptionEmpty]: (name, type) =>\n    `Required option \"${name}\" is of type: ${type}; expected a non-empty value.`,\n  [DjsErrorCodes.CommandInteractionOptionNoSubcommand]: 'No subcommand specified for interaction.',\n  [DjsErrorCodes.CommandInteractionOptionNoSubcommandGroup]: 'No subcommand group specified for interaction.',\n  [DjsErrorCodes.CommandInteractionOptionInvalidChannelType]: (name, type, expected) =>\n    `The type of channel of the option \"${name}\" is: ${type}; expected ${expected}.`,\n  [DjsErrorCodes.AutocompleteInteractionOptionNoFocusedOption]: 'No focused option for autocomplete interaction.',\n\n  [DjsErrorCodes.ModalSubmitInteractionFieldNotFound]: customId =>\n    `Required field with custom id \"${customId}\" not found.`,\n  [DjsErrorCodes.ModalSubmitInteractionFieldType]: (customId, type, expected) =>\n    `Field with custom id \"${customId}\" is of type: ${type}; expected ${expected}.`,\n\n  [DjsErrorCodes.InvalidMissingScopes]: 'At least one valid scope must be provided for the invite',\n  [DjsErrorCodes.InvalidScopesWithPermissions]: 'Permissions cannot be set without the bot scope.',\n\n  [DjsErrorCodes.NotImplemented]: (what, name) => `Method ${what} not implemented on ${name}.`,\n\n  [DjsErrorCodes.SweepFilterReturn]: 'The return value of the sweepFilter function was not false or a Function',\n\n  [DjsErrorCodes.GuildForumMessageRequired]: 'You must provide a message to create a guild forum thread',\n\n  [DjsErrorCodes.EntitlementCreateInvalidOwner]:\n    'You must provide either a guild or a user to create an entitlement, but not both',\n\n  [DjsErrorCodes.BulkBanUsersOptionEmpty]: 'Option \"users\" array or collection is empty',\n\n  [DjsErrorCodes.PollAlreadyExpired]: 'This poll has already expired.',\n};\n\nmodule.exports = Messages;\n", "'use strict';\n\n// Heavily inspired by node's `internal/errors` module\nconst ErrorCodes = require('./ErrorCodes');\nconst Messages = require('./Messages');\n\n/**\n * Extend an error of some sort into a DiscordjsError.\n * @param {Error} Base Base error to extend\n * @returns {DiscordjsError}\n * @ignore\n */\nfunction makeDiscordjsError(Base) {\n  return class DiscordjsError extends Base {\n    constructor(code, ...args) {\n      super(message(code, args));\n      this.code = code;\n      Error.captureStackTrace?.(this, DiscordjsError);\n    }\n\n    get name() {\n      return `${super.name} [${this.code}]`;\n    }\n  };\n}\n\n/**\n * Format the message for an error.\n * @param {string} code The error code\n * @param {Array<*>} args Arguments to pass for util format or as function args\n * @returns {string} Formatted string\n * @ignore\n */\nfunction message(code, args) {\n  if (!(code in ErrorCodes)) throw new Error('Error code must be a valid DiscordjsErrorCodes');\n  const msg = Messages[code];\n  if (!msg) throw new Error(`No message associated with error code: ${code}.`);\n  if (typeof msg === 'function') return msg(...args);\n  if (!args?.length) return msg;\n  args.unshift(msg);\n  return String(...args);\n}\n\nmodule.exports = {\n  DiscordjsError: makeDiscordjsError(Error),\n  DiscordjsTypeError: makeDiscordjsError(TypeError),\n  DiscordjsRangeError: makeDiscordjsError(RangeError),\n};\n", "'use strict';\n\nmodule.exports = require('./DJSError');\nmodule.exports.ErrorCodes = require('./ErrorCodes');\nmodule.exports.Messages = require('./Messages');\n", "/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/** Used to match words composed of alphanumeric characters. */\nvar reAsciiWord = /[^\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\x7f]+/g;\n\n/** Used to match Latin Unicode letters (excluding mathematical operators). */\nvar reLatin = /[\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\xff\\u0100-\\u017f]/g;\n\n/** Used to compose unicode character classes. */\nvar rsAstralRange = '\\\\ud800-\\\\udfff',\n    rsComboMarksRange = '\\\\u0300-\\\\u036f\\\\ufe20-\\\\ufe23',\n    rsComboSymbolsRange = '\\\\u20d0-\\\\u20f0',\n    rsDingbatRange = '\\\\u2700-\\\\u27bf',\n    rsLowerRange = 'a-z\\\\xdf-\\\\xf6\\\\xf8-\\\\xff',\n    rsMathOpRange = '\\\\xac\\\\xb1\\\\xd7\\\\xf7',\n    rsNonCharRange = '\\\\x00-\\\\x2f\\\\x3a-\\\\x40\\\\x5b-\\\\x60\\\\x7b-\\\\xbf',\n    rsPunctuationRange = '\\\\u2000-\\\\u206f',\n    rsSpaceRange = ' \\\\t\\\\x0b\\\\f\\\\xa0\\\\ufeff\\\\n\\\\r\\\\u2028\\\\u2029\\\\u1680\\\\u180e\\\\u2000\\\\u2001\\\\u2002\\\\u2003\\\\u2004\\\\u2005\\\\u2006\\\\u2007\\\\u2008\\\\u2009\\\\u200a\\\\u202f\\\\u205f\\\\u3000',\n    rsUpperRange = 'A-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde',\n    rsVarRange = '\\\\ufe0e\\\\ufe0f',\n    rsBreakRange = rsMathOpRange + rsNonCharRange + rsPunctuationRange + rsSpaceRange;\n\n/** Used to compose unicode capture groups. */\nvar rsApos = \"['\\u2019]\",\n    rsBreak = '[' + rsBreakRange + ']',\n    rsCombo = '[' + rsComboMarksRange + rsComboSymbolsRange + ']',\n    rsDigits = '\\\\d+',\n    rsDingbat = '[' + rsDingbatRange + ']',\n    rsLower = '[' + rsLowerRange + ']',\n    rsMisc = '[^' + rsAstralRange + rsBreakRange + rsDigits + rsDingbatRange + rsLowerRange + rsUpperRange + ']',\n    rsFitz = '\\\\ud83c[\\\\udffb-\\\\udfff]',\n    rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',\n    rsNonAstral = '[^' + rsAstralRange + ']',\n    rsRegional = '(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}',\n    rsSurrPair = '[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]',\n    rsUpper = '[' + rsUpperRange + ']',\n    rsZWJ = '\\\\u200d';\n\n/** Used to compose unicode regexes. */\nvar rsLowerMisc = '(?:' + rsLower + '|' + rsMisc + ')',\n    rsUpperMisc = '(?:' + rsUpper + '|' + rsMisc + ')',\n    rsOptLowerContr = '(?:' + rsApos + '(?:d|ll|m|re|s|t|ve))?',\n    rsOptUpperContr = '(?:' + rsApos + '(?:D|LL|M|RE|S|T|VE))?',\n    reOptMod = rsModifier + '?',\n    rsOptVar = '[' + rsVarRange + ']?',\n    rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',\n    rsSeq = rsOptVar + reOptMod + rsOptJoin,\n    rsEmoji = '(?:' + [rsDingbat, rsRegional, rsSurrPair].join('|') + ')' + rsSeq;\n\n/** Used to match apostrophes. */\nvar reApos = RegExp(rsApos, 'g');\n\n/**\n * Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks) and\n * [combining diacritical marks for symbols](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks_for_Symbols).\n */\nvar reComboMark = RegExp(rsCombo, 'g');\n\n/** Used to match complex or compound words. */\nvar reUnicodeWord = RegExp([\n  rsUpper + '?' + rsLower + '+' + rsOptLowerContr + '(?=' + [rsBreak, rsUpper, '$'].join('|') + ')',\n  rsUpperMisc + '+' + rsOptUpperContr + '(?=' + [rsBreak, rsUpper + rsLowerMisc, '$'].join('|') + ')',\n  rsUpper + '?' + rsLowerMisc + '+' + rsOptLowerContr,\n  rsUpper + '+' + rsOptUpperContr,\n  rsDigits,\n  rsEmoji\n].join('|'), 'g');\n\n/** Used to detect strings that need a more robust regexp to match words. */\nvar reHasUnicodeWord = /[a-z][A-Z]|[A-Z]{2,}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;\n\n/** Used to map Latin Unicode letters to basic Latin letters. */\nvar deburredLetters = {\n  // Latin-1 Supplement block.\n  '\\xc0': 'A',  '\\xc1': 'A', '\\xc2': 'A', '\\xc3': 'A', '\\xc4': 'A', '\\xc5': 'A',\n  '\\xe0': 'a',  '\\xe1': 'a', '\\xe2': 'a', '\\xe3': 'a', '\\xe4': 'a', '\\xe5': 'a',\n  '\\xc7': 'C',  '\\xe7': 'c',\n  '\\xd0': 'D',  '\\xf0': 'd',\n  '\\xc8': 'E',  '\\xc9': 'E', '\\xca': 'E', '\\xcb': 'E',\n  '\\xe8': 'e',  '\\xe9': 'e', '\\xea': 'e', '\\xeb': 'e',\n  '\\xcc': 'I',  '\\xcd': 'I', '\\xce': 'I', '\\xcf': 'I',\n  '\\xec': 'i',  '\\xed': 'i', '\\xee': 'i', '\\xef': 'i',\n  '\\xd1': 'N',  '\\xf1': 'n',\n  '\\xd2': 'O',  '\\xd3': 'O', '\\xd4': 'O', '\\xd5': 'O', '\\xd6': 'O', '\\xd8': 'O',\n  '\\xf2': 'o',  '\\xf3': 'o', '\\xf4': 'o', '\\xf5': 'o', '\\xf6': 'o', '\\xf8': 'o',\n  '\\xd9': 'U',  '\\xda': 'U', '\\xdb': 'U', '\\xdc': 'U',\n  '\\xf9': 'u',  '\\xfa': 'u', '\\xfb': 'u', '\\xfc': 'u',\n  '\\xdd': 'Y',  '\\xfd': 'y', '\\xff': 'y',\n  '\\xc6': 'Ae', '\\xe6': 'ae',\n  '\\xde': 'Th', '\\xfe': 'th',\n  '\\xdf': 'ss',\n  // Latin Extended-A block.\n  '\\u0100': 'A',  '\\u0102': 'A', '\\u0104': 'A',\n  '\\u0101': 'a',  '\\u0103': 'a', '\\u0105': 'a',\n  '\\u0106': 'C',  '\\u0108': 'C', '\\u010a': 'C', '\\u010c': 'C',\n  '\\u0107': 'c',  '\\u0109': 'c', '\\u010b': 'c', '\\u010d': 'c',\n  '\\u010e': 'D',  '\\u0110': 'D', '\\u010f': 'd', '\\u0111': 'd',\n  '\\u0112': 'E',  '\\u0114': 'E', '\\u0116': 'E', '\\u0118': 'E', '\\u011a': 'E',\n  '\\u0113': 'e',  '\\u0115': 'e', '\\u0117': 'e', '\\u0119': 'e', '\\u011b': 'e',\n  '\\u011c': 'G',  '\\u011e': 'G', '\\u0120': 'G', '\\u0122': 'G',\n  '\\u011d': 'g',  '\\u011f': 'g', '\\u0121': 'g', '\\u0123': 'g',\n  '\\u0124': 'H',  '\\u0126': 'H', '\\u0125': 'h', '\\u0127': 'h',\n  '\\u0128': 'I',  '\\u012a': 'I', '\\u012c': 'I', '\\u012e': 'I', '\\u0130': 'I',\n  '\\u0129': 'i',  '\\u012b': 'i', '\\u012d': 'i', '\\u012f': 'i', '\\u0131': 'i',\n  '\\u0134': 'J',  '\\u0135': 'j',\n  '\\u0136': 'K',  '\\u0137': 'k', '\\u0138': 'k',\n  '\\u0139': 'L',  '\\u013b': 'L', '\\u013d': 'L', '\\u013f': 'L', '\\u0141': 'L',\n  '\\u013a': 'l',  '\\u013c': 'l', '\\u013e': 'l', '\\u0140': 'l', '\\u0142': 'l',\n  '\\u0143': 'N',  '\\u0145': 'N', '\\u0147': 'N', '\\u014a': 'N',\n  '\\u0144': 'n',  '\\u0146': 'n', '\\u0148': 'n', '\\u014b': 'n',\n  '\\u014c': 'O',  '\\u014e': 'O', '\\u0150': 'O',\n  '\\u014d': 'o',  '\\u014f': 'o', '\\u0151': 'o',\n  '\\u0154': 'R',  '\\u0156': 'R', '\\u0158': 'R',\n  '\\u0155': 'r',  '\\u0157': 'r', '\\u0159': 'r',\n  '\\u015a': 'S',  '\\u015c': 'S', '\\u015e': 'S', '\\u0160': 'S',\n  '\\u015b': 's',  '\\u015d': 's', '\\u015f': 's', '\\u0161': 's',\n  '\\u0162': 'T',  '\\u0164': 'T', '\\u0166': 'T',\n  '\\u0163': 't',  '\\u0165': 't', '\\u0167': 't',\n  '\\u0168': 'U',  '\\u016a': 'U', '\\u016c': 'U', '\\u016e': 'U', '\\u0170': 'U', '\\u0172': 'U',\n  '\\u0169': 'u',  '\\u016b': 'u', '\\u016d': 'u', '\\u016f': 'u', '\\u0171': 'u', '\\u0173': 'u',\n  '\\u0174': 'W',  '\\u0175': 'w',\n  '\\u0176': 'Y',  '\\u0177': 'y', '\\u0178': 'Y',\n  '\\u0179': 'Z',  '\\u017b': 'Z', '\\u017d': 'Z',\n  '\\u017a': 'z',  '\\u017c': 'z', '\\u017e': 'z',\n  '\\u0132': 'IJ', '\\u0133': 'ij',\n  '\\u0152': 'Oe', '\\u0153': 'oe',\n  '\\u0149': \"'n\", '\\u017f': 'ss'\n};\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/**\n * A specialized version of `_.reduce` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {*} [accumulator] The initial value.\n * @param {boolean} [initAccum] Specify using the first element of `array` as\n *  the initial value.\n * @returns {*} Returns the accumulated value.\n */\nfunction arrayReduce(array, iteratee, accumulator, initAccum) {\n  var index = -1,\n      length = array ? array.length : 0;\n\n  if (initAccum && length) {\n    accumulator = array[++index];\n  }\n  while (++index < length) {\n    accumulator = iteratee(accumulator, array[index], index, array);\n  }\n  return accumulator;\n}\n\n/**\n * Splits an ASCII `string` into an array of its words.\n *\n * @private\n * @param {string} The string to inspect.\n * @returns {Array} Returns the words of `string`.\n */\nfunction asciiWords(string) {\n  return string.match(reAsciiWord) || [];\n}\n\n/**\n * The base implementation of `_.propertyOf` without support for deep paths.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Function} Returns the new accessor function.\n */\nfunction basePropertyOf(object) {\n  return function(key) {\n    return object == null ? undefined : object[key];\n  };\n}\n\n/**\n * Used by `_.deburr` to convert Latin-1 Supplement and Latin Extended-A\n * letters to basic Latin letters.\n *\n * @private\n * @param {string} letter The matched letter to deburr.\n * @returns {string} Returns the deburred letter.\n */\nvar deburrLetter = basePropertyOf(deburredLetters);\n\n/**\n * Checks if `string` contains a word composed of Unicode symbols.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {boolean} Returns `true` if a word is found, else `false`.\n */\nfunction hasUnicodeWord(string) {\n  return reHasUnicodeWord.test(string);\n}\n\n/**\n * Splits a Unicode `string` into an array of its words.\n *\n * @private\n * @param {string} The string to inspect.\n * @returns {Array} Returns the words of `string`.\n */\nfunction unicodeWords(string) {\n  return string.match(reUnicodeWord) || [];\n}\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar Symbol = root.Symbol;\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n/**\n * The base implementation of `_.toString` which doesn't convert nullish\n * values to empty strings.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n */\nfunction baseToString(value) {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return symbolToString ? symbolToString.call(value) : '';\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\n/**\n * Creates a function like `_.camelCase`.\n *\n * @private\n * @param {Function} callback The function to combine each word.\n * @returns {Function} Returns the new compounder function.\n */\nfunction createCompounder(callback) {\n  return function(string) {\n    return arrayReduce(words(deburr(string).replace(reApos, '')), callback, '');\n  };\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && objectToString.call(value) == symbolTag);\n}\n\n/**\n * Converts `value` to a string. An empty string is returned for `null`\n * and `undefined` values. The sign of `-0` is preserved.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n * @example\n *\n * _.toString(null);\n * // => ''\n *\n * _.toString(-0);\n * // => '-0'\n *\n * _.toString([1, 2, 3]);\n * // => '1,2,3'\n */\nfunction toString(value) {\n  return value == null ? '' : baseToString(value);\n}\n\n/**\n * Deburrs `string` by converting\n * [Latin-1 Supplement](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)\n * and [Latin Extended-A](https://en.wikipedia.org/wiki/Latin_Extended-A)\n * letters to basic Latin letters and removing\n * [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to deburr.\n * @returns {string} Returns the deburred string.\n * @example\n *\n * _.deburr('déjà vu');\n * // => 'deja vu'\n */\nfunction deburr(string) {\n  string = toString(string);\n  return string && string.replace(reLatin, deburrLetter).replace(reComboMark, '');\n}\n\n/**\n * Converts `string` to\n * [snake case](https://en.wikipedia.org/wiki/Snake_case).\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to convert.\n * @returns {string} Returns the snake cased string.\n * @example\n *\n * _.snakeCase('Foo Bar');\n * // => 'foo_bar'\n *\n * _.snakeCase('fooBar');\n * // => 'foo_bar'\n *\n * _.snakeCase('--FOO-BAR--');\n * // => 'foo_bar'\n */\nvar snakeCase = createCompounder(function(result, word, index) {\n  return result + (index ? '_' : '') + word.toLowerCase();\n});\n\n/**\n * Splits `string` into an array of its words.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to inspect.\n * @param {RegExp|string} [pattern] The pattern to match words.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n * @returns {Array} Returns the words of `string`.\n * @example\n *\n * _.words('fred, barney, & pebbles');\n * // => ['fred', 'barney', 'pebbles']\n *\n * _.words('fred, barney, & pebbles', /[^, ]+/g);\n * // => ['fred', 'barney', '&', 'pebbles']\n */\nfunction words(string, pattern, guard) {\n  string = toString(string);\n  pattern = guard ? undefined : pattern;\n\n  if (pattern === undefined) {\n    return hasUnicodeWord(string) ? unicodeWords(string) : asciiWords(string);\n  }\n  return string.match(pattern) || [];\n}\n\nmodule.exports = snakeCase;\n", "'use strict';\n\nconst { isJSONEncodable } = require('@discordjs/util');\nconst snakeCase = require('lodash.snakecase');\n\n/**\n * Transforms camel-cased keys into snake cased keys\n * @param {*} obj The object to transform\n * @returns {*}\n */\nfunction toSnakeCase(obj) {\n  if (typeof obj !== 'object' || !obj) return obj;\n  if (obj instanceof Date) return obj;\n  if (isJSONEncodable(obj)) return toSnakeCase(obj.toJSON());\n  if (Array.isArray(obj)) return obj.map(toSnakeCase);\n  return Object.fromEntries(Object.entries(obj).map(([key, value]) => [snakeCase(key), toSnakeCase(value)]));\n}\n\n/**\n * Transforms an API auto moderation action object to a camel-cased variant.\n * @param {APIAutoModerationAction} autoModerationAction The action to transform\n * @returns {AutoModerationAction}\n * @ignore\n */\nfunction _transformAPIAutoModerationAction(autoModerationAction) {\n  return {\n    type: autoModerationAction.type,\n    metadata: {\n      durationSeconds: autoModerationAction.metadata.duration_seconds ?? null,\n      channelId: autoModerationAction.metadata.channel_id ?? null,\n      customMessage: autoModerationAction.metadata.custom_message ?? null,\n    },\n  };\n}\n\n/**\n * Transforms an API message interaction metadata object to a camel-cased variant.\n * @param {Client} client The client\n * @param {APIMessageInteractionMetadata} messageInteractionMetadata The metadata to transform\n * @returns {MessageInteractionMetadata}\n * @ignore\n */\nfunction _transformAPIMessageInteractionMetadata(client, messageInteractionMetadata) {\n  return {\n    id: messageInteractionMetadata.id,\n    type: messageInteractionMetadata.type,\n    user: client.users._add(messageInteractionMetadata.user),\n    authorizingIntegrationOwners: messageInteractionMetadata.authorizing_integration_owners,\n    originalResponseMessageId: messageInteractionMetadata.original_response_message_id ?? null,\n    interactedMessageId: messageInteractionMetadata.interacted_message_id ?? null,\n    triggeringInteractionMetadata: messageInteractionMetadata.triggering_interaction_metadata\n      ? _transformAPIMessageInteractionMetadata(client, messageInteractionMetadata.triggering_interaction_metadata)\n      : null,\n  };\n}\n\nmodule.exports = { toSnakeCase, _transformAPIAutoModerationAction, _transformAPIMessageInteractionMetadata };\n", "{\n  \"$schema\": \"https://json.schemastore.org/package.json\",\n  \"name\": \"discord.js\",\n  \"version\": \"14.16.3\",\n  \"description\": \"A powerful library for interacting with the Discord API\",\n  \"main\": \"./src/index.js\",\n  \"types\": \"./typings/index.d.ts\",\n  \"exports\": {\n    \".\": {\n      \"import\": {\n        \"types\": \"./typings/index.d.mts\",\n        \"default\": \"./src/index.js\"\n      },\n      \"require\": {\n        \"types\": \"./typings/index.d.ts\",\n        \"default\": \"./src/index.js\"\n      }\n    }\n  },\n  \"directories\": {\n    \"lib\": \"src\",\n    \"test\": \"test\"\n  },\n  \"files\": [\n    \"src\",\n    \"typings\"\n  ],\n  \"contributors\": [\n    \"Crawl <icrawltogo@gmail.com>\",\n    \"Amish Shah <amishshah.2k@gmail.com>\",\n    \"Vlad Frangu <me@vladfrangu.dev>\",\n    \"SpaceEEC <spaceeec@yahoo.com>\",\n    \"Aura Román <kyradiscord@gmail.com>\"\n  ],\n  \"license\": \"Apache-2.0\",\n  \"keywords\": [\n    \"discord\",\n    \"api\",\n    \"bot\",\n    \"client\",\n    \"node\",\n    \"discordapp\"\n  ],\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"https://github.com/discordjs/discord.js.git\",\n    \"directory\": \"packages/discord.js\"\n  },\n  \"bugs\": {\n    \"url\": \"https://github.com/discordjs/discord.js/issues\"\n  },\n  \"homepage\": \"https://discord.js.org\",\n  \"funding\": \"https://github.com/discordjs/discord.js?sponsor\",\n  \"dependencies\": {\n    \"@discordjs/builders\": \"^1.9.0\",\n    \"@discordjs/collection\": \"1.5.3\",\n    \"@discordjs/ws\": \"1.1.1\",\n    \"@sapphire/snowflake\": \"3.5.3\",\n    \"discord-api-types\": \"0.37.100\",\n    \"fast-deep-equal\": \"3.1.3\",\n    \"lodash.snakecase\": \"4.1.1\",\n    \"tslib\": \"^2.6.3\",\n    \"undici\": \"6.19.8\",\n    \"@discordjs/formatters\": \"^0.5.0\",\n    \"@discordjs/rest\": \"^2.4.0\",\n    \"@discordjs/util\": \"^1.1.1\"\n  },\n  \"devDependencies\": {\n    \"@favware/cliff-jumper\": \"^4.1.0\",\n    \"@types/node\": \"^16.18.105\",\n    \"@typescript-eslint/eslint-plugin\": \"^8.2.0\",\n    \"@typescript-eslint/parser\": \"^8.2.0\",\n    \"cross-env\": \"^7.0.3\",\n    \"dtslint\": \"4.2.1\",\n    \"eslint\": \"^8.57.0\",\n    \"eslint-formatter-pretty\": \"^5.0.0\",\n    \"jest\": \"29.7.0\",\n    \"prettier\": \"^3.3.3\",\n    \"tsd\": \"^0.31.1\",\n    \"tslint\": \"6.1.3\",\n    \"turbo\": \"^2.0.14\",\n    \"typescript\": \"~5.5.4\",\n    \"@discordjs/api-extractor\": \"^7.38.1\",\n    \"@discordjs/docgen\": \"^0.12.1\",\n    \"@discordjs/scripts\": \"^0.1.0\"\n  },\n  \"engines\": {\n    \"node\": \">=18\"\n  },\n  \"publishConfig\": {\n    \"provenance\": true\n  },\n  \"scripts\": {\n    \"test\": \"pnpm run docs:test && pnpm run test:typescript\",\n    \"test:typescript\": \"tsc --noEmit && tsd\",\n    \"lint\": \"prettier --check . && tslint typings/index.d.ts && cross-env ESLINT_USE_FLAT_CONFIG=false eslint --format=pretty src typings\",\n    \"format\": \"prettier --write . && cross-env ESLINT_USE_FLAT_CONFIG=false eslint --fix --format=pretty src\",\n    \"fmt\": \"pnpm run format\",\n    \"docs\": \"docgen -i \\\"./src/*.js\\\" \\\"./src/**/*.js\\\" -c ./docs/index.json -r ../../ -o ./docs/docs.json && pnpm run docs:new\",\n    \"docs:test\": \"docgen -i \\\"./src/*.js\\\" \\\"./src/**/*.js\\\" -c ./docs/index.json -r ../../\",\n    \"docs:new\": \"api-extractor run --local --minify && generate-split-documentation\",\n    \"changelog\": \"git cliff --prepend ./CHANGELOG.md -u -c ./cliff.toml -r ../../ --include-path 'packages/discord.js/*'\",\n    \"release\": \"cliff-jumper\"\n  }\n}", "'use strict';\n\nconst { Collection } = require('@discordjs/collection');\nconst { DiscordjsTypeError, ErrorCodes } = require('../errors');\n\n/**\n * Options for defining the behavior of a LimitedCollection\n * @typedef {Object} LimitedCollectionOptions\n * @property {?number} [maxSize=Infinity] The maximum size of the Collection\n * @property {?Function} [keepOverLimit=null] A function, which is passed the value and key of an entry, ran to decide\n * to keep an entry past the maximum size\n */\n\n/**\n * A Collection which holds a max amount of entries.\n * @extends {Collection}\n * @param {LimitedCollectionOptions} [options={}] Options for constructing the Collection.\n * @param {Iterable} [iterable=null] Optional entries passed to the Map constructor.\n */\nclass LimitedCollection extends Collection {\n  constructor(options = {}, iterable) {\n    if (typeof options !== 'object' || options === null) {\n      throw new DiscordjsTypeError(ErrorCodes.InvalidType, 'options', 'object', true);\n    }\n    const { maxSize = Infinity, keepOverLimit = null } = options;\n\n    if (typeof maxSize !== 'number') {\n      throw new DiscordjsTypeError(ErrorCodes.InvalidType, 'maxSize', 'number');\n    }\n    if (keepOverLimit !== null && typeof keepOverLimit !== 'function') {\n      throw new DiscordjsTypeError(ErrorCodes.InvalidType, 'keepOverLimit', 'function');\n    }\n\n    super(iterable);\n\n    /**\n     * The max size of the Collection.\n     * @type {number}\n     */\n    this.maxSize = maxSize;\n\n    /**\n     * A function called to check if an entry should be kept when the Collection is at max size.\n     * @type {?Function}\n     */\n    this.keepOverLimit = keepOverLimit;\n  }\n\n  set(key, value) {\n    if (this.maxSize === 0 && !this.keepOverLimit?.(value, key, this)) return this;\n    if (this.size >= this.maxSize && !this.has(key)) {\n      for (const [k, v] of this.entries()) {\n        const keep = this.keepOverLimit?.(v, k, this) ?? false;\n        if (!keep) {\n          this.delete(k);\n          break;\n        }\n      }\n    }\n    return super.set(key, value);\n  }\n\n  static get [Symbol.species]() {\n    return Collection;\n  }\n}\n\nmodule.exports = LimitedCollection;\n", "'use strict';\n\nconst { DefaultRestOptions, DefaultUserAgentAppendix } = require('@discordjs/rest');\nconst { toSnakeCase } = require('./Transformers');\nconst { version } = require('../../package.json');\n\n// TODO(ckohen): switch order of params so full manager is first and \"type\" is optional\n/**\n * @typedef {Function} CacheFactory\n * @param {Function} managerType The base manager class the cache is being requested from.\n * @param {Function} holds The class that the cache will hold.\n * @param {Function} manager The fully extended manager class the cache is being requested from.\n * @returns {Collection} A Collection used to store the cache of the manager.\n */\n\n/**\n * Options for a client.\n * @typedef {Object} ClientOptions\n * @property {number|number[]|string} [shards] The shard's id to run, or an array of shard ids. If not specified,\n * the client will spawn {@link ClientOptions#shardCount} shards. If set to `auto`, it will fetch the\n * recommended amount of shards from Discord and spawn that amount\n * @property {number} [closeTimeout=5_000] The amount of time in milliseconds to wait for the close frame to be received\n * from the WebSocket. Don't have this too high/low. It's best to have it between 2_000-6_000 ms.\n * @property {number} [shardCount=1] The total amount of shards used by all processes of this bot\n * (e.g. recommended shard count, shard count of the ShardingManager)\n * @property {CacheFactory} [makeCache] Function to create a cache.\n * You can use your own function, or the {@link Options} class to customize the Collection used for the cache.\n * <warn>Overriding the cache used in `GuildManager`, `ChannelManager`, `GuildChannelManager`, `RoleManager`,\n * and `PermissionOverwriteManager` is unsupported and **will** break functionality</warn>\n * @property {MessageMentionOptions} [allowedMentions] The default value for {@link BaseMessageOptions#allowedMentions}\n * @property {Partials[]} [partials] Structures allowed to be partial. This means events can be emitted even when\n * they're missing all the data for a particular structure. See the \"Partial Structures\" topic on the\n * [guide](https://discordjs.guide/popular-topics/partials.html) for some\n * important usage information, as partials require you to put checks in place when handling data.\n * @property {boolean} [failIfNotExists=true] The default value for {@link MessageReplyOptions#failIfNotExists}\n * @property {PresenceData} [presence={}] Presence data to use upon login\n * @property {IntentsResolvable} intents Intents to enable for this connection\n * @property {number} [waitGuildTimeout=15_000] Time in milliseconds that clients with the\n * {@link GatewayIntentBits.Guilds} gateway intent should wait for missing guilds to be received before being ready.\n * @property {SweeperOptions} [sweepers=this.DefaultSweeperSettings] Options for cache sweeping\n * @property {WebsocketOptions} [ws] Options for the WebSocket\n * @property {RESTOptions} [rest] Options for the REST manager\n * @property {Function} [jsonTransformer] A function used to transform outgoing json data\n * @property {boolean} [enforceNonce=false] The default value for {@link MessageReplyOptions#enforceNonce}\n */\n\n/**\n * Options for {@link Sweepers} defining the behavior of cache sweeping\n * @typedef {Object<SweeperKey, SweepOptions>} SweeperOptions\n */\n\n/**\n * Options for sweeping a single type of item from cache\n * @typedef {Object} SweepOptions\n * @property {number} interval The interval (in seconds) at which to perform sweeping of the item\n * @property {number} [lifetime] How long an item should stay in cache until it is considered sweepable.\n * <warn>This property is only valid for the `invites`, `messages`, and `threads` keys. The `filter` property\n * is mutually exclusive to this property and takes priority</warn>\n * @property {GlobalSweepFilter} filter The function used to determine the function passed to the sweep method\n * <info>This property is optional when the key is `invites`, `messages`, or `threads` and `lifetime` is set</info>\n */\n\n/**\n * A function to determine what strategy to use for sharding internally.\n * ```js\n * (manager) => new WorkerShardingStrategy(manager, { shardsPerWorker: 2 })\n * ```\n * @typedef {Function} BuildStrategyFunction\n * @param {WSWebSocketManager} manager The WebSocketManager that is going to initiate the sharding\n * @returns {IShardingStrategy} The strategy to use for sharding\n */\n\n/**\n * A function to change the concurrency handling for shard identifies of this manager\n * ```js\n * async (manager) => {\n *   const gateway = await manager.fetchGatewayInformation();\n *   return new SimpleIdentifyThrottler(gateway.session_start_limit.max_concurrency);\n * }\n * ```\n * @typedef {Function} IdentifyThrottlerFunction\n * @param {WSWebSocketManager} manager The WebSocketManager that is going to initiate the sharding\n * @returns {Awaitable<IIdentifyThrottler>} The identify throttler that this ws manager will use\n */\n\n/**\n * WebSocket options (these are left as snake_case to match the API)\n * @typedef {Object} WebsocketOptions\n * @property {number} [large_threshold=50] Number of members in a guild after which offline users will no longer be\n * sent in the initial guild member list, must be between 50 and 250\n * @property {number} [version=10] The Discord gateway version to use <warn>Changing this can break the library;\n * only set this if you know what you are doing</warn>\n * @property {BuildStrategyFunction} [buildStrategy] Builds the strategy to use for sharding\n * @property {IdentifyThrottlerFunction} [buildIdentifyThrottler] Builds the identify throttler to use for sharding\n */\n\n/**\n * Contains various utilities for client options.\n */\nclass Options extends null {\n  /**\n   * The default user agent appendix.\n   * @type {string}\n   * @memberof Options\n   * @private\n   */\n  static userAgentAppendix = `discord.js/${version} ${DefaultUserAgentAppendix}`.trimEnd();\n\n  /**\n   * The default client options.\n   * @returns {ClientOptions}\n   */\n  static createDefault() {\n    return {\n      closeTimeout: 5_000,\n      waitGuildTimeout: 15_000,\n      shardCount: 1,\n      makeCache: this.cacheWithLimits(this.DefaultMakeCacheSettings),\n      partials: [],\n      failIfNotExists: true,\n      enforceNonce: false,\n      presence: {},\n      sweepers: this.DefaultSweeperSettings,\n      ws: {\n        large_threshold: 50,\n        version: 10,\n      },\n      rest: {\n        ...DefaultRestOptions,\n        userAgentAppendix: this.userAgentAppendix,\n      },\n      jsonTransformer: toSnakeCase,\n    };\n  }\n\n  /**\n   * Create a cache factory using predefined settings to sweep or limit.\n   * @param {Object<string, LimitedCollectionOptions|number>} [settings={}] Settings passed to the relevant constructor.\n   * If no setting is provided for a manager, it uses Collection.\n   * If a number is provided for a manager, it uses that number as the max size for a LimitedCollection.\n   * If LimitedCollectionOptions are provided for a manager, it uses those settings to form a LimitedCollection.\n   * @returns {CacheFactory}\n   * @example\n   * // Store up to 200 messages per channel and 200 members per guild, always keeping the client member.\n   * Options.cacheWithLimits({\n   *    MessageManager: 200,\n   *    GuildMemberManager: {\n   *      maxSize: 200,\n   *      keepOverLimit: (member) => member.id === client.user.id,\n   *    },\n   *  });\n   */\n  static cacheWithLimits(settings = {}) {\n    const { Collection } = require('@discordjs/collection');\n    const LimitedCollection = require('./LimitedCollection');\n\n    return (managerType, _, manager) => {\n      const setting = settings[manager.name] ?? settings[managerType.name];\n      /* eslint-disable-next-line eqeqeq */\n      if (setting == null) {\n        return new Collection();\n      }\n      if (typeof setting === 'number') {\n        if (setting === Infinity) {\n          return new Collection();\n        }\n        return new LimitedCollection({ maxSize: setting });\n      }\n      /* eslint-disable-next-line eqeqeq */\n      const noLimit = setting.maxSize == null || setting.maxSize === Infinity;\n      if (noLimit) {\n        return new Collection();\n      }\n      return new LimitedCollection(setting);\n    };\n  }\n\n  /**\n   * Create a cache factory that always caches everything.\n   * @returns {CacheFactory}\n   */\n  static cacheEverything() {\n    const { Collection } = require('@discordjs/collection');\n    return () => new Collection();\n  }\n\n  /**\n   * The default settings passed to {@link ClientOptions.makeCache}.\n   * The caches that this changes are:\n   * * `MessageManager` - Limit to 200 messages\n   * <info>If you want to keep default behavior and add on top of it you can use this object and add on to it, e.g.\n   * `makeCache: Options.cacheWithLimits({ ...Options.DefaultMakeCacheSettings, ReactionManager: 0 })`</info>\n   * @type {Object<string, LimitedCollectionOptions|number>}\n   */\n  static get DefaultMakeCacheSettings() {\n    return {\n      MessageManager: 200,\n    };\n  }\n\n  /**\n   * The default settings passed to {@link ClientOptions.sweepers}.\n   * The sweepers that this changes are:\n   * * `threads` - Sweep archived threads every hour, removing those archived more than 4 hours ago\n   * <info>If you want to keep default behavior and add on top of it you can use this object and add on to it, e.g.\n   * `sweepers: { ...Options.DefaultSweeperSettings, messages: { interval: 300, lifetime: 600 } }`</info>\n   * @type {SweeperOptions}\n   */\n  static get DefaultSweeperSettings() {\n    return {\n      threads: {\n        interval: 3600,\n        lifetime: 14400,\n      },\n    };\n  }\n}\n\nmodule.exports = Options;\n\n/**\n * @external RESTOptions\n * @see {@link https://discord.js.org/docs/packages/rest/stable/RESTOptions:Interface}\n */\n\n/**\n * @external WSWebSocketManager\n * @see {@link https://discord.js.org/docs/packages/ws/stable/WebSocketManager:Class}\n */\n\n/**\n * @external IShardingStrategy\n * @see {@link https://discord.js.org/docs/packages/ws/stable/IShardingStrategy:Interface}\n */\n\n/**\n * @external IIdentifyThrottler\n * @see {@link https://discord.js.org/docs/packages/ws/stable/IIdentifyThrottler:Interface}\n */\n", "module.exports = {\n  kClose: Symbol('close'),\n  kDestroy: Symbol('destroy'),\n  kDispatch: Symbol('dispatch'),\n  kUrl: Symbol('url'),\n  kWriting: Symbol('writing'),\n  kResuming: Symbol('resuming'),\n  kQueue: Symbol('queue'),\n  kConnect: Symbol('connect'),\n  kConnecting: Symbol('connecting'),\n  kKeepAliveDefaultTimeout: Symbol('default keep alive timeout'),\n  kKeepAliveMaxTimeout: Symbol('max keep alive timeout'),\n  kKeepAliveTimeoutThreshold: Symbol('keep alive timeout threshold'),\n  kKeepAliveTimeoutValue: Symbol('keep alive timeout'),\n  kKeepAlive: Symbol('keep alive'),\n  kHeadersTimeout: Symbol('headers timeout'),\n  kBodyTimeout: Symbol('body timeout'),\n  kServerName: Symbol('server name'),\n  kLocalAddress: Symbol('local address'),\n  kHost: Symbol('host'),\n  kNoRef: Symbol('no ref'),\n  kBodyUsed: Symbol('used'),\n  kBody: Symbol('abstracted request body'),\n  kRunning: Symbol('running'),\n  kBlocking: Symbol('blocking'),\n  kPending: Symbol('pending'),\n  kSize: Symbol('size'),\n  kBusy: Symbol('busy'),\n  kQueued: Symbol('queued'),\n  kFree: Symbol('free'),\n  kConnected: Symbol('connected'),\n  kClosed: Symbol('closed'),\n  kNeedDrain: Symbol('need drain'),\n  kReset: Symbol('reset'),\n  kDestroyed: Symbol.for('nodejs.stream.destroyed'),\n  kResume: Symbol('resume'),\n  kOnError: Symbol('on error'),\n  kMaxHeadersSize: Symbol('max headers size'),\n  kRunningIdx: Symbol('running index'),\n  kPendingIdx: Symbol('pending index'),\n  kError: Symbol('error'),\n  kClients: Symbol('clients'),\n  kClient: Symbol('client'),\n  kParser: Symbol('parser'),\n  kOnDestroyed: Symbol('destroy callbacks'),\n  kPipelining: Symbol('pipelining'),\n  kSocket: Symbol('socket'),\n  kHostHeader: Symbol('host header'),\n  kConnector: Symbol('connector'),\n  kStrictContentLength: Symbol('strict content length'),\n  kMaxRedirections: Symbol('maxRedirections'),\n  kMaxRequests: Symbol('maxRequestsPerClient'),\n  kProxy: Symbol('proxy agent options'),\n  kCounter: Symbol('socket request counter'),\n  kInterceptors: Symbol('dispatch interceptors'),\n  kMaxResponseSize: Symbol('max response size'),\n  kHTTP2Session: Symbol('http2Session'),\n  kHTTP2SessionState: Symbol('http2Session state'),\n  kRetryHandlerDefaultRetry: Symbol('retry agent default retry'),\n  kConstruct: Symbol('constructable'),\n  kListeners: Symbol('listeners'),\n  kHTTPContext: Symbol('http context'),\n  kMaxConcurrentStreams: Symbol('max concurrent streams'),\n  kNoProxyAgent: Symbol('no proxy agent'),\n  kHttpProxyAgent: Symbol('http proxy agent'),\n  kHttpsProxyAgent: Symbol('https proxy agent')\n}\n", "'use strict'\n\nclass UndiciError extends Error {\n  constructor (message) {\n    super(message)\n    this.name = 'UndiciError'\n    this.code = 'UND_ERR'\n  }\n}\n\nclass ConnectTimeoutError extends UndiciError {\n  constructor (message) {\n    super(message)\n    this.name = 'ConnectTimeoutError'\n    this.message = message || 'Connect Timeout Error'\n    this.code = 'UND_ERR_CONNECT_TIMEOUT'\n  }\n}\n\nclass HeadersTimeoutError extends UndiciError {\n  constructor (message) {\n    super(message)\n    this.name = 'HeadersTimeoutError'\n    this.message = message || 'Headers Timeout Error'\n    this.code = 'UND_ERR_HEADERS_TIMEOUT'\n  }\n}\n\nclass HeadersOverflowError extends UndiciError {\n  constructor (message) {\n    super(message)\n    this.name = 'HeadersOverflowError'\n    this.message = message || 'Headers Overflow Error'\n    this.code = 'UND_ERR_HEADERS_OVERFLOW'\n  }\n}\n\nclass BodyTimeoutError extends UndiciError {\n  constructor (message) {\n    super(message)\n    this.name = 'BodyTimeoutError'\n    this.message = message || 'Body Timeout Error'\n    this.code = 'UND_ERR_BODY_TIMEOUT'\n  }\n}\n\nclass ResponseStatusCodeError extends UndiciError {\n  constructor (message, statusCode, headers, body) {\n    super(message)\n    this.name = 'ResponseStatusCodeError'\n    this.message = message || 'Response Status Code Error'\n    this.code = 'UND_ERR_RESPONSE_STATUS_CODE'\n    this.body = body\n    this.status = statusCode\n    this.statusCode = statusCode\n    this.headers = headers\n  }\n}\n\nclass InvalidArgumentError extends UndiciError {\n  constructor (message) {\n    super(message)\n    this.name = 'InvalidArgumentError'\n    this.message = message || 'Invalid Argument Error'\n    this.code = 'UND_ERR_INVALID_ARG'\n  }\n}\n\nclass InvalidReturnValueError extends UndiciError {\n  constructor (message) {\n    super(message)\n    this.name = 'InvalidReturnValueError'\n    this.message = message || 'Invalid Return Value Error'\n    this.code = 'UND_ERR_INVALID_RETURN_VALUE'\n  }\n}\n\nclass AbortError extends UndiciError {\n  constructor (message) {\n    super(message)\n    this.name = 'AbortError'\n    this.message = message || 'The operation was aborted'\n  }\n}\n\nclass RequestAbortedError extends AbortError {\n  constructor (message) {\n    super(message)\n    this.name = 'AbortError'\n    this.message = message || 'Request aborted'\n    this.code = 'UND_ERR_ABORTED'\n  }\n}\n\nclass InformationalError extends UndiciError {\n  constructor (message) {\n    super(message)\n    this.name = 'InformationalError'\n    this.message = message || 'Request information'\n    this.code = 'UND_ERR_INFO'\n  }\n}\n\nclass RequestContentLengthMismatchError extends UndiciError {\n  constructor (message) {\n    super(message)\n    this.name = 'RequestContentLengthMismatchError'\n    this.message = message || 'Request body length does not match content-length header'\n    this.code = 'UND_ERR_REQ_CONTENT_LENGTH_MISMATCH'\n  }\n}\n\nclass ResponseContentLengthMismatchError extends UndiciError {\n  constructor (message) {\n    super(message)\n    this.name = 'ResponseContentLengthMismatchError'\n    this.message = message || 'Response body length does not match content-length header'\n    this.code = 'UND_ERR_RES_CONTENT_LENGTH_MISMATCH'\n  }\n}\n\nclass ClientDestroyedError extends UndiciError {\n  constructor (message) {\n    super(message)\n    this.name = 'ClientDestroyedError'\n    this.message = message || 'The client is destroyed'\n    this.code = 'UND_ERR_DESTROYED'\n  }\n}\n\nclass ClientClosedError extends UndiciError {\n  constructor (message) {\n    super(message)\n    this.name = 'ClientClosedError'\n    this.message = message || 'The client is closed'\n    this.code = 'UND_ERR_CLOSED'\n  }\n}\n\nclass SocketError extends UndiciError {\n  constructor (message, socket) {\n    super(message)\n    this.name = 'SocketError'\n    this.message = message || 'Socket error'\n    this.code = 'UND_ERR_SOCKET'\n    this.socket = socket\n  }\n}\n\nclass NotSupportedError extends UndiciError {\n  constructor (message) {\n    super(message)\n    this.name = 'NotSupportedError'\n    this.message = message || 'Not supported error'\n    this.code = 'UND_ERR_NOT_SUPPORTED'\n  }\n}\n\nclass BalancedPoolMissingUpstreamError extends UndiciError {\n  constructor (message) {\n    super(message)\n    this.name = 'MissingUpstreamError'\n    this.message = message || 'No upstream has been added to the BalancedPool'\n    this.code = 'UND_ERR_BPL_MISSING_UPSTREAM'\n  }\n}\n\nclass HTTPParserError extends Error {\n  constructor (message, code, data) {\n    super(message)\n    this.name = 'HTTPParserError'\n    this.code = code ? `HPE_${code}` : undefined\n    this.data = data ? data.toString() : undefined\n  }\n}\n\nclass ResponseExceededMaxSizeError extends UndiciError {\n  constructor (message) {\n    super(message)\n    this.name = 'ResponseExceededMaxSizeError'\n    this.message = message || 'Response content exceeded max size'\n    this.code = 'UND_ERR_RES_EXCEEDED_MAX_SIZE'\n  }\n}\n\nclass RequestRetryError extends UndiciError {\n  constructor (message, code, { headers, data }) {\n    super(message)\n    this.name = 'RequestRetryError'\n    this.message = message || 'Request retry error'\n    this.code = 'UND_ERR_REQ_RETRY'\n    this.statusCode = code\n    this.data = data\n    this.headers = headers\n  }\n}\n\nclass SecureProxyConnectionError extends UndiciError {\n  constructor (cause, message, options) {\n    super(message, { cause, ...(options ?? {}) })\n    this.name = 'SecureProxyConnectionError'\n    this.message = message || 'Secure Proxy Connection failed'\n    this.code = 'UND_ERR_PRX_TLS'\n    this.cause = cause\n  }\n}\n\nmodule.exports = {\n  AbortError,\n  HTTPParserError,\n  UndiciError,\n  HeadersTimeoutError,\n  HeadersOverflowError,\n  BodyTimeoutError,\n  RequestContentLengthMismatchError,\n  ConnectTimeoutError,\n  ResponseStatusCodeError,\n  InvalidArgumentError,\n  InvalidReturnValueError,\n  RequestAbortedError,\n  ClientDestroyedError,\n  ClientClosedError,\n  InformationalError,\n  SocketError,\n  NotSupportedError,\n  ResponseContentLengthMismatchError,\n  BalancedPoolMissingUpstreamError,\n  ResponseExceededMaxSizeError,\n  RequestRetryError,\n  SecureProxyConnectionError\n}\n", "'use strict'\n\n/** @type {Record<string, string | undefined>} */\nconst headerNameLowerCasedRecord = {}\n\n// https://developer.mozilla.org/docs/Web/HTTP/Headers\nconst wellknownHeaderNames = [\n  'Accept',\n  'Accept-Encoding',\n  'Accept-Language',\n  'Accept-Ranges',\n  'Access-Control-Allow-Credentials',\n  'Access-Control-Allow-Headers',\n  'Access-Control-Allow-Methods',\n  'Access-Control-Allow-Origin',\n  'Access-Control-Expose-Headers',\n  'Access-Control-Max-Age',\n  'Access-Control-Request-Headers',\n  'Access-Control-Request-Method',\n  'Age',\n  'Allow',\n  'Alt-Svc',\n  'Alt-Used',\n  'Authorization',\n  'Cache-Control',\n  'Clear-Site-Data',\n  'Connection',\n  'Content-Disposition',\n  'Content-Encoding',\n  'Content-Language',\n  'Content-Length',\n  'Content-Location',\n  'Content-Range',\n  'Content-Security-Policy',\n  'Content-Security-Policy-Report-Only',\n  'Content-Type',\n  'Cookie',\n  'Cross-Origin-Embedder-Policy',\n  'Cross-Origin-Opener-Policy',\n  'Cross-Origin-Resource-Policy',\n  'Date',\n  'Device-Memory',\n  'Downlink',\n  'ECT',\n  'ETag',\n  'Expect',\n  'Expect-CT',\n  'Expires',\n  'Forwarded',\n  'From',\n  'Host',\n  'If-Match',\n  'If-Modified-Since',\n  'If-None-Match',\n  'If-Range',\n  'If-Unmodified-Since',\n  'Keep-Alive',\n  'Last-Modified',\n  'Link',\n  'Location',\n  'Max-Forwards',\n  'Origin',\n  'Permissions-Policy',\n  'Pragma',\n  'Proxy-Authenticate',\n  'Proxy-Authorization',\n  'RTT',\n  'Range',\n  'Referer',\n  'Referrer-Policy',\n  'Refresh',\n  'Retry-After',\n  'Sec-WebSocket-Accept',\n  'Sec-WebSocket-Extensions',\n  'Sec-WebSocket-Key',\n  'Sec-WebSocket-Protocol',\n  'Sec-WebSocket-Version',\n  'Server',\n  'Server-Timing',\n  'Service-Worker-Allowed',\n  'Service-Worker-Navigation-Preload',\n  'Set-Cookie',\n  'SourceMap',\n  'Strict-Transport-Security',\n  'Supports-Loading-Mode',\n  'TE',\n  'Timing-Allow-Origin',\n  'Trailer',\n  'Transfer-Encoding',\n  'Upgrade',\n  'Upgrade-Insecure-Requests',\n  'User-Agent',\n  'Vary',\n  'Via',\n  'WWW-Authenticate',\n  'X-Content-Type-Options',\n  'X-DNS-Prefetch-Control',\n  'X-Frame-Options',\n  'X-Permitted-Cross-Domain-Policies',\n  'X-Powered-By',\n  'X-Requested-With',\n  'X-XSS-Protection'\n]\n\nfor (let i = 0; i < wellknownHeaderNames.length; ++i) {\n  const key = wellknownHeaderNames[i]\n  const lowerCasedKey = key.toLowerCase()\n  headerNameLowerCasedRecord[key] = headerNameLowerCasedRecord[lowerCasedKey] =\n    lowerCasedKey\n}\n\n// Note: object prototypes should not be able to be referenced. e.g. `Object#hasOwnProperty`.\nObject.setPrototypeOf(headerNameLowerCasedRecord, null)\n\nmodule.exports = {\n  wellknownHeaderNames,\n  headerNameLowerCasedRecord\n}\n", "'use strict'\n\nconst {\n  wellknownHeaderNames,\n  headerNameLowerCasedRecord\n} = require('./constants')\n\nclass TstNode {\n  /** @type {any} */\n  value = null\n  /** @type {null | TstNode} */\n  left = null\n  /** @type {null | TstNode} */\n  middle = null\n  /** @type {null | TstNode} */\n  right = null\n  /** @type {number} */\n  code\n  /**\n   * @param {string} key\n   * @param {any} value\n   * @param {number} index\n   */\n  constructor (key, value, index) {\n    if (index === undefined || index >= key.length) {\n      throw new TypeError('Unreachable')\n    }\n    const code = this.code = key.charCodeAt(index)\n    // check code is ascii string\n    if (code > 0x7F) {\n      throw new TypeError('key must be ascii string')\n    }\n    if (key.length !== ++index) {\n      this.middle = new TstNode(key, value, index)\n    } else {\n      this.value = value\n    }\n  }\n\n  /**\n   * @param {string} key\n   * @param {any} value\n   */\n  add (key, value) {\n    const length = key.length\n    if (length === 0) {\n      throw new TypeError('Unreachable')\n    }\n    let index = 0\n    let node = this\n    while (true) {\n      const code = key.charCodeAt(index)\n      // check code is ascii string\n      if (code > 0x7F) {\n        throw new TypeError('key must be ascii string')\n      }\n      if (node.code === code) {\n        if (length === ++index) {\n          node.value = value\n          break\n        } else if (node.middle !== null) {\n          node = node.middle\n        } else {\n          node.middle = new TstNode(key, value, index)\n          break\n        }\n      } else if (node.code < code) {\n        if (node.left !== null) {\n          node = node.left\n        } else {\n          node.left = new TstNode(key, value, index)\n          break\n        }\n      } else if (node.right !== null) {\n        node = node.right\n      } else {\n        node.right = new TstNode(key, value, index)\n        break\n      }\n    }\n  }\n\n  /**\n   * @param {Uint8Array} key\n   * @return {TstNode | null}\n   */\n  search (key) {\n    const keylength = key.length\n    let index = 0\n    let node = this\n    while (node !== null && index < keylength) {\n      let code = key[index]\n      // A-Z\n      // First check if it is bigger than 0x5a.\n      // Lowercase letters have higher char codes than uppercase ones.\n      // Also we assume that headers will mostly contain lowercase characters.\n      if (code <= 0x5a && code >= 0x41) {\n        // Lowercase for uppercase.\n        code |= 32\n      }\n      while (node !== null) {\n        if (code === node.code) {\n          if (keylength === ++index) {\n            // Returns Node since it is the last key.\n            return node\n          }\n          node = node.middle\n          break\n        }\n        node = node.code < code ? node.left : node.right\n      }\n    }\n    return null\n  }\n}\n\nclass TernarySearchTree {\n  /** @type {TstNode | null} */\n  node = null\n\n  /**\n   * @param {string} key\n   * @param {any} value\n   * */\n  insert (key, value) {\n    if (this.node === null) {\n      this.node = new TstNode(key, value, 0)\n    } else {\n      this.node.add(key, value)\n    }\n  }\n\n  /**\n   * @param {Uint8Array} key\n   * @return {any}\n   */\n  lookup (key) {\n    return this.node?.search(key)?.value ?? null\n  }\n}\n\nconst tree = new TernarySearchTree()\n\nfor (let i = 0; i < wellknownHeaderNames.length; ++i) {\n  const key = headerNameLowerCasedRecord[wellknownHeaderNames[i]]\n  tree.insert(key, key)\n}\n\nmodule.exports = {\n  TernarySearchTree,\n  tree\n}\n", "'use strict'\n\nconst assert = require('node:assert')\nconst { kDestroyed, kBodyUsed, kListeners, kBody } = require('./symbols')\nconst { IncomingMessage } = require('node:http')\nconst stream = require('node:stream')\nconst net = require('node:net')\nconst { Blob } = require('node:buffer')\nconst nodeUtil = require('node:util')\nconst { stringify } = require('node:querystring')\nconst { EventEmitter: EE } = require('node:events')\nconst { InvalidArgumentError } = require('./errors')\nconst { headerNameLowerCasedRecord } = require('./constants')\nconst { tree } = require('./tree')\n\nconst [nodeMajor, nodeMinor] = process.versions.node.split('.').map(v => Number(v))\n\nclass BodyAsyncIterable {\n  constructor (body) {\n    this[kBody] = body\n    this[kBodyUsed] = false\n  }\n\n  async * [Symbol.asyncIterator] () {\n    assert(!this[kBodyUsed], 'disturbed')\n    this[kBodyUsed] = true\n    yield * this[kBody]\n  }\n}\n\nfunction wrapRequestBody (body) {\n  if (isStream(body)) {\n    // TODO (fix): Provide some way for the user to cache the file to e.g. /tmp\n    // so that it can be dispatched again?\n    // TODO (fix): Do we need 100-expect support to provide a way to do this properly?\n    if (bodyLength(body) === 0) {\n      body\n        .on('data', function () {\n          assert(false)\n        })\n    }\n\n    if (typeof body.readableDidRead !== 'boolean') {\n      body[kBodyUsed] = false\n      EE.prototype.on.call(body, 'data', function () {\n        this[kBodyUsed] = true\n      })\n    }\n\n    return body\n  } else if (body && typeof body.pipeTo === 'function') {\n    // TODO (fix): We can't access ReadableStream internal state\n    // to determine whether or not it has been disturbed. This is just\n    // a workaround.\n    return new BodyAsyncIterable(body)\n  } else if (\n    body &&\n    typeof body !== 'string' &&\n    !ArrayBuffer.isView(body) &&\n    isIterable(body)\n  ) {\n    // TODO: Should we allow re-using iterable if !this.opts.idempotent\n    // or through some other flag?\n    return new BodyAsyncIterable(body)\n  } else {\n    return body\n  }\n}\n\nfunction nop () {}\n\nfunction isStream (obj) {\n  return obj && typeof obj === 'object' && typeof obj.pipe === 'function' && typeof obj.on === 'function'\n}\n\n// based on https://github.com/node-fetch/fetch-blob/blob/8ab587d34080de94140b54f07168451e7d0b655e/index.js#L229-L241 (MIT License)\nfunction isBlobLike (object) {\n  if (object === null) {\n    return false\n  } else if (object instanceof Blob) {\n    return true\n  } else if (typeof object !== 'object') {\n    return false\n  } else {\n    const sTag = object[Symbol.toStringTag]\n\n    return (sTag === 'Blob' || sTag === 'File') && (\n      ('stream' in object && typeof object.stream === 'function') ||\n      ('arrayBuffer' in object && typeof object.arrayBuffer === 'function')\n    )\n  }\n}\n\nfunction buildURL (url, queryParams) {\n  if (url.includes('?') || url.includes('#')) {\n    throw new Error('Query params cannot be passed when url already contains \"?\" or \"#\".')\n  }\n\n  const stringified = stringify(queryParams)\n\n  if (stringified) {\n    url += '?' + stringified\n  }\n\n  return url\n}\n\nfunction isValidPort (port) {\n  const value = parseInt(port, 10)\n  return (\n    value === Number(port) &&\n    value >= 0 &&\n    value <= 65535\n  )\n}\n\nfunction isHttpOrHttpsPrefixed (value) {\n  return (\n    value != null &&\n    value[0] === 'h' &&\n    value[1] === 't' &&\n    value[2] === 't' &&\n    value[3] === 'p' &&\n    (\n      value[4] === ':' ||\n      (\n        value[4] === 's' &&\n        value[5] === ':'\n      )\n    )\n  )\n}\n\nfunction parseURL (url) {\n  if (typeof url === 'string') {\n    url = new URL(url)\n\n    if (!isHttpOrHttpsPrefixed(url.origin || url.protocol)) {\n      throw new InvalidArgumentError('Invalid URL protocol: the URL must start with `http:` or `https:`.')\n    }\n\n    return url\n  }\n\n  if (!url || typeof url !== 'object') {\n    throw new InvalidArgumentError('Invalid URL: The URL argument must be a non-null object.')\n  }\n\n  if (!(url instanceof URL)) {\n    if (url.port != null && url.port !== '' && isValidPort(url.port) === false) {\n      throw new InvalidArgumentError('Invalid URL: port must be a valid integer or a string representation of an integer.')\n    }\n\n    if (url.path != null && typeof url.path !== 'string') {\n      throw new InvalidArgumentError('Invalid URL path: the path must be a string or null/undefined.')\n    }\n\n    if (url.pathname != null && typeof url.pathname !== 'string') {\n      throw new InvalidArgumentError('Invalid URL pathname: the pathname must be a string or null/undefined.')\n    }\n\n    if (url.hostname != null && typeof url.hostname !== 'string') {\n      throw new InvalidArgumentError('Invalid URL hostname: the hostname must be a string or null/undefined.')\n    }\n\n    if (url.origin != null && typeof url.origin !== 'string') {\n      throw new InvalidArgumentError('Invalid URL origin: the origin must be a string or null/undefined.')\n    }\n\n    if (!isHttpOrHttpsPrefixed(url.origin || url.protocol)) {\n      throw new InvalidArgumentError('Invalid URL protocol: the URL must start with `http:` or `https:`.')\n    }\n\n    const port = url.port != null\n      ? url.port\n      : (url.protocol === 'https:' ? 443 : 80)\n    let origin = url.origin != null\n      ? url.origin\n      : `${url.protocol || ''}//${url.hostname || ''}:${port}`\n    let path = url.path != null\n      ? url.path\n      : `${url.pathname || ''}${url.search || ''}`\n\n    if (origin[origin.length - 1] === '/') {\n      origin = origin.slice(0, origin.length - 1)\n    }\n\n    if (path && path[0] !== '/') {\n      path = `/${path}`\n    }\n    // new URL(path, origin) is unsafe when `path` contains an absolute URL\n    // From https://developer.mozilla.org/en-US/docs/Web/API/URL/URL:\n    // If first parameter is a relative URL, second param is required, and will be used as the base URL.\n    // If first parameter is an absolute URL, a given second param will be ignored.\n    return new URL(`${origin}${path}`)\n  }\n\n  if (!isHttpOrHttpsPrefixed(url.origin || url.protocol)) {\n    throw new InvalidArgumentError('Invalid URL protocol: the URL must start with `http:` or `https:`.')\n  }\n\n  return url\n}\n\nfunction parseOrigin (url) {\n  url = parseURL(url)\n\n  if (url.pathname !== '/' || url.search || url.hash) {\n    throw new InvalidArgumentError('invalid url')\n  }\n\n  return url\n}\n\nfunction getHostname (host) {\n  if (host[0] === '[') {\n    const idx = host.indexOf(']')\n\n    assert(idx !== -1)\n    return host.substring(1, idx)\n  }\n\n  const idx = host.indexOf(':')\n  if (idx === -1) return host\n\n  return host.substring(0, idx)\n}\n\n// IP addresses are not valid server names per RFC6066\n// > Currently, the only server names supported are DNS hostnames\nfunction getServerName (host) {\n  if (!host) {\n    return null\n  }\n\n  assert.strictEqual(typeof host, 'string')\n\n  const servername = getHostname(host)\n  if (net.isIP(servername)) {\n    return ''\n  }\n\n  return servername\n}\n\nfunction deepClone (obj) {\n  return JSON.parse(JSON.stringify(obj))\n}\n\nfunction isAsyncIterable (obj) {\n  return !!(obj != null && typeof obj[Symbol.asyncIterator] === 'function')\n}\n\nfunction isIterable (obj) {\n  return !!(obj != null && (typeof obj[Symbol.iterator] === 'function' || typeof obj[Symbol.asyncIterator] === 'function'))\n}\n\nfunction bodyLength (body) {\n  if (body == null) {\n    return 0\n  } else if (isStream(body)) {\n    const state = body._readableState\n    return state && state.objectMode === false && state.ended === true && Number.isFinite(state.length)\n      ? state.length\n      : null\n  } else if (isBlobLike(body)) {\n    return body.size != null ? body.size : null\n  } else if (isBuffer(body)) {\n    return body.byteLength\n  }\n\n  return null\n}\n\nfunction isDestroyed (body) {\n  return body && !!(body.destroyed || body[kDestroyed] || (stream.isDestroyed?.(body)))\n}\n\nfunction destroy (stream, err) {\n  if (stream == null || !isStream(stream) || isDestroyed(stream)) {\n    return\n  }\n\n  if (typeof stream.destroy === 'function') {\n    if (Object.getPrototypeOf(stream).constructor === IncomingMessage) {\n      // See: https://github.com/nodejs/node/pull/38505/files\n      stream.socket = null\n    }\n\n    stream.destroy(err)\n  } else if (err) {\n    queueMicrotask(() => {\n      stream.emit('error', err)\n    })\n  }\n\n  if (stream.destroyed !== true) {\n    stream[kDestroyed] = true\n  }\n}\n\nconst KEEPALIVE_TIMEOUT_EXPR = /timeout=(\\d+)/\nfunction parseKeepAliveTimeout (val) {\n  const m = val.toString().match(KEEPALIVE_TIMEOUT_EXPR)\n  return m ? parseInt(m[1], 10) * 1000 : null\n}\n\n/**\n * Retrieves a header name and returns its lowercase value.\n * @param {string | Buffer} value Header name\n * @returns {string}\n */\nfunction headerNameToString (value) {\n  return typeof value === 'string'\n    ? headerNameLowerCasedRecord[value] ?? value.toLowerCase()\n    : tree.lookup(value) ?? value.toString('latin1').toLowerCase()\n}\n\n/**\n * Receive the buffer as a string and return its lowercase value.\n * @param {Buffer} value Header name\n * @returns {string}\n */\nfunction bufferToLowerCasedHeaderName (value) {\n  return tree.lookup(value) ?? value.toString('latin1').toLowerCase()\n}\n\n/**\n * @param {Record<string, string | string[]> | (Buffer | string | (Buffer | string)[])[]} headers\n * @param {Record<string, string | string[]>} [obj]\n * @returns {Record<string, string | string[]>}\n */\nfunction parseHeaders (headers, obj) {\n  if (obj === undefined) obj = {}\n  for (let i = 0; i < headers.length; i += 2) {\n    const key = headerNameToString(headers[i])\n    let val = obj[key]\n\n    if (val) {\n      if (typeof val === 'string') {\n        val = [val]\n        obj[key] = val\n      }\n      val.push(headers[i + 1].toString('utf8'))\n    } else {\n      const headersValue = headers[i + 1]\n      if (typeof headersValue === 'string') {\n        obj[key] = headersValue\n      } else {\n        obj[key] = Array.isArray(headersValue) ? headersValue.map(x => x.toString('utf8')) : headersValue.toString('utf8')\n      }\n    }\n  }\n\n  // See https://github.com/nodejs/node/pull/46528\n  if ('content-length' in obj && 'content-disposition' in obj) {\n    obj['content-disposition'] = Buffer.from(obj['content-disposition']).toString('latin1')\n  }\n\n  return obj\n}\n\nfunction parseRawHeaders (headers) {\n  const len = headers.length\n  const ret = new Array(len)\n\n  let hasContentLength = false\n  let contentDispositionIdx = -1\n  let key\n  let val\n  let kLen = 0\n\n  for (let n = 0; n < headers.length; n += 2) {\n    key = headers[n]\n    val = headers[n + 1]\n\n    typeof key !== 'string' && (key = key.toString())\n    typeof val !== 'string' && (val = val.toString('utf8'))\n\n    kLen = key.length\n    if (kLen === 14 && key[7] === '-' && (key === 'content-length' || key.toLowerCase() === 'content-length')) {\n      hasContentLength = true\n    } else if (kLen === 19 && key[7] === '-' && (key === 'content-disposition' || key.toLowerCase() === 'content-disposition')) {\n      contentDispositionIdx = n + 1\n    }\n    ret[n] = key\n    ret[n + 1] = val\n  }\n\n  // See https://github.com/nodejs/node/pull/46528\n  if (hasContentLength && contentDispositionIdx !== -1) {\n    ret[contentDispositionIdx] = Buffer.from(ret[contentDispositionIdx]).toString('latin1')\n  }\n\n  return ret\n}\n\nfunction isBuffer (buffer) {\n  // See, https://github.com/mcollina/undici/pull/319\n  return buffer instanceof Uint8Array || Buffer.isBuffer(buffer)\n}\n\nfunction validateHandler (handler, method, upgrade) {\n  if (!handler || typeof handler !== 'object') {\n    throw new InvalidArgumentError('handler must be an object')\n  }\n\n  if (typeof handler.onConnect !== 'function') {\n    throw new InvalidArgumentError('invalid onConnect method')\n  }\n\n  if (typeof handler.onError !== 'function') {\n    throw new InvalidArgumentError('invalid onError method')\n  }\n\n  if (typeof handler.onBodySent !== 'function' && handler.onBodySent !== undefined) {\n    throw new InvalidArgumentError('invalid onBodySent method')\n  }\n\n  if (upgrade || method === 'CONNECT') {\n    if (typeof handler.onUpgrade !== 'function') {\n      throw new InvalidArgumentError('invalid onUpgrade method')\n    }\n  } else {\n    if (typeof handler.onHeaders !== 'function') {\n      throw new InvalidArgumentError('invalid onHeaders method')\n    }\n\n    if (typeof handler.onData !== 'function') {\n      throw new InvalidArgumentError('invalid onData method')\n    }\n\n    if (typeof handler.onComplete !== 'function') {\n      throw new InvalidArgumentError('invalid onComplete method')\n    }\n  }\n}\n\n// A body is disturbed if it has been read from and it cannot\n// be re-used without losing state or data.\nfunction isDisturbed (body) {\n  // TODO (fix): Why is body[kBodyUsed] needed?\n  return !!(body && (stream.isDisturbed(body) || body[kBodyUsed]))\n}\n\nfunction isErrored (body) {\n  return !!(body && stream.isErrored(body))\n}\n\nfunction isReadable (body) {\n  return !!(body && stream.isReadable(body))\n}\n\nfunction getSocketInfo (socket) {\n  return {\n    localAddress: socket.localAddress,\n    localPort: socket.localPort,\n    remoteAddress: socket.remoteAddress,\n    remotePort: socket.remotePort,\n    remoteFamily: socket.remoteFamily,\n    timeout: socket.timeout,\n    bytesWritten: socket.bytesWritten,\n    bytesRead: socket.bytesRead\n  }\n}\n\n/** @type {globalThis['ReadableStream']} */\nfunction ReadableStreamFrom (iterable) {\n  // We cannot use ReadableStream.from here because it does not return a byte stream.\n\n  let iterator\n  return new ReadableStream(\n    {\n      async start () {\n        iterator = iterable[Symbol.asyncIterator]()\n      },\n      async pull (controller) {\n        const { done, value } = await iterator.next()\n        if (done) {\n          queueMicrotask(() => {\n            controller.close()\n            controller.byobRequest?.respond(0)\n          })\n        } else {\n          const buf = Buffer.isBuffer(value) ? value : Buffer.from(value)\n          if (buf.byteLength) {\n            controller.enqueue(new Uint8Array(buf))\n          }\n        }\n        return controller.desiredSize > 0\n      },\n      async cancel (reason) {\n        await iterator.return()\n      },\n      type: 'bytes'\n    }\n  )\n}\n\n// The chunk should be a FormData instance and contains\n// all the required methods.\nfunction isFormDataLike (object) {\n  return (\n    object &&\n    typeof object === 'object' &&\n    typeof object.append === 'function' &&\n    typeof object.delete === 'function' &&\n    typeof object.get === 'function' &&\n    typeof object.getAll === 'function' &&\n    typeof object.has === 'function' &&\n    typeof object.set === 'function' &&\n    object[Symbol.toStringTag] === 'FormData'\n  )\n}\n\nfunction addAbortListener (signal, listener) {\n  if ('addEventListener' in signal) {\n    signal.addEventListener('abort', listener, { once: true })\n    return () => signal.removeEventListener('abort', listener)\n  }\n  signal.addListener('abort', listener)\n  return () => signal.removeListener('abort', listener)\n}\n\nconst hasToWellFormed = typeof String.prototype.toWellFormed === 'function'\nconst hasIsWellFormed = typeof String.prototype.isWellFormed === 'function'\n\n/**\n * @param {string} val\n */\nfunction toUSVString (val) {\n  return hasToWellFormed ? `${val}`.toWellFormed() : nodeUtil.toUSVString(val)\n}\n\n/**\n * @param {string} val\n */\n// TODO: move this to webidl\nfunction isUSVString (val) {\n  return hasIsWellFormed ? `${val}`.isWellFormed() : toUSVString(val) === `${val}`\n}\n\n/**\n * @see https://tools.ietf.org/html/rfc7230#section-3.2.6\n * @param {number} c\n */\nfunction isTokenCharCode (c) {\n  switch (c) {\n    case 0x22:\n    case 0x28:\n    case 0x29:\n    case 0x2c:\n    case 0x2f:\n    case 0x3a:\n    case 0x3b:\n    case 0x3c:\n    case 0x3d:\n    case 0x3e:\n    case 0x3f:\n    case 0x40:\n    case 0x5b:\n    case 0x5c:\n    case 0x5d:\n    case 0x7b:\n    case 0x7d:\n      // DQUOTE and \"(),/:;<=>?@[\\]{}\"\n      return false\n    default:\n      // VCHAR %x21-7E\n      return c >= 0x21 && c <= 0x7e\n  }\n}\n\n/**\n * @param {string} characters\n */\nfunction isValidHTTPToken (characters) {\n  if (characters.length === 0) {\n    return false\n  }\n  for (let i = 0; i < characters.length; ++i) {\n    if (!isTokenCharCode(characters.charCodeAt(i))) {\n      return false\n    }\n  }\n  return true\n}\n\n// headerCharRegex have been lifted from\n// https://github.com/nodejs/node/blob/main/lib/_http_common.js\n\n/**\n * Matches if val contains an invalid field-vchar\n *  field-value    = *( field-content / obs-fold )\n *  field-content  = field-vchar [ 1*( SP / HTAB ) field-vchar ]\n *  field-vchar    = VCHAR / obs-text\n */\nconst headerCharRegex = /[^\\t\\x20-\\x7e\\x80-\\xff]/\n\n/**\n * @param {string} characters\n */\nfunction isValidHeaderValue (characters) {\n  return !headerCharRegex.test(characters)\n}\n\n// Parsed accordingly to RFC 9110\n// https://www.rfc-editor.org/rfc/rfc9110#field.content-range\nfunction parseRangeHeader (range) {\n  if (range == null || range === '') return { start: 0, end: null, size: null }\n\n  const m = range ? range.match(/^bytes (\\d+)-(\\d+)\\/(\\d+)?$/) : null\n  return m\n    ? {\n        start: parseInt(m[1]),\n        end: m[2] ? parseInt(m[2]) : null,\n        size: m[3] ? parseInt(m[3]) : null\n      }\n    : null\n}\n\nfunction addListener (obj, name, listener) {\n  const listeners = (obj[kListeners] ??= [])\n  listeners.push([name, listener])\n  obj.on(name, listener)\n  return obj\n}\n\nfunction removeAllListeners (obj) {\n  for (const [name, listener] of obj[kListeners] ?? []) {\n    obj.removeListener(name, listener)\n  }\n  obj[kListeners] = null\n}\n\nfunction errorRequest (client, request, err) {\n  try {\n    request.onError(err)\n    assert(request.aborted)\n  } catch (err) {\n    client.emit('error', err)\n  }\n}\n\nconst kEnumerableProperty = Object.create(null)\nkEnumerableProperty.enumerable = true\n\nconst normalizedMethodRecordsBase = {\n  delete: 'DELETE',\n  DELETE: 'DELETE',\n  get: 'GET',\n  GET: 'GET',\n  head: 'HEAD',\n  HEAD: 'HEAD',\n  options: 'OPTIONS',\n  OPTIONS: 'OPTIONS',\n  post: 'POST',\n  POST: 'POST',\n  put: 'PUT',\n  PUT: 'PUT'\n}\n\nconst normalizedMethodRecords = {\n  ...normalizedMethodRecordsBase,\n  patch: 'patch',\n  PATCH: 'PATCH'\n}\n\n// Note: object prototypes should not be able to be referenced. e.g. `Object#hasOwnProperty`.\nObject.setPrototypeOf(normalizedMethodRecordsBase, null)\nObject.setPrototypeOf(normalizedMethodRecords, null)\n\nmodule.exports = {\n  kEnumerableProperty,\n  nop,\n  isDisturbed,\n  isErrored,\n  isReadable,\n  toUSVString,\n  isUSVString,\n  isBlobLike,\n  parseOrigin,\n  parseURL,\n  getServerName,\n  isStream,\n  isIterable,\n  isAsyncIterable,\n  isDestroyed,\n  headerNameToString,\n  bufferToLowerCasedHeaderName,\n  addListener,\n  removeAllListeners,\n  errorRequest,\n  parseRawHeaders,\n  parseHeaders,\n  parseKeepAliveTimeout,\n  destroy,\n  bodyLength,\n  deepClone,\n  ReadableStreamFrom,\n  isBuffer,\n  validateHandler,\n  getSocketInfo,\n  isFormDataLike,\n  buildURL,\n  addAbortListener,\n  isValidHTTPToken,\n  isValidHeaderValue,\n  isTokenCharCode,\n  parseRangeHeader,\n  normalizedMethodRecordsBase,\n  normalizedMethodRecords,\n  isValidPort,\n  isHttpOrHttpsPrefixed,\n  nodeMajor,\n  nodeMinor,\n  safeHTTPMethods: ['GET', 'HEAD', 'OPTIONS', 'TRACE'],\n  wrapRequestBody\n}\n", "'use strict'\nconst diagnosticsChannel = require('node:diagnostics_channel')\nconst util = require('node:util')\n\nconst undiciDebugLog = util.debuglog('undici')\nconst fetchDebuglog = util.debuglog('fetch')\nconst websocketDebuglog = util.debuglog('websocket')\nlet isClientSet = false\nconst channels = {\n  // Client\n  beforeConnect: diagnosticsChannel.channel('undici:client:beforeConnect'),\n  connected: diagnosticsChannel.channel('undici:client:connected'),\n  connectError: diagnosticsChannel.channel('undici:client:connectError'),\n  sendHeaders: diagnosticsChannel.channel('undici:client:sendHeaders'),\n  // Request\n  create: diagnosticsChannel.channel('undici:request:create'),\n  bodySent: diagnosticsChannel.channel('undici:request:bodySent'),\n  headers: diagnosticsChannel.channel('undici:request:headers'),\n  trailers: diagnosticsChannel.channel('undici:request:trailers'),\n  error: diagnosticsChannel.channel('undici:request:error'),\n  // WebSocket\n  open: diagnosticsChannel.channel('undici:websocket:open'),\n  close: diagnosticsChannel.channel('undici:websocket:close'),\n  socketError: diagnosticsChannel.channel('undici:websocket:socket_error'),\n  ping: diagnosticsChannel.channel('undici:websocket:ping'),\n  pong: diagnosticsChannel.channel('undici:websocket:pong')\n}\n\nif (undiciDebugLog.enabled || fetchDebuglog.enabled) {\n  const debuglog = fetchDebuglog.enabled ? fetchDebuglog : undiciDebugLog\n\n  // Track all Client events\n  diagnosticsChannel.channel('undici:client:beforeConnect').subscribe(evt => {\n    const {\n      connectParams: { version, protocol, port, host }\n    } = evt\n    debuglog(\n      'connecting to %s using %s%s',\n      `${host}${port ? `:${port}` : ''}`,\n      protocol,\n      version\n    )\n  })\n\n  diagnosticsChannel.channel('undici:client:connected').subscribe(evt => {\n    const {\n      connectParams: { version, protocol, port, host }\n    } = evt\n    debuglog(\n      'connected to %s using %s%s',\n      `${host}${port ? `:${port}` : ''}`,\n      protocol,\n      version\n    )\n  })\n\n  diagnosticsChannel.channel('undici:client:connectError').subscribe(evt => {\n    const {\n      connectParams: { version, protocol, port, host },\n      error\n    } = evt\n    debuglog(\n      'connection to %s using %s%s errored - %s',\n      `${host}${port ? `:${port}` : ''}`,\n      protocol,\n      version,\n      error.message\n    )\n  })\n\n  diagnosticsChannel.channel('undici:client:sendHeaders').subscribe(evt => {\n    const {\n      request: { method, path, origin }\n    } = evt\n    debuglog('sending request to %s %s/%s', method, origin, path)\n  })\n\n  // Track Request events\n  diagnosticsChannel.channel('undici:request:headers').subscribe(evt => {\n    const {\n      request: { method, path, origin },\n      response: { statusCode }\n    } = evt\n    debuglog(\n      'received response to %s %s/%s - HTTP %d',\n      method,\n      origin,\n      path,\n      statusCode\n    )\n  })\n\n  diagnosticsChannel.channel('undici:request:trailers').subscribe(evt => {\n    const {\n      request: { method, path, origin }\n    } = evt\n    debuglog('trailers received from %s %s/%s', method, origin, path)\n  })\n\n  diagnosticsChannel.channel('undici:request:error').subscribe(evt => {\n    const {\n      request: { method, path, origin },\n      error\n    } = evt\n    debuglog(\n      'request to %s %s/%s errored - %s',\n      method,\n      origin,\n      path,\n      error.message\n    )\n  })\n\n  isClientSet = true\n}\n\nif (websocketDebuglog.enabled) {\n  if (!isClientSet) {\n    const debuglog = undiciDebugLog.enabled ? undiciDebugLog : websocketDebuglog\n    diagnosticsChannel.channel('undici:client:beforeConnect').subscribe(evt => {\n      const {\n        connectParams: { version, protocol, port, host }\n      } = evt\n      debuglog(\n        'connecting to %s%s using %s%s',\n        host,\n        port ? `:${port}` : '',\n        protocol,\n        version\n      )\n    })\n\n    diagnosticsChannel.channel('undici:client:connected').subscribe(evt => {\n      const {\n        connectParams: { version, protocol, port, host }\n      } = evt\n      debuglog(\n        'connected to %s%s using %s%s',\n        host,\n        port ? `:${port}` : '',\n        protocol,\n        version\n      )\n    })\n\n    diagnosticsChannel.channel('undici:client:connectError').subscribe(evt => {\n      const {\n        connectParams: { version, protocol, port, host },\n        error\n      } = evt\n      debuglog(\n        'connection to %s%s using %s%s errored - %s',\n        host,\n        port ? `:${port}` : '',\n        protocol,\n        version,\n        error.message\n      )\n    })\n\n    diagnosticsChannel.channel('undici:client:sendHeaders').subscribe(evt => {\n      const {\n        request: { method, path, origin }\n      } = evt\n      debuglog('sending request to %s %s/%s', method, origin, path)\n    })\n  }\n\n  // Track all WebSocket events\n  diagnosticsChannel.channel('undici:websocket:open').subscribe(evt => {\n    const {\n      address: { address, port }\n    } = evt\n    websocketDebuglog('connection opened %s%s', address, port ? `:${port}` : '')\n  })\n\n  diagnosticsChannel.channel('undici:websocket:close').subscribe(evt => {\n    const { websocket, code, reason } = evt\n    websocketDebuglog(\n      'closed connection to %s - %s %s',\n      websocket.url,\n      code,\n      reason\n    )\n  })\n\n  diagnosticsChannel.channel('undici:websocket:socket_error').subscribe(err => {\n    websocketDebuglog('connection errored - %s', err.message)\n  })\n\n  diagnosticsChannel.channel('undici:websocket:ping').subscribe(evt => {\n    websocketDebuglog('ping received')\n  })\n\n  diagnosticsChannel.channel('undici:websocket:pong').subscribe(evt => {\n    websocketDebuglog('pong received')\n  })\n}\n\nmodule.exports = {\n  channels\n}\n", "'use strict'\n\nconst {\n  InvalidArgumentError,\n  NotSupportedError\n} = require('./errors')\nconst assert = require('node:assert')\nconst {\n  isValidHTTPToken,\n  isValidHeaderValue,\n  isStream,\n  destroy,\n  isBuffer,\n  isFormDataLike,\n  isIterable,\n  isBlobLike,\n  buildURL,\n  validateHandler,\n  getServerName,\n  normalizedMethodRecords\n} = require('./util')\nconst { channels } = require('./diagnostics.js')\nconst { headerNameLowerCasedRecord } = require('./constants')\n\n// Verifies that a given path is valid does not contain control chars \\x00 to \\x20\nconst invalidPathRegex = /[^\\u0021-\\u00ff]/\n\nconst kHandler = Symbol('handler')\n\nclass Request {\n  constructor (origin, {\n    path,\n    method,\n    body,\n    headers,\n    query,\n    idempotent,\n    blocking,\n    upgrade,\n    headersTimeout,\n    bodyTimeout,\n    reset,\n    throwOnError,\n    expectContinue,\n    servername\n  }, handler) {\n    if (typeof path !== 'string') {\n      throw new InvalidArgumentError('path must be a string')\n    } else if (\n      path[0] !== '/' &&\n      !(path.startsWith('http://') || path.startsWith('https://')) &&\n      method !== 'CONNECT'\n    ) {\n      throw new InvalidArgumentError('path must be an absolute URL or start with a slash')\n    } else if (invalidPathRegex.test(path)) {\n      throw new InvalidArgumentError('invalid request path')\n    }\n\n    if (typeof method !== 'string') {\n      throw new InvalidArgumentError('method must be a string')\n    } else if (normalizedMethodRecords[method] === undefined && !isValidHTTPToken(method)) {\n      throw new InvalidArgumentError('invalid request method')\n    }\n\n    if (upgrade && typeof upgrade !== 'string') {\n      throw new InvalidArgumentError('upgrade must be a string')\n    }\n\n    if (headersTimeout != null && (!Number.isFinite(headersTimeout) || headersTimeout < 0)) {\n      throw new InvalidArgumentError('invalid headersTimeout')\n    }\n\n    if (bodyTimeout != null && (!Number.isFinite(bodyTimeout) || bodyTimeout < 0)) {\n      throw new InvalidArgumentError('invalid bodyTimeout')\n    }\n\n    if (reset != null && typeof reset !== 'boolean') {\n      throw new InvalidArgumentError('invalid reset')\n    }\n\n    if (expectContinue != null && typeof expectContinue !== 'boolean') {\n      throw new InvalidArgumentError('invalid expectContinue')\n    }\n\n    this.headersTimeout = headersTimeout\n\n    this.bodyTimeout = bodyTimeout\n\n    this.throwOnError = throwOnError === true\n\n    this.method = method\n\n    this.abort = null\n\n    if (body == null) {\n      this.body = null\n    } else if (isStream(body)) {\n      this.body = body\n\n      const rState = this.body._readableState\n      if (!rState || !rState.autoDestroy) {\n        this.endHandler = function autoDestroy () {\n          destroy(this)\n        }\n        this.body.on('end', this.endHandler)\n      }\n\n      this.errorHandler = err => {\n        if (this.abort) {\n          this.abort(err)\n        } else {\n          this.error = err\n        }\n      }\n      this.body.on('error', this.errorHandler)\n    } else if (isBuffer(body)) {\n      this.body = body.byteLength ? body : null\n    } else if (ArrayBuffer.isView(body)) {\n      this.body = body.buffer.byteLength ? Buffer.from(body.buffer, body.byteOffset, body.byteLength) : null\n    } else if (body instanceof ArrayBuffer) {\n      this.body = body.byteLength ? Buffer.from(body) : null\n    } else if (typeof body === 'string') {\n      this.body = body.length ? Buffer.from(body) : null\n    } else if (isFormDataLike(body) || isIterable(body) || isBlobLike(body)) {\n      this.body = body\n    } else {\n      throw new InvalidArgumentError('body must be a string, a Buffer, a Readable stream, an iterable, or an async iterable')\n    }\n\n    this.completed = false\n\n    this.aborted = false\n\n    this.upgrade = upgrade || null\n\n    this.path = query ? buildURL(path, query) : path\n\n    this.origin = origin\n\n    this.idempotent = idempotent == null\n      ? method === 'HEAD' || method === 'GET'\n      : idempotent\n\n    this.blocking = blocking == null ? false : blocking\n\n    this.reset = reset == null ? null : reset\n\n    this.host = null\n\n    this.contentLength = null\n\n    this.contentType = null\n\n    this.headers = []\n\n    // Only for H2\n    this.expectContinue = expectContinue != null ? expectContinue : false\n\n    if (Array.isArray(headers)) {\n      if (headers.length % 2 !== 0) {\n        throw new InvalidArgumentError('headers array must be even')\n      }\n      for (let i = 0; i < headers.length; i += 2) {\n        processHeader(this, headers[i], headers[i + 1])\n      }\n    } else if (headers && typeof headers === 'object') {\n      if (headers[Symbol.iterator]) {\n        for (const header of headers) {\n          if (!Array.isArray(header) || header.length !== 2) {\n            throw new InvalidArgumentError('headers must be in key-value pair format')\n          }\n          processHeader(this, header[0], header[1])\n        }\n      } else {\n        const keys = Object.keys(headers)\n        for (let i = 0; i < keys.length; ++i) {\n          processHeader(this, keys[i], headers[keys[i]])\n        }\n      }\n    } else if (headers != null) {\n      throw new InvalidArgumentError('headers must be an object or an array')\n    }\n\n    validateHandler(handler, method, upgrade)\n\n    this.servername = servername || getServerName(this.host)\n\n    this[kHandler] = handler\n\n    if (channels.create.hasSubscribers) {\n      channels.create.publish({ request: this })\n    }\n  }\n\n  onBodySent (chunk) {\n    if (this[kHandler].onBodySent) {\n      try {\n        return this[kHandler].onBodySent(chunk)\n      } catch (err) {\n        this.abort(err)\n      }\n    }\n  }\n\n  onRequestSent () {\n    if (channels.bodySent.hasSubscribers) {\n      channels.bodySent.publish({ request: this })\n    }\n\n    if (this[kHandler].onRequestSent) {\n      try {\n        return this[kHandler].onRequestSent()\n      } catch (err) {\n        this.abort(err)\n      }\n    }\n  }\n\n  onConnect (abort) {\n    assert(!this.aborted)\n    assert(!this.completed)\n\n    if (this.error) {\n      abort(this.error)\n    } else {\n      this.abort = abort\n      return this[kHandler].onConnect(abort)\n    }\n  }\n\n  onResponseStarted () {\n    return this[kHandler].onResponseStarted?.()\n  }\n\n  onHeaders (statusCode, headers, resume, statusText) {\n    assert(!this.aborted)\n    assert(!this.completed)\n\n    if (channels.headers.hasSubscribers) {\n      channels.headers.publish({ request: this, response: { statusCode, headers, statusText } })\n    }\n\n    try {\n      return this[kHandler].onHeaders(statusCode, headers, resume, statusText)\n    } catch (err) {\n      this.abort(err)\n    }\n  }\n\n  onData (chunk) {\n    assert(!this.aborted)\n    assert(!this.completed)\n\n    try {\n      return this[kHandler].onData(chunk)\n    } catch (err) {\n      this.abort(err)\n      return false\n    }\n  }\n\n  onUpgrade (statusCode, headers, socket) {\n    assert(!this.aborted)\n    assert(!this.completed)\n\n    return this[kHandler].onUpgrade(statusCode, headers, socket)\n  }\n\n  onComplete (trailers) {\n    this.onFinally()\n\n    assert(!this.aborted)\n\n    this.completed = true\n    if (channels.trailers.hasSubscribers) {\n      channels.trailers.publish({ request: this, trailers })\n    }\n\n    try {\n      return this[kHandler].onComplete(trailers)\n    } catch (err) {\n      // TODO (fix): This might be a bad idea?\n      this.onError(err)\n    }\n  }\n\n  onError (error) {\n    this.onFinally()\n\n    if (channels.error.hasSubscribers) {\n      channels.error.publish({ request: this, error })\n    }\n\n    if (this.aborted) {\n      return\n    }\n    this.aborted = true\n\n    return this[kHandler].onError(error)\n  }\n\n  onFinally () {\n    if (this.errorHandler) {\n      this.body.off('error', this.errorHandler)\n      this.errorHandler = null\n    }\n\n    if (this.endHandler) {\n      this.body.off('end', this.endHandler)\n      this.endHandler = null\n    }\n  }\n\n  addHeader (key, value) {\n    processHeader(this, key, value)\n    return this\n  }\n}\n\nfunction processHeader (request, key, val) {\n  if (val && (typeof val === 'object' && !Array.isArray(val))) {\n    throw new InvalidArgumentError(`invalid ${key} header`)\n  } else if (val === undefined) {\n    return\n  }\n\n  let headerName = headerNameLowerCasedRecord[key]\n\n  if (headerName === undefined) {\n    headerName = key.toLowerCase()\n    if (headerNameLowerCasedRecord[headerName] === undefined && !isValidHTTPToken(headerName)) {\n      throw new InvalidArgumentError('invalid header key')\n    }\n  }\n\n  if (Array.isArray(val)) {\n    const arr = []\n    for (let i = 0; i < val.length; i++) {\n      if (typeof val[i] === 'string') {\n        if (!isValidHeaderValue(val[i])) {\n          throw new InvalidArgumentError(`invalid ${key} header`)\n        }\n        arr.push(val[i])\n      } else if (val[i] === null) {\n        arr.push('')\n      } else if (typeof val[i] === 'object') {\n        throw new InvalidArgumentError(`invalid ${key} header`)\n      } else {\n        arr.push(`${val[i]}`)\n      }\n    }\n    val = arr\n  } else if (typeof val === 'string') {\n    if (!isValidHeaderValue(val)) {\n      throw new InvalidArgumentError(`invalid ${key} header`)\n    }\n  } else if (val === null) {\n    val = ''\n  } else {\n    val = `${val}`\n  }\n\n  if (request.host === null && headerName === 'host') {\n    if (typeof val !== 'string') {\n      throw new InvalidArgumentError('invalid host header')\n    }\n    // Consumed by Client\n    request.host = val\n  } else if (request.contentLength === null && headerName === 'content-length') {\n    request.contentLength = parseInt(val, 10)\n    if (!Number.isFinite(request.contentLength)) {\n      throw new InvalidArgumentError('invalid content-length header')\n    }\n  } else if (request.contentType === null && headerName === 'content-type') {\n    request.contentType = val\n    request.headers.push(key, val)\n  } else if (headerName === 'transfer-encoding' || headerName === 'keep-alive' || headerName === 'upgrade') {\n    throw new InvalidArgumentError(`invalid ${headerName} header`)\n  } else if (headerName === 'connection') {\n    const value = typeof val === 'string' ? val.toLowerCase() : null\n    if (value !== 'close' && value !== 'keep-alive') {\n      throw new InvalidArgumentError('invalid connection header')\n    }\n\n    if (value === 'close') {\n      request.reset = true\n    }\n  } else if (headerName === 'expect') {\n    throw new NotSupportedError('expect header not supported')\n  } else {\n    request.headers.push(key, val)\n  }\n}\n\nmodule.exports = Request\n", "'use strict'\nconst EventEmitter = require('node:events')\n\nclass Dispatcher extends EventEmitter {\n  dispatch () {\n    throw new Error('not implemented')\n  }\n\n  close () {\n    throw new Error('not implemented')\n  }\n\n  destroy () {\n    throw new Error('not implemented')\n  }\n\n  compose (...args) {\n    // So we handle [interceptor1, interceptor2] or interceptor1, interceptor2, ...\n    const interceptors = Array.isArray(args[0]) ? args[0] : args\n    let dispatch = this.dispatch.bind(this)\n\n    for (const interceptor of interceptors) {\n      if (interceptor == null) {\n        continue\n      }\n\n      if (typeof interceptor !== 'function') {\n        throw new TypeError(`invalid interceptor, expected function received ${typeof interceptor}`)\n      }\n\n      dispatch = interceptor(dispatch)\n\n      if (dispatch == null || typeof dispatch !== 'function' || dispatch.length !== 2) {\n        throw new TypeError('invalid interceptor')\n      }\n    }\n\n    return new ComposedDispatcher(this, dispatch)\n  }\n}\n\nclass ComposedDispatcher extends Dispatcher {\n  #dispatcher = null\n  #dispatch = null\n\n  constructor (dispatcher, dispatch) {\n    super()\n    this.#dispatcher = dispatcher\n    this.#dispatch = dispatch\n  }\n\n  dispatch (...args) {\n    this.#dispatch(...args)\n  }\n\n  close (...args) {\n    return this.#dispatcher.close(...args)\n  }\n\n  destroy (...args) {\n    return this.#dispatcher.destroy(...args)\n  }\n}\n\nmodule.exports = Dispatcher\n", "'use strict'\n\nconst Dispatcher = require('./dispatcher')\nconst {\n  ClientDestroyedError,\n  ClientClosedError,\n  InvalidArgumentError\n} = require('../core/errors')\nconst { kDestroy, kClose, kClosed, kDestroyed, kDispatch, kInterceptors } = require('../core/symbols')\n\nconst kOnDestroyed = Symbol('onDestroyed')\nconst kOnClosed = Symbol('onClosed')\nconst kInterceptedDispatch = Symbol('Intercepted Dispatch')\n\nclass DispatcherBase extends Dispatcher {\n  constructor () {\n    super()\n\n    this[kDestroyed] = false\n    this[kOnDestroyed] = null\n    this[kClosed] = false\n    this[kOnClosed] = []\n  }\n\n  get destroyed () {\n    return this[kDestroyed]\n  }\n\n  get closed () {\n    return this[kClosed]\n  }\n\n  get interceptors () {\n    return this[kInterceptors]\n  }\n\n  set interceptors (newInterceptors) {\n    if (newInterceptors) {\n      for (let i = newInterceptors.length - 1; i >= 0; i--) {\n        const interceptor = this[kInterceptors][i]\n        if (typeof interceptor !== 'function') {\n          throw new InvalidArgumentError('interceptor must be an function')\n        }\n      }\n    }\n\n    this[kInterceptors] = newInterceptors\n  }\n\n  close (callback) {\n    if (callback === undefined) {\n      return new Promise((resolve, reject) => {\n        this.close((err, data) => {\n          return err ? reject(err) : resolve(data)\n        })\n      })\n    }\n\n    if (typeof callback !== 'function') {\n      throw new InvalidArgumentError('invalid callback')\n    }\n\n    if (this[kDestroyed]) {\n      queueMicrotask(() => callback(new ClientDestroyedError(), null))\n      return\n    }\n\n    if (this[kClosed]) {\n      if (this[kOnClosed]) {\n        this[kOnClosed].push(callback)\n      } else {\n        queueMicrotask(() => callback(null, null))\n      }\n      return\n    }\n\n    this[kClosed] = true\n    this[kOnClosed].push(callback)\n\n    const onClosed = () => {\n      const callbacks = this[kOnClosed]\n      this[kOnClosed] = null\n      for (let i = 0; i < callbacks.length; i++) {\n        callbacks[i](null, null)\n      }\n    }\n\n    // Should not error.\n    this[kClose]()\n      .then(() => this.destroy())\n      .then(() => {\n        queueMicrotask(onClosed)\n      })\n  }\n\n  destroy (err, callback) {\n    if (typeof err === 'function') {\n      callback = err\n      err = null\n    }\n\n    if (callback === undefined) {\n      return new Promise((resolve, reject) => {\n        this.destroy(err, (err, data) => {\n          return err ? /* istanbul ignore next: should never error */ reject(err) : resolve(data)\n        })\n      })\n    }\n\n    if (typeof callback !== 'function') {\n      throw new InvalidArgumentError('invalid callback')\n    }\n\n    if (this[kDestroyed]) {\n      if (this[kOnDestroyed]) {\n        this[kOnDestroyed].push(callback)\n      } else {\n        queueMicrotask(() => callback(null, null))\n      }\n      return\n    }\n\n    if (!err) {\n      err = new ClientDestroyedError()\n    }\n\n    this[kDestroyed] = true\n    this[kOnDestroyed] = this[kOnDestroyed] || []\n    this[kOnDestroyed].push(callback)\n\n    const onDestroyed = () => {\n      const callbacks = this[kOnDestroyed]\n      this[kOnDestroyed] = null\n      for (let i = 0; i < callbacks.length; i++) {\n        callbacks[i](null, null)\n      }\n    }\n\n    // Should not error.\n    this[kDestroy](err).then(() => {\n      queueMicrotask(onDestroyed)\n    })\n  }\n\n  [kInterceptedDispatch] (opts, handler) {\n    if (!this[kInterceptors] || this[kInterceptors].length === 0) {\n      this[kInterceptedDispatch] = this[kDispatch]\n      return this[kDispatch](opts, handler)\n    }\n\n    let dispatch = this[kDispatch].bind(this)\n    for (let i = this[kInterceptors].length - 1; i >= 0; i--) {\n      dispatch = this[kInterceptors][i](dispatch)\n    }\n    this[kInterceptedDispatch] = dispatch\n    return dispatch(opts, handler)\n  }\n\n  dispatch (opts, handler) {\n    if (!handler || typeof handler !== 'object') {\n      throw new InvalidArgumentError('handler must be an object')\n    }\n\n    try {\n      if (!opts || typeof opts !== 'object') {\n        throw new InvalidArgumentError('opts must be an object.')\n      }\n\n      if (this[kDestroyed] || this[kOnDestroyed]) {\n        throw new ClientDestroyedError()\n      }\n\n      if (this[kClosed]) {\n        throw new ClientClosedError()\n      }\n\n      return this[kInterceptedDispatch](opts, handler)\n    } catch (err) {\n      if (typeof handler.onError !== 'function') {\n        throw new InvalidArgumentError('invalid onError method')\n      }\n\n      handler.onError(err)\n\n      return false\n    }\n  }\n}\n\nmodule.exports = DispatcherBase\n", "'use strict'\n\nconst net = require('node:net')\nconst assert = require('node:assert')\nconst util = require('./util')\nconst { InvalidArgumentError, ConnectTimeoutError } = require('./errors')\n\nlet tls // include tls conditionally since it is not always available\n\n// TODO: session re-use does not wait for the first\n// connection to resolve the session and might therefore\n// resolve the same servername multiple times even when\n// re-use is enabled.\n\nlet SessionCache\n// FIXME: remove workaround when the Node bug is fixed\n// https://github.com/nodejs/node/issues/49344#issuecomment-1741776308\nif (global.FinalizationRegistry && !(process.env.NODE_V8_COVERAGE || process.env.UNDICI_NO_FG)) {\n  SessionCache = class WeakSessionCache {\n    constructor (maxCachedSessions) {\n      this._maxCachedSessions = maxCachedSessions\n      this._sessionCache = new Map()\n      this._sessionRegistry = new global.FinalizationRegistry((key) => {\n        if (this._sessionCache.size < this._maxCachedSessions) {\n          return\n        }\n\n        const ref = this._sessionCache.get(key)\n        if (ref !== undefined && ref.deref() === undefined) {\n          this._sessionCache.delete(key)\n        }\n      })\n    }\n\n    get (sessionKey) {\n      const ref = this._sessionCache.get(sessionKey)\n      return ref ? ref.deref() : null\n    }\n\n    set (sessionKey, session) {\n      if (this._maxCachedSessions === 0) {\n        return\n      }\n\n      this._sessionCache.set(sessionKey, new WeakRef(session))\n      this._sessionRegistry.register(session, sessionKey)\n    }\n  }\n} else {\n  SessionCache = class SimpleSessionCache {\n    constructor (maxCachedSessions) {\n      this._maxCachedSessions = maxCachedSessions\n      this._sessionCache = new Map()\n    }\n\n    get (sessionKey) {\n      return this._sessionCache.get(sessionKey)\n    }\n\n    set (sessionKey, session) {\n      if (this._maxCachedSessions === 0) {\n        return\n      }\n\n      if (this._sessionCache.size >= this._maxCachedSessions) {\n        // remove the oldest session\n        const { value: oldestKey } = this._sessionCache.keys().next()\n        this._sessionCache.delete(oldestKey)\n      }\n\n      this._sessionCache.set(sessionKey, session)\n    }\n  }\n}\n\nfunction buildConnector ({ allowH2, maxCachedSessions, socketPath, timeout, session: customSession, ...opts }) {\n  if (maxCachedSessions != null && (!Number.isInteger(maxCachedSessions) || maxCachedSessions < 0)) {\n    throw new InvalidArgumentError('maxCachedSessions must be a positive integer or zero')\n  }\n\n  const options = { path: socketPath, ...opts }\n  const sessionCache = new SessionCache(maxCachedSessions == null ? 100 : maxCachedSessions)\n  timeout = timeout == null ? 10e3 : timeout\n  allowH2 = allowH2 != null ? allowH2 : false\n  return function connect ({ hostname, host, protocol, port, servername, localAddress, httpSocket }, callback) {\n    let socket\n    if (protocol === 'https:') {\n      if (!tls) {\n        tls = require('node:tls')\n      }\n      servername = servername || options.servername || util.getServerName(host) || null\n\n      const sessionKey = servername || hostname\n      const session = customSession || sessionCache.get(sessionKey) || null\n\n      assert(sessionKey)\n\n      socket = tls.connect({\n        highWaterMark: 16384, // TLS in node can't have bigger HWM anyway...\n        ...options,\n        servername,\n        session,\n        localAddress,\n        // TODO(HTTP/2): Add support for h2c\n        ALPNProtocols: allowH2 ? ['http/1.1', 'h2'] : ['http/1.1'],\n        socket: httpSocket, // upgrade socket connection\n        port: port || 443,\n        host: hostname\n      })\n\n      socket\n        .on('session', function (session) {\n          // TODO (fix): Can a session become invalid once established? Don't think so?\n          sessionCache.set(sessionKey, session)\n        })\n    } else {\n      assert(!httpSocket, 'httpSocket can only be sent on TLS update')\n      socket = net.connect({\n        highWaterMark: 64 * 1024, // Same as nodejs fs streams.\n        ...options,\n        localAddress,\n        port: port || 80,\n        host: hostname\n      })\n    }\n\n    // Set TCP keep alive options on the socket here instead of in connect() for the case of assigning the socket\n    if (options.keepAlive == null || options.keepAlive) {\n      const keepAliveInitialDelay = options.keepAliveInitialDelay === undefined ? 60e3 : options.keepAliveInitialDelay\n      socket.setKeepAlive(true, keepAliveInitialDelay)\n    }\n\n    const cancelTimeout = setupTimeout(() => onConnectTimeout(socket), timeout)\n\n    socket\n      .setNoDelay(true)\n      .once(protocol === 'https:' ? 'secureConnect' : 'connect', function () {\n        cancelTimeout()\n\n        if (callback) {\n          const cb = callback\n          callback = null\n          cb(null, this)\n        }\n      })\n      .on('error', function (err) {\n        cancelTimeout()\n\n        if (callback) {\n          const cb = callback\n          callback = null\n          cb(err)\n        }\n      })\n\n    return socket\n  }\n}\n\nfunction setupTimeout (onConnectTimeout, timeout) {\n  if (!timeout) {\n    return () => {}\n  }\n\n  let s1 = null\n  let s2 = null\n  const timeoutId = setTimeout(() => {\n    // setImmediate is added to make sure that we prioritize socket error events over timeouts\n    s1 = setImmediate(() => {\n      if (process.platform === 'win32') {\n        // Windows needs an extra setImmediate probably due to implementation differences in the socket logic\n        s2 = setImmediate(() => onConnectTimeout())\n      } else {\n        onConnectTimeout()\n      }\n    })\n  }, timeout)\n  return () => {\n    clearTimeout(timeoutId)\n    clearImmediate(s1)\n    clearImmediate(s2)\n  }\n}\n\nfunction onConnectTimeout (socket) {\n  let message = 'Connect Timeout Error'\n  if (Array.isArray(socket.autoSelectFamilyAttemptedAddresses)) {\n    message += ` (attempted addresses: ${socket.autoSelectFamilyAttemptedAddresses.join(', ')})`\n  }\n  util.destroy(socket, new ConnectTimeoutError(message))\n}\n\nmodule.exports = buildConnector\n", "'use strict'\n\nconst TICK_MS = 499\n\nlet fastNow = Date.now()\nlet fastNowTimeout\n\nconst fastTimers = []\n\nfunction onTimeout () {\n  fastNow = Date.now()\n\n  let len = fastTimers.length\n  let idx = 0\n  while (idx < len) {\n    const timer = fastTimers[idx]\n\n    if (timer.state === 0) {\n      timer.state = fastNow + timer.delay - TICK_MS\n    } else if (timer.state > 0 && fastNow >= timer.state) {\n      timer.state = -1\n      timer.callback(timer.opaque)\n    }\n\n    if (timer.state === -1) {\n      timer.state = -2\n      if (idx !== len - 1) {\n        fastTimers[idx] = fastTimers.pop()\n      } else {\n        fastTimers.pop()\n      }\n      len -= 1\n    } else {\n      idx += 1\n    }\n  }\n\n  if (fastTimers.length > 0) {\n    refreshTimeout()\n  }\n}\n\nfunction refreshTimeout () {\n  if (fastNowTimeout?.refresh) {\n    fastNowTimeout.refresh()\n  } else {\n    clearTimeout(fastNowTimeout)\n    fastNowTimeout = setTimeout(onTimeout, TICK_MS)\n    if (fastNowTimeout.unref) {\n      fastNowTimeout.unref()\n    }\n  }\n}\n\nclass Timeout {\n  constructor (callback, delay, opaque) {\n    this.callback = callback\n    this.delay = delay\n    this.opaque = opaque\n\n    //  -2 not in timer list\n    //  -1 in timer list but inactive\n    //   0 in timer list waiting for time\n    // > 0 in timer list waiting for time to expire\n    this.state = -2\n\n    this.refresh()\n  }\n\n  refresh () {\n    if (this.state === -2) {\n      fastTimers.push(this)\n      if (!fastNowTimeout || fastTimers.length === 1) {\n        refreshTimeout()\n      }\n    }\n\n    this.state = 0\n  }\n\n  clear () {\n    this.state = -1\n  }\n}\n\nmodule.exports = {\n  setTimeout (callback, delay, opaque) {\n    return delay <= 1e3\n      ? setTimeout(callback, delay, opaque)\n      : new Timeout(callback, delay, opaque)\n  },\n  clearTimeout (timeout) {\n    if (timeout instanceof Timeout) {\n      timeout.clear()\n    } else {\n      clearTimeout(timeout)\n    }\n  }\n}\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.enumToMap = void 0;\nfunction enumToMap(obj) {\n    const res = {};\n    Object.keys(obj).forEach((key) => {\n        const value = obj[key];\n        if (typeof value === 'number') {\n            res[key] = value;\n        }\n    });\n    return res;\n}\nexports.enumToMap = enumToMap;\n//# sourceMappingURL=utils.js.map", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SPECIAL_HEADERS = exports.HEADER_STATE = exports.MINOR = exports.MAJOR = exports.CONNECTION_TOKEN_CHARS = exports.HEADER_CHARS = exports.TOKEN = exports.STRICT_TOKEN = exports.HEX = exports.URL_CHAR = exports.STRICT_URL_CHAR = exports.USERINFO_CHARS = exports.MARK = exports.ALPHANUM = exports.NUM = exports.HEX_MAP = exports.NUM_MAP = exports.ALPHA = exports.FINISH = exports.H_METHOD_MAP = exports.METHOD_MAP = exports.METHODS_RTSP = exports.METHODS_ICE = exports.METHODS_HTTP = exports.METHODS = exports.LENIENT_FLAGS = exports.FLAGS = exports.TYPE = exports.ERROR = void 0;\nconst utils_1 = require(\"./utils\");\n// C headers\nvar ERROR;\n(function (ERROR) {\n    ERROR[ERROR[\"OK\"] = 0] = \"OK\";\n    ERROR[ERROR[\"INTERNAL\"] = 1] = \"INTERNAL\";\n    ERROR[ERROR[\"STRICT\"] = 2] = \"STRICT\";\n    ERROR[ERROR[\"LF_EXPECTED\"] = 3] = \"LF_EXPECTED\";\n    ERROR[ERROR[\"UNEXPECTED_CONTENT_LENGTH\"] = 4] = \"UNEXPECTED_CONTENT_LENGTH\";\n    ERROR[ERROR[\"CLOSED_CONNECTION\"] = 5] = \"CLOSED_CONNECTION\";\n    ERROR[ERROR[\"INVALID_METHOD\"] = 6] = \"INVALID_METHOD\";\n    ERROR[ERROR[\"INVALID_URL\"] = 7] = \"INVALID_URL\";\n    ERROR[ERROR[\"INVALID_CONSTANT\"] = 8] = \"INVALID_CONSTANT\";\n    ERROR[ERROR[\"INVALID_VERSION\"] = 9] = \"INVALID_VERSION\";\n    ERROR[ERROR[\"INVALID_HEADER_TOKEN\"] = 10] = \"INVALID_HEADER_TOKEN\";\n    ERROR[ERROR[\"INVALID_CONTENT_LENGTH\"] = 11] = \"INVALID_CONTENT_LENGTH\";\n    ERROR[ERROR[\"INVALID_CHUNK_SIZE\"] = 12] = \"INVALID_CHUNK_SIZE\";\n    ERROR[ERROR[\"INVALID_STATUS\"] = 13] = \"INVALID_STATUS\";\n    ERROR[ERROR[\"INVALID_EOF_STATE\"] = 14] = \"INVALID_EOF_STATE\";\n    ERROR[ERROR[\"INVALID_TRANSFER_ENCODING\"] = 15] = \"INVALID_TRANSFER_ENCODING\";\n    ERROR[ERROR[\"CB_MESSAGE_BEGIN\"] = 16] = \"CB_MESSAGE_BEGIN\";\n    ERROR[ERROR[\"CB_HEADERS_COMPLETE\"] = 17] = \"CB_HEADERS_COMPLETE\";\n    ERROR[ERROR[\"CB_MESSAGE_COMPLETE\"] = 18] = \"CB_MESSAGE_COMPLETE\";\n    ERROR[ERROR[\"CB_CHUNK_HEADER\"] = 19] = \"CB_CHUNK_HEADER\";\n    ERROR[ERROR[\"CB_CHUNK_COMPLETE\"] = 20] = \"CB_CHUNK_COMPLETE\";\n    ERROR[ERROR[\"PAUSED\"] = 21] = \"PAUSED\";\n    ERROR[ERROR[\"PAUSED_UPGRADE\"] = 22] = \"PAUSED_UPGRADE\";\n    ERROR[ERROR[\"PAUSED_H2_UPGRADE\"] = 23] = \"PAUSED_H2_UPGRADE\";\n    ERROR[ERROR[\"USER\"] = 24] = \"USER\";\n})(ERROR = exports.ERROR || (exports.ERROR = {}));\nvar TYPE;\n(function (TYPE) {\n    TYPE[TYPE[\"BOTH\"] = 0] = \"BOTH\";\n    TYPE[TYPE[\"REQUEST\"] = 1] = \"REQUEST\";\n    TYPE[TYPE[\"RESPONSE\"] = 2] = \"RESPONSE\";\n})(TYPE = exports.TYPE || (exports.TYPE = {}));\nvar FLAGS;\n(function (FLAGS) {\n    FLAGS[FLAGS[\"CONNECTION_KEEP_ALIVE\"] = 1] = \"CONNECTION_KEEP_ALIVE\";\n    FLAGS[FLAGS[\"CONNECTION_CLOSE\"] = 2] = \"CONNECTION_CLOSE\";\n    FLAGS[FLAGS[\"CONNECTION_UPGRADE\"] = 4] = \"CONNECTION_UPGRADE\";\n    FLAGS[FLAGS[\"CHUNKED\"] = 8] = \"CHUNKED\";\n    FLAGS[FLAGS[\"UPGRADE\"] = 16] = \"UPGRADE\";\n    FLAGS[FLAGS[\"CONTENT_LENGTH\"] = 32] = \"CONTENT_LENGTH\";\n    FLAGS[FLAGS[\"SKIPBODY\"] = 64] = \"SKIPBODY\";\n    FLAGS[FLAGS[\"TRAILING\"] = 128] = \"TRAILING\";\n    // 1 << 8 is unused\n    FLAGS[FLAGS[\"TRANSFER_ENCODING\"] = 512] = \"TRANSFER_ENCODING\";\n})(FLAGS = exports.FLAGS || (exports.FLAGS = {}));\nvar LENIENT_FLAGS;\n(function (LENIENT_FLAGS) {\n    LENIENT_FLAGS[LENIENT_FLAGS[\"HEADERS\"] = 1] = \"HEADERS\";\n    LENIENT_FLAGS[LENIENT_FLAGS[\"CHUNKED_LENGTH\"] = 2] = \"CHUNKED_LENGTH\";\n    LENIENT_FLAGS[LENIENT_FLAGS[\"KEEP_ALIVE\"] = 4] = \"KEEP_ALIVE\";\n})(LENIENT_FLAGS = exports.LENIENT_FLAGS || (exports.LENIENT_FLAGS = {}));\nvar METHODS;\n(function (METHODS) {\n    METHODS[METHODS[\"DELETE\"] = 0] = \"DELETE\";\n    METHODS[METHODS[\"GET\"] = 1] = \"GET\";\n    METHODS[METHODS[\"HEAD\"] = 2] = \"HEAD\";\n    METHODS[METHODS[\"POST\"] = 3] = \"POST\";\n    METHODS[METHODS[\"PUT\"] = 4] = \"PUT\";\n    /* pathological */\n    METHODS[METHODS[\"CONNECT\"] = 5] = \"CONNECT\";\n    METHODS[METHODS[\"OPTIONS\"] = 6] = \"OPTIONS\";\n    METHODS[METHODS[\"TRACE\"] = 7] = \"TRACE\";\n    /* WebDAV */\n    METHODS[METHODS[\"COPY\"] = 8] = \"COPY\";\n    METHODS[METHODS[\"LOCK\"] = 9] = \"LOCK\";\n    METHODS[METHODS[\"MKCOL\"] = 10] = \"MKCOL\";\n    METHODS[METHODS[\"MOVE\"] = 11] = \"MOVE\";\n    METHODS[METHODS[\"PROPFIND\"] = 12] = \"PROPFIND\";\n    METHODS[METHODS[\"PROPPATCH\"] = 13] = \"PROPPATCH\";\n    METHODS[METHODS[\"SEARCH\"] = 14] = \"SEARCH\";\n    METHODS[METHODS[\"UNLOCK\"] = 15] = \"UNLOCK\";\n    METHODS[METHODS[\"BIND\"] = 16] = \"BIND\";\n    METHODS[METHODS[\"REBIND\"] = 17] = \"REBIND\";\n    METHODS[METHODS[\"UNBIND\"] = 18] = \"UNBIND\";\n    METHODS[METHODS[\"ACL\"] = 19] = \"ACL\";\n    /* subversion */\n    METHODS[METHODS[\"REPORT\"] = 20] = \"REPORT\";\n    METHODS[METHODS[\"MKACTIVITY\"] = 21] = \"MKACTIVITY\";\n    METHODS[METHODS[\"CHECKOUT\"] = 22] = \"CHECKOUT\";\n    METHODS[METHODS[\"MERGE\"] = 23] = \"MERGE\";\n    /* upnp */\n    METHODS[METHODS[\"M-SEARCH\"] = 24] = \"M-SEARCH\";\n    METHODS[METHODS[\"NOTIFY\"] = 25] = \"NOTIFY\";\n    METHODS[METHODS[\"SUBSCRIBE\"] = 26] = \"SUBSCRIBE\";\n    METHODS[METHODS[\"UNSUBSCRIBE\"] = 27] = \"UNSUBSCRIBE\";\n    /* RFC-5789 */\n    METHODS[METHODS[\"PATCH\"] = 28] = \"PATCH\";\n    METHODS[METHODS[\"PURGE\"] = 29] = \"PURGE\";\n    /* CalDAV */\n    METHODS[METHODS[\"MKCALENDAR\"] = 30] = \"MKCALENDAR\";\n    /* RFC-2068, section 19.6.1.2 */\n    METHODS[METHODS[\"LINK\"] = 31] = \"LINK\";\n    METHODS[METHODS[\"UNLINK\"] = 32] = \"UNLINK\";\n    /* icecast */\n    METHODS[METHODS[\"SOURCE\"] = 33] = \"SOURCE\";\n    /* RFC-7540, section 11.6 */\n    METHODS[METHODS[\"PRI\"] = 34] = \"PRI\";\n    /* RFC-2326 RTSP */\n    METHODS[METHODS[\"DESCRIBE\"] = 35] = \"DESCRIBE\";\n    METHODS[METHODS[\"ANNOUNCE\"] = 36] = \"ANNOUNCE\";\n    METHODS[METHODS[\"SETUP\"] = 37] = \"SETUP\";\n    METHODS[METHODS[\"PLAY\"] = 38] = \"PLAY\";\n    METHODS[METHODS[\"PAUSE\"] = 39] = \"PAUSE\";\n    METHODS[METHODS[\"TEARDOWN\"] = 40] = \"TEARDOWN\";\n    METHODS[METHODS[\"GET_PARAMETER\"] = 41] = \"GET_PARAMETER\";\n    METHODS[METHODS[\"SET_PARAMETER\"] = 42] = \"SET_PARAMETER\";\n    METHODS[METHODS[\"REDIRECT\"] = 43] = \"REDIRECT\";\n    METHODS[METHODS[\"RECORD\"] = 44] = \"RECORD\";\n    /* RAOP */\n    METHODS[METHODS[\"FLUSH\"] = 45] = \"FLUSH\";\n})(METHODS = exports.METHODS || (exports.METHODS = {}));\nexports.METHODS_HTTP = [\n    METHODS.DELETE,\n    METHODS.GET,\n    METHODS.HEAD,\n    METHODS.POST,\n    METHODS.PUT,\n    METHODS.CONNECT,\n    METHODS.OPTIONS,\n    METHODS.TRACE,\n    METHODS.COPY,\n    METHODS.LOCK,\n    METHODS.MKCOL,\n    METHODS.MOVE,\n    METHODS.PROPFIND,\n    METHODS.PROPPATCH,\n    METHODS.SEARCH,\n    METHODS.UNLOCK,\n    METHODS.BIND,\n    METHODS.REBIND,\n    METHODS.UNBIND,\n    METHODS.ACL,\n    METHODS.REPORT,\n    METHODS.MKACTIVITY,\n    METHODS.CHECKOUT,\n    METHODS.MERGE,\n    METHODS['M-SEARCH'],\n    METHODS.NOTIFY,\n    METHODS.SUBSCRIBE,\n    METHODS.UNSUBSCRIBE,\n    METHODS.PATCH,\n    METHODS.PURGE,\n    METHODS.MKCALENDAR,\n    METHODS.LINK,\n    METHODS.UNLINK,\n    METHODS.PRI,\n    // TODO(indutny): should we allow it with HTTP?\n    METHODS.SOURCE,\n];\nexports.METHODS_ICE = [\n    METHODS.SOURCE,\n];\nexports.METHODS_RTSP = [\n    METHODS.OPTIONS,\n    METHODS.DESCRIBE,\n    METHODS.ANNOUNCE,\n    METHODS.SETUP,\n    METHODS.PLAY,\n    METHODS.PAUSE,\n    METHODS.TEARDOWN,\n    METHODS.GET_PARAMETER,\n    METHODS.SET_PARAMETER,\n    METHODS.REDIRECT,\n    METHODS.RECORD,\n    METHODS.FLUSH,\n    // For AirPlay\n    METHODS.GET,\n    METHODS.POST,\n];\nexports.METHOD_MAP = utils_1.enumToMap(METHODS);\nexports.H_METHOD_MAP = {};\nObject.keys(exports.METHOD_MAP).forEach((key) => {\n    if (/^H/.test(key)) {\n        exports.H_METHOD_MAP[key] = exports.METHOD_MAP[key];\n    }\n});\nvar FINISH;\n(function (FINISH) {\n    FINISH[FINISH[\"SAFE\"] = 0] = \"SAFE\";\n    FINISH[FINISH[\"SAFE_WITH_CB\"] = 1] = \"SAFE_WITH_CB\";\n    FINISH[FINISH[\"UNSAFE\"] = 2] = \"UNSAFE\";\n})(FINISH = exports.FINISH || (exports.FINISH = {}));\nexports.ALPHA = [];\nfor (let i = 'A'.charCodeAt(0); i <= 'Z'.charCodeAt(0); i++) {\n    // Upper case\n    exports.ALPHA.push(String.fromCharCode(i));\n    // Lower case\n    exports.ALPHA.push(String.fromCharCode(i + 0x20));\n}\nexports.NUM_MAP = {\n    0: 0, 1: 1, 2: 2, 3: 3, 4: 4,\n    5: 5, 6: 6, 7: 7, 8: 8, 9: 9,\n};\nexports.HEX_MAP = {\n    0: 0, 1: 1, 2: 2, 3: 3, 4: 4,\n    5: 5, 6: 6, 7: 7, 8: 8, 9: 9,\n    A: 0XA, B: 0XB, C: 0XC, D: 0XD, E: 0XE, F: 0XF,\n    a: 0xa, b: 0xb, c: 0xc, d: 0xd, e: 0xe, f: 0xf,\n};\nexports.NUM = [\n    '0', '1', '2', '3', '4', '5', '6', '7', '8', '9',\n];\nexports.ALPHANUM = exports.ALPHA.concat(exports.NUM);\nexports.MARK = ['-', '_', '.', '!', '~', '*', '\\'', '(', ')'];\nexports.USERINFO_CHARS = exports.ALPHANUM\n    .concat(exports.MARK)\n    .concat(['%', ';', ':', '&', '=', '+', '$', ',']);\n// TODO(indutny): use RFC\nexports.STRICT_URL_CHAR = [\n    '!', '\"', '$', '%', '&', '\\'',\n    '(', ')', '*', '+', ',', '-', '.', '/',\n    ':', ';', '<', '=', '>',\n    '@', '[', '\\\\', ']', '^', '_',\n    '`',\n    '{', '|', '}', '~',\n].concat(exports.ALPHANUM);\nexports.URL_CHAR = exports.STRICT_URL_CHAR\n    .concat(['\\t', '\\f']);\n// All characters with 0x80 bit set to 1\nfor (let i = 0x80; i <= 0xff; i++) {\n    exports.URL_CHAR.push(i);\n}\nexports.HEX = exports.NUM.concat(['a', 'b', 'c', 'd', 'e', 'f', 'A', 'B', 'C', 'D', 'E', 'F']);\n/* Tokens as defined by rfc 2616. Also lowercases them.\n *        token       = 1*<any CHAR except CTLs or separators>\n *     separators     = \"(\" | \")\" | \"<\" | \">\" | \"@\"\n *                    | \",\" | \";\" | \":\" | \"\\\" | <\">\n *                    | \"/\" | \"[\" | \"]\" | \"?\" | \"=\"\n *                    | \"{\" | \"}\" | SP | HT\n */\nexports.STRICT_TOKEN = [\n    '!', '#', '$', '%', '&', '\\'',\n    '*', '+', '-', '.',\n    '^', '_', '`',\n    '|', '~',\n].concat(exports.ALPHANUM);\nexports.TOKEN = exports.STRICT_TOKEN.concat([' ']);\n/*\n * Verify that a char is a valid visible (printable) US-ASCII\n * character or %x80-FF\n */\nexports.HEADER_CHARS = ['\\t'];\nfor (let i = 32; i <= 255; i++) {\n    if (i !== 127) {\n        exports.HEADER_CHARS.push(i);\n    }\n}\n// ',' = \\x44\nexports.CONNECTION_TOKEN_CHARS = exports.HEADER_CHARS.filter((c) => c !== 44);\nexports.MAJOR = exports.NUM_MAP;\nexports.MINOR = exports.MAJOR;\nvar HEADER_STATE;\n(function (HEADER_STATE) {\n    HEADER_STATE[HEADER_STATE[\"GENERAL\"] = 0] = \"GENERAL\";\n    HEADER_STATE[HEADER_STATE[\"CONNECTION\"] = 1] = \"CONNECTION\";\n    HEADER_STATE[HEADER_STATE[\"CONTENT_LENGTH\"] = 2] = \"CONTENT_LENGTH\";\n    HEADER_STATE[HEADER_STATE[\"TRANSFER_ENCODING\"] = 3] = \"TRANSFER_ENCODING\";\n    HEADER_STATE[HEADER_STATE[\"UPGRADE\"] = 4] = \"UPGRADE\";\n    HEADER_STATE[HEADER_STATE[\"CONNECTION_KEEP_ALIVE\"] = 5] = \"CONNECTION_KEEP_ALIVE\";\n    HEADER_STATE[HEADER_STATE[\"CONNECTION_CLOSE\"] = 6] = \"CONNECTION_CLOSE\";\n    HEADER_STATE[HEADER_STATE[\"CONNECTION_UPGRADE\"] = 7] = \"CONNECTION_UPGRADE\";\n    HEADER_STATE[HEADER_STATE[\"TRANSFER_ENCODING_CHUNKED\"] = 8] = \"TRANSFER_ENCODING_CHUNKED\";\n})(HEADER_STATE = exports.HEADER_STATE || (exports.HEADER_STATE = {}));\nexports.SPECIAL_HEADERS = {\n    'connection': HEADER_STATE.CONNECTION,\n    'content-length': HEADER_STATE.CONTENT_LENGTH,\n    'proxy-connection': HEADER_STATE.CONNECTION,\n    'transfer-encoding': HEADER_STATE.TRANSFER_ENCODING,\n    'upgrade': HEADER_STATE.UPGRADE,\n};\n//# sourceMappingURL=constants.js.map", "'use strict'\n\nconst { Buffer } = require('node:buffer')\n\nmodule.exports = Buffer.from('', 'base64')\n", "'use strict'\n\nconst { Buffer } = require('node:buffer')\n\nmodule.exports = Buffer.from('', 'base64')\n", "'use strict'\n\nconst corsSafeListedMethods = ['GET', 'HEAD', 'POST']\nconst corsSafeListedMethodsSet = new Set(corsSafeListedMethods)\n\nconst nullBodyStatus = [101, 204, 205, 304]\n\nconst redirectStatus = [301, 302, 303, 307, 308]\nconst redirectStatusSet = new Set(redirectStatus)\n\n// https://fetch.spec.whatwg.org/#block-bad-port\nconst badPorts = [\n  '1', '7', '9', '11', '13', '15', '17', '19', '20', '21', '22', '23', '25', '37', '42', '43', '53', '69', '77', '79',\n  '87', '95', '101', '102', '103', '104', '109', '110', '111', '113', '115', '117', '119', '123', '135', '137',\n  '139', '143', '161', '179', '389', '427', '465', '512', '513', '514', '515', '526', '530', '531', '532',\n  '540', '548', '554', '556', '563', '587', '601', '636', '989', '990', '993', '995', '1719', '1720', '1723',\n  '2049', '3659', '4045', '4190', '5060', '5061', '6000', '6566', '6665', '6666', '6667', '6668', '6669', '6679',\n  '6697', '10080'\n]\n\nconst badPortsSet = new Set(badPorts)\n\n// https://w3c.github.io/webappsec-referrer-policy/#referrer-policies\nconst referrerPolicy = [\n  '',\n  'no-referrer',\n  'no-referrer-when-downgrade',\n  'same-origin',\n  'origin',\n  'strict-origin',\n  'origin-when-cross-origin',\n  'strict-origin-when-cross-origin',\n  'unsafe-url'\n]\nconst referrerPolicySet = new Set(referrerPolicy)\n\nconst requestRedirect = ['follow', 'manual', 'error']\n\nconst safeMethods = ['GET', 'HEAD', 'OPTIONS', 'TRACE']\nconst safeMethodsSet = new Set(safeMethods)\n\nconst requestMode = ['navigate', 'same-origin', 'no-cors', 'cors']\n\nconst requestCredentials = ['omit', 'same-origin', 'include']\n\nconst requestCache = [\n  'default',\n  'no-store',\n  'reload',\n  'no-cache',\n  'force-cache',\n  'only-if-cached'\n]\n\n// https://fetch.spec.whatwg.org/#request-body-header-name\nconst requestBodyHeader = [\n  'content-encoding',\n  'content-language',\n  'content-location',\n  'content-type',\n  // See https://github.com/nodejs/undici/issues/2021\n  // 'Content-Length' is a forbidden header name, which is typically\n  // removed in the Headers implementation. However, undici doesn't\n  // filter out headers, so we add it here.\n  'content-length'\n]\n\n// https://fetch.spec.whatwg.org/#enumdef-requestduplex\nconst requestDuplex = [\n  'half'\n]\n\n// http://fetch.spec.whatwg.org/#forbidden-method\nconst forbiddenMethods = ['CONNECT', 'TRACE', 'TRACK']\nconst forbiddenMethodsSet = new Set(forbiddenMethods)\n\nconst subresource = [\n  'audio',\n  'audioworklet',\n  'font',\n  'image',\n  'manifest',\n  'paintworklet',\n  'script',\n  'style',\n  'track',\n  'video',\n  'xslt',\n  ''\n]\nconst subresourceSet = new Set(subresource)\n\nmodule.exports = {\n  subresource,\n  forbiddenMethods,\n  requestBodyHeader,\n  referrerPolicy,\n  requestRedirect,\n  requestMode,\n  requestCredentials,\n  requestCache,\n  redirectStatus,\n  corsSafeListedMethods,\n  nullBodyStatus,\n  safeMethods,\n  badPorts,\n  requestDuplex,\n  subresourceSet,\n  badPortsSet,\n  redirectStatusSet,\n  corsSafeListedMethodsSet,\n  safeMethodsSet,\n  forbiddenMethodsSet,\n  referrerPolicySet\n}\n", "'use strict'\n\n// In case of breaking changes, increase the version\n// number to avoid conflicts.\nconst globalOrigin = Symbol.for('undici.globalOrigin.1')\n\nfunction getGlobalOrigin () {\n  return globalThis[globalOrigin]\n}\n\nfunction setGlobalOrigin (newOrigin) {\n  if (newOrigin === undefined) {\n    Object.defineProperty(globalThis, globalOrigin, {\n      value: undefined,\n      writable: true,\n      enumerable: false,\n      configurable: false\n    })\n\n    return\n  }\n\n  const parsedURL = new URL(newOrigin)\n\n  if (parsedURL.protocol !== 'http:' && parsedURL.protocol !== 'https:') {\n    throw new TypeError(`Only http & https urls are allowed, received ${parsedURL.protocol}`)\n  }\n\n  Object.defineProperty(globalThis, globalOrigin, {\n    value: parsedURL,\n    writable: true,\n    enumerable: false,\n    configurable: false\n  })\n}\n\nmodule.exports = {\n  getGlobalOrigin,\n  setGlobalOrigin\n}\n", "'use strict'\n\nconst assert = require('node:assert')\n\nconst encoder = new TextEncoder()\n\n/**\n * @see https://mimesniff.spec.whatwg.org/#http-token-code-point\n */\nconst HTTP_TOKEN_CODEPOINTS = /^[!#$%&'*+\\-.^_|~A-Za-z0-9]+$/\nconst HTTP_WHITESPACE_REGEX = /[\\u000A\\u000D\\u0009\\u0020]/ // eslint-disable-line\nconst ASCII_WHITESPACE_REPLACE_REGEX = /[\\u0009\\u000A\\u000C\\u000D\\u0020]/g // eslint-disable-line\n/**\n * @see https://mimesniff.spec.whatwg.org/#http-quoted-string-token-code-point\n */\nconst HTTP_QUOTED_STRING_TOKENS = /^[\\u0009\\u0020-\\u007E\\u0080-\\u00FF]+$/ // eslint-disable-line\n\n// https://fetch.spec.whatwg.org/#data-url-processor\n/** @param {URL} dataURL */\nfunction dataURLProcessor (dataURL) {\n  // 1. Assert: dataURL’s scheme is \"data\".\n  assert(dataURL.protocol === 'data:')\n\n  // 2. Let input be the result of running the URL\n  // serializer on dataURL with exclude fragment\n  // set to true.\n  let input = URLSerializer(dataURL, true)\n\n  // 3. Remove the leading \"data:\" string from input.\n  input = input.slice(5)\n\n  // 4. Let position point at the start of input.\n  const position = { position: 0 }\n\n  // 5. Let mimeType be the result of collecting a\n  // sequence of code points that are not equal\n  // to U+002C (,), given position.\n  let mimeType = collectASequenceOfCodePointsFast(\n    ',',\n    input,\n    position\n  )\n\n  // 6. Strip leading and trailing ASCII whitespace\n  // from mimeType.\n  // Undici implementation note: we need to store the\n  // length because if the mimetype has spaces removed,\n  // the wrong amount will be sliced from the input in\n  // step #9\n  const mimeTypeLength = mimeType.length\n  mimeType = removeASCIIWhitespace(mimeType, true, true)\n\n  // 7. If position is past the end of input, then\n  // return failure\n  if (position.position >= input.length) {\n    return 'failure'\n  }\n\n  // 8. Advance position by 1.\n  position.position++\n\n  // 9. Let encodedBody be the remainder of input.\n  const encodedBody = input.slice(mimeTypeLength + 1)\n\n  // 10. Let body be the percent-decoding of encodedBody.\n  let body = stringPercentDecode(encodedBody)\n\n  // 11. If mimeType ends with U+003B (;), followed by\n  // zero or more U+0020 SPACE, followed by an ASCII\n  // case-insensitive match for \"base64\", then:\n  if (/;(\\u0020){0,}base64$/i.test(mimeType)) {\n    // 1. Let stringBody be the isomorphic decode of body.\n    const stringBody = isomorphicDecode(body)\n\n    // 2. Set body to the forgiving-base64 decode of\n    // stringBody.\n    body = forgivingBase64(stringBody)\n\n    // 3. If body is failure, then return failure.\n    if (body === 'failure') {\n      return 'failure'\n    }\n\n    // 4. Remove the last 6 code points from mimeType.\n    mimeType = mimeType.slice(0, -6)\n\n    // 5. Remove trailing U+0020 SPACE code points from mimeType,\n    // if any.\n    mimeType = mimeType.replace(/(\\u0020)+$/, '')\n\n    // 6. Remove the last U+003B (;) code point from mimeType.\n    mimeType = mimeType.slice(0, -1)\n  }\n\n  // 12. If mimeType starts with U+003B (;), then prepend\n  // \"text/plain\" to mimeType.\n  if (mimeType.startsWith(';')) {\n    mimeType = 'text/plain' + mimeType\n  }\n\n  // 13. Let mimeTypeRecord be the result of parsing\n  // mimeType.\n  let mimeTypeRecord = parseMIMEType(mimeType)\n\n  // 14. If mimeTypeRecord is failure, then set\n  // mimeTypeRecord to text/plain;charset=US-ASCII.\n  if (mimeTypeRecord === 'failure') {\n    mimeTypeRecord = parseMIMEType('text/plain;charset=US-ASCII')\n  }\n\n  // 15. Return a new data: URL struct whose MIME\n  // type is mimeTypeRecord and body is body.\n  // https://fetch.spec.whatwg.org/#data-url-struct\n  return { mimeType: mimeTypeRecord, body }\n}\n\n// https://url.spec.whatwg.org/#concept-url-serializer\n/**\n * @param {URL} url\n * @param {boolean} excludeFragment\n */\nfunction URLSerializer (url, excludeFragment = false) {\n  if (!excludeFragment) {\n    return url.href\n  }\n\n  const href = url.href\n  const hashLength = url.hash.length\n\n  const serialized = hashLength === 0 ? href : href.substring(0, href.length - hashLength)\n\n  if (!hashLength && href.endsWith('#')) {\n    return serialized.slice(0, -1)\n  }\n\n  return serialized\n}\n\n// https://infra.spec.whatwg.org/#collect-a-sequence-of-code-points\n/**\n * @param {(char: string) => boolean} condition\n * @param {string} input\n * @param {{ position: number }} position\n */\nfunction collectASequenceOfCodePoints (condition, input, position) {\n  // 1. Let result be the empty string.\n  let result = ''\n\n  // 2. While position doesn’t point past the end of input and the\n  // code point at position within input meets the condition condition:\n  while (position.position < input.length && condition(input[position.position])) {\n    // 1. Append that code point to the end of result.\n    result += input[position.position]\n\n    // 2. Advance position by 1.\n    position.position++\n  }\n\n  // 3. Return result.\n  return result\n}\n\n/**\n * A faster collectASequenceOfCodePoints that only works when comparing a single character.\n * @param {string} char\n * @param {string} input\n * @param {{ position: number }} position\n */\nfunction collectASequenceOfCodePointsFast (char, input, position) {\n  const idx = input.indexOf(char, position.position)\n  const start = position.position\n\n  if (idx === -1) {\n    position.position = input.length\n    return input.slice(start)\n  }\n\n  position.position = idx\n  return input.slice(start, position.position)\n}\n\n// https://url.spec.whatwg.org/#string-percent-decode\n/** @param {string} input */\nfunction stringPercentDecode (input) {\n  // 1. Let bytes be the UTF-8 encoding of input.\n  const bytes = encoder.encode(input)\n\n  // 2. Return the percent-decoding of bytes.\n  return percentDecode(bytes)\n}\n\n/**\n * @param {number} byte\n */\nfunction isHexCharByte (byte) {\n  // 0-9 A-F a-f\n  return (byte >= 0x30 && byte <= 0x39) || (byte >= 0x41 && byte <= 0x46) || (byte >= 0x61 && byte <= 0x66)\n}\n\n/**\n * @param {number} byte\n */\nfunction hexByteToNumber (byte) {\n  return (\n    // 0-9\n    byte >= 0x30 && byte <= 0x39\n      ? (byte - 48)\n    // Convert to uppercase\n    // ((byte & 0xDF) - 65) + 10\n      : ((byte & 0xDF) - 55)\n  )\n}\n\n// https://url.spec.whatwg.org/#percent-decode\n/** @param {Uint8Array} input */\nfunction percentDecode (input) {\n  const length = input.length\n  // 1. Let output be an empty byte sequence.\n  /** @type {Uint8Array} */\n  const output = new Uint8Array(length)\n  let j = 0\n  // 2. For each byte byte in input:\n  for (let i = 0; i < length; ++i) {\n    const byte = input[i]\n\n    // 1. If byte is not 0x25 (%), then append byte to output.\n    if (byte !== 0x25) {\n      output[j++] = byte\n\n    // 2. Otherwise, if byte is 0x25 (%) and the next two bytes\n    // after byte in input are not in the ranges\n    // 0x30 (0) to 0x39 (9), 0x41 (A) to 0x46 (F),\n    // and 0x61 (a) to 0x66 (f), all inclusive, append byte\n    // to output.\n    } else if (\n      byte === 0x25 &&\n      !(isHexCharByte(input[i + 1]) && isHexCharByte(input[i + 2]))\n    ) {\n      output[j++] = 0x25\n\n    // 3. Otherwise:\n    } else {\n      // 1. Let bytePoint be the two bytes after byte in input,\n      // decoded, and then interpreted as hexadecimal number.\n      // 2. Append a byte whose value is bytePoint to output.\n      output[j++] = (hexByteToNumber(input[i + 1]) << 4) | hexByteToNumber(input[i + 2])\n\n      // 3. Skip the next two bytes in input.\n      i += 2\n    }\n  }\n\n  // 3. Return output.\n  return length === j ? output : output.subarray(0, j)\n}\n\n// https://mimesniff.spec.whatwg.org/#parse-a-mime-type\n/** @param {string} input */\nfunction parseMIMEType (input) {\n  // 1. Remove any leading and trailing HTTP whitespace\n  // from input.\n  input = removeHTTPWhitespace(input, true, true)\n\n  // 2. Let position be a position variable for input,\n  // initially pointing at the start of input.\n  const position = { position: 0 }\n\n  // 3. Let type be the result of collecting a sequence\n  // of code points that are not U+002F (/) from\n  // input, given position.\n  const type = collectASequenceOfCodePointsFast(\n    '/',\n    input,\n    position\n  )\n\n  // 4. If type is the empty string or does not solely\n  // contain HTTP token code points, then return failure.\n  // https://mimesniff.spec.whatwg.org/#http-token-code-point\n  if (type.length === 0 || !HTTP_TOKEN_CODEPOINTS.test(type)) {\n    return 'failure'\n  }\n\n  // 5. If position is past the end of input, then return\n  // failure\n  if (position.position > input.length) {\n    return 'failure'\n  }\n\n  // 6. Advance position by 1. (This skips past U+002F (/).)\n  position.position++\n\n  // 7. Let subtype be the result of collecting a sequence of\n  // code points that are not U+003B (;) from input, given\n  // position.\n  let subtype = collectASequenceOfCodePointsFast(\n    ';',\n    input,\n    position\n  )\n\n  // 8. Remove any trailing HTTP whitespace from subtype.\n  subtype = removeHTTPWhitespace(subtype, false, true)\n\n  // 9. If subtype is the empty string or does not solely\n  // contain HTTP token code points, then return failure.\n  if (subtype.length === 0 || !HTTP_TOKEN_CODEPOINTS.test(subtype)) {\n    return 'failure'\n  }\n\n  const typeLowercase = type.toLowerCase()\n  const subtypeLowercase = subtype.toLowerCase()\n\n  // 10. Let mimeType be a new MIME type record whose type\n  // is type, in ASCII lowercase, and subtype is subtype,\n  // in ASCII lowercase.\n  // https://mimesniff.spec.whatwg.org/#mime-type\n  const mimeType = {\n    type: typeLowercase,\n    subtype: subtypeLowercase,\n    /** @type {Map<string, string>} */\n    parameters: new Map(),\n    // https://mimesniff.spec.whatwg.org/#mime-type-essence\n    essence: `${typeLowercase}/${subtypeLowercase}`\n  }\n\n  // 11. While position is not past the end of input:\n  while (position.position < input.length) {\n    // 1. Advance position by 1. (This skips past U+003B (;).)\n    position.position++\n\n    // 2. Collect a sequence of code points that are HTTP\n    // whitespace from input given position.\n    collectASequenceOfCodePoints(\n      // https://fetch.spec.whatwg.org/#http-whitespace\n      char => HTTP_WHITESPACE_REGEX.test(char),\n      input,\n      position\n    )\n\n    // 3. Let parameterName be the result of collecting a\n    // sequence of code points that are not U+003B (;)\n    // or U+003D (=) from input, given position.\n    let parameterName = collectASequenceOfCodePoints(\n      (char) => char !== ';' && char !== '=',\n      input,\n      position\n    )\n\n    // 4. Set parameterName to parameterName, in ASCII\n    // lowercase.\n    parameterName = parameterName.toLowerCase()\n\n    // 5. If position is not past the end of input, then:\n    if (position.position < input.length) {\n      // 1. If the code point at position within input is\n      // U+003B (;), then continue.\n      if (input[position.position] === ';') {\n        continue\n      }\n\n      // 2. Advance position by 1. (This skips past U+003D (=).)\n      position.position++\n    }\n\n    // 6. If position is past the end of input, then break.\n    if (position.position > input.length) {\n      break\n    }\n\n    // 7. Let parameterValue be null.\n    let parameterValue = null\n\n    // 8. If the code point at position within input is\n    // U+0022 (\"), then:\n    if (input[position.position] === '\"') {\n      // 1. Set parameterValue to the result of collecting\n      // an HTTP quoted string from input, given position\n      // and the extract-value flag.\n      parameterValue = collectAnHTTPQuotedString(input, position, true)\n\n      // 2. Collect a sequence of code points that are not\n      // U+003B (;) from input, given position.\n      collectASequenceOfCodePointsFast(\n        ';',\n        input,\n        position\n      )\n\n    // 9. Otherwise:\n    } else {\n      // 1. Set parameterValue to the result of collecting\n      // a sequence of code points that are not U+003B (;)\n      // from input, given position.\n      parameterValue = collectASequenceOfCodePointsFast(\n        ';',\n        input,\n        position\n      )\n\n      // 2. Remove any trailing HTTP whitespace from parameterValue.\n      parameterValue = removeHTTPWhitespace(parameterValue, false, true)\n\n      // 3. If parameterValue is the empty string, then continue.\n      if (parameterValue.length === 0) {\n        continue\n      }\n    }\n\n    // 10. If all of the following are true\n    // - parameterName is not the empty string\n    // - parameterName solely contains HTTP token code points\n    // - parameterValue solely contains HTTP quoted-string token code points\n    // - mimeType’s parameters[parameterName] does not exist\n    // then set mimeType’s parameters[parameterName] to parameterValue.\n    if (\n      parameterName.length !== 0 &&\n      HTTP_TOKEN_CODEPOINTS.test(parameterName) &&\n      (parameterValue.length === 0 || HTTP_QUOTED_STRING_TOKENS.test(parameterValue)) &&\n      !mimeType.parameters.has(parameterName)\n    ) {\n      mimeType.parameters.set(parameterName, parameterValue)\n    }\n  }\n\n  // 12. Return mimeType.\n  return mimeType\n}\n\n// https://infra.spec.whatwg.org/#forgiving-base64-decode\n/** @param {string} data */\nfunction forgivingBase64 (data) {\n  // 1. Remove all ASCII whitespace from data.\n  data = data.replace(ASCII_WHITESPACE_REPLACE_REGEX, '')  // eslint-disable-line\n\n  let dataLength = data.length\n  // 2. If data’s code point length divides by 4 leaving\n  // no remainder, then:\n  if (dataLength % 4 === 0) {\n    // 1. If data ends with one or two U+003D (=) code points,\n    // then remove them from data.\n    if (data.charCodeAt(dataLength - 1) === 0x003D) {\n      --dataLength\n      if (data.charCodeAt(dataLength - 1) === 0x003D) {\n        --dataLength\n      }\n    }\n  }\n\n  // 3. If data’s code point length divides by 4 leaving\n  // a remainder of 1, then return failure.\n  if (dataLength % 4 === 1) {\n    return 'failure'\n  }\n\n  // 4. If data contains a code point that is not one of\n  //  U+002B (+)\n  //  U+002F (/)\n  //  ASCII alphanumeric\n  // then return failure.\n  if (/[^+/0-9A-Za-z]/.test(data.length === dataLength ? data : data.substring(0, dataLength))) {\n    return 'failure'\n  }\n\n  const buffer = Buffer.from(data, 'base64')\n  return new Uint8Array(buffer.buffer, buffer.byteOffset, buffer.byteLength)\n}\n\n// https://fetch.spec.whatwg.org/#collect-an-http-quoted-string\n// tests: https://fetch.spec.whatwg.org/#example-http-quoted-string\n/**\n * @param {string} input\n * @param {{ position: number }} position\n * @param {boolean?} extractValue\n */\nfunction collectAnHTTPQuotedString (input, position, extractValue) {\n  // 1. Let positionStart be position.\n  const positionStart = position.position\n\n  // 2. Let value be the empty string.\n  let value = ''\n\n  // 3. Assert: the code point at position within input\n  // is U+0022 (\").\n  assert(input[position.position] === '\"')\n\n  // 4. Advance position by 1.\n  position.position++\n\n  // 5. While true:\n  while (true) {\n    // 1. Append the result of collecting a sequence of code points\n    // that are not U+0022 (\") or U+005C (\\) from input, given\n    // position, to value.\n    value += collectASequenceOfCodePoints(\n      (char) => char !== '\"' && char !== '\\\\',\n      input,\n      position\n    )\n\n    // 2. If position is past the end of input, then break.\n    if (position.position >= input.length) {\n      break\n    }\n\n    // 3. Let quoteOrBackslash be the code point at position within\n    // input.\n    const quoteOrBackslash = input[position.position]\n\n    // 4. Advance position by 1.\n    position.position++\n\n    // 5. If quoteOrBackslash is U+005C (\\), then:\n    if (quoteOrBackslash === '\\\\') {\n      // 1. If position is past the end of input, then append\n      // U+005C (\\) to value and break.\n      if (position.position >= input.length) {\n        value += '\\\\'\n        break\n      }\n\n      // 2. Append the code point at position within input to value.\n      value += input[position.position]\n\n      // 3. Advance position by 1.\n      position.position++\n\n    // 6. Otherwise:\n    } else {\n      // 1. Assert: quoteOrBackslash is U+0022 (\").\n      assert(quoteOrBackslash === '\"')\n\n      // 2. Break.\n      break\n    }\n  }\n\n  // 6. If the extract-value flag is set, then return value.\n  if (extractValue) {\n    return value\n  }\n\n  // 7. Return the code points from positionStart to position,\n  // inclusive, within input.\n  return input.slice(positionStart, position.position)\n}\n\n/**\n * @see https://mimesniff.spec.whatwg.org/#serialize-a-mime-type\n */\nfunction serializeAMimeType (mimeType) {\n  assert(mimeType !== 'failure')\n  const { parameters, essence } = mimeType\n\n  // 1. Let serialization be the concatenation of mimeType’s\n  //    type, U+002F (/), and mimeType’s subtype.\n  let serialization = essence\n\n  // 2. For each name → value of mimeType’s parameters:\n  for (let [name, value] of parameters.entries()) {\n    // 1. Append U+003B (;) to serialization.\n    serialization += ';'\n\n    // 2. Append name to serialization.\n    serialization += name\n\n    // 3. Append U+003D (=) to serialization.\n    serialization += '='\n\n    // 4. If value does not solely contain HTTP token code\n    //    points or value is the empty string, then:\n    if (!HTTP_TOKEN_CODEPOINTS.test(value)) {\n      // 1. Precede each occurrence of U+0022 (\") or\n      //    U+005C (\\) in value with U+005C (\\).\n      value = value.replace(/(\\\\|\")/g, '\\\\$1')\n\n      // 2. Prepend U+0022 (\") to value.\n      value = '\"' + value\n\n      // 3. Append U+0022 (\") to value.\n      value += '\"'\n    }\n\n    // 5. Append value to serialization.\n    serialization += value\n  }\n\n  // 3. Return serialization.\n  return serialization\n}\n\n/**\n * @see https://fetch.spec.whatwg.org/#http-whitespace\n * @param {number} char\n */\nfunction isHTTPWhiteSpace (char) {\n  // \"\\r\\n\\t \"\n  return char === 0x00d || char === 0x00a || char === 0x009 || char === 0x020\n}\n\n/**\n * @see https://fetch.spec.whatwg.org/#http-whitespace\n * @param {string} str\n * @param {boolean} [leading=true]\n * @param {boolean} [trailing=true]\n */\nfunction removeHTTPWhitespace (str, leading = true, trailing = true) {\n  return removeChars(str, leading, trailing, isHTTPWhiteSpace)\n}\n\n/**\n * @see https://infra.spec.whatwg.org/#ascii-whitespace\n * @param {number} char\n */\nfunction isASCIIWhitespace (char) {\n  // \"\\r\\n\\t\\f \"\n  return char === 0x00d || char === 0x00a || char === 0x009 || char === 0x00c || char === 0x020\n}\n\n/**\n * @see https://infra.spec.whatwg.org/#strip-leading-and-trailing-ascii-whitespace\n * @param {string} str\n * @param {boolean} [leading=true]\n * @param {boolean} [trailing=true]\n */\nfunction removeASCIIWhitespace (str, leading = true, trailing = true) {\n  return removeChars(str, leading, trailing, isASCIIWhitespace)\n}\n\n/**\n * @param {string} str\n * @param {boolean} leading\n * @param {boolean} trailing\n * @param {(charCode: number) => boolean} predicate\n * @returns\n */\nfunction removeChars (str, leading, trailing, predicate) {\n  let lead = 0\n  let trail = str.length - 1\n\n  if (leading) {\n    while (lead < str.length && predicate(str.charCodeAt(lead))) lead++\n  }\n\n  if (trailing) {\n    while (trail > 0 && predicate(str.charCodeAt(trail))) trail--\n  }\n\n  return lead === 0 && trail === str.length - 1 ? str : str.slice(lead, trail + 1)\n}\n\n/**\n * @see https://infra.spec.whatwg.org/#isomorphic-decode\n * @param {Uint8Array} input\n * @returns {string}\n */\nfunction isomorphicDecode (input) {\n  // 1. To isomorphic decode a byte sequence input, return a string whose code point\n  //    length is equal to input’s length and whose code points have the same values\n  //    as the values of input’s bytes, in the same order.\n  const length = input.length\n  if ((2 << 15) - 1 > length) {\n    return String.fromCharCode.apply(null, input)\n  }\n  let result = ''; let i = 0\n  let addition = (2 << 15) - 1\n  while (i < length) {\n    if (i + addition > length) {\n      addition = length - i\n    }\n    result += String.fromCharCode.apply(null, input.subarray(i, i += addition))\n  }\n  return result\n}\n\n/**\n * @see https://mimesniff.spec.whatwg.org/#minimize-a-supported-mime-type\n * @param {Exclude<ReturnType<typeof parseMIMEType>, 'failure'>} mimeType\n */\nfunction minimizeSupportedMimeType (mimeType) {\n  switch (mimeType.essence) {\n    case 'application/ecmascript':\n    case 'application/javascript':\n    case 'application/x-ecmascript':\n    case 'application/x-javascript':\n    case 'text/ecmascript':\n    case 'text/javascript':\n    case 'text/javascript1.0':\n    case 'text/javascript1.1':\n    case 'text/javascript1.2':\n    case 'text/javascript1.3':\n    case 'text/javascript1.4':\n    case 'text/javascript1.5':\n    case 'text/jscript':\n    case 'text/livescript':\n    case 'text/x-ecmascript':\n    case 'text/x-javascript':\n      // 1. If mimeType is a JavaScript MIME type, then return \"text/javascript\".\n      return 'text/javascript'\n    case 'application/json':\n    case 'text/json':\n      // 2. If mimeType is a JSON MIME type, then return \"application/json\".\n      return 'application/json'\n    case 'image/svg+xml':\n      // 3. If mimeType’s essence is \"image/svg+xml\", then return \"image/svg+xml\".\n      return 'image/svg+xml'\n    case 'text/xml':\n    case 'application/xml':\n      // 4. If mimeType is an XML MIME type, then return \"application/xml\".\n      return 'application/xml'\n  }\n\n  // 2. If mimeType is a JSON MIME type, then return \"application/json\".\n  if (mimeType.subtype.endsWith('+json')) {\n    return 'application/json'\n  }\n\n  // 4. If mimeType is an XML MIME type, then return \"application/xml\".\n  if (mimeType.subtype.endsWith('+xml')) {\n    return 'application/xml'\n  }\n\n  // 5. If mimeType is supported by the user agent, then return mimeType’s essence.\n  // Technically, node doesn't support any mimetypes.\n\n  // 6. Return the empty string.\n  return ''\n}\n\nmodule.exports = {\n  dataURLProcessor,\n  URLSerializer,\n  collectASequenceOfCodePoints,\n  collectASequenceOfCodePointsFast,\n  stringPercentDecode,\n  parseMIMEType,\n  collectAnHTTPQuotedString,\n  serializeAMimeType,\n  removeChars,\n  removeHTTPWhitespace,\n  minimizeSupportedMimeType,\n  HTTP_TOKEN_CODEPOINTS,\n  isomorphicDecode\n}\n", "'use strict'\n\nconst { types, inspect } = require('node:util')\nconst { toUSVString } = require('../../core/util')\n\n/** @type {import('../../../types/webidl').Webidl} */\nconst webidl = {}\nwebidl.converters = {}\nwebidl.util = {}\nwebidl.errors = {}\n\nwebidl.errors.exception = function (message) {\n  return new TypeError(`${message.header}: ${message.message}`)\n}\n\nwebidl.errors.conversionFailed = function (context) {\n  const plural = context.types.length === 1 ? '' : ' one of'\n  const message =\n    `${context.argument} could not be converted to` +\n    `${plural}: ${context.types.join(', ')}.`\n\n  return webidl.errors.exception({\n    header: context.prefix,\n    message\n  })\n}\n\nwebidl.errors.invalidArgument = function (context) {\n  return webidl.errors.exception({\n    header: context.prefix,\n    message: `\"${context.value}\" is an invalid ${context.type}.`\n  })\n}\n\n// https://webidl.spec.whatwg.org/#implements\nwebidl.brandCheck = function (V, I, opts) {\n  if (opts?.strict !== false) {\n    if (!(V instanceof I)) {\n      const err = new TypeError('Illegal invocation')\n      err.code = 'ERR_INVALID_THIS' // node compat.\n      throw err\n    }\n  } else {\n    if (V?.[Symbol.toStringTag] !== I.prototype[Symbol.toStringTag]) {\n      const err = new TypeError('Illegal invocation')\n      err.code = 'ERR_INVALID_THIS' // node compat.\n      throw err\n    }\n  }\n}\n\nwebidl.argumentLengthCheck = function ({ length }, min, ctx) {\n  if (length < min) {\n    throw webidl.errors.exception({\n      message: `${min} argument${min !== 1 ? 's' : ''} required, ` +\n               `but${length ? ' only' : ''} ${length} found.`,\n      header: ctx\n    })\n  }\n}\n\nwebidl.illegalConstructor = function () {\n  throw webidl.errors.exception({\n    header: 'TypeError',\n    message: 'Illegal constructor'\n  })\n}\n\n// https://tc39.es/ecma262/#sec-ecmascript-data-types-and-values\nwebidl.util.Type = function (V) {\n  switch (typeof V) {\n    case 'undefined': return 'Undefined'\n    case 'boolean': return 'Boolean'\n    case 'string': return 'String'\n    case 'symbol': return 'Symbol'\n    case 'number': return 'Number'\n    case 'bigint': return 'BigInt'\n    case 'function':\n    case 'object': {\n      if (V === null) {\n        return 'Null'\n      }\n\n      return 'Object'\n    }\n  }\n}\n\n// https://webidl.spec.whatwg.org/#abstract-opdef-converttoint\nwebidl.util.ConvertToInt = function (V, bitLength, signedness, opts) {\n  let upperBound\n  let lowerBound\n\n  // 1. If bitLength is 64, then:\n  if (bitLength === 64) {\n    // 1. Let upperBound be 2^53 − 1.\n    upperBound = Math.pow(2, 53) - 1\n\n    // 2. If signedness is \"unsigned\", then let lowerBound be 0.\n    if (signedness === 'unsigned') {\n      lowerBound = 0\n    } else {\n      // 3. Otherwise let lowerBound be −2^53 + 1.\n      lowerBound = Math.pow(-2, 53) + 1\n    }\n  } else if (signedness === 'unsigned') {\n    // 2. Otherwise, if signedness is \"unsigned\", then:\n\n    // 1. Let lowerBound be 0.\n    lowerBound = 0\n\n    // 2. Let upperBound be 2^bitLength − 1.\n    upperBound = Math.pow(2, bitLength) - 1\n  } else {\n    // 3. Otherwise:\n\n    // 1. Let lowerBound be -2^bitLength − 1.\n    lowerBound = Math.pow(-2, bitLength) - 1\n\n    // 2. Let upperBound be 2^bitLength − 1 − 1.\n    upperBound = Math.pow(2, bitLength - 1) - 1\n  }\n\n  // 4. Let x be ? ToNumber(V).\n  let x = Number(V)\n\n  // 5. If x is −0, then set x to +0.\n  if (x === 0) {\n    x = 0\n  }\n\n  // 6. If the conversion is to an IDL type associated\n  //    with the [EnforceRange] extended attribute, then:\n  if (opts?.enforceRange === true) {\n    // 1. If x is NaN, +∞, or −∞, then throw a TypeError.\n    if (\n      Number.isNaN(x) ||\n      x === Number.POSITIVE_INFINITY ||\n      x === Number.NEGATIVE_INFINITY\n    ) {\n      throw webidl.errors.exception({\n        header: 'Integer conversion',\n        message: `Could not convert ${webidl.util.Stringify(V)} to an integer.`\n      })\n    }\n\n    // 2. Set x to IntegerPart(x).\n    x = webidl.util.IntegerPart(x)\n\n    // 3. If x < lowerBound or x > upperBound, then\n    //    throw a TypeError.\n    if (x < lowerBound || x > upperBound) {\n      throw webidl.errors.exception({\n        header: 'Integer conversion',\n        message: `Value must be between ${lowerBound}-${upperBound}, got ${x}.`\n      })\n    }\n\n    // 4. Return x.\n    return x\n  }\n\n  // 7. If x is not NaN and the conversion is to an IDL\n  //    type associated with the [Clamp] extended\n  //    attribute, then:\n  if (!Number.isNaN(x) && opts?.clamp === true) {\n    // 1. Set x to min(max(x, lowerBound), upperBound).\n    x = Math.min(Math.max(x, lowerBound), upperBound)\n\n    // 2. Round x to the nearest integer, choosing the\n    //    even integer if it lies halfway between two,\n    //    and choosing +0 rather than −0.\n    if (Math.floor(x) % 2 === 0) {\n      x = Math.floor(x)\n    } else {\n      x = Math.ceil(x)\n    }\n\n    // 3. Return x.\n    return x\n  }\n\n  // 8. If x is NaN, +0, +∞, or −∞, then return +0.\n  if (\n    Number.isNaN(x) ||\n    (x === 0 && Object.is(0, x)) ||\n    x === Number.POSITIVE_INFINITY ||\n    x === Number.NEGATIVE_INFINITY\n  ) {\n    return 0\n  }\n\n  // 9. Set x to IntegerPart(x).\n  x = webidl.util.IntegerPart(x)\n\n  // 10. Set x to x modulo 2^bitLength.\n  x = x % Math.pow(2, bitLength)\n\n  // 11. If signedness is \"signed\" and x ≥ 2^bitLength − 1,\n  //    then return x − 2^bitLength.\n  if (signedness === 'signed' && x >= Math.pow(2, bitLength) - 1) {\n    return x - Math.pow(2, bitLength)\n  }\n\n  // 12. Otherwise, return x.\n  return x\n}\n\n// https://webidl.spec.whatwg.org/#abstract-opdef-integerpart\nwebidl.util.IntegerPart = function (n) {\n  // 1. Let r be floor(abs(n)).\n  const r = Math.floor(Math.abs(n))\n\n  // 2. If n < 0, then return -1 × r.\n  if (n < 0) {\n    return -1 * r\n  }\n\n  // 3. Otherwise, return r.\n  return r\n}\n\nwebidl.util.Stringify = function (V) {\n  const type = webidl.util.Type(V)\n\n  switch (type) {\n    case 'Symbol':\n      return `Symbol(${V.description})`\n    case 'Object':\n      return inspect(V)\n    case 'String':\n      return `\"${V}\"`\n    default:\n      return `${V}`\n  }\n}\n\n// https://webidl.spec.whatwg.org/#es-sequence\nwebidl.sequenceConverter = function (converter) {\n  return (V, prefix, argument, Iterable) => {\n    // 1. If Type(V) is not Object, throw a TypeError.\n    if (webidl.util.Type(V) !== 'Object') {\n      throw webidl.errors.exception({\n        header: prefix,\n        message: `${argument} (${webidl.util.Stringify(V)}) is not iterable.`\n      })\n    }\n\n    // 2. Let method be ? GetMethod(V, @@iterator).\n    /** @type {Generator} */\n    const method = typeof Iterable === 'function' ? Iterable() : V?.[Symbol.iterator]?.()\n    const seq = []\n    let index = 0\n\n    // 3. If method is undefined, throw a TypeError.\n    if (\n      method === undefined ||\n      typeof method.next !== 'function'\n    ) {\n      throw webidl.errors.exception({\n        header: prefix,\n        message: `${argument} is not iterable.`\n      })\n    }\n\n    // https://webidl.spec.whatwg.org/#create-sequence-from-iterable\n    while (true) {\n      const { done, value } = method.next()\n\n      if (done) {\n        break\n      }\n\n      seq.push(converter(value, prefix, `${argument}[${index++}]`))\n    }\n\n    return seq\n  }\n}\n\n// https://webidl.spec.whatwg.org/#es-to-record\nwebidl.recordConverter = function (keyConverter, valueConverter) {\n  return (O, prefix, argument) => {\n    // 1. If Type(O) is not Object, throw a TypeError.\n    if (webidl.util.Type(O) !== 'Object') {\n      throw webidl.errors.exception({\n        header: prefix,\n        message: `${argument} (\"${webidl.util.Type(O)}\") is not an Object.`\n      })\n    }\n\n    // 2. Let result be a new empty instance of record<K, V>.\n    const result = {}\n\n    if (!types.isProxy(O)) {\n      // 1. Let desc be ? O.[[GetOwnProperty]](key).\n      const keys = [...Object.getOwnPropertyNames(O), ...Object.getOwnPropertySymbols(O)]\n\n      for (const key of keys) {\n        // 1. Let typedKey be key converted to an IDL value of type K.\n        const typedKey = keyConverter(key, prefix, argument)\n\n        // 2. Let value be ? Get(O, key).\n        // 3. Let typedValue be value converted to an IDL value of type V.\n        const typedValue = valueConverter(O[key], prefix, argument)\n\n        // 4. Set result[typedKey] to typedValue.\n        result[typedKey] = typedValue\n      }\n\n      // 5. Return result.\n      return result\n    }\n\n    // 3. Let keys be ? O.[[OwnPropertyKeys]]().\n    const keys = Reflect.ownKeys(O)\n\n    // 4. For each key of keys.\n    for (const key of keys) {\n      // 1. Let desc be ? O.[[GetOwnProperty]](key).\n      const desc = Reflect.getOwnPropertyDescriptor(O, key)\n\n      // 2. If desc is not undefined and desc.[[Enumerable]] is true:\n      if (desc?.enumerable) {\n        // 1. Let typedKey be key converted to an IDL value of type K.\n        const typedKey = keyConverter(key, prefix, argument)\n\n        // 2. Let value be ? Get(O, key).\n        // 3. Let typedValue be value converted to an IDL value of type V.\n        const typedValue = valueConverter(O[key], prefix, argument)\n\n        // 4. Set result[typedKey] to typedValue.\n        result[typedKey] = typedValue\n      }\n    }\n\n    // 5. Return result.\n    return result\n  }\n}\n\nwebidl.interfaceConverter = function (i) {\n  return (V, prefix, argument, opts) => {\n    if (opts?.strict !== false && !(V instanceof i)) {\n      throw webidl.errors.exception({\n        header: prefix,\n        message: `Expected ${argument} (\"${webidl.util.Stringify(V)}\") to be an instance of ${i.name}.`\n      })\n    }\n\n    return V\n  }\n}\n\nwebidl.dictionaryConverter = function (converters) {\n  return (dictionary, prefix, argument) => {\n    const type = webidl.util.Type(dictionary)\n    const dict = {}\n\n    if (type === 'Null' || type === 'Undefined') {\n      return dict\n    } else if (type !== 'Object') {\n      throw webidl.errors.exception({\n        header: prefix,\n        message: `Expected ${dictionary} to be one of: Null, Undefined, Object.`\n      })\n    }\n\n    for (const options of converters) {\n      const { key, defaultValue, required, converter } = options\n\n      if (required === true) {\n        if (!Object.hasOwn(dictionary, key)) {\n          throw webidl.errors.exception({\n            header: prefix,\n            message: `Missing required key \"${key}\".`\n          })\n        }\n      }\n\n      let value = dictionary[key]\n      const hasDefault = Object.hasOwn(options, 'defaultValue')\n\n      // Only use defaultValue if value is undefined and\n      // a defaultValue options was provided.\n      if (hasDefault && value !== null) {\n        value ??= defaultValue()\n      }\n\n      // A key can be optional and have no default value.\n      // When this happens, do not perform a conversion,\n      // and do not assign the key a value.\n      if (required || hasDefault || value !== undefined) {\n        value = converter(value, prefix, `${argument}.${key}`)\n\n        if (\n          options.allowedValues &&\n          !options.allowedValues.includes(value)\n        ) {\n          throw webidl.errors.exception({\n            header: prefix,\n            message: `${value} is not an accepted type. Expected one of ${options.allowedValues.join(', ')}.`\n          })\n        }\n\n        dict[key] = value\n      }\n    }\n\n    return dict\n  }\n}\n\nwebidl.nullableConverter = function (converter) {\n  return (V, prefix, argument) => {\n    if (V === null) {\n      return V\n    }\n\n    return converter(V, prefix, argument)\n  }\n}\n\n// https://webidl.spec.whatwg.org/#es-DOMString\nwebidl.converters.DOMString = function (V, prefix, argument, opts) {\n  // 1. If V is null and the conversion is to an IDL type\n  //    associated with the [LegacyNullToEmptyString]\n  //    extended attribute, then return the DOMString value\n  //    that represents the empty string.\n  if (V === null && opts?.legacyNullToEmptyString) {\n    return ''\n  }\n\n  // 2. Let x be ? ToString(V).\n  if (typeof V === 'symbol') {\n    throw webidl.errors.exception({\n      header: prefix,\n      message: `${argument} is a symbol, which cannot be converted to a DOMString.`\n    })\n  }\n\n  // 3. Return the IDL DOMString value that represents the\n  //    same sequence of code units as the one the\n  //    ECMAScript String value x represents.\n  return String(V)\n}\n\n// https://webidl.spec.whatwg.org/#es-ByteString\nwebidl.converters.ByteString = function (V, prefix, argument) {\n  // 1. Let x be ? ToString(V).\n  // Note: DOMString converter perform ? ToString(V)\n  const x = webidl.converters.DOMString(V, prefix, argument)\n\n  // 2. If the value of any element of x is greater than\n  //    255, then throw a TypeError.\n  for (let index = 0; index < x.length; index++) {\n    if (x.charCodeAt(index) > 255) {\n      throw new TypeError(\n        'Cannot convert argument to a ByteString because the character at ' +\n        `index ${index} has a value of ${x.charCodeAt(index)} which is greater than 255.`\n      )\n    }\n  }\n\n  // 3. Return an IDL ByteString value whose length is the\n  //    length of x, and where the value of each element is\n  //    the value of the corresponding element of x.\n  return x\n}\n\n// https://webidl.spec.whatwg.org/#es-USVString\n// TODO: rewrite this so we can control the errors thrown\nwebidl.converters.USVString = toUSVString\n\n// https://webidl.spec.whatwg.org/#es-boolean\nwebidl.converters.boolean = function (V) {\n  // 1. Let x be the result of computing ToBoolean(V).\n  const x = Boolean(V)\n\n  // 2. Return the IDL boolean value that is the one that represents\n  //    the same truth value as the ECMAScript Boolean value x.\n  return x\n}\n\n// https://webidl.spec.whatwg.org/#es-any\nwebidl.converters.any = function (V) {\n  return V\n}\n\n// https://webidl.spec.whatwg.org/#es-long-long\nwebidl.converters['long long'] = function (V, prefix, argument) {\n  // 1. Let x be ? ConvertToInt(V, 64, \"signed\").\n  const x = webidl.util.ConvertToInt(V, 64, 'signed', undefined, prefix, argument)\n\n  // 2. Return the IDL long long value that represents\n  //    the same numeric value as x.\n  return x\n}\n\n// https://webidl.spec.whatwg.org/#es-unsigned-long-long\nwebidl.converters['unsigned long long'] = function (V, prefix, argument) {\n  // 1. Let x be ? ConvertToInt(V, 64, \"unsigned\").\n  const x = webidl.util.ConvertToInt(V, 64, 'unsigned', undefined, prefix, argument)\n\n  // 2. Return the IDL unsigned long long value that\n  //    represents the same numeric value as x.\n  return x\n}\n\n// https://webidl.spec.whatwg.org/#es-unsigned-long\nwebidl.converters['unsigned long'] = function (V, prefix, argument) {\n  // 1. Let x be ? ConvertToInt(V, 32, \"unsigned\").\n  const x = webidl.util.ConvertToInt(V, 32, 'unsigned', undefined, prefix, argument)\n\n  // 2. Return the IDL unsigned long value that\n  //    represents the same numeric value as x.\n  return x\n}\n\n// https://webidl.spec.whatwg.org/#es-unsigned-short\nwebidl.converters['unsigned short'] = function (V, prefix, argument, opts) {\n  // 1. Let x be ? ConvertToInt(V, 16, \"unsigned\").\n  const x = webidl.util.ConvertToInt(V, 16, 'unsigned', opts, prefix, argument)\n\n  // 2. Return the IDL unsigned short value that represents\n  //    the same numeric value as x.\n  return x\n}\n\n// https://webidl.spec.whatwg.org/#idl-ArrayBuffer\nwebidl.converters.ArrayBuffer = function (V, prefix, argument, opts) {\n  // 1. If Type(V) is not Object, or V does not have an\n  //    [[ArrayBufferData]] internal slot, then throw a\n  //    TypeError.\n  // see: https://tc39.es/ecma262/#sec-properties-of-the-arraybuffer-instances\n  // see: https://tc39.es/ecma262/#sec-properties-of-the-sharedarraybuffer-instances\n  if (\n    webidl.util.Type(V) !== 'Object' ||\n    !types.isAnyArrayBuffer(V)\n  ) {\n    throw webidl.errors.conversionFailed({\n      prefix,\n      argument: `${argument} (\"${webidl.util.Stringify(V)}\")`,\n      types: ['ArrayBuffer']\n    })\n  }\n\n  // 2. If the conversion is not to an IDL type associated\n  //    with the [AllowShared] extended attribute, and\n  //    IsSharedArrayBuffer(V) is true, then throw a\n  //    TypeError.\n  if (opts?.allowShared === false && types.isSharedArrayBuffer(V)) {\n    throw webidl.errors.exception({\n      header: 'ArrayBuffer',\n      message: 'SharedArrayBuffer is not allowed.'\n    })\n  }\n\n  // 3. If the conversion is not to an IDL type associated\n  //    with the [AllowResizable] extended attribute, and\n  //    IsResizableArrayBuffer(V) is true, then throw a\n  //    TypeError.\n  if (V.resizable || V.growable) {\n    throw webidl.errors.exception({\n      header: 'ArrayBuffer',\n      message: 'Received a resizable ArrayBuffer.'\n    })\n  }\n\n  // 4. Return the IDL ArrayBuffer value that is a\n  //    reference to the same object as V.\n  return V\n}\n\nwebidl.converters.TypedArray = function (V, T, prefix, name, opts) {\n  // 1. Let T be the IDL type V is being converted to.\n\n  // 2. If Type(V) is not Object, or V does not have a\n  //    [[TypedArrayName]] internal slot with a value\n  //    equal to T’s name, then throw a TypeError.\n  if (\n    webidl.util.Type(V) !== 'Object' ||\n    !types.isTypedArray(V) ||\n    V.constructor.name !== T.name\n  ) {\n    throw webidl.errors.conversionFailed({\n      prefix,\n      argument: `${name} (\"${webidl.util.Stringify(V)}\")`,\n      types: [T.name]\n    })\n  }\n\n  // 3. If the conversion is not to an IDL type associated\n  //    with the [AllowShared] extended attribute, and\n  //    IsSharedArrayBuffer(V.[[ViewedArrayBuffer]]) is\n  //    true, then throw a TypeError.\n  if (opts?.allowShared === false && types.isSharedArrayBuffer(V.buffer)) {\n    throw webidl.errors.exception({\n      header: 'ArrayBuffer',\n      message: 'SharedArrayBuffer is not allowed.'\n    })\n  }\n\n  // 4. If the conversion is not to an IDL type associated\n  //    with the [AllowResizable] extended attribute, and\n  //    IsResizableArrayBuffer(V.[[ViewedArrayBuffer]]) is\n  //    true, then throw a TypeError.\n  if (V.buffer.resizable || V.buffer.growable) {\n    throw webidl.errors.exception({\n      header: 'ArrayBuffer',\n      message: 'Received a resizable ArrayBuffer.'\n    })\n  }\n\n  // 5. Return the IDL value of type T that is a reference\n  //    to the same object as V.\n  return V\n}\n\nwebidl.converters.DataView = function (V, prefix, name, opts) {\n  // 1. If Type(V) is not Object, or V does not have a\n  //    [[DataView]] internal slot, then throw a TypeError.\n  if (webidl.util.Type(V) !== 'Object' || !types.isDataView(V)) {\n    throw webidl.errors.exception({\n      header: prefix,\n      message: `${name} is not a DataView.`\n    })\n  }\n\n  // 2. If the conversion is not to an IDL type associated\n  //    with the [AllowShared] extended attribute, and\n  //    IsSharedArrayBuffer(V.[[ViewedArrayBuffer]]) is true,\n  //    then throw a TypeError.\n  if (opts?.allowShared === false && types.isSharedArrayBuffer(V.buffer)) {\n    throw webidl.errors.exception({\n      header: 'ArrayBuffer',\n      message: 'SharedArrayBuffer is not allowed.'\n    })\n  }\n\n  // 3. If the conversion is not to an IDL type associated\n  //    with the [AllowResizable] extended attribute, and\n  //    IsResizableArrayBuffer(V.[[ViewedArrayBuffer]]) is\n  //    true, then throw a TypeError.\n  if (V.buffer.resizable || V.buffer.growable) {\n    throw webidl.errors.exception({\n      header: 'ArrayBuffer',\n      message: 'Received a resizable ArrayBuffer.'\n    })\n  }\n\n  // 4. Return the IDL DataView value that is a reference\n  //    to the same object as V.\n  return V\n}\n\n// https://webidl.spec.whatwg.org/#BufferSource\nwebidl.converters.BufferSource = function (V, prefix, name, opts) {\n  if (types.isAnyArrayBuffer(V)) {\n    return webidl.converters.ArrayBuffer(V, prefix, name, { ...opts, allowShared: false })\n  }\n\n  if (types.isTypedArray(V)) {\n    return webidl.converters.TypedArray(V, V.constructor, prefix, name, { ...opts, allowShared: false })\n  }\n\n  if (types.isDataView(V)) {\n    return webidl.converters.DataView(V, prefix, name, { ...opts, allowShared: false })\n  }\n\n  throw webidl.errors.conversionFailed({\n    prefix,\n    argument: `${name} (\"${webidl.util.Stringify(V)}\")`,\n    types: ['BufferSource']\n  })\n}\n\nwebidl.converters['sequence<ByteString>'] = webidl.sequenceConverter(\n  webidl.converters.ByteString\n)\n\nwebidl.converters['sequence<sequence<ByteString>>'] = webidl.sequenceConverter(\n  webidl.converters['sequence<ByteString>']\n)\n\nwebidl.converters['record<ByteString, ByteString>'] = webidl.recordConverter(\n  webidl.converters.ByteString,\n  webidl.converters.ByteString\n)\n\nmodule.exports = {\n  webidl\n}\n", "'use strict'\n\nconst { Transform } = require('node:stream')\nconst zlib = require('node:zlib')\nconst { redirectStatusSet, referrerPolicySet: referrerPolicyTokens, badPortsSet } = require('./constants')\nconst { getGlobalOrigin } = require('./global')\nconst { collectASequenceOfCodePoints, collectAnHTTPQuotedString, removeChars, parseMIMEType } = require('./data-url')\nconst { performance } = require('node:perf_hooks')\nconst { isBlobLike, ReadableStreamFrom, isValidHTTPToken, normalizedMethodRecordsBase } = require('../../core/util')\nconst assert = require('node:assert')\nconst { isUint8Array } = require('node:util/types')\nconst { webidl } = require('./webidl')\n\nlet supportedHashes = []\n\n// https://nodejs.org/api/crypto.html#determining-if-crypto-support-is-unavailable\n/** @type {import('crypto')} */\nlet crypto\ntry {\n  crypto = require('node:crypto')\n  const possibleRelevantHashes = ['sha256', 'sha384', 'sha512']\n  supportedHashes = crypto.getHashes().filter((hash) => possibleRelevantHashes.includes(hash))\n/* c8 ignore next 3 */\n} catch {\n\n}\n\nfunction responseURL (response) {\n  // https://fetch.spec.whatwg.org/#responses\n  // A response has an associated URL. It is a pointer to the last URL\n  // in response’s URL list and null if response’s URL list is empty.\n  const urlList = response.urlList\n  const length = urlList.length\n  return length === 0 ? null : urlList[length - 1].toString()\n}\n\n// https://fetch.spec.whatwg.org/#concept-response-location-url\nfunction responseLocationURL (response, requestFragment) {\n  // 1. If response’s status is not a redirect status, then return null.\n  if (!redirectStatusSet.has(response.status)) {\n    return null\n  }\n\n  // 2. Let location be the result of extracting header list values given\n  // `Location` and response’s header list.\n  let location = response.headersList.get('location', true)\n\n  // 3. If location is a header value, then set location to the result of\n  //    parsing location with response’s URL.\n  if (location !== null && isValidHeaderValue(location)) {\n    if (!isValidEncodedURL(location)) {\n      // Some websites respond location header in UTF-8 form without encoding them as ASCII\n      // and major browsers redirect them to correctly UTF-8 encoded addresses.\n      // Here, we handle that behavior in the same way.\n      location = normalizeBinaryStringToUtf8(location)\n    }\n    location = new URL(location, responseURL(response))\n  }\n\n  // 4. If location is a URL whose fragment is null, then set location’s\n  // fragment to requestFragment.\n  if (location && !location.hash) {\n    location.hash = requestFragment\n  }\n\n  // 5. Return location.\n  return location\n}\n\n/**\n * @see https://www.rfc-editor.org/rfc/rfc1738#section-2.2\n * @param {string} url\n * @returns {boolean}\n */\nfunction isValidEncodedURL (url) {\n  for (let i = 0; i < url.length; ++i) {\n    const code = url.charCodeAt(i)\n\n    if (\n      code > 0x7E || // Non-US-ASCII + DEL\n      code < 0x20 // Control characters NUL - US\n    ) {\n      return false\n    }\n  }\n  return true\n}\n\n/**\n * If string contains non-ASCII characters, assumes it's UTF-8 encoded and decodes it.\n * Since UTF-8 is a superset of ASCII, this will work for ASCII strings as well.\n * @param {string} value\n * @returns {string}\n */\nfunction normalizeBinaryStringToUtf8 (value) {\n  return Buffer.from(value, 'binary').toString('utf8')\n}\n\n/** @returns {URL} */\nfunction requestCurrentURL (request) {\n  return request.urlList[request.urlList.length - 1]\n}\n\nfunction requestBadPort (request) {\n  // 1. Let url be request’s current URL.\n  const url = requestCurrentURL(request)\n\n  // 2. If url’s scheme is an HTTP(S) scheme and url’s port is a bad port,\n  // then return blocked.\n  if (urlIsHttpHttpsScheme(url) && badPortsSet.has(url.port)) {\n    return 'blocked'\n  }\n\n  // 3. Return allowed.\n  return 'allowed'\n}\n\nfunction isErrorLike (object) {\n  return object instanceof Error || (\n    object?.constructor?.name === 'Error' ||\n    object?.constructor?.name === 'DOMException'\n  )\n}\n\n// Check whether |statusText| is a ByteString and\n// matches the Reason-Phrase token production.\n// RFC 2616: https://tools.ietf.org/html/rfc2616\n// RFC 7230: https://tools.ietf.org/html/rfc7230\n// \"reason-phrase = *( HTAB / SP / VCHAR / obs-text )\"\n// https://github.com/chromium/chromium/blob/94.0.4604.1/third_party/blink/renderer/core/fetch/response.cc#L116\nfunction isValidReasonPhrase (statusText) {\n  for (let i = 0; i < statusText.length; ++i) {\n    const c = statusText.charCodeAt(i)\n    if (\n      !(\n        (\n          c === 0x09 || // HTAB\n          (c >= 0x20 && c <= 0x7e) || // SP / VCHAR\n          (c >= 0x80 && c <= 0xff)\n        ) // obs-text\n      )\n    ) {\n      return false\n    }\n  }\n  return true\n}\n\n/**\n * @see https://fetch.spec.whatwg.org/#header-name\n * @param {string} potentialValue\n */\nconst isValidHeaderName = isValidHTTPToken\n\n/**\n * @see https://fetch.spec.whatwg.org/#header-value\n * @param {string} potentialValue\n */\nfunction isValidHeaderValue (potentialValue) {\n  // - Has no leading or trailing HTTP tab or space bytes.\n  // - Contains no 0x00 (NUL) or HTTP newline bytes.\n  return (\n    potentialValue[0] === '\\t' ||\n    potentialValue[0] === ' ' ||\n    potentialValue[potentialValue.length - 1] === '\\t' ||\n    potentialValue[potentialValue.length - 1] === ' ' ||\n    potentialValue.includes('\\n') ||\n    potentialValue.includes('\\r') ||\n    potentialValue.includes('\\0')\n  ) === false\n}\n\n// https://w3c.github.io/webappsec-referrer-policy/#set-requests-referrer-policy-on-redirect\nfunction setRequestReferrerPolicyOnRedirect (request, actualResponse) {\n  //  Given a request request and a response actualResponse, this algorithm\n  //  updates request’s referrer policy according to the Referrer-Policy\n  //  header (if any) in actualResponse.\n\n  // 1. Let policy be the result of executing § 8.1 Parse a referrer policy\n  // from a Referrer-Policy header on actualResponse.\n\n  // 8.1 Parse a referrer policy from a Referrer-Policy header\n  // 1. Let policy-tokens be the result of extracting header list values given `Referrer-Policy` and response’s header list.\n  const { headersList } = actualResponse\n  // 2. Let policy be the empty string.\n  // 3. For each token in policy-tokens, if token is a referrer policy and token is not the empty string, then set policy to token.\n  // 4. Return policy.\n  const policyHeader = (headersList.get('referrer-policy', true) ?? '').split(',')\n\n  // Note: As the referrer-policy can contain multiple policies\n  // separated by comma, we need to loop through all of them\n  // and pick the first valid one.\n  // Ref: https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Referrer-Policy#specify_a_fallback_policy\n  let policy = ''\n  if (policyHeader.length > 0) {\n    // The right-most policy takes precedence.\n    // The left-most policy is the fallback.\n    for (let i = policyHeader.length; i !== 0; i--) {\n      const token = policyHeader[i - 1].trim()\n      if (referrerPolicyTokens.has(token)) {\n        policy = token\n        break\n      }\n    }\n  }\n\n  // 2. If policy is not the empty string, then set request’s referrer policy to policy.\n  if (policy !== '') {\n    request.referrerPolicy = policy\n  }\n}\n\n// https://fetch.spec.whatwg.org/#cross-origin-resource-policy-check\nfunction crossOriginResourcePolicyCheck () {\n  // TODO\n  return 'allowed'\n}\n\n// https://fetch.spec.whatwg.org/#concept-cors-check\nfunction corsCheck () {\n  // TODO\n  return 'success'\n}\n\n// https://fetch.spec.whatwg.org/#concept-tao-check\nfunction TAOCheck () {\n  // TODO\n  return 'success'\n}\n\nfunction appendFetchMetadata (httpRequest) {\n  //  https://w3c.github.io/webappsec-fetch-metadata/#sec-fetch-dest-header\n  //  TODO\n\n  //  https://w3c.github.io/webappsec-fetch-metadata/#sec-fetch-mode-header\n\n  //  1. Assert: r’s url is a potentially trustworthy URL.\n  //  TODO\n\n  //  2. Let header be a Structured Header whose value is a token.\n  let header = null\n\n  //  3. Set header’s value to r’s mode.\n  header = httpRequest.mode\n\n  //  4. Set a structured field value `Sec-Fetch-Mode`/header in r’s header list.\n  httpRequest.headersList.set('sec-fetch-mode', header, true)\n\n  //  https://w3c.github.io/webappsec-fetch-metadata/#sec-fetch-site-header\n  //  TODO\n\n  //  https://w3c.github.io/webappsec-fetch-metadata/#sec-fetch-user-header\n  //  TODO\n}\n\n// https://fetch.spec.whatwg.org/#append-a-request-origin-header\nfunction appendRequestOriginHeader (request) {\n  // 1. Let serializedOrigin be the result of byte-serializing a request origin\n  //    with request.\n  // TODO: implement \"byte-serializing a request origin\"\n  let serializedOrigin = request.origin\n\n  // - \"'client' is changed to an origin during fetching.\"\n  //   This doesn't happen in undici (in most cases) because undici, by default,\n  //   has no concept of origin.\n  // - request.origin can also be set to request.client.origin (client being\n  //   an environment settings object), which is undefined without using\n  //   setGlobalOrigin.\n  if (serializedOrigin === 'client' || serializedOrigin === undefined) {\n    return\n  }\n\n  // 2. If request’s response tainting is \"cors\" or request’s mode is \"websocket\",\n  //    then append (`Origin`, serializedOrigin) to request’s header list.\n  // 3. Otherwise, if request’s method is neither `GET` nor `HEAD`, then:\n  if (request.responseTainting === 'cors' || request.mode === 'websocket') {\n    request.headersList.append('origin', serializedOrigin, true)\n  } else if (request.method !== 'GET' && request.method !== 'HEAD') {\n    // 1. Switch on request’s referrer policy:\n    switch (request.referrerPolicy) {\n      case 'no-referrer':\n        // Set serializedOrigin to `null`.\n        serializedOrigin = null\n        break\n      case 'no-referrer-when-downgrade':\n      case 'strict-origin':\n      case 'strict-origin-when-cross-origin':\n        // If request’s origin is a tuple origin, its scheme is \"https\", and\n        // request’s current URL’s scheme is not \"https\", then set\n        // serializedOrigin to `null`.\n        if (request.origin && urlHasHttpsScheme(request.origin) && !urlHasHttpsScheme(requestCurrentURL(request))) {\n          serializedOrigin = null\n        }\n        break\n      case 'same-origin':\n        // If request’s origin is not same origin with request’s current URL’s\n        // origin, then set serializedOrigin to `null`.\n        if (!sameOrigin(request, requestCurrentURL(request))) {\n          serializedOrigin = null\n        }\n        break\n      default:\n        // Do nothing.\n    }\n\n    // 2. Append (`Origin`, serializedOrigin) to request’s header list.\n    request.headersList.append('origin', serializedOrigin, true)\n  }\n}\n\n// https://w3c.github.io/hr-time/#dfn-coarsen-time\nfunction coarsenTime (timestamp, crossOriginIsolatedCapability) {\n  // TODO\n  return timestamp\n}\n\n// https://fetch.spec.whatwg.org/#clamp-and-coarsen-connection-timing-info\nfunction clampAndCoarsenConnectionTimingInfo (connectionTimingInfo, defaultStartTime, crossOriginIsolatedCapability) {\n  if (!connectionTimingInfo?.startTime || connectionTimingInfo.startTime < defaultStartTime) {\n    return {\n      domainLookupStartTime: defaultStartTime,\n      domainLookupEndTime: defaultStartTime,\n      connectionStartTime: defaultStartTime,\n      connectionEndTime: defaultStartTime,\n      secureConnectionStartTime: defaultStartTime,\n      ALPNNegotiatedProtocol: connectionTimingInfo?.ALPNNegotiatedProtocol\n    }\n  }\n\n  return {\n    domainLookupStartTime: coarsenTime(connectionTimingInfo.domainLookupStartTime, crossOriginIsolatedCapability),\n    domainLookupEndTime: coarsenTime(connectionTimingInfo.domainLookupEndTime, crossOriginIsolatedCapability),\n    connectionStartTime: coarsenTime(connectionTimingInfo.connectionStartTime, crossOriginIsolatedCapability),\n    connectionEndTime: coarsenTime(connectionTimingInfo.connectionEndTime, crossOriginIsolatedCapability),\n    secureConnectionStartTime: coarsenTime(connectionTimingInfo.secureConnectionStartTime, crossOriginIsolatedCapability),\n    ALPNNegotiatedProtocol: connectionTimingInfo.ALPNNegotiatedProtocol\n  }\n}\n\n// https://w3c.github.io/hr-time/#dfn-coarsened-shared-current-time\nfunction coarsenedSharedCurrentTime (crossOriginIsolatedCapability) {\n  return coarsenTime(performance.now(), crossOriginIsolatedCapability)\n}\n\n// https://fetch.spec.whatwg.org/#create-an-opaque-timing-info\nfunction createOpaqueTimingInfo (timingInfo) {\n  return {\n    startTime: timingInfo.startTime ?? 0,\n    redirectStartTime: 0,\n    redirectEndTime: 0,\n    postRedirectStartTime: timingInfo.startTime ?? 0,\n    finalServiceWorkerStartTime: 0,\n    finalNetworkResponseStartTime: 0,\n    finalNetworkRequestStartTime: 0,\n    endTime: 0,\n    encodedBodySize: 0,\n    decodedBodySize: 0,\n    finalConnectionTimingInfo: null\n  }\n}\n\n// https://html.spec.whatwg.org/multipage/origin.html#policy-container\nfunction makePolicyContainer () {\n  // Note: the fetch spec doesn't make use of embedder policy or CSP list\n  return {\n    referrerPolicy: 'strict-origin-when-cross-origin'\n  }\n}\n\n// https://html.spec.whatwg.org/multipage/origin.html#clone-a-policy-container\nfunction clonePolicyContainer (policyContainer) {\n  return {\n    referrerPolicy: policyContainer.referrerPolicy\n  }\n}\n\n// https://w3c.github.io/webappsec-referrer-policy/#determine-requests-referrer\nfunction determineRequestsReferrer (request) {\n  // 1. Let policy be request's referrer policy.\n  const policy = request.referrerPolicy\n\n  // Note: policy cannot (shouldn't) be null or an empty string.\n  assert(policy)\n\n  // 2. Let environment be request’s client.\n\n  let referrerSource = null\n\n  // 3. Switch on request’s referrer:\n  if (request.referrer === 'client') {\n    // Note: node isn't a browser and doesn't implement document/iframes,\n    // so we bypass this step and replace it with our own.\n\n    const globalOrigin = getGlobalOrigin()\n\n    if (!globalOrigin || globalOrigin.origin === 'null') {\n      return 'no-referrer'\n    }\n\n    // note: we need to clone it as it's mutated\n    referrerSource = new URL(globalOrigin)\n  } else if (request.referrer instanceof URL) {\n    // Let referrerSource be request’s referrer.\n    referrerSource = request.referrer\n  }\n\n  // 4. Let request’s referrerURL be the result of stripping referrerSource for\n  //    use as a referrer.\n  let referrerURL = stripURLForReferrer(referrerSource)\n\n  // 5. Let referrerOrigin be the result of stripping referrerSource for use as\n  //    a referrer, with the origin-only flag set to true.\n  const referrerOrigin = stripURLForReferrer(referrerSource, true)\n\n  // 6. If the result of serializing referrerURL is a string whose length is\n  //    greater than 4096, set referrerURL to referrerOrigin.\n  if (referrerURL.toString().length > 4096) {\n    referrerURL = referrerOrigin\n  }\n\n  const areSameOrigin = sameOrigin(request, referrerURL)\n  const isNonPotentiallyTrustWorthy = isURLPotentiallyTrustworthy(referrerURL) &&\n    !isURLPotentiallyTrustworthy(request.url)\n\n  // 8. Execute the switch statements corresponding to the value of policy:\n  switch (policy) {\n    case 'origin': return referrerOrigin != null ? referrerOrigin : stripURLForReferrer(referrerSource, true)\n    case 'unsafe-url': return referrerURL\n    case 'same-origin':\n      return areSameOrigin ? referrerOrigin : 'no-referrer'\n    case 'origin-when-cross-origin':\n      return areSameOrigin ? referrerURL : referrerOrigin\n    case 'strict-origin-when-cross-origin': {\n      const currentURL = requestCurrentURL(request)\n\n      // 1. If the origin of referrerURL and the origin of request’s current\n      //    URL are the same, then return referrerURL.\n      if (sameOrigin(referrerURL, currentURL)) {\n        return referrerURL\n      }\n\n      // 2. If referrerURL is a potentially trustworthy URL and request’s\n      //    current URL is not a potentially trustworthy URL, then return no\n      //    referrer.\n      if (isURLPotentiallyTrustworthy(referrerURL) && !isURLPotentiallyTrustworthy(currentURL)) {\n        return 'no-referrer'\n      }\n\n      // 3. Return referrerOrigin.\n      return referrerOrigin\n    }\n    case 'strict-origin': // eslint-disable-line\n      /**\n         * 1. If referrerURL is a potentially trustworthy URL and\n         * request’s current URL is not a potentially trustworthy URL,\n         * then return no referrer.\n         * 2. Return referrerOrigin\n        */\n    case 'no-referrer-when-downgrade': // eslint-disable-line\n      /**\n       * 1. If referrerURL is a potentially trustworthy URL and\n       * request’s current URL is not a potentially trustworthy URL,\n       * then return no referrer.\n       * 2. Return referrerOrigin\n      */\n\n    default: // eslint-disable-line\n      return isNonPotentiallyTrustWorthy ? 'no-referrer' : referrerOrigin\n  }\n}\n\n/**\n * @see https://w3c.github.io/webappsec-referrer-policy/#strip-url\n * @param {URL} url\n * @param {boolean|undefined} originOnly\n */\nfunction stripURLForReferrer (url, originOnly) {\n  // 1. Assert: url is a URL.\n  assert(url instanceof URL)\n\n  url = new URL(url)\n\n  // 2. If url’s scheme is a local scheme, then return no referrer.\n  if (url.protocol === 'file:' || url.protocol === 'about:' || url.protocol === 'blank:') {\n    return 'no-referrer'\n  }\n\n  // 3. Set url’s username to the empty string.\n  url.username = ''\n\n  // 4. Set url’s password to the empty string.\n  url.password = ''\n\n  // 5. Set url’s fragment to null.\n  url.hash = ''\n\n  // 6. If the origin-only flag is true, then:\n  if (originOnly) {\n    // 1. Set url’s path to « the empty string ».\n    url.pathname = ''\n\n    // 2. Set url’s query to null.\n    url.search = ''\n  }\n\n  // 7. Return url.\n  return url\n}\n\nfunction isURLPotentiallyTrustworthy (url) {\n  if (!(url instanceof URL)) {\n    return false\n  }\n\n  // If child of about, return true\n  if (url.href === 'about:blank' || url.href === 'about:srcdoc') {\n    return true\n  }\n\n  // If scheme is data, return true\n  if (url.protocol === 'data:') return true\n\n  // If file, return true\n  if (url.protocol === 'file:') return true\n\n  return isOriginPotentiallyTrustworthy(url.origin)\n\n  function isOriginPotentiallyTrustworthy (origin) {\n    // If origin is explicitly null, return false\n    if (origin == null || origin === 'null') return false\n\n    const originAsURL = new URL(origin)\n\n    // If secure, return true\n    if (originAsURL.protocol === 'https:' || originAsURL.protocol === 'wss:') {\n      return true\n    }\n\n    // If localhost or variants, return true\n    if (/^127(?:\\.[0-9]+){0,2}\\.[0-9]+$|^\\[(?:0*:)*?:?0*1\\]$/.test(originAsURL.hostname) ||\n     (originAsURL.hostname === 'localhost' || originAsURL.hostname.includes('localhost.')) ||\n     (originAsURL.hostname.endsWith('.localhost'))) {\n      return true\n    }\n\n    // If any other, return false\n    return false\n  }\n}\n\n/**\n * @see https://w3c.github.io/webappsec-subresource-integrity/#does-response-match-metadatalist\n * @param {Uint8Array} bytes\n * @param {string} metadataList\n */\nfunction bytesMatch (bytes, metadataList) {\n  // If node is not built with OpenSSL support, we cannot check\n  // a request's integrity, so allow it by default (the spec will\n  // allow requests if an invalid hash is given, as precedence).\n  /* istanbul ignore if: only if node is built with --without-ssl */\n  if (crypto === undefined) {\n    return true\n  }\n\n  // 1. Let parsedMetadata be the result of parsing metadataList.\n  const parsedMetadata = parseMetadata(metadataList)\n\n  // 2. If parsedMetadata is no metadata, return true.\n  if (parsedMetadata === 'no metadata') {\n    return true\n  }\n\n  // 3. If response is not eligible for integrity validation, return false.\n  // TODO\n\n  // 4. If parsedMetadata is the empty set, return true.\n  if (parsedMetadata.length === 0) {\n    return true\n  }\n\n  // 5. Let metadata be the result of getting the strongest\n  //    metadata from parsedMetadata.\n  const strongest = getStrongestMetadata(parsedMetadata)\n  const metadata = filterMetadataListByAlgorithm(parsedMetadata, strongest)\n\n  // 6. For each item in metadata:\n  for (const item of metadata) {\n    // 1. Let algorithm be the alg component of item.\n    const algorithm = item.algo\n\n    // 2. Let expectedValue be the val component of item.\n    const expectedValue = item.hash\n\n    // See https://github.com/web-platform-tests/wpt/commit/e4c5cc7a5e48093220528dfdd1c4012dc3837a0e\n    // \"be liberal with padding\". This is annoying, and it's not even in the spec.\n\n    // 3. Let actualValue be the result of applying algorithm to bytes.\n    let actualValue = crypto.createHash(algorithm).update(bytes).digest('base64')\n\n    if (actualValue[actualValue.length - 1] === '=') {\n      if (actualValue[actualValue.length - 2] === '=') {\n        actualValue = actualValue.slice(0, -2)\n      } else {\n        actualValue = actualValue.slice(0, -1)\n      }\n    }\n\n    // 4. If actualValue is a case-sensitive match for expectedValue,\n    //    return true.\n    if (compareBase64Mixed(actualValue, expectedValue)) {\n      return true\n    }\n  }\n\n  // 7. Return false.\n  return false\n}\n\n// https://w3c.github.io/webappsec-subresource-integrity/#grammardef-hash-with-options\n// https://www.w3.org/TR/CSP2/#source-list-syntax\n// https://www.rfc-editor.org/rfc/rfc5234#appendix-B.1\nconst parseHashWithOptions = /(?<algo>sha256|sha384|sha512)-((?<hash>[A-Za-z0-9+/]+|[A-Za-z0-9_-]+)={0,2}(?:\\s|$)( +[!-~]*)?)?/i\n\n/**\n * @see https://w3c.github.io/webappsec-subresource-integrity/#parse-metadata\n * @param {string} metadata\n */\nfunction parseMetadata (metadata) {\n  // 1. Let result be the empty set.\n  /** @type {{ algo: string, hash: string }[]} */\n  const result = []\n\n  // 2. Let empty be equal to true.\n  let empty = true\n\n  // 3. For each token returned by splitting metadata on spaces:\n  for (const token of metadata.split(' ')) {\n    // 1. Set empty to false.\n    empty = false\n\n    // 2. Parse token as a hash-with-options.\n    const parsedToken = parseHashWithOptions.exec(token)\n\n    // 3. If token does not parse, continue to the next token.\n    if (\n      parsedToken === null ||\n      parsedToken.groups === undefined ||\n      parsedToken.groups.algo === undefined\n    ) {\n      // Note: Chromium blocks the request at this point, but Firefox\n      // gives a warning that an invalid integrity was given. The\n      // correct behavior is to ignore these, and subsequently not\n      // check the integrity of the resource.\n      continue\n    }\n\n    // 4. Let algorithm be the hash-algo component of token.\n    const algorithm = parsedToken.groups.algo.toLowerCase()\n\n    // 5. If algorithm is a hash function recognized by the user\n    //    agent, add the parsed token to result.\n    if (supportedHashes.includes(algorithm)) {\n      result.push(parsedToken.groups)\n    }\n  }\n\n  // 4. Return no metadata if empty is true, otherwise return result.\n  if (empty === true) {\n    return 'no metadata'\n  }\n\n  return result\n}\n\n/**\n * @param {{ algo: 'sha256' | 'sha384' | 'sha512' }[]} metadataList\n */\nfunction getStrongestMetadata (metadataList) {\n  // Let algorithm be the algo component of the first item in metadataList.\n  // Can be sha256\n  let algorithm = metadataList[0].algo\n  // If the algorithm is sha512, then it is the strongest\n  // and we can return immediately\n  if (algorithm[3] === '5') {\n    return algorithm\n  }\n\n  for (let i = 1; i < metadataList.length; ++i) {\n    const metadata = metadataList[i]\n    // If the algorithm is sha512, then it is the strongest\n    // and we can break the loop immediately\n    if (metadata.algo[3] === '5') {\n      algorithm = 'sha512'\n      break\n    // If the algorithm is sha384, then a potential sha256 or sha384 is ignored\n    } else if (algorithm[3] === '3') {\n      continue\n    // algorithm is sha256, check if algorithm is sha384 and if so, set it as\n    // the strongest\n    } else if (metadata.algo[3] === '3') {\n      algorithm = 'sha384'\n    }\n  }\n  return algorithm\n}\n\nfunction filterMetadataListByAlgorithm (metadataList, algorithm) {\n  if (metadataList.length === 1) {\n    return metadataList\n  }\n\n  let pos = 0\n  for (let i = 0; i < metadataList.length; ++i) {\n    if (metadataList[i].algo === algorithm) {\n      metadataList[pos++] = metadataList[i]\n    }\n  }\n\n  metadataList.length = pos\n\n  return metadataList\n}\n\n/**\n * Compares two base64 strings, allowing for base64url\n * in the second string.\n *\n* @param {string} actualValue always base64\n * @param {string} expectedValue base64 or base64url\n * @returns {boolean}\n */\nfunction compareBase64Mixed (actualValue, expectedValue) {\n  if (actualValue.length !== expectedValue.length) {\n    return false\n  }\n  for (let i = 0; i < actualValue.length; ++i) {\n    if (actualValue[i] !== expectedValue[i]) {\n      if (\n        (actualValue[i] === '+' && expectedValue[i] === '-') ||\n        (actualValue[i] === '/' && expectedValue[i] === '_')\n      ) {\n        continue\n      }\n      return false\n    }\n  }\n\n  return true\n}\n\n// https://w3c.github.io/webappsec-upgrade-insecure-requests/#upgrade-request\nfunction tryUpgradeRequestToAPotentiallyTrustworthyURL (request) {\n  // TODO\n}\n\n/**\n * @link {https://html.spec.whatwg.org/multipage/origin.html#same-origin}\n * @param {URL} A\n * @param {URL} B\n */\nfunction sameOrigin (A, B) {\n  // 1. If A and B are the same opaque origin, then return true.\n  if (A.origin === B.origin && A.origin === 'null') {\n    return true\n  }\n\n  // 2. If A and B are both tuple origins and their schemes,\n  //    hosts, and port are identical, then return true.\n  if (A.protocol === B.protocol && A.hostname === B.hostname && A.port === B.port) {\n    return true\n  }\n\n  // 3. Return false.\n  return false\n}\n\nfunction createDeferredPromise () {\n  let res\n  let rej\n  const promise = new Promise((resolve, reject) => {\n    res = resolve\n    rej = reject\n  })\n\n  return { promise, resolve: res, reject: rej }\n}\n\nfunction isAborted (fetchParams) {\n  return fetchParams.controller.state === 'aborted'\n}\n\nfunction isCancelled (fetchParams) {\n  return fetchParams.controller.state === 'aborted' ||\n    fetchParams.controller.state === 'terminated'\n}\n\n/**\n * @see https://fetch.spec.whatwg.org/#concept-method-normalize\n * @param {string} method\n */\nfunction normalizeMethod (method) {\n  return normalizedMethodRecordsBase[method.toLowerCase()] ?? method\n}\n\n// https://infra.spec.whatwg.org/#serialize-a-javascript-value-to-a-json-string\nfunction serializeJavascriptValueToJSONString (value) {\n  // 1. Let result be ? Call(%JSON.stringify%, undefined, « value »).\n  const result = JSON.stringify(value)\n\n  // 2. If result is undefined, then throw a TypeError.\n  if (result === undefined) {\n    throw new TypeError('Value is not JSON serializable')\n  }\n\n  // 3. Assert: result is a string.\n  assert(typeof result === 'string')\n\n  // 4. Return result.\n  return result\n}\n\n// https://tc39.es/ecma262/#sec-%25iteratorprototype%25-object\nconst esIteratorPrototype = Object.getPrototypeOf(Object.getPrototypeOf([][Symbol.iterator]()))\n\n/**\n * @see https://webidl.spec.whatwg.org/#dfn-iterator-prototype-object\n * @param {string} name name of the instance\n * @param {symbol} kInternalIterator\n * @param {string | number} [keyIndex]\n * @param {string | number} [valueIndex]\n */\nfunction createIterator (name, kInternalIterator, keyIndex = 0, valueIndex = 1) {\n  class FastIterableIterator {\n    /** @type {any} */\n    #target\n    /** @type {'key' | 'value' | 'key+value'} */\n    #kind\n    /** @type {number} */\n    #index\n\n    /**\n     * @see https://webidl.spec.whatwg.org/#dfn-default-iterator-object\n     * @param {unknown} target\n     * @param {'key' | 'value' | 'key+value'} kind\n     */\n    constructor (target, kind) {\n      this.#target = target\n      this.#kind = kind\n      this.#index = 0\n    }\n\n    next () {\n      // 1. Let interface be the interface for which the iterator prototype object exists.\n      // 2. Let thisValue be the this value.\n      // 3. Let object be ? ToObject(thisValue).\n      // 4. If object is a platform object, then perform a security\n      //    check, passing:\n      // 5. If object is not a default iterator object for interface,\n      //    then throw a TypeError.\n      if (typeof this !== 'object' || this === null || !(#target in this)) {\n        throw new TypeError(\n          `'next' called on an object that does not implement interface ${name} Iterator.`\n        )\n      }\n\n      // 6. Let index be object’s index.\n      // 7. Let kind be object’s kind.\n      // 8. Let values be object’s target's value pairs to iterate over.\n      const index = this.#index\n      const values = this.#target[kInternalIterator]\n\n      // 9. Let len be the length of values.\n      const len = values.length\n\n      // 10. If index is greater than or equal to len, then return\n      //     CreateIterResultObject(undefined, true).\n      if (index >= len) {\n        return {\n          value: undefined,\n          done: true\n        }\n      }\n\n      // 11. Let pair be the entry in values at index index.\n      const { [keyIndex]: key, [valueIndex]: value } = values[index]\n\n      // 12. Set object’s index to index + 1.\n      this.#index = index + 1\n\n      // 13. Return the iterator result for pair and kind.\n\n      // https://webidl.spec.whatwg.org/#iterator-result\n\n      // 1. Let result be a value determined by the value of kind:\n      let result\n      switch (this.#kind) {\n        case 'key':\n          // 1. Let idlKey be pair’s key.\n          // 2. Let key be the result of converting idlKey to an\n          //    ECMAScript value.\n          // 3. result is key.\n          result = key\n          break\n        case 'value':\n          // 1. Let idlValue be pair’s value.\n          // 2. Let value be the result of converting idlValue to\n          //    an ECMAScript value.\n          // 3. result is value.\n          result = value\n          break\n        case 'key+value':\n          // 1. Let idlKey be pair’s key.\n          // 2. Let idlValue be pair’s value.\n          // 3. Let key be the result of converting idlKey to an\n          //    ECMAScript value.\n          // 4. Let value be the result of converting idlValue to\n          //    an ECMAScript value.\n          // 5. Let array be ! ArrayCreate(2).\n          // 6. Call ! CreateDataProperty(array, \"0\", key).\n          // 7. Call ! CreateDataProperty(array, \"1\", value).\n          // 8. result is array.\n          result = [key, value]\n          break\n      }\n\n      // 2. Return CreateIterResultObject(result, false).\n      return {\n        value: result,\n        done: false\n      }\n    }\n  }\n\n  // https://webidl.spec.whatwg.org/#dfn-iterator-prototype-object\n  // @ts-ignore\n  delete FastIterableIterator.prototype.constructor\n\n  Object.setPrototypeOf(FastIterableIterator.prototype, esIteratorPrototype)\n\n  Object.defineProperties(FastIterableIterator.prototype, {\n    [Symbol.toStringTag]: {\n      writable: false,\n      enumerable: false,\n      configurable: true,\n      value: `${name} Iterator`\n    },\n    next: { writable: true, enumerable: true, configurable: true }\n  })\n\n  /**\n   * @param {unknown} target\n   * @param {'key' | 'value' | 'key+value'} kind\n   * @returns {IterableIterator<any>}\n   */\n  return function (target, kind) {\n    return new FastIterableIterator(target, kind)\n  }\n}\n\n/**\n * @see https://webidl.spec.whatwg.org/#dfn-iterator-prototype-object\n * @param {string} name name of the instance\n * @param {any} object class\n * @param {symbol} kInternalIterator\n * @param {string | number} [keyIndex]\n * @param {string | number} [valueIndex]\n */\nfunction iteratorMixin (name, object, kInternalIterator, keyIndex = 0, valueIndex = 1) {\n  const makeIterator = createIterator(name, kInternalIterator, keyIndex, valueIndex)\n\n  const properties = {\n    keys: {\n      writable: true,\n      enumerable: true,\n      configurable: true,\n      value: function keys () {\n        webidl.brandCheck(this, object)\n        return makeIterator(this, 'key')\n      }\n    },\n    values: {\n      writable: true,\n      enumerable: true,\n      configurable: true,\n      value: function values () {\n        webidl.brandCheck(this, object)\n        return makeIterator(this, 'value')\n      }\n    },\n    entries: {\n      writable: true,\n      enumerable: true,\n      configurable: true,\n      value: function entries () {\n        webidl.brandCheck(this, object)\n        return makeIterator(this, 'key+value')\n      }\n    },\n    forEach: {\n      writable: true,\n      enumerable: true,\n      configurable: true,\n      value: function forEach (callbackfn, thisArg = globalThis) {\n        webidl.brandCheck(this, object)\n        webidl.argumentLengthCheck(arguments, 1, `${name}.forEach`)\n        if (typeof callbackfn !== 'function') {\n          throw new TypeError(\n            `Failed to execute 'forEach' on '${name}': parameter 1 is not of type 'Function'.`\n          )\n        }\n        for (const { 0: key, 1: value } of makeIterator(this, 'key+value')) {\n          callbackfn.call(thisArg, value, key, this)\n        }\n      }\n    }\n  }\n\n  return Object.defineProperties(object.prototype, {\n    ...properties,\n    [Symbol.iterator]: {\n      writable: true,\n      enumerable: false,\n      configurable: true,\n      value: properties.entries.value\n    }\n  })\n}\n\n/**\n * @see https://fetch.spec.whatwg.org/#body-fully-read\n */\nasync function fullyReadBody (body, processBody, processBodyError) {\n  // 1. If taskDestination is null, then set taskDestination to\n  //    the result of starting a new parallel queue.\n\n  // 2. Let successSteps given a byte sequence bytes be to queue a\n  //    fetch task to run processBody given bytes, with taskDestination.\n  const successSteps = processBody\n\n  // 3. Let errorSteps be to queue a fetch task to run processBodyError,\n  //    with taskDestination.\n  const errorSteps = processBodyError\n\n  // 4. Let reader be the result of getting a reader for body’s stream.\n  //    If that threw an exception, then run errorSteps with that\n  //    exception and return.\n  let reader\n\n  try {\n    reader = body.stream.getReader()\n  } catch (e) {\n    errorSteps(e)\n    return\n  }\n\n  // 5. Read all bytes from reader, given successSteps and errorSteps.\n  try {\n    successSteps(await readAllBytes(reader))\n  } catch (e) {\n    errorSteps(e)\n  }\n}\n\nfunction isReadableStreamLike (stream) {\n  return stream instanceof ReadableStream || (\n    stream[Symbol.toStringTag] === 'ReadableStream' &&\n    typeof stream.tee === 'function'\n  )\n}\n\n/**\n * @param {ReadableStreamController<Uint8Array>} controller\n */\nfunction readableStreamClose (controller) {\n  try {\n    controller.close()\n    controller.byobRequest?.respond(0)\n  } catch (err) {\n    // TODO: add comment explaining why this error occurs.\n    if (!err.message.includes('Controller is already closed') && !err.message.includes('ReadableStream is already closed')) {\n      throw err\n    }\n  }\n}\n\nconst invalidIsomorphicEncodeValueRegex = /[^\\x00-\\xFF]/ // eslint-disable-line\n\n/**\n * @see https://infra.spec.whatwg.org/#isomorphic-encode\n * @param {string} input\n */\nfunction isomorphicEncode (input) {\n  // 1. Assert: input contains no code points greater than U+00FF.\n  assert(!invalidIsomorphicEncodeValueRegex.test(input))\n\n  // 2. Return a byte sequence whose length is equal to input’s code\n  //    point length and whose bytes have the same values as the\n  //    values of input’s code points, in the same order\n  return input\n}\n\n/**\n * @see https://streams.spec.whatwg.org/#readablestreamdefaultreader-read-all-bytes\n * @see https://streams.spec.whatwg.org/#read-loop\n * @param {ReadableStreamDefaultReader} reader\n */\nasync function readAllBytes (reader) {\n  const bytes = []\n  let byteLength = 0\n\n  while (true) {\n    const { done, value: chunk } = await reader.read()\n\n    if (done) {\n      // 1. Call successSteps with bytes.\n      return Buffer.concat(bytes, byteLength)\n    }\n\n    // 1. If chunk is not a Uint8Array object, call failureSteps\n    //    with a TypeError and abort these steps.\n    if (!isUint8Array(chunk)) {\n      throw new TypeError('Received non-Uint8Array chunk')\n    }\n\n    // 2. Append the bytes represented by chunk to bytes.\n    bytes.push(chunk)\n    byteLength += chunk.length\n\n    // 3. Read-loop given reader, bytes, successSteps, and failureSteps.\n  }\n}\n\n/**\n * @see https://fetch.spec.whatwg.org/#is-local\n * @param {URL} url\n */\nfunction urlIsLocal (url) {\n  assert('protocol' in url) // ensure it's a url object\n\n  const protocol = url.protocol\n\n  return protocol === 'about:' || protocol === 'blob:' || protocol === 'data:'\n}\n\n/**\n * @param {string|URL} url\n * @returns {boolean}\n */\nfunction urlHasHttpsScheme (url) {\n  return (\n    (\n      typeof url === 'string' &&\n      url[5] === ':' &&\n      url[0] === 'h' &&\n      url[1] === 't' &&\n      url[2] === 't' &&\n      url[3] === 'p' &&\n      url[4] === 's'\n    ) ||\n    url.protocol === 'https:'\n  )\n}\n\n/**\n * @see https://fetch.spec.whatwg.org/#http-scheme\n * @param {URL} url\n */\nfunction urlIsHttpHttpsScheme (url) {\n  assert('protocol' in url) // ensure it's a url object\n\n  const protocol = url.protocol\n\n  return protocol === 'http:' || protocol === 'https:'\n}\n\n/**\n * @see https://fetch.spec.whatwg.org/#simple-range-header-value\n * @param {string} value\n * @param {boolean} allowWhitespace\n */\nfunction simpleRangeHeaderValue (value, allowWhitespace) {\n  // 1. Let data be the isomorphic decoding of value.\n  // Note: isomorphic decoding takes a sequence of bytes (ie. a Uint8Array) and turns it into a string,\n  // nothing more. We obviously don't need to do that if value is a string already.\n  const data = value\n\n  // 2. If data does not start with \"bytes\", then return failure.\n  if (!data.startsWith('bytes')) {\n    return 'failure'\n  }\n\n  // 3. Let position be a position variable for data, initially pointing at the 5th code point of data.\n  const position = { position: 5 }\n\n  // 4. If allowWhitespace is true, collect a sequence of code points that are HTTP tab or space,\n  //    from data given position.\n  if (allowWhitespace) {\n    collectASequenceOfCodePoints(\n      (char) => char === '\\t' || char === ' ',\n      data,\n      position\n    )\n  }\n\n  // 5. If the code point at position within data is not U+003D (=), then return failure.\n  if (data.charCodeAt(position.position) !== 0x3D) {\n    return 'failure'\n  }\n\n  // 6. Advance position by 1.\n  position.position++\n\n  // 7. If allowWhitespace is true, collect a sequence of code points that are HTTP tab or space, from\n  //    data given position.\n  if (allowWhitespace) {\n    collectASequenceOfCodePoints(\n      (char) => char === '\\t' || char === ' ',\n      data,\n      position\n    )\n  }\n\n  // 8. Let rangeStart be the result of collecting a sequence of code points that are ASCII digits,\n  //    from data given position.\n  const rangeStart = collectASequenceOfCodePoints(\n    (char) => {\n      const code = char.charCodeAt(0)\n\n      return code >= 0x30 && code <= 0x39\n    },\n    data,\n    position\n  )\n\n  // 9. Let rangeStartValue be rangeStart, interpreted as decimal number, if rangeStart is not the\n  //    empty string; otherwise null.\n  const rangeStartValue = rangeStart.length ? Number(rangeStart) : null\n\n  // 10. If allowWhitespace is true, collect a sequence of code points that are HTTP tab or space,\n  //     from data given position.\n  if (allowWhitespace) {\n    collectASequenceOfCodePoints(\n      (char) => char === '\\t' || char === ' ',\n      data,\n      position\n    )\n  }\n\n  // 11. If the code point at position within data is not U+002D (-), then return failure.\n  if (data.charCodeAt(position.position) !== 0x2D) {\n    return 'failure'\n  }\n\n  // 12. Advance position by 1.\n  position.position++\n\n  // 13. If allowWhitespace is true, collect a sequence of code points that are HTTP tab\n  //     or space, from data given position.\n  // Note from Khafra: its the same step as in #8 again lol\n  if (allowWhitespace) {\n    collectASequenceOfCodePoints(\n      (char) => char === '\\t' || char === ' ',\n      data,\n      position\n    )\n  }\n\n  // 14. Let rangeEnd be the result of collecting a sequence of code points that are\n  //     ASCII digits, from data given position.\n  // Note from Khafra: you wouldn't guess it, but this is also the same step as #8\n  const rangeEnd = collectASequenceOfCodePoints(\n    (char) => {\n      const code = char.charCodeAt(0)\n\n      return code >= 0x30 && code <= 0x39\n    },\n    data,\n    position\n  )\n\n  // 15. Let rangeEndValue be rangeEnd, interpreted as decimal number, if rangeEnd\n  //     is not the empty string; otherwise null.\n  // Note from Khafra: THE SAME STEP, AGAIN!!!\n  // Note: why interpret as a decimal if we only collect ascii digits?\n  const rangeEndValue = rangeEnd.length ? Number(rangeEnd) : null\n\n  // 16. If position is not past the end of data, then return failure.\n  if (position.position < data.length) {\n    return 'failure'\n  }\n\n  // 17. If rangeEndValue and rangeStartValue are null, then return failure.\n  if (rangeEndValue === null && rangeStartValue === null) {\n    return 'failure'\n  }\n\n  // 18. If rangeStartValue and rangeEndValue are numbers, and rangeStartValue is\n  //     greater than rangeEndValue, then return failure.\n  // Note: ... when can they not be numbers?\n  if (rangeStartValue > rangeEndValue) {\n    return 'failure'\n  }\n\n  // 19. Return (rangeStartValue, rangeEndValue).\n  return { rangeStartValue, rangeEndValue }\n}\n\n/**\n * @see https://fetch.spec.whatwg.org/#build-a-content-range\n * @param {number} rangeStart\n * @param {number} rangeEnd\n * @param {number} fullLength\n */\nfunction buildContentRange (rangeStart, rangeEnd, fullLength) {\n  // 1. Let contentRange be `bytes `.\n  let contentRange = 'bytes '\n\n  // 2. Append rangeStart, serialized and isomorphic encoded, to contentRange.\n  contentRange += isomorphicEncode(`${rangeStart}`)\n\n  // 3. Append 0x2D (-) to contentRange.\n  contentRange += '-'\n\n  // 4. Append rangeEnd, serialized and isomorphic encoded to contentRange.\n  contentRange += isomorphicEncode(`${rangeEnd}`)\n\n  // 5. Append 0x2F (/) to contentRange.\n  contentRange += '/'\n\n  // 6. Append fullLength, serialized and isomorphic encoded to contentRange.\n  contentRange += isomorphicEncode(`${fullLength}`)\n\n  // 7. Return contentRange.\n  return contentRange\n}\n\n// A Stream, which pipes the response to zlib.createInflate() or\n// zlib.createInflateRaw() depending on the first byte of the Buffer.\n// If the lower byte of the first byte is 0x08, then the stream is\n// interpreted as a zlib stream, otherwise it's interpreted as a\n// raw deflate stream.\nclass InflateStream extends Transform {\n  _transform (chunk, encoding, callback) {\n    if (!this._inflateStream) {\n      if (chunk.length === 0) {\n        callback()\n        return\n      }\n      this._inflateStream = (chunk[0] & 0x0F) === 0x08\n        ? zlib.createInflate()\n        : zlib.createInflateRaw()\n\n      this._inflateStream.on('data', this.push.bind(this))\n      this._inflateStream.on('end', () => this.push(null))\n      this._inflateStream.on('error', (err) => this.destroy(err))\n    }\n\n    this._inflateStream.write(chunk, encoding, callback)\n  }\n\n  _final (callback) {\n    if (this._inflateStream) {\n      this._inflateStream.end()\n      this._inflateStream = null\n    }\n    callback()\n  }\n}\n\nfunction createInflate () {\n  return new InflateStream()\n}\n\n/**\n * @see https://fetch.spec.whatwg.org/#concept-header-extract-mime-type\n * @param {import('./headers').HeadersList} headers\n */\nfunction extractMimeType (headers) {\n  // 1. Let charset be null.\n  let charset = null\n\n  // 2. Let essence be null.\n  let essence = null\n\n  // 3. Let mimeType be null.\n  let mimeType = null\n\n  // 4. Let values be the result of getting, decoding, and splitting `Content-Type` from headers.\n  const values = getDecodeSplit('content-type', headers)\n\n  // 5. If values is null, then return failure.\n  if (values === null) {\n    return 'failure'\n  }\n\n  // 6. For each value of values:\n  for (const value of values) {\n    // 6.1. Let temporaryMimeType be the result of parsing value.\n    const temporaryMimeType = parseMIMEType(value)\n\n    // 6.2. If temporaryMimeType is failure or its essence is \"*/*\", then continue.\n    if (temporaryMimeType === 'failure' || temporaryMimeType.essence === '*/*') {\n      continue\n    }\n\n    // 6.3. Set mimeType to temporaryMimeType.\n    mimeType = temporaryMimeType\n\n    // 6.4. If mimeType’s essence is not essence, then:\n    if (mimeType.essence !== essence) {\n      // 6.4.1. Set charset to null.\n      charset = null\n\n      // 6.4.2. If mimeType’s parameters[\"charset\"] exists, then set charset to\n      //        mimeType’s parameters[\"charset\"].\n      if (mimeType.parameters.has('charset')) {\n        charset = mimeType.parameters.get('charset')\n      }\n\n      // 6.4.3. Set essence to mimeType’s essence.\n      essence = mimeType.essence\n    } else if (!mimeType.parameters.has('charset') && charset !== null) {\n      // 6.5. Otherwise, if mimeType’s parameters[\"charset\"] does not exist, and\n      //      charset is non-null, set mimeType’s parameters[\"charset\"] to charset.\n      mimeType.parameters.set('charset', charset)\n    }\n  }\n\n  // 7. If mimeType is null, then return failure.\n  if (mimeType == null) {\n    return 'failure'\n  }\n\n  // 8. Return mimeType.\n  return mimeType\n}\n\n/**\n * @see https://fetch.spec.whatwg.org/#header-value-get-decode-and-split\n * @param {string|null} value\n */\nfunction gettingDecodingSplitting (value) {\n  // 1. Let input be the result of isomorphic decoding value.\n  const input = value\n\n  // 2. Let position be a position variable for input, initially pointing at the start of input.\n  const position = { position: 0 }\n\n  // 3. Let values be a list of strings, initially empty.\n  const values = []\n\n  // 4. Let temporaryValue be the empty string.\n  let temporaryValue = ''\n\n  // 5. While position is not past the end of input:\n  while (position.position < input.length) {\n    // 5.1. Append the result of collecting a sequence of code points that are not U+0022 (\")\n    //      or U+002C (,) from input, given position, to temporaryValue.\n    temporaryValue += collectASequenceOfCodePoints(\n      (char) => char !== '\"' && char !== ',',\n      input,\n      position\n    )\n\n    // 5.2. If position is not past the end of input, then:\n    if (position.position < input.length) {\n      // 5.2.1. If the code point at position within input is U+0022 (\"), then:\n      if (input.charCodeAt(position.position) === 0x22) {\n        // 5.2.1.1. Append the result of collecting an HTTP quoted string from input, given position, to temporaryValue.\n        temporaryValue += collectAnHTTPQuotedString(\n          input,\n          position\n        )\n\n        // 5.2.1.2. If position is not past the end of input, then continue.\n        if (position.position < input.length) {\n          continue\n        }\n      } else {\n        // 5.2.2. Otherwise:\n\n        // 5.2.2.1. Assert: the code point at position within input is U+002C (,).\n        assert(input.charCodeAt(position.position) === 0x2C)\n\n        // 5.2.2.2. Advance position by 1.\n        position.position++\n      }\n    }\n\n    // 5.3. Remove all HTTP tab or space from the start and end of temporaryValue.\n    temporaryValue = removeChars(temporaryValue, true, true, (char) => char === 0x9 || char === 0x20)\n\n    // 5.4. Append temporaryValue to values.\n    values.push(temporaryValue)\n\n    // 5.6. Set temporaryValue to the empty string.\n    temporaryValue = ''\n  }\n\n  // 6. Return values.\n  return values\n}\n\n/**\n * @see https://fetch.spec.whatwg.org/#concept-header-list-get-decode-split\n * @param {string} name lowercase header name\n * @param {import('./headers').HeadersList} list\n */\nfunction getDecodeSplit (name, list) {\n  // 1. Let value be the result of getting name from list.\n  const value = list.get(name, true)\n\n  // 2. If value is null, then return null.\n  if (value === null) {\n    return null\n  }\n\n  // 3. Return the result of getting, decoding, and splitting value.\n  return gettingDecodingSplitting(value)\n}\n\nconst textDecoder = new TextDecoder()\n\n/**\n * @see https://encoding.spec.whatwg.org/#utf-8-decode\n * @param {Buffer} buffer\n */\nfunction utf8DecodeBytes (buffer) {\n  if (buffer.length === 0) {\n    return ''\n  }\n\n  // 1. Let buffer be the result of peeking three bytes from\n  //    ioQueue, converted to a byte sequence.\n\n  // 2. If buffer is 0xEF 0xBB 0xBF, then read three\n  //    bytes from ioQueue. (Do nothing with those bytes.)\n  if (buffer[0] === 0xEF && buffer[1] === 0xBB && buffer[2] === 0xBF) {\n    buffer = buffer.subarray(3)\n  }\n\n  // 3. Process a queue with an instance of UTF-8’s\n  //    decoder, ioQueue, output, and \"replacement\".\n  const output = textDecoder.decode(buffer)\n\n  // 4. Return output.\n  return output\n}\n\nclass EnvironmentSettingsObjectBase {\n  get baseUrl () {\n    return getGlobalOrigin()\n  }\n\n  get origin () {\n    return this.baseUrl?.origin\n  }\n\n  policyContainer = makePolicyContainer()\n}\n\nclass EnvironmentSettingsObject {\n  settingsObject = new EnvironmentSettingsObjectBase()\n}\n\nconst environmentSettingsObject = new EnvironmentSettingsObject()\n\nmodule.exports = {\n  isAborted,\n  isCancelled,\n  isValidEncodedURL,\n  createDeferredPromise,\n  ReadableStreamFrom,\n  tryUpgradeRequestToAPotentiallyTrustworthyURL,\n  clampAndCoarsenConnectionTimingInfo,\n  coarsenedSharedCurrentTime,\n  determineRequestsReferrer,\n  makePolicyContainer,\n  clonePolicyContainer,\n  appendFetchMetadata,\n  appendRequestOriginHeader,\n  TAOCheck,\n  corsCheck,\n  crossOriginResourcePolicyCheck,\n  createOpaqueTimingInfo,\n  setRequestReferrerPolicyOnRedirect,\n  isValidHTTPToken,\n  requestBadPort,\n  requestCurrentURL,\n  responseURL,\n  responseLocationURL,\n  isBlobLike,\n  isURLPotentiallyTrustworthy,\n  isValidReasonPhrase,\n  sameOrigin,\n  normalizeMethod,\n  serializeJavascriptValueToJSONString,\n  iteratorMixin,\n  createIterator,\n  isValidHeaderName,\n  isValidHeaderValue,\n  isErrorLike,\n  fullyReadBody,\n  bytesMatch,\n  isReadableStreamLike,\n  readableStreamClose,\n  isomorphicEncode,\n  urlIsLocal,\n  urlHasHttpsScheme,\n  urlIsHttpHttpsScheme,\n  readAllBytes,\n  simpleRangeHeaderValue,\n  buildContentRange,\n  parseMetadata,\n  createInflate,\n  extractMimeType,\n  getDecodeSplit,\n  utf8DecodeBytes,\n  environmentSettingsObject\n}\n", "'use strict'\n\nmodule.exports = {\n  kUrl: Symbol('url'),\n  kHeaders: Symbol('headers'),\n  kSignal: Symbol('signal'),\n  kState: Symbol('state'),\n  kDispatcher: Symbol('dispatcher')\n}\n", "'use strict'\n\nconst { Blob, File } = require('node:buffer')\nconst { kState } = require('./symbols')\nconst { webidl } = require('./webidl')\n\n// TODO(@KhafraDev): remove\nclass FileLike {\n  constructor (blobLike, fileName, options = {}) {\n    // TODO: argument idl type check\n\n    // The File constructor is invoked with two or three parameters, depending\n    // on whether the optional dictionary parameter is used. When the File()\n    // constructor is invoked, user agents must run the following steps:\n\n    // 1. Let bytes be the result of processing blob parts given fileBits and\n    // options.\n\n    // 2. Let n be the fileName argument to the constructor.\n    const n = fileName\n\n    // 3. Process FilePropertyBag dictionary argument by running the following\n    // substeps:\n\n    //    1. If the type member is provided and is not the empty string, let t\n    //    be set to the type dictionary member. If t contains any characters\n    //    outside the range U+0020 to U+007E, then set t to the empty string\n    //    and return from these substeps.\n    //    TODO\n    const t = options.type\n\n    //    2. Convert every character in t to ASCII lowercase.\n    //    TODO\n\n    //    3. If the lastModified member is provided, let d be set to the\n    //    lastModified dictionary member. If it is not provided, set d to the\n    //    current date and time represented as the number of milliseconds since\n    //    the Unix Epoch (which is the equivalent of Date.now() [ECMA-262]).\n    const d = options.lastModified ?? Date.now()\n\n    // 4. Return a new File object F such that:\n    // F refers to the bytes byte sequence.\n    // F.size is set to the number of total bytes in bytes.\n    // F.name is set to n.\n    // F.type is set to t.\n    // F.lastModified is set to d.\n\n    this[kState] = {\n      blobLike,\n      name: n,\n      type: t,\n      lastModified: d\n    }\n  }\n\n  stream (...args) {\n    webidl.brandCheck(this, FileLike)\n\n    return this[kState].blobLike.stream(...args)\n  }\n\n  arrayBuffer (...args) {\n    webidl.brandCheck(this, FileLike)\n\n    return this[kState].blobLike.arrayBuffer(...args)\n  }\n\n  slice (...args) {\n    webidl.brandCheck(this, FileLike)\n\n    return this[kState].blobLike.slice(...args)\n  }\n\n  text (...args) {\n    webidl.brandCheck(this, FileLike)\n\n    return this[kState].blobLike.text(...args)\n  }\n\n  get size () {\n    webidl.brandCheck(this, FileLike)\n\n    return this[kState].blobLike.size\n  }\n\n  get type () {\n    webidl.brandCheck(this, FileLike)\n\n    return this[kState].blobLike.type\n  }\n\n  get name () {\n    webidl.brandCheck(this, FileLike)\n\n    return this[kState].name\n  }\n\n  get lastModified () {\n    webidl.brandCheck(this, FileLike)\n\n    return this[kState].lastModified\n  }\n\n  get [Symbol.toStringTag] () {\n    return 'File'\n  }\n}\n\nwebidl.converters.Blob = webidl.interfaceConverter(Blob)\n\n// If this function is moved to ./util.js, some tools (such as\n// rollup) will warn about circular dependencies. See:\n// https://github.com/nodejs/undici/issues/1629\nfunction isFileLike (object) {\n  return (\n    (object instanceof File) ||\n    (\n      object &&\n      (typeof object.stream === 'function' ||\n      typeof object.arrayBuffer === 'function') &&\n      object[Symbol.toStringTag] === 'File'\n    )\n  )\n}\n\nmodule.exports = { FileLike, isFileLike }\n", "'use strict'\n\nconst { isBlobLike, iteratorMixin } = require('./util')\nconst { kState } = require('./symbols')\nconst { kEnumerableProperty } = require('../../core/util')\nconst { FileLike, isFileLike } = require('./file')\nconst { webidl } = require('./webidl')\nconst { File: NativeFile } = require('node:buffer')\nconst nodeUtil = require('node:util')\n\n/** @type {globalThis['File']} */\nconst File = globalThis.File ?? NativeFile\n\n// https://xhr.spec.whatwg.org/#formdata\nclass FormData {\n  constructor (form) {\n    if (form !== undefined) {\n      throw webidl.errors.conversionFailed({\n        prefix: 'FormData constructor',\n        argument: 'Argument 1',\n        types: ['undefined']\n      })\n    }\n\n    this[kState] = []\n  }\n\n  append (name, value, filename = undefined) {\n    webidl.brandCheck(this, FormData)\n\n    const prefix = 'FormData.append'\n    webidl.argumentLengthCheck(arguments, 2, prefix)\n\n    if (arguments.length === 3 && !isBlobLike(value)) {\n      throw new TypeError(\n        \"Failed to execute 'append' on 'FormData': parameter 2 is not of type 'Blob'\"\n      )\n    }\n\n    // 1. Let value be value if given; otherwise blobValue.\n\n    name = webidl.converters.USVString(name, prefix, 'name')\n    value = isBlobLike(value)\n      ? webidl.converters.Blob(value, prefix, 'value', { strict: false })\n      : webidl.converters.USVString(value, prefix, 'value')\n    filename = arguments.length === 3\n      ? webidl.converters.USVString(filename, prefix, 'filename')\n      : undefined\n\n    // 2. Let entry be the result of creating an entry with\n    // name, value, and filename if given.\n    const entry = makeEntry(name, value, filename)\n\n    // 3. Append entry to this’s entry list.\n    this[kState].push(entry)\n  }\n\n  delete (name) {\n    webidl.brandCheck(this, FormData)\n\n    const prefix = 'FormData.delete'\n    webidl.argumentLengthCheck(arguments, 1, prefix)\n\n    name = webidl.converters.USVString(name, prefix, 'name')\n\n    // The delete(name) method steps are to remove all entries whose name\n    // is name from this’s entry list.\n    this[kState] = this[kState].filter(entry => entry.name !== name)\n  }\n\n  get (name) {\n    webidl.brandCheck(this, FormData)\n\n    const prefix = 'FormData.get'\n    webidl.argumentLengthCheck(arguments, 1, prefix)\n\n    name = webidl.converters.USVString(name, prefix, 'name')\n\n    // 1. If there is no entry whose name is name in this’s entry list,\n    // then return null.\n    const idx = this[kState].findIndex((entry) => entry.name === name)\n    if (idx === -1) {\n      return null\n    }\n\n    // 2. Return the value of the first entry whose name is name from\n    // this’s entry list.\n    return this[kState][idx].value\n  }\n\n  getAll (name) {\n    webidl.brandCheck(this, FormData)\n\n    const prefix = 'FormData.getAll'\n    webidl.argumentLengthCheck(arguments, 1, prefix)\n\n    name = webidl.converters.USVString(name, prefix, 'name')\n\n    // 1. If there is no entry whose name is name in this’s entry list,\n    // then return the empty list.\n    // 2. Return the values of all entries whose name is name, in order,\n    // from this’s entry list.\n    return this[kState]\n      .filter((entry) => entry.name === name)\n      .map((entry) => entry.value)\n  }\n\n  has (name) {\n    webidl.brandCheck(this, FormData)\n\n    const prefix = 'FormData.has'\n    webidl.argumentLengthCheck(arguments, 1, prefix)\n\n    name = webidl.converters.USVString(name, prefix, 'name')\n\n    // The has(name) method steps are to return true if there is an entry\n    // whose name is name in this’s entry list; otherwise false.\n    return this[kState].findIndex((entry) => entry.name === name) !== -1\n  }\n\n  set (name, value, filename = undefined) {\n    webidl.brandCheck(this, FormData)\n\n    const prefix = 'FormData.set'\n    webidl.argumentLengthCheck(arguments, 2, prefix)\n\n    if (arguments.length === 3 && !isBlobLike(value)) {\n      throw new TypeError(\n        \"Failed to execute 'set' on 'FormData': parameter 2 is not of type 'Blob'\"\n      )\n    }\n\n    // The set(name, value) and set(name, blobValue, filename) method steps\n    // are:\n\n    // 1. Let value be value if given; otherwise blobValue.\n\n    name = webidl.converters.USVString(name, prefix, 'name')\n    value = isBlobLike(value)\n      ? webidl.converters.Blob(value, prefix, 'name', { strict: false })\n      : webidl.converters.USVString(value, prefix, 'name')\n    filename = arguments.length === 3\n      ? webidl.converters.USVString(filename, prefix, 'name')\n      : undefined\n\n    // 2. Let entry be the result of creating an entry with name, value, and\n    // filename if given.\n    const entry = makeEntry(name, value, filename)\n\n    // 3. If there are entries in this’s entry list whose name is name, then\n    // replace the first such entry with entry and remove the others.\n    const idx = this[kState].findIndex((entry) => entry.name === name)\n    if (idx !== -1) {\n      this[kState] = [\n        ...this[kState].slice(0, idx),\n        entry,\n        ...this[kState].slice(idx + 1).filter((entry) => entry.name !== name)\n      ]\n    } else {\n      // 4. Otherwise, append entry to this’s entry list.\n      this[kState].push(entry)\n    }\n  }\n\n  [nodeUtil.inspect.custom] (depth, options) {\n    const state = this[kState].reduce((a, b) => {\n      if (a[b.name]) {\n        if (Array.isArray(a[b.name])) {\n          a[b.name].push(b.value)\n        } else {\n          a[b.name] = [a[b.name], b.value]\n        }\n      } else {\n        a[b.name] = b.value\n      }\n\n      return a\n    }, { __proto__: null })\n\n    options.depth ??= depth\n    options.colors ??= true\n\n    const output = nodeUtil.formatWithOptions(options, state)\n\n    // remove [Object null prototype]\n    return `FormData ${output.slice(output.indexOf(']') + 2)}`\n  }\n}\n\niteratorMixin('FormData', FormData, kState, 'name', 'value')\n\nObject.defineProperties(FormData.prototype, {\n  append: kEnumerableProperty,\n  delete: kEnumerableProperty,\n  get: kEnumerableProperty,\n  getAll: kEnumerableProperty,\n  has: kEnumerableProperty,\n  set: kEnumerableProperty,\n  [Symbol.toStringTag]: {\n    value: 'FormData',\n    configurable: true\n  }\n})\n\n/**\n * @see https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#create-an-entry\n * @param {string} name\n * @param {string|Blob} value\n * @param {?string} filename\n * @returns\n */\nfunction makeEntry (name, value, filename) {\n  // 1. Set name to the result of converting name into a scalar value string.\n  // Note: This operation was done by the webidl converter USVString.\n\n  // 2. If value is a string, then set value to the result of converting\n  //    value into a scalar value string.\n  if (typeof value === 'string') {\n    // Note: This operation was done by the webidl converter USVString.\n  } else {\n    // 3. Otherwise:\n\n    // 1. If value is not a File object, then set value to a new File object,\n    //    representing the same bytes, whose name attribute value is \"blob\"\n    if (!isFileLike(value)) {\n      value = value instanceof Blob\n        ? new File([value], 'blob', { type: value.type })\n        : new FileLike(value, 'blob', { type: value.type })\n    }\n\n    // 2. If filename is given, then set value to a new File object,\n    //    representing the same bytes, whose name attribute is filename.\n    if (filename !== undefined) {\n      /** @type {FilePropertyBag} */\n      const options = {\n        type: value.type,\n        lastModified: value.lastModified\n      }\n\n      value = value instanceof NativeFile\n        ? new File([value], filename, options)\n        : new FileLike(value, filename, options)\n    }\n  }\n\n  // 4. Return an entry whose name is name and whose value is value.\n  return { name, value }\n}\n\nmodule.exports = { FormData, makeEntry }\n", "'use strict'\n\nconst { isUSVString, bufferToLowerCasedHeaderName } = require('../../core/util')\nconst { utf8DecodeBytes } = require('./util')\nconst { HTTP_TOKEN_CODEPOINTS, isomorphicDecode } = require('./data-url')\nconst { isFileLike } = require('./file')\nconst { makeEntry } = require('./formdata')\nconst assert = require('node:assert')\nconst { File: NodeFile } = require('node:buffer')\n\nconst File = globalThis.File ?? NodeFile\n\nconst formDataNameBuffer = Buffer.from('form-data; name=\"')\nconst filenameBuffer = Buffer.from('; filename')\nconst dd = Buffer.from('--')\nconst ddcrlf = Buffer.from('--\\r\\n')\n\n/**\n * @param {string} chars\n */\nfunction isAsciiString (chars) {\n  for (let i = 0; i < chars.length; ++i) {\n    if ((chars.charCodeAt(i) & ~0x7F) !== 0) {\n      return false\n    }\n  }\n  return true\n}\n\n/**\n * @see https://andreubotella.github.io/multipart-form-data/#multipart-form-data-boundary\n * @param {string} boundary\n */\nfunction validateBoundary (boundary) {\n  const length = boundary.length\n\n  // - its length is greater or equal to 27 and lesser or equal to 70, and\n  if (length < 27 || length > 70) {\n    return false\n  }\n\n  // - it is composed by bytes in the ranges 0x30 to 0x39, 0x41 to 0x5A, or\n  //   0x61 to 0x7A, inclusive (ASCII alphanumeric), or which are 0x27 ('),\n  //   0x2D (-) or 0x5F (_).\n  for (let i = 0; i < length; ++i) {\n    const cp = boundary.charCodeAt(i)\n\n    if (!(\n      (cp >= 0x30 && cp <= 0x39) ||\n      (cp >= 0x41 && cp <= 0x5a) ||\n      (cp >= 0x61 && cp <= 0x7a) ||\n      cp === 0x27 ||\n      cp === 0x2d ||\n      cp === 0x5f\n    )) {\n      return false\n    }\n  }\n\n  return true\n}\n\n/**\n * @see https://andreubotella.github.io/multipart-form-data/#multipart-form-data-parser\n * @param {Buffer} input\n * @param {ReturnType<import('./data-url')['parseMIMEType']>} mimeType\n */\nfunction multipartFormDataParser (input, mimeType) {\n  // 1. Assert: mimeType’s essence is \"multipart/form-data\".\n  assert(mimeType !== 'failure' && mimeType.essence === 'multipart/form-data')\n\n  const boundaryString = mimeType.parameters.get('boundary')\n\n  // 2. If mimeType’s parameters[\"boundary\"] does not exist, return failure.\n  //    Otherwise, let boundary be the result of UTF-8 decoding mimeType’s\n  //    parameters[\"boundary\"].\n  if (boundaryString === undefined) {\n    return 'failure'\n  }\n\n  const boundary = Buffer.from(`--${boundaryString}`, 'utf8')\n\n  // 3. Let entry list be an empty entry list.\n  const entryList = []\n\n  // 4. Let position be a pointer to a byte in input, initially pointing at\n  //    the first byte.\n  const position = { position: 0 }\n\n  // Note: undici addition, allow \\r\\n before the body.\n  if (input[0] === 0x0d && input[1] === 0x0a) {\n    position.position += 2\n  }\n\n  // 5. While true:\n  while (true) {\n    // 5.1. If position points to a sequence of bytes starting with 0x2D 0x2D\n    //      (`--`) followed by boundary, advance position by 2 + the length of\n    //      boundary. Otherwise, return failure.\n    // Note: boundary is padded with 2 dashes already, no need to add 2.\n    if (input.subarray(position.position, position.position + boundary.length).equals(boundary)) {\n      position.position += boundary.length\n    } else {\n      return 'failure'\n    }\n\n    // 5.2. If position points to the sequence of bytes 0x2D 0x2D 0x0D 0x0A\n    //      (`--` followed by CR LF) followed by the end of input, return entry list.\n    // Note: a body does NOT need to end with CRLF. It can end with --.\n    if (\n      (position.position === input.length - 2 && bufferStartsWith(input, dd, position)) ||\n      (position.position === input.length - 4 && bufferStartsWith(input, ddcrlf, position))\n    ) {\n      return entryList\n    }\n\n    // 5.3. If position does not point to a sequence of bytes starting with 0x0D\n    //      0x0A (CR LF), return failure.\n    if (input[position.position] !== 0x0d || input[position.position + 1] !== 0x0a) {\n      return 'failure'\n    }\n\n    // 5.4. Advance position by 2. (This skips past the newline.)\n    position.position += 2\n\n    // 5.5. Let name, filename and contentType be the result of parsing\n    //      multipart/form-data headers on input and position, if the result\n    //      is not failure. Otherwise, return failure.\n    const result = parseMultipartFormDataHeaders(input, position)\n\n    if (result === 'failure') {\n      return 'failure'\n    }\n\n    let { name, filename, contentType, encoding } = result\n\n    // 5.6. Advance position by 2. (This skips past the empty line that marks\n    //      the end of the headers.)\n    position.position += 2\n\n    // 5.7. Let body be the empty byte sequence.\n    let body\n\n    // 5.8. Body loop: While position is not past the end of input:\n    // TODO: the steps here are completely wrong\n    {\n      const boundaryIndex = input.indexOf(boundary.subarray(2), position.position)\n\n      if (boundaryIndex === -1) {\n        return 'failure'\n      }\n\n      body = input.subarray(position.position, boundaryIndex - 4)\n\n      position.position += body.length\n\n      // Note: position must be advanced by the body's length before being\n      // decoded, otherwise the parsing will fail.\n      if (encoding === 'base64') {\n        body = Buffer.from(body.toString(), 'base64')\n      }\n    }\n\n    // 5.9. If position does not point to a sequence of bytes starting with\n    //      0x0D 0x0A (CR LF), return failure. Otherwise, advance position by 2.\n    if (input[position.position] !== 0x0d || input[position.position + 1] !== 0x0a) {\n      return 'failure'\n    } else {\n      position.position += 2\n    }\n\n    // 5.10. If filename is not null:\n    let value\n\n    if (filename !== null) {\n      // 5.10.1. If contentType is null, set contentType to \"text/plain\".\n      contentType ??= 'text/plain'\n\n      // 5.10.2. If contentType is not an ASCII string, set contentType to the empty string.\n\n      // Note: `buffer.isAscii` can be used at zero-cost, but converting a string to a buffer is a high overhead.\n      // Content-Type is a relatively small string, so it is faster to use `String#charCodeAt`.\n      if (!isAsciiString(contentType)) {\n        contentType = ''\n      }\n\n      // 5.10.3. Let value be a new File object with name filename, type contentType, and body body.\n      value = new File([body], filename, { type: contentType })\n    } else {\n      // 5.11. Otherwise:\n\n      // 5.11.1. Let value be the UTF-8 decoding without BOM of body.\n      value = utf8DecodeBytes(Buffer.from(body))\n    }\n\n    // 5.12. Assert: name is a scalar value string and value is either a scalar value string or a File object.\n    assert(isUSVString(name))\n    assert((typeof value === 'string' && isUSVString(value)) || isFileLike(value))\n\n    // 5.13. Create an entry with name and value, and append it to entry list.\n    entryList.push(makeEntry(name, value, filename))\n  }\n}\n\n/**\n * @see https://andreubotella.github.io/multipart-form-data/#parse-multipart-form-data-headers\n * @param {Buffer} input\n * @param {{ position: number }} position\n */\nfunction parseMultipartFormDataHeaders (input, position) {\n  // 1. Let name, filename and contentType be null.\n  let name = null\n  let filename = null\n  let contentType = null\n  let encoding = null\n\n  // 2. While true:\n  while (true) {\n    // 2.1. If position points to a sequence of bytes starting with 0x0D 0x0A (CR LF):\n    if (input[position.position] === 0x0d && input[position.position + 1] === 0x0a) {\n      // 2.1.1. If name is null, return failure.\n      if (name === null) {\n        return 'failure'\n      }\n\n      // 2.1.2. Return name, filename and contentType.\n      return { name, filename, contentType, encoding }\n    }\n\n    // 2.2. Let header name be the result of collecting a sequence of bytes that are\n    //      not 0x0A (LF), 0x0D (CR) or 0x3A (:), given position.\n    let headerName = collectASequenceOfBytes(\n      (char) => char !== 0x0a && char !== 0x0d && char !== 0x3a,\n      input,\n      position\n    )\n\n    // 2.3. Remove any HTTP tab or space bytes from the start or end of header name.\n    headerName = removeChars(headerName, true, true, (char) => char === 0x9 || char === 0x20)\n\n    // 2.4. If header name does not match the field-name token production, return failure.\n    if (!HTTP_TOKEN_CODEPOINTS.test(headerName.toString())) {\n      return 'failure'\n    }\n\n    // 2.5. If the byte at position is not 0x3A (:), return failure.\n    if (input[position.position] !== 0x3a) {\n      return 'failure'\n    }\n\n    // 2.6. Advance position by 1.\n    position.position++\n\n    // 2.7. Collect a sequence of bytes that are HTTP tab or space bytes given position.\n    //      (Do nothing with those bytes.)\n    collectASequenceOfBytes(\n      (char) => char === 0x20 || char === 0x09,\n      input,\n      position\n    )\n\n    // 2.8. Byte-lowercase header name and switch on the result:\n    switch (bufferToLowerCasedHeaderName(headerName)) {\n      case 'content-disposition': {\n        // 1. Set name and filename to null.\n        name = filename = null\n\n        // 2. If position does not point to a sequence of bytes starting with\n        //    `form-data; name=\"`, return failure.\n        if (!bufferStartsWith(input, formDataNameBuffer, position)) {\n          return 'failure'\n        }\n\n        // 3. Advance position so it points at the byte after the next 0x22 (\")\n        //    byte (the one in the sequence of bytes matched above).\n        position.position += 17\n\n        // 4. Set name to the result of parsing a multipart/form-data name given\n        //    input and position, if the result is not failure. Otherwise, return\n        //    failure.\n        name = parseMultipartFormDataName(input, position)\n\n        if (name === null) {\n          return 'failure'\n        }\n\n        // 5. If position points to a sequence of bytes starting with `; filename=\"`:\n        if (bufferStartsWith(input, filenameBuffer, position)) {\n          // Note: undici also handles filename*\n          let check = position.position + filenameBuffer.length\n\n          if (input[check] === 0x2a) {\n            position.position += 1\n            check += 1\n          }\n\n          if (input[check] !== 0x3d || input[check + 1] !== 0x22) { // =\"\n            return 'failure'\n          }\n\n          // 1. Advance position so it points at the byte after the next 0x22 (\") byte\n          //    (the one in the sequence of bytes matched above).\n          position.position += 12\n\n          // 2. Set filename to the result of parsing a multipart/form-data name given\n          //    input and position, if the result is not failure. Otherwise, return failure.\n          filename = parseMultipartFormDataName(input, position)\n\n          if (filename === null) {\n            return 'failure'\n          }\n        }\n\n        break\n      }\n      case 'content-type': {\n        // 1. Let header value be the result of collecting a sequence of bytes that are\n        //    not 0x0A (LF) or 0x0D (CR), given position.\n        let headerValue = collectASequenceOfBytes(\n          (char) => char !== 0x0a && char !== 0x0d,\n          input,\n          position\n        )\n\n        // 2. Remove any HTTP tab or space bytes from the end of header value.\n        headerValue = removeChars(headerValue, false, true, (char) => char === 0x9 || char === 0x20)\n\n        // 3. Set contentType to the isomorphic decoding of header value.\n        contentType = isomorphicDecode(headerValue)\n\n        break\n      }\n      case 'content-transfer-encoding': {\n        let headerValue = collectASequenceOfBytes(\n          (char) => char !== 0x0a && char !== 0x0d,\n          input,\n          position\n        )\n\n        headerValue = removeChars(headerValue, false, true, (char) => char === 0x9 || char === 0x20)\n\n        encoding = isomorphicDecode(headerValue)\n\n        break\n      }\n      default: {\n        // Collect a sequence of bytes that are not 0x0A (LF) or 0x0D (CR), given position.\n        // (Do nothing with those bytes.)\n        collectASequenceOfBytes(\n          (char) => char !== 0x0a && char !== 0x0d,\n          input,\n          position\n        )\n      }\n    }\n\n    // 2.9. If position does not point to a sequence of bytes starting with 0x0D 0x0A\n    //      (CR LF), return failure. Otherwise, advance position by 2 (past the newline).\n    if (input[position.position] !== 0x0d && input[position.position + 1] !== 0x0a) {\n      return 'failure'\n    } else {\n      position.position += 2\n    }\n  }\n}\n\n/**\n * @see https://andreubotella.github.io/multipart-form-data/#parse-a-multipart-form-data-name\n * @param {Buffer} input\n * @param {{ position: number }} position\n */\nfunction parseMultipartFormDataName (input, position) {\n  // 1. Assert: The byte at (position - 1) is 0x22 (\").\n  assert(input[position.position - 1] === 0x22)\n\n  // 2. Let name be the result of collecting a sequence of bytes that are not 0x0A (LF), 0x0D (CR) or 0x22 (\"), given position.\n  /** @type {string | Buffer} */\n  let name = collectASequenceOfBytes(\n    (char) => char !== 0x0a && char !== 0x0d && char !== 0x22,\n    input,\n    position\n  )\n\n  // 3. If the byte at position is not 0x22 (\"), return failure. Otherwise, advance position by 1.\n  if (input[position.position] !== 0x22) {\n    return null // name could be 'failure'\n  } else {\n    position.position++\n  }\n\n  // 4. Replace any occurrence of the following subsequences in name with the given byte:\n  // - `%0A`: 0x0A (LF)\n  // - `%0D`: 0x0D (CR)\n  // - `%22`: 0x22 (\")\n  name = new TextDecoder().decode(name)\n    .replace(/%0A/ig, '\\n')\n    .replace(/%0D/ig, '\\r')\n    .replace(/%22/g, '\"')\n\n  // 5. Return the UTF-8 decoding without BOM of name.\n  return name\n}\n\n/**\n * @param {(char: number) => boolean} condition\n * @param {Buffer} input\n * @param {{ position: number }} position\n */\nfunction collectASequenceOfBytes (condition, input, position) {\n  let start = position.position\n\n  while (start < input.length && condition(input[start])) {\n    ++start\n  }\n\n  return input.subarray(position.position, (position.position = start))\n}\n\n/**\n * @param {Buffer} buf\n * @param {boolean} leading\n * @param {boolean} trailing\n * @param {(charCode: number) => boolean} predicate\n * @returns {Buffer}\n */\nfunction removeChars (buf, leading, trailing, predicate) {\n  let lead = 0\n  let trail = buf.length - 1\n\n  if (leading) {\n    while (lead < buf.length && predicate(buf[lead])) lead++\n  }\n\n  if (trailing) {\n    while (trail > 0 && predicate(buf[trail])) trail--\n  }\n\n  return lead === 0 && trail === buf.length - 1 ? buf : buf.subarray(lead, trail + 1)\n}\n\n/**\n * Checks if {@param buffer} starts with {@param start}\n * @param {Buffer} buffer\n * @param {Buffer} start\n * @param {{ position: number }} position\n */\nfunction bufferStartsWith (buffer, start, position) {\n  if (buffer.length < start.length) {\n    return false\n  }\n\n  for (let i = 0; i < start.length; i++) {\n    if (start[i] !== buffer[position.position + i]) {\n      return false\n    }\n  }\n\n  return true\n}\n\nmodule.exports = {\n  multipartFormDataParser,\n  validateBoundary\n}\n", "'use strict'\n\nconst util = require('../../core/util')\nconst {\n  ReadableStreamFrom,\n  isBlobLike,\n  isReadableStreamLike,\n  readableStreamClose,\n  createDeferredPromise,\n  fullyReadBody,\n  extractMimeType,\n  utf8DecodeBytes\n} = require('./util')\nconst { FormData } = require('./formdata')\nconst { kState } = require('./symbols')\nconst { webidl } = require('./webidl')\nconst { Blob } = require('node:buffer')\nconst assert = require('node:assert')\nconst { isErrored, isDisturbed } = require('node:stream')\nconst { isArrayBuffer } = require('node:util/types')\nconst { serializeAMimeType } = require('./data-url')\nconst { multipartFormDataParser } = require('./formdata-parser')\n\nconst textEncoder = new TextEncoder()\nfunction noop () {}\n\nconst hasFinalizationRegistry = globalThis.FinalizationRegistry && process.version.indexOf('v18') !== 0\nlet streamRegistry\n\nif (hasFinalizationRegistry) {\n  streamRegistry = new FinalizationRegistry((weakRef) => {\n    const stream = weakRef.deref()\n    if (stream && !stream.locked && !isDisturbed(stream) && !isErrored(stream)) {\n      stream.cancel('Response object has been garbage collected').catch(noop)\n    }\n  })\n}\n\n// https://fetch.spec.whatwg.org/#concept-bodyinit-extract\nfunction extractBody (object, keepalive = false) {\n  // 1. Let stream be null.\n  let stream = null\n\n  // 2. If object is a ReadableStream object, then set stream to object.\n  if (object instanceof ReadableStream) {\n    stream = object\n  } else if (isBlobLike(object)) {\n    // 3. Otherwise, if object is a Blob object, set stream to the\n    //    result of running object’s get stream.\n    stream = object.stream()\n  } else {\n    // 4. Otherwise, set stream to a new ReadableStream object, and set\n    //    up stream with byte reading support.\n    stream = new ReadableStream({\n      async pull (controller) {\n        const buffer = typeof source === 'string' ? textEncoder.encode(source) : source\n\n        if (buffer.byteLength) {\n          controller.enqueue(buffer)\n        }\n\n        queueMicrotask(() => readableStreamClose(controller))\n      },\n      start () {},\n      type: 'bytes'\n    })\n  }\n\n  // 5. Assert: stream is a ReadableStream object.\n  assert(isReadableStreamLike(stream))\n\n  // 6. Let action be null.\n  let action = null\n\n  // 7. Let source be null.\n  let source = null\n\n  // 8. Let length be null.\n  let length = null\n\n  // 9. Let type be null.\n  let type = null\n\n  // 10. Switch on object:\n  if (typeof object === 'string') {\n    // Set source to the UTF-8 encoding of object.\n    // Note: setting source to a Uint8Array here breaks some mocking assumptions.\n    source = object\n\n    // Set type to `text/plain;charset=UTF-8`.\n    type = 'text/plain;charset=UTF-8'\n  } else if (object instanceof URLSearchParams) {\n    // URLSearchParams\n\n    // spec says to run application/x-www-form-urlencoded on body.list\n    // this is implemented in Node.js as apart of an URLSearchParams instance toString method\n    // See: https://github.com/nodejs/node/blob/e46c680bf2b211bbd52cf959ca17ee98c7f657f5/lib/internal/url.js#L490\n    // and https://github.com/nodejs/node/blob/e46c680bf2b211bbd52cf959ca17ee98c7f657f5/lib/internal/url.js#L1100\n\n    // Set source to the result of running the application/x-www-form-urlencoded serializer with object’s list.\n    source = object.toString()\n\n    // Set type to `application/x-www-form-urlencoded;charset=UTF-8`.\n    type = 'application/x-www-form-urlencoded;charset=UTF-8'\n  } else if (isArrayBuffer(object)) {\n    // BufferSource/ArrayBuffer\n\n    // Set source to a copy of the bytes held by object.\n    source = new Uint8Array(object.slice())\n  } else if (ArrayBuffer.isView(object)) {\n    // BufferSource/ArrayBufferView\n\n    // Set source to a copy of the bytes held by object.\n    source = new Uint8Array(object.buffer.slice(object.byteOffset, object.byteOffset + object.byteLength))\n  } else if (util.isFormDataLike(object)) {\n    const boundary = `----formdata-undici-0${`${Math.floor(Math.random() * 1e11)}`.padStart(11, '0')}`\n    const prefix = `--${boundary}\\r\\nContent-Disposition: form-data`\n\n    /*! formdata-polyfill. MIT License. Jimmy Wärting <https://jimmy.warting.se/opensource> */\n    const escape = (str) =>\n      str.replace(/\\n/g, '%0A').replace(/\\r/g, '%0D').replace(/\"/g, '%22')\n    const normalizeLinefeeds = (value) => value.replace(/\\r?\\n|\\r/g, '\\r\\n')\n\n    // Set action to this step: run the multipart/form-data\n    // encoding algorithm, with object’s entry list and UTF-8.\n    // - This ensures that the body is immutable and can't be changed afterwords\n    // - That the content-length is calculated in advance.\n    // - And that all parts are pre-encoded and ready to be sent.\n\n    const blobParts = []\n    const rn = new Uint8Array([13, 10]) // '\\r\\n'\n    length = 0\n    let hasUnknownSizeValue = false\n\n    for (const [name, value] of object) {\n      if (typeof value === 'string') {\n        const chunk = textEncoder.encode(prefix +\n          `; name=\"${escape(normalizeLinefeeds(name))}\"` +\n          `\\r\\n\\r\\n${normalizeLinefeeds(value)}\\r\\n`)\n        blobParts.push(chunk)\n        length += chunk.byteLength\n      } else {\n        const chunk = textEncoder.encode(`${prefix}; name=\"${escape(normalizeLinefeeds(name))}\"` +\n          (value.name ? `; filename=\"${escape(value.name)}\"` : '') + '\\r\\n' +\n          `Content-Type: ${\n            value.type || 'application/octet-stream'\n          }\\r\\n\\r\\n`)\n        blobParts.push(chunk, value, rn)\n        if (typeof value.size === 'number') {\n          length += chunk.byteLength + value.size + rn.byteLength\n        } else {\n          hasUnknownSizeValue = true\n        }\n      }\n    }\n\n    const chunk = textEncoder.encode(`--${boundary}--`)\n    blobParts.push(chunk)\n    length += chunk.byteLength\n    if (hasUnknownSizeValue) {\n      length = null\n    }\n\n    // Set source to object.\n    source = object\n\n    action = async function * () {\n      for (const part of blobParts) {\n        if (part.stream) {\n          yield * part.stream()\n        } else {\n          yield part\n        }\n      }\n    }\n\n    // Set type to `multipart/form-data; boundary=`,\n    // followed by the multipart/form-data boundary string generated\n    // by the multipart/form-data encoding algorithm.\n    type = `multipart/form-data; boundary=${boundary}`\n  } else if (isBlobLike(object)) {\n    // Blob\n\n    // Set source to object.\n    source = object\n\n    // Set length to object’s size.\n    length = object.size\n\n    // If object’s type attribute is not the empty byte sequence, set\n    // type to its value.\n    if (object.type) {\n      type = object.type\n    }\n  } else if (typeof object[Symbol.asyncIterator] === 'function') {\n    // If keepalive is true, then throw a TypeError.\n    if (keepalive) {\n      throw new TypeError('keepalive')\n    }\n\n    // If object is disturbed or locked, then throw a TypeError.\n    if (util.isDisturbed(object) || object.locked) {\n      throw new TypeError(\n        'Response body object should not be disturbed or locked'\n      )\n    }\n\n    stream =\n      object instanceof ReadableStream ? object : ReadableStreamFrom(object)\n  }\n\n  // 11. If source is a byte sequence, then set action to a\n  // step that returns source and length to source’s length.\n  if (typeof source === 'string' || util.isBuffer(source)) {\n    length = Buffer.byteLength(source)\n  }\n\n  // 12. If action is non-null, then run these steps in in parallel:\n  if (action != null) {\n    // Run action.\n    let iterator\n    stream = new ReadableStream({\n      async start () {\n        iterator = action(object)[Symbol.asyncIterator]()\n      },\n      async pull (controller) {\n        const { value, done } = await iterator.next()\n        if (done) {\n          // When running action is done, close stream.\n          queueMicrotask(() => {\n            controller.close()\n            controller.byobRequest?.respond(0)\n          })\n        } else {\n          // Whenever one or more bytes are available and stream is not errored,\n          // enqueue a Uint8Array wrapping an ArrayBuffer containing the available\n          // bytes into stream.\n          if (!isErrored(stream)) {\n            const buffer = new Uint8Array(value)\n            if (buffer.byteLength) {\n              controller.enqueue(buffer)\n            }\n          }\n        }\n        return controller.desiredSize > 0\n      },\n      async cancel (reason) {\n        await iterator.return()\n      },\n      type: 'bytes'\n    })\n  }\n\n  // 13. Let body be a body whose stream is stream, source is source,\n  // and length is length.\n  const body = { stream, source, length }\n\n  // 14. Return (body, type).\n  return [body, type]\n}\n\n// https://fetch.spec.whatwg.org/#bodyinit-safely-extract\nfunction safelyExtractBody (object, keepalive = false) {\n  // To safely extract a body and a `Content-Type` value from\n  // a byte sequence or BodyInit object object, run these steps:\n\n  // 1. If object is a ReadableStream object, then:\n  if (object instanceof ReadableStream) {\n    // Assert: object is neither disturbed nor locked.\n    // istanbul ignore next\n    assert(!util.isDisturbed(object), 'The body has already been consumed.')\n    // istanbul ignore next\n    assert(!object.locked, 'The stream is locked.')\n  }\n\n  // 2. Return the results of extracting object.\n  return extractBody(object, keepalive)\n}\n\nfunction cloneBody (instance, body) {\n  // To clone a body body, run these steps:\n\n  // https://fetch.spec.whatwg.org/#concept-body-clone\n\n  // 1. Let « out1, out2 » be the result of teeing body’s stream.\n  const [out1, out2] = body.stream.tee()\n\n  if (hasFinalizationRegistry) {\n    streamRegistry.register(instance, new WeakRef(out1))\n  }\n\n  // 2. Set body’s stream to out1.\n  body.stream = out1\n\n  // 3. Return a body whose stream is out2 and other members are copied from body.\n  return {\n    stream: out2,\n    length: body.length,\n    source: body.source\n  }\n}\n\nfunction throwIfAborted (state) {\n  if (state.aborted) {\n    throw new DOMException('The operation was aborted.', 'AbortError')\n  }\n}\n\nfunction bodyMixinMethods (instance) {\n  const methods = {\n    blob () {\n      // The blob() method steps are to return the result of\n      // running consume body with this and the following step\n      // given a byte sequence bytes: return a Blob whose\n      // contents are bytes and whose type attribute is this’s\n      // MIME type.\n      return consumeBody(this, (bytes) => {\n        let mimeType = bodyMimeType(this)\n\n        if (mimeType === null) {\n          mimeType = ''\n        } else if (mimeType) {\n          mimeType = serializeAMimeType(mimeType)\n        }\n\n        // Return a Blob whose contents are bytes and type attribute\n        // is mimeType.\n        return new Blob([bytes], { type: mimeType })\n      }, instance)\n    },\n\n    arrayBuffer () {\n      // The arrayBuffer() method steps are to return the result\n      // of running consume body with this and the following step\n      // given a byte sequence bytes: return a new ArrayBuffer\n      // whose contents are bytes.\n      return consumeBody(this, (bytes) => {\n        return new Uint8Array(bytes).buffer\n      }, instance)\n    },\n\n    text () {\n      // The text() method steps are to return the result of running\n      // consume body with this and UTF-8 decode.\n      return consumeBody(this, utf8DecodeBytes, instance)\n    },\n\n    json () {\n      // The json() method steps are to return the result of running\n      // consume body with this and parse JSON from bytes.\n      return consumeBody(this, parseJSONFromBytes, instance)\n    },\n\n    formData () {\n      // The formData() method steps are to return the result of running\n      // consume body with this and the following step given a byte sequence bytes:\n      return consumeBody(this, (value) => {\n        // 1. Let mimeType be the result of get the MIME type with this.\n        const mimeType = bodyMimeType(this)\n\n        // 2. If mimeType is non-null, then switch on mimeType’s essence and run\n        //    the corresponding steps:\n        if (mimeType !== null) {\n          switch (mimeType.essence) {\n            case 'multipart/form-data': {\n              // 1. ... [long step]\n              const parsed = multipartFormDataParser(value, mimeType)\n\n              // 2. If that fails for some reason, then throw a TypeError.\n              if (parsed === 'failure') {\n                throw new TypeError('Failed to parse body as FormData.')\n              }\n\n              // 3. Return a new FormData object, appending each entry,\n              //    resulting from the parsing operation, to its entry list.\n              const fd = new FormData()\n              fd[kState] = parsed\n\n              return fd\n            }\n            case 'application/x-www-form-urlencoded': {\n              // 1. Let entries be the result of parsing bytes.\n              const entries = new URLSearchParams(value.toString())\n\n              // 2. If entries is failure, then throw a TypeError.\n\n              // 3. Return a new FormData object whose entry list is entries.\n              const fd = new FormData()\n\n              for (const [name, value] of entries) {\n                fd.append(name, value)\n              }\n\n              return fd\n            }\n          }\n        }\n\n        // 3. Throw a TypeError.\n        throw new TypeError(\n          'Content-Type was not one of \"multipart/form-data\" or \"application/x-www-form-urlencoded\".'\n        )\n      }, instance)\n    },\n\n    bytes () {\n      // The bytes() method steps are to return the result of running consume body\n      // with this and the following step given a byte sequence bytes: return the\n      // result of creating a Uint8Array from bytes in this’s relevant realm.\n      return consumeBody(this, (bytes) => {\n        return new Uint8Array(bytes)\n      }, instance)\n    }\n  }\n\n  return methods\n}\n\nfunction mixinBody (prototype) {\n  Object.assign(prototype.prototype, bodyMixinMethods(prototype))\n}\n\n/**\n * @see https://fetch.spec.whatwg.org/#concept-body-consume-body\n * @param {Response|Request} object\n * @param {(value: unknown) => unknown} convertBytesToJSValue\n * @param {Response|Request} instance\n */\nasync function consumeBody (object, convertBytesToJSValue, instance) {\n  webidl.brandCheck(object, instance)\n\n  // 1. If object is unusable, then return a promise rejected\n  //    with a TypeError.\n  if (bodyUnusable(object)) {\n    throw new TypeError('Body is unusable: Body has already been read')\n  }\n\n  throwIfAborted(object[kState])\n\n  // 2. Let promise be a new promise.\n  const promise = createDeferredPromise()\n\n  // 3. Let errorSteps given error be to reject promise with error.\n  const errorSteps = (error) => promise.reject(error)\n\n  // 4. Let successSteps given a byte sequence data be to resolve\n  //    promise with the result of running convertBytesToJSValue\n  //    with data. If that threw an exception, then run errorSteps\n  //    with that exception.\n  const successSteps = (data) => {\n    try {\n      promise.resolve(convertBytesToJSValue(data))\n    } catch (e) {\n      errorSteps(e)\n    }\n  }\n\n  // 5. If object’s body is null, then run successSteps with an\n  //    empty byte sequence.\n  if (object[kState].body == null) {\n    successSteps(Buffer.allocUnsafe(0))\n    return promise.promise\n  }\n\n  // 6. Otherwise, fully read object’s body given successSteps,\n  //    errorSteps, and object’s relevant global object.\n  await fullyReadBody(object[kState].body, successSteps, errorSteps)\n\n  // 7. Return promise.\n  return promise.promise\n}\n\n// https://fetch.spec.whatwg.org/#body-unusable\nfunction bodyUnusable (object) {\n  const body = object[kState].body\n\n  // An object including the Body interface mixin is\n  // said to be unusable if its body is non-null and\n  // its body’s stream is disturbed or locked.\n  return body != null && (body.stream.locked || util.isDisturbed(body.stream))\n}\n\n/**\n * @see https://infra.spec.whatwg.org/#parse-json-bytes-to-a-javascript-value\n * @param {Uint8Array} bytes\n */\nfunction parseJSONFromBytes (bytes) {\n  return JSON.parse(utf8DecodeBytes(bytes))\n}\n\n/**\n * @see https://fetch.spec.whatwg.org/#concept-body-mime-type\n * @param {import('./response').Response|import('./request').Request} requestOrResponse\n */\nfunction bodyMimeType (requestOrResponse) {\n  // 1. Let headers be null.\n  // 2. If requestOrResponse is a Request object, then set headers to requestOrResponse’s request’s header list.\n  // 3. Otherwise, set headers to requestOrResponse’s response’s header list.\n  /** @type {import('./headers').HeadersList} */\n  const headers = requestOrResponse[kState].headersList\n\n  // 4. Let mimeType be the result of extracting a MIME type from headers.\n  const mimeType = extractMimeType(headers)\n\n  // 5. If mimeType is failure, then return null.\n  if (mimeType === 'failure') {\n    return null\n  }\n\n  // 6. Return mimeType.\n  return mimeType\n}\n\nmodule.exports = {\n  extractBody,\n  safelyExtractBody,\n  cloneBody,\n  mixinBody,\n  streamRegistry,\n  hasFinalizationRegistry,\n  bodyUnusable\n}\n", "'use strict'\n\n/* global WebAssembly */\n\nconst assert = require('node:assert')\nconst util = require('../core/util.js')\nconst { channels } = require('../core/diagnostics.js')\nconst timers = require('../util/timers.js')\nconst {\n  RequestContentLengthMismatchError,\n  ResponseContentLengthMismatchError,\n  RequestAbortedError,\n  HeadersTimeoutError,\n  HeadersOverflowError,\n  SocketError,\n  InformationalError,\n  BodyTimeoutError,\n  HTTPParserError,\n  ResponseExceededMaxSizeError\n} = require('../core/errors.js')\nconst {\n  kUrl,\n  kReset,\n  kClient,\n  kParser,\n  kBlocking,\n  kRunning,\n  kPending,\n  kSize,\n  kWriting,\n  kQueue,\n  kNoRef,\n  kKeepAliveDefaultTimeout,\n  kHostHeader,\n  kPendingIdx,\n  kRunningIdx,\n  kError,\n  kPipelining,\n  kSocket,\n  kKeepAliveTimeoutValue,\n  kMaxHeadersSize,\n  kKeepAliveMaxTimeout,\n  kKeepAliveTimeoutThreshold,\n  kHeadersTimeout,\n  kBodyTimeout,\n  kStrictContentLength,\n  kMaxRequests,\n  kCounter,\n  kMaxResponseSize,\n  kOnError,\n  kResume,\n  kHTTPContext\n} = require('../core/symbols.js')\n\nconst constants = require('../llhttp/constants.js')\nconst EMPTY_BUF = Buffer.alloc(0)\nconst FastBuffer = Buffer[Symbol.species]\nconst addListener = util.addListener\nconst removeAllListeners = util.removeAllListeners\n\nlet extractBody\n\nasync function lazyllhttp () {\n  const llhttpWasmData = process.env.JEST_WORKER_ID ? require('../llhttp/llhttp-wasm.js') : undefined\n\n  let mod\n  try {\n    mod = await WebAssembly.compile(require('../llhttp/llhttp_simd-wasm.js'))\n  } catch (e) {\n    /* istanbul ignore next */\n\n    // We could check if the error was caused by the simd option not\n    // being enabled, but the occurring of this other error\n    // * https://github.com/emscripten-core/emscripten/issues/11495\n    // got me to remove that check to avoid breaking Node 12.\n    mod = await WebAssembly.compile(llhttpWasmData || require('../llhttp/llhttp-wasm.js'))\n  }\n\n  return await WebAssembly.instantiate(mod, {\n    env: {\n      /* eslint-disable camelcase */\n\n      wasm_on_url: (p, at, len) => {\n        /* istanbul ignore next */\n        return 0\n      },\n      wasm_on_status: (p, at, len) => {\n        assert.strictEqual(currentParser.ptr, p)\n        const start = at - currentBufferPtr + currentBufferRef.byteOffset\n        return currentParser.onStatus(new FastBuffer(currentBufferRef.buffer, start, len)) || 0\n      },\n      wasm_on_message_begin: (p) => {\n        assert.strictEqual(currentParser.ptr, p)\n        return currentParser.onMessageBegin() || 0\n      },\n      wasm_on_header_field: (p, at, len) => {\n        assert.strictEqual(currentParser.ptr, p)\n        const start = at - currentBufferPtr + currentBufferRef.byteOffset\n        return currentParser.onHeaderField(new FastBuffer(currentBufferRef.buffer, start, len)) || 0\n      },\n      wasm_on_header_value: (p, at, len) => {\n        assert.strictEqual(currentParser.ptr, p)\n        const start = at - currentBufferPtr + currentBufferRef.byteOffset\n        return currentParser.onHeaderValue(new FastBuffer(currentBufferRef.buffer, start, len)) || 0\n      },\n      wasm_on_headers_complete: (p, statusCode, upgrade, shouldKeepAlive) => {\n        assert.strictEqual(currentParser.ptr, p)\n        return currentParser.onHeadersComplete(statusCode, Boolean(upgrade), Boolean(shouldKeepAlive)) || 0\n      },\n      wasm_on_body: (p, at, len) => {\n        assert.strictEqual(currentParser.ptr, p)\n        const start = at - currentBufferPtr + currentBufferRef.byteOffset\n        return currentParser.onBody(new FastBuffer(currentBufferRef.buffer, start, len)) || 0\n      },\n      wasm_on_message_complete: (p) => {\n        assert.strictEqual(currentParser.ptr, p)\n        return currentParser.onMessageComplete() || 0\n      }\n\n      /* eslint-enable camelcase */\n    }\n  })\n}\n\nlet llhttpInstance = null\nlet llhttpPromise = lazyllhttp()\nllhttpPromise.catch()\n\nlet currentParser = null\nlet currentBufferRef = null\nlet currentBufferSize = 0\nlet currentBufferPtr = null\n\nconst TIMEOUT_HEADERS = 1\nconst TIMEOUT_BODY = 2\nconst TIMEOUT_IDLE = 3\n\nclass Parser {\n  constructor (client, socket, { exports }) {\n    assert(Number.isFinite(client[kMaxHeadersSize]) && client[kMaxHeadersSize] > 0)\n\n    this.llhttp = exports\n    this.ptr = this.llhttp.llhttp_alloc(constants.TYPE.RESPONSE)\n    this.client = client\n    this.socket = socket\n    this.timeout = null\n    this.timeoutValue = null\n    this.timeoutType = null\n    this.statusCode = null\n    this.statusText = ''\n    this.upgrade = false\n    this.headers = []\n    this.headersSize = 0\n    this.headersMaxSize = client[kMaxHeadersSize]\n    this.shouldKeepAlive = false\n    this.paused = false\n    this.resume = this.resume.bind(this)\n\n    this.bytesRead = 0\n\n    this.keepAlive = ''\n    this.contentLength = ''\n    this.connection = ''\n    this.maxResponseSize = client[kMaxResponseSize]\n  }\n\n  setTimeout (value, type) {\n    this.timeoutType = type\n    if (value !== this.timeoutValue) {\n      timers.clearTimeout(this.timeout)\n      if (value) {\n        this.timeout = timers.setTimeout(onParserTimeout, value, this)\n        // istanbul ignore else: only for jest\n        if (this.timeout.unref) {\n          this.timeout.unref()\n        }\n      } else {\n        this.timeout = null\n      }\n      this.timeoutValue = value\n    } else if (this.timeout) {\n      // istanbul ignore else: only for jest\n      if (this.timeout.refresh) {\n        this.timeout.refresh()\n      }\n    }\n  }\n\n  resume () {\n    if (this.socket.destroyed || !this.paused) {\n      return\n    }\n\n    assert(this.ptr != null)\n    assert(currentParser == null)\n\n    this.llhttp.llhttp_resume(this.ptr)\n\n    assert(this.timeoutType === TIMEOUT_BODY)\n    if (this.timeout) {\n      // istanbul ignore else: only for jest\n      if (this.timeout.refresh) {\n        this.timeout.refresh()\n      }\n    }\n\n    this.paused = false\n    this.execute(this.socket.read() || EMPTY_BUF) // Flush parser.\n    this.readMore()\n  }\n\n  readMore () {\n    while (!this.paused && this.ptr) {\n      const chunk = this.socket.read()\n      if (chunk === null) {\n        break\n      }\n      this.execute(chunk)\n    }\n  }\n\n  execute (data) {\n    assert(this.ptr != null)\n    assert(currentParser == null)\n    assert(!this.paused)\n\n    const { socket, llhttp } = this\n\n    if (data.length > currentBufferSize) {\n      if (currentBufferPtr) {\n        llhttp.free(currentBufferPtr)\n      }\n      currentBufferSize = Math.ceil(data.length / 4096) * 4096\n      currentBufferPtr = llhttp.malloc(currentBufferSize)\n    }\n\n    new Uint8Array(llhttp.memory.buffer, currentBufferPtr, currentBufferSize).set(data)\n\n    // Call `execute` on the wasm parser.\n    // We pass the `llhttp_parser` pointer address, the pointer address of buffer view data,\n    // and finally the length of bytes to parse.\n    // The return value is an error code or `constants.ERROR.OK`.\n    try {\n      let ret\n\n      try {\n        currentBufferRef = data\n        currentParser = this\n        ret = llhttp.llhttp_execute(this.ptr, currentBufferPtr, data.length)\n        /* eslint-disable-next-line no-useless-catch */\n      } catch (err) {\n        /* istanbul ignore next: difficult to make a test case for */\n        throw err\n      } finally {\n        currentParser = null\n        currentBufferRef = null\n      }\n\n      const offset = llhttp.llhttp_get_error_pos(this.ptr) - currentBufferPtr\n\n      if (ret === constants.ERROR.PAUSED_UPGRADE) {\n        this.onUpgrade(data.slice(offset))\n      } else if (ret === constants.ERROR.PAUSED) {\n        this.paused = true\n        socket.unshift(data.slice(offset))\n      } else if (ret !== constants.ERROR.OK) {\n        const ptr = llhttp.llhttp_get_error_reason(this.ptr)\n        let message = ''\n        /* istanbul ignore else: difficult to make a test case for */\n        if (ptr) {\n          const len = new Uint8Array(llhttp.memory.buffer, ptr).indexOf(0)\n          message =\n            'Response does not match the HTTP/1.1 protocol (' +\n            Buffer.from(llhttp.memory.buffer, ptr, len).toString() +\n            ')'\n        }\n        throw new HTTPParserError(message, constants.ERROR[ret], data.slice(offset))\n      }\n    } catch (err) {\n      util.destroy(socket, err)\n    }\n  }\n\n  destroy () {\n    assert(this.ptr != null)\n    assert(currentParser == null)\n\n    this.llhttp.llhttp_free(this.ptr)\n    this.ptr = null\n\n    timers.clearTimeout(this.timeout)\n    this.timeout = null\n    this.timeoutValue = null\n    this.timeoutType = null\n\n    this.paused = false\n  }\n\n  onStatus (buf) {\n    this.statusText = buf.toString()\n  }\n\n  onMessageBegin () {\n    const { socket, client } = this\n\n    /* istanbul ignore next: difficult to make a test case for */\n    if (socket.destroyed) {\n      return -1\n    }\n\n    const request = client[kQueue][client[kRunningIdx]]\n    if (!request) {\n      return -1\n    }\n    request.onResponseStarted()\n  }\n\n  onHeaderField (buf) {\n    const len = this.headers.length\n\n    if ((len & 1) === 0) {\n      this.headers.push(buf)\n    } else {\n      this.headers[len - 1] = Buffer.concat([this.headers[len - 1], buf])\n    }\n\n    this.trackHeader(buf.length)\n  }\n\n  onHeaderValue (buf) {\n    let len = this.headers.length\n\n    if ((len & 1) === 1) {\n      this.headers.push(buf)\n      len += 1\n    } else {\n      this.headers[len - 1] = Buffer.concat([this.headers[len - 1], buf])\n    }\n\n    const key = this.headers[len - 2]\n    if (key.length === 10) {\n      const headerName = util.bufferToLowerCasedHeaderName(key)\n      if (headerName === 'keep-alive') {\n        this.keepAlive += buf.toString()\n      } else if (headerName === 'connection') {\n        this.connection += buf.toString()\n      }\n    } else if (key.length === 14 && util.bufferToLowerCasedHeaderName(key) === 'content-length') {\n      this.contentLength += buf.toString()\n    }\n\n    this.trackHeader(buf.length)\n  }\n\n  trackHeader (len) {\n    this.headersSize += len\n    if (this.headersSize >= this.headersMaxSize) {\n      util.destroy(this.socket, new HeadersOverflowError())\n    }\n  }\n\n  onUpgrade (head) {\n    const { upgrade, client, socket, headers, statusCode } = this\n\n    assert(upgrade)\n\n    const request = client[kQueue][client[kRunningIdx]]\n    assert(request)\n\n    assert(!socket.destroyed)\n    assert(socket === client[kSocket])\n    assert(!this.paused)\n    assert(request.upgrade || request.method === 'CONNECT')\n\n    this.statusCode = null\n    this.statusText = ''\n    this.shouldKeepAlive = null\n\n    assert(this.headers.length % 2 === 0)\n    this.headers = []\n    this.headersSize = 0\n\n    socket.unshift(head)\n\n    socket[kParser].destroy()\n    socket[kParser] = null\n\n    socket[kClient] = null\n    socket[kError] = null\n\n    removeAllListeners(socket)\n\n    client[kSocket] = null\n    client[kHTTPContext] = null // TODO (fix): This is hacky...\n    client[kQueue][client[kRunningIdx]++] = null\n    client.emit('disconnect', client[kUrl], [client], new InformationalError('upgrade'))\n\n    try {\n      request.onUpgrade(statusCode, headers, socket)\n    } catch (err) {\n      util.destroy(socket, err)\n    }\n\n    client[kResume]()\n  }\n\n  onHeadersComplete (statusCode, upgrade, shouldKeepAlive) {\n    const { client, socket, headers, statusText } = this\n\n    /* istanbul ignore next: difficult to make a test case for */\n    if (socket.destroyed) {\n      return -1\n    }\n\n    const request = client[kQueue][client[kRunningIdx]]\n\n    /* istanbul ignore next: difficult to make a test case for */\n    if (!request) {\n      return -1\n    }\n\n    assert(!this.upgrade)\n    assert(this.statusCode < 200)\n\n    if (statusCode === 100) {\n      util.destroy(socket, new SocketError('bad response', util.getSocketInfo(socket)))\n      return -1\n    }\n\n    /* this can only happen if server is misbehaving */\n    if (upgrade && !request.upgrade) {\n      util.destroy(socket, new SocketError('bad upgrade', util.getSocketInfo(socket)))\n      return -1\n    }\n\n    assert.strictEqual(this.timeoutType, TIMEOUT_HEADERS)\n\n    this.statusCode = statusCode\n    this.shouldKeepAlive = (\n      shouldKeepAlive ||\n      // Override llhttp value which does not allow keepAlive for HEAD.\n      (request.method === 'HEAD' && !socket[kReset] && this.connection.toLowerCase() === 'keep-alive')\n    )\n\n    if (this.statusCode >= 200) {\n      const bodyTimeout = request.bodyTimeout != null\n        ? request.bodyTimeout\n        : client[kBodyTimeout]\n      this.setTimeout(bodyTimeout, TIMEOUT_BODY)\n    } else if (this.timeout) {\n      // istanbul ignore else: only for jest\n      if (this.timeout.refresh) {\n        this.timeout.refresh()\n      }\n    }\n\n    if (request.method === 'CONNECT') {\n      assert(client[kRunning] === 1)\n      this.upgrade = true\n      return 2\n    }\n\n    if (upgrade) {\n      assert(client[kRunning] === 1)\n      this.upgrade = true\n      return 2\n    }\n\n    assert(this.headers.length % 2 === 0)\n    this.headers = []\n    this.headersSize = 0\n\n    if (this.shouldKeepAlive && client[kPipelining]) {\n      const keepAliveTimeout = this.keepAlive ? util.parseKeepAliveTimeout(this.keepAlive) : null\n\n      if (keepAliveTimeout != null) {\n        const timeout = Math.min(\n          keepAliveTimeout - client[kKeepAliveTimeoutThreshold],\n          client[kKeepAliveMaxTimeout]\n        )\n        if (timeout <= 0) {\n          socket[kReset] = true\n        } else {\n          client[kKeepAliveTimeoutValue] = timeout\n        }\n      } else {\n        client[kKeepAliveTimeoutValue] = client[kKeepAliveDefaultTimeout]\n      }\n    } else {\n      // Stop more requests from being dispatched.\n      socket[kReset] = true\n    }\n\n    const pause = request.onHeaders(statusCode, headers, this.resume, statusText) === false\n\n    if (request.aborted) {\n      return -1\n    }\n\n    if (request.method === 'HEAD') {\n      return 1\n    }\n\n    if (statusCode < 200) {\n      return 1\n    }\n\n    if (socket[kBlocking]) {\n      socket[kBlocking] = false\n      client[kResume]()\n    }\n\n    return pause ? constants.ERROR.PAUSED : 0\n  }\n\n  onBody (buf) {\n    const { client, socket, statusCode, maxResponseSize } = this\n\n    if (socket.destroyed) {\n      return -1\n    }\n\n    const request = client[kQueue][client[kRunningIdx]]\n    assert(request)\n\n    assert.strictEqual(this.timeoutType, TIMEOUT_BODY)\n    if (this.timeout) {\n      // istanbul ignore else: only for jest\n      if (this.timeout.refresh) {\n        this.timeout.refresh()\n      }\n    }\n\n    assert(statusCode >= 200)\n\n    if (maxResponseSize > -1 && this.bytesRead + buf.length > maxResponseSize) {\n      util.destroy(socket, new ResponseExceededMaxSizeError())\n      return -1\n    }\n\n    this.bytesRead += buf.length\n\n    if (request.onData(buf) === false) {\n      return constants.ERROR.PAUSED\n    }\n  }\n\n  onMessageComplete () {\n    const { client, socket, statusCode, upgrade, headers, contentLength, bytesRead, shouldKeepAlive } = this\n\n    if (socket.destroyed && (!statusCode || shouldKeepAlive)) {\n      return -1\n    }\n\n    if (upgrade) {\n      return\n    }\n\n    const request = client[kQueue][client[kRunningIdx]]\n    assert(request)\n\n    assert(statusCode >= 100)\n\n    this.statusCode = null\n    this.statusText = ''\n    this.bytesRead = 0\n    this.contentLength = ''\n    this.keepAlive = ''\n    this.connection = ''\n\n    assert(this.headers.length % 2 === 0)\n    this.headers = []\n    this.headersSize = 0\n\n    if (statusCode < 200) {\n      return\n    }\n\n    /* istanbul ignore next: should be handled by llhttp? */\n    if (request.method !== 'HEAD' && contentLength && bytesRead !== parseInt(contentLength, 10)) {\n      util.destroy(socket, new ResponseContentLengthMismatchError())\n      return -1\n    }\n\n    request.onComplete(headers)\n\n    client[kQueue][client[kRunningIdx]++] = null\n\n    if (socket[kWriting]) {\n      assert.strictEqual(client[kRunning], 0)\n      // Response completed before request.\n      util.destroy(socket, new InformationalError('reset'))\n      return constants.ERROR.PAUSED\n    } else if (!shouldKeepAlive) {\n      util.destroy(socket, new InformationalError('reset'))\n      return constants.ERROR.PAUSED\n    } else if (socket[kReset] && client[kRunning] === 0) {\n      // Destroy socket once all requests have completed.\n      // The request at the tail of the pipeline is the one\n      // that requested reset and no further requests should\n      // have been queued since then.\n      util.destroy(socket, new InformationalError('reset'))\n      return constants.ERROR.PAUSED\n    } else if (client[kPipelining] == null || client[kPipelining] === 1) {\n      // We must wait a full event loop cycle to reuse this socket to make sure\n      // that non-spec compliant servers are not closing the connection even if they\n      // said they won't.\n      setImmediate(() => client[kResume]())\n    } else {\n      client[kResume]()\n    }\n  }\n}\n\nfunction onParserTimeout (parser) {\n  const { socket, timeoutType, client } = parser\n\n  /* istanbul ignore else */\n  if (timeoutType === TIMEOUT_HEADERS) {\n    if (!socket[kWriting] || socket.writableNeedDrain || client[kRunning] > 1) {\n      assert(!parser.paused, 'cannot be paused while waiting for headers')\n      util.destroy(socket, new HeadersTimeoutError())\n    }\n  } else if (timeoutType === TIMEOUT_BODY) {\n    if (!parser.paused) {\n      util.destroy(socket, new BodyTimeoutError())\n    }\n  } else if (timeoutType === TIMEOUT_IDLE) {\n    assert(client[kRunning] === 0 && client[kKeepAliveTimeoutValue])\n    util.destroy(socket, new InformationalError('socket idle timeout'))\n  }\n}\n\nasync function connectH1 (client, socket) {\n  client[kSocket] = socket\n\n  if (!llhttpInstance) {\n    llhttpInstance = await llhttpPromise\n    llhttpPromise = null\n  }\n\n  socket[kNoRef] = false\n  socket[kWriting] = false\n  socket[kReset] = false\n  socket[kBlocking] = false\n  socket[kParser] = new Parser(client, socket, llhttpInstance)\n\n  addListener(socket, 'error', function (err) {\n    const parser = this[kParser]\n\n    assert(err.code !== 'ERR_TLS_CERT_ALTNAME_INVALID')\n\n    // On Mac OS, we get an ECONNRESET even if there is a full body to be forwarded\n    // to the user.\n    if (err.code === 'ECONNRESET' && parser.statusCode && !parser.shouldKeepAlive) {\n      // We treat all incoming data so for as a valid response.\n      parser.onMessageComplete()\n      return\n    }\n\n    this[kError] = err\n\n    this[kClient][kOnError](err)\n  })\n  addListener(socket, 'readable', function () {\n    const parser = this[kParser]\n\n    if (parser) {\n      parser.readMore()\n    }\n  })\n  addListener(socket, 'end', function () {\n    const parser = this[kParser]\n\n    if (parser.statusCode && !parser.shouldKeepAlive) {\n      // We treat all incoming data so far as a valid response.\n      parser.onMessageComplete()\n      return\n    }\n\n    util.destroy(this, new SocketError('other side closed', util.getSocketInfo(this)))\n  })\n  addListener(socket, 'close', function () {\n    const client = this[kClient]\n    const parser = this[kParser]\n\n    if (parser) {\n      if (!this[kError] && parser.statusCode && !parser.shouldKeepAlive) {\n        // We treat all incoming data so far as a valid response.\n        parser.onMessageComplete()\n      }\n\n      this[kParser].destroy()\n      this[kParser] = null\n    }\n\n    const err = this[kError] || new SocketError('closed', util.getSocketInfo(this))\n\n    client[kSocket] = null\n    client[kHTTPContext] = null // TODO (fix): This is hacky...\n\n    if (client.destroyed) {\n      assert(client[kPending] === 0)\n\n      // Fail entire queue.\n      const requests = client[kQueue].splice(client[kRunningIdx])\n      for (let i = 0; i < requests.length; i++) {\n        const request = requests[i]\n        util.errorRequest(client, request, err)\n      }\n    } else if (client[kRunning] > 0 && err.code !== 'UND_ERR_INFO') {\n      // Fail head of pipeline.\n      const request = client[kQueue][client[kRunningIdx]]\n      client[kQueue][client[kRunningIdx]++] = null\n\n      util.errorRequest(client, request, err)\n    }\n\n    client[kPendingIdx] = client[kRunningIdx]\n\n    assert(client[kRunning] === 0)\n\n    client.emit('disconnect', client[kUrl], [client], err)\n\n    client[kResume]()\n  })\n\n  let closed = false\n  socket.on('close', () => {\n    closed = true\n  })\n\n  return {\n    version: 'h1',\n    defaultPipelining: 1,\n    write (...args) {\n      return writeH1(client, ...args)\n    },\n    resume () {\n      resumeH1(client)\n    },\n    destroy (err, callback) {\n      if (closed) {\n        queueMicrotask(callback)\n      } else {\n        socket.destroy(err).on('close', callback)\n      }\n    },\n    get destroyed () {\n      return socket.destroyed\n    },\n    busy (request) {\n      if (socket[kWriting] || socket[kReset] || socket[kBlocking]) {\n        return true\n      }\n\n      if (request) {\n        if (client[kRunning] > 0 && !request.idempotent) {\n          // Non-idempotent request cannot be retried.\n          // Ensure that no other requests are inflight and\n          // could cause failure.\n          return true\n        }\n\n        if (client[kRunning] > 0 && (request.upgrade || request.method === 'CONNECT')) {\n          // Don't dispatch an upgrade until all preceding requests have completed.\n          // A misbehaving server might upgrade the connection before all pipelined\n          // request has completed.\n          return true\n        }\n\n        if (client[kRunning] > 0 && util.bodyLength(request.body) !== 0 &&\n          (util.isStream(request.body) || util.isAsyncIterable(request.body) || util.isFormDataLike(request.body))) {\n          // Request with stream or iterator body can error while other requests\n          // are inflight and indirectly error those as well.\n          // Ensure this doesn't happen by waiting for inflight\n          // to complete before dispatching.\n\n          // Request with stream or iterator body cannot be retried.\n          // Ensure that no other requests are inflight and\n          // could cause failure.\n          return true\n        }\n      }\n\n      return false\n    }\n  }\n}\n\nfunction resumeH1 (client) {\n  const socket = client[kSocket]\n\n  if (socket && !socket.destroyed) {\n    if (client[kSize] === 0) {\n      if (!socket[kNoRef] && socket.unref) {\n        socket.unref()\n        socket[kNoRef] = true\n      }\n    } else if (socket[kNoRef] && socket.ref) {\n      socket.ref()\n      socket[kNoRef] = false\n    }\n\n    if (client[kSize] === 0) {\n      if (socket[kParser].timeoutType !== TIMEOUT_IDLE) {\n        socket[kParser].setTimeout(client[kKeepAliveTimeoutValue], TIMEOUT_IDLE)\n      }\n    } else if (client[kRunning] > 0 && socket[kParser].statusCode < 200) {\n      if (socket[kParser].timeoutType !== TIMEOUT_HEADERS) {\n        const request = client[kQueue][client[kRunningIdx]]\n        const headersTimeout = request.headersTimeout != null\n          ? request.headersTimeout\n          : client[kHeadersTimeout]\n        socket[kParser].setTimeout(headersTimeout, TIMEOUT_HEADERS)\n      }\n    }\n  }\n}\n\n// https://www.rfc-editor.org/rfc/rfc7230#section-3.3.2\nfunction shouldSendContentLength (method) {\n  return method !== 'GET' && method !== 'HEAD' && method !== 'OPTIONS' && method !== 'TRACE' && method !== 'CONNECT'\n}\n\nfunction writeH1 (client, request) {\n  const { method, path, host, upgrade, blocking, reset } = request\n\n  let { body, headers, contentLength } = request\n\n  // https://tools.ietf.org/html/rfc7231#section-4.3.1\n  // https://tools.ietf.org/html/rfc7231#section-4.3.2\n  // https://tools.ietf.org/html/rfc7231#section-4.3.5\n\n  // Sending a payload body on a request that does not\n  // expect it can cause undefined behavior on some\n  // servers and corrupt connection state. Do not\n  // re-use the connection for further requests.\n\n  const expectsPayload = (\n    method === 'PUT' ||\n    method === 'POST' ||\n    method === 'PATCH'\n  )\n\n  if (util.isFormDataLike(body)) {\n    if (!extractBody) {\n      extractBody = require('../web/fetch/body.js').extractBody\n    }\n\n    const [bodyStream, contentType] = extractBody(body)\n    if (request.contentType == null) {\n      headers.push('content-type', contentType)\n    }\n    body = bodyStream.stream\n    contentLength = bodyStream.length\n  } else if (util.isBlobLike(body) && request.contentType == null && body.type) {\n    headers.push('content-type', body.type)\n  }\n\n  if (body && typeof body.read === 'function') {\n    // Try to read EOF in order to get length.\n    body.read(0)\n  }\n\n  const bodyLength = util.bodyLength(body)\n\n  contentLength = bodyLength ?? contentLength\n\n  if (contentLength === null) {\n    contentLength = request.contentLength\n  }\n\n  if (contentLength === 0 && !expectsPayload) {\n    // https://tools.ietf.org/html/rfc7230#section-3.3.2\n    // A user agent SHOULD NOT send a Content-Length header field when\n    // the request message does not contain a payload body and the method\n    // semantics do not anticipate such a body.\n\n    contentLength = null\n  }\n\n  // https://github.com/nodejs/undici/issues/2046\n  // A user agent may send a Content-Length header with 0 value, this should be allowed.\n  if (shouldSendContentLength(method) && contentLength > 0 && request.contentLength !== null && request.contentLength !== contentLength) {\n    if (client[kStrictContentLength]) {\n      util.errorRequest(client, request, new RequestContentLengthMismatchError())\n      return false\n    }\n\n    process.emitWarning(new RequestContentLengthMismatchError())\n  }\n\n  const socket = client[kSocket]\n\n  const abort = (err) => {\n    if (request.aborted || request.completed) {\n      return\n    }\n\n    util.errorRequest(client, request, err || new RequestAbortedError())\n\n    util.destroy(body)\n    util.destroy(socket, new InformationalError('aborted'))\n  }\n\n  try {\n    request.onConnect(abort)\n  } catch (err) {\n    util.errorRequest(client, request, err)\n  }\n\n  if (request.aborted) {\n    return false\n  }\n\n  if (method === 'HEAD') {\n    // https://github.com/mcollina/undici/issues/258\n    // Close after a HEAD request to interop with misbehaving servers\n    // that may send a body in the response.\n\n    socket[kReset] = true\n  }\n\n  if (upgrade || method === 'CONNECT') {\n    // On CONNECT or upgrade, block pipeline from dispatching further\n    // requests on this connection.\n\n    socket[kReset] = true\n  }\n\n  if (reset != null) {\n    socket[kReset] = reset\n  }\n\n  if (client[kMaxRequests] && socket[kCounter]++ >= client[kMaxRequests]) {\n    socket[kReset] = true\n  }\n\n  if (blocking) {\n    socket[kBlocking] = true\n  }\n\n  let header = `${method} ${path} HTTP/1.1\\r\\n`\n\n  if (typeof host === 'string') {\n    header += `host: ${host}\\r\\n`\n  } else {\n    header += client[kHostHeader]\n  }\n\n  if (upgrade) {\n    header += `connection: upgrade\\r\\nupgrade: ${upgrade}\\r\\n`\n  } else if (client[kPipelining] && !socket[kReset]) {\n    header += 'connection: keep-alive\\r\\n'\n  } else {\n    header += 'connection: close\\r\\n'\n  }\n\n  if (Array.isArray(headers)) {\n    for (let n = 0; n < headers.length; n += 2) {\n      const key = headers[n + 0]\n      const val = headers[n + 1]\n\n      if (Array.isArray(val)) {\n        for (let i = 0; i < val.length; i++) {\n          header += `${key}: ${val[i]}\\r\\n`\n        }\n      } else {\n        header += `${key}: ${val}\\r\\n`\n      }\n    }\n  }\n\n  if (channels.sendHeaders.hasSubscribers) {\n    channels.sendHeaders.publish({ request, headers: header, socket })\n  }\n\n  /* istanbul ignore else: assertion */\n  if (!body || bodyLength === 0) {\n    writeBuffer(abort, null, client, request, socket, contentLength, header, expectsPayload)\n  } else if (util.isBuffer(body)) {\n    writeBuffer(abort, body, client, request, socket, contentLength, header, expectsPayload)\n  } else if (util.isBlobLike(body)) {\n    if (typeof body.stream === 'function') {\n      writeIterable(abort, body.stream(), client, request, socket, contentLength, header, expectsPayload)\n    } else {\n      writeBlob(abort, body, client, request, socket, contentLength, header, expectsPayload)\n    }\n  } else if (util.isStream(body)) {\n    writeStream(abort, body, client, request, socket, contentLength, header, expectsPayload)\n  } else if (util.isIterable(body)) {\n    writeIterable(abort, body, client, request, socket, contentLength, header, expectsPayload)\n  } else {\n    assert(false)\n  }\n\n  return true\n}\n\nfunction writeStream (abort, body, client, request, socket, contentLength, header, expectsPayload) {\n  assert(contentLength !== 0 || client[kRunning] === 0, 'stream body cannot be pipelined')\n\n  let finished = false\n\n  const writer = new AsyncWriter({ abort, socket, request, contentLength, client, expectsPayload, header })\n\n  const onData = function (chunk) {\n    if (finished) {\n      return\n    }\n\n    try {\n      if (!writer.write(chunk) && this.pause) {\n        this.pause()\n      }\n    } catch (err) {\n      util.destroy(this, err)\n    }\n  }\n  const onDrain = function () {\n    if (finished) {\n      return\n    }\n\n    if (body.resume) {\n      body.resume()\n    }\n  }\n  const onClose = function () {\n    // 'close' might be emitted *before* 'error' for\n    // broken streams. Wait a tick to avoid this case.\n    queueMicrotask(() => {\n      // It's only safe to remove 'error' listener after\n      // 'close'.\n      body.removeListener('error', onFinished)\n    })\n\n    if (!finished) {\n      const err = new RequestAbortedError()\n      queueMicrotask(() => onFinished(err))\n    }\n  }\n  const onFinished = function (err) {\n    if (finished) {\n      return\n    }\n\n    finished = true\n\n    assert(socket.destroyed || (socket[kWriting] && client[kRunning] <= 1))\n\n    socket\n      .off('drain', onDrain)\n      .off('error', onFinished)\n\n    body\n      .removeListener('data', onData)\n      .removeListener('end', onFinished)\n      .removeListener('close', onClose)\n\n    if (!err) {\n      try {\n        writer.end()\n      } catch (er) {\n        err = er\n      }\n    }\n\n    writer.destroy(err)\n\n    if (err && (err.code !== 'UND_ERR_INFO' || err.message !== 'reset')) {\n      util.destroy(body, err)\n    } else {\n      util.destroy(body)\n    }\n  }\n\n  body\n    .on('data', onData)\n    .on('end', onFinished)\n    .on('error', onFinished)\n    .on('close', onClose)\n\n  if (body.resume) {\n    body.resume()\n  }\n\n  socket\n    .on('drain', onDrain)\n    .on('error', onFinished)\n\n  if (body.errorEmitted ?? body.errored) {\n    setImmediate(() => onFinished(body.errored))\n  } else if (body.endEmitted ?? body.readableEnded) {\n    setImmediate(() => onFinished(null))\n  }\n\n  if (body.closeEmitted ?? body.closed) {\n    setImmediate(onClose)\n  }\n}\n\nfunction writeBuffer (abort, body, client, request, socket, contentLength, header, expectsPayload) {\n  try {\n    if (!body) {\n      if (contentLength === 0) {\n        socket.write(`${header}content-length: 0\\r\\n\\r\\n`, 'latin1')\n      } else {\n        assert(contentLength === null, 'no body must not have content length')\n        socket.write(`${header}\\r\\n`, 'latin1')\n      }\n    } else if (util.isBuffer(body)) {\n      assert(contentLength === body.byteLength, 'buffer body must have content length')\n\n      socket.cork()\n      socket.write(`${header}content-length: ${contentLength}\\r\\n\\r\\n`, 'latin1')\n      socket.write(body)\n      socket.uncork()\n      request.onBodySent(body)\n\n      if (!expectsPayload) {\n        socket[kReset] = true\n      }\n    }\n    request.onRequestSent()\n\n    client[kResume]()\n  } catch (err) {\n    abort(err)\n  }\n}\n\nasync function writeBlob (abort, body, client, request, socket, contentLength, header, expectsPayload) {\n  assert(contentLength === body.size, 'blob body must have content length')\n\n  try {\n    if (contentLength != null && contentLength !== body.size) {\n      throw new RequestContentLengthMismatchError()\n    }\n\n    const buffer = Buffer.from(await body.arrayBuffer())\n\n    socket.cork()\n    socket.write(`${header}content-length: ${contentLength}\\r\\n\\r\\n`, 'latin1')\n    socket.write(buffer)\n    socket.uncork()\n\n    request.onBodySent(buffer)\n    request.onRequestSent()\n\n    if (!expectsPayload) {\n      socket[kReset] = true\n    }\n\n    client[kResume]()\n  } catch (err) {\n    abort(err)\n  }\n}\n\nasync function writeIterable (abort, body, client, request, socket, contentLength, header, expectsPayload) {\n  assert(contentLength !== 0 || client[kRunning] === 0, 'iterator body cannot be pipelined')\n\n  let callback = null\n  function onDrain () {\n    if (callback) {\n      const cb = callback\n      callback = null\n      cb()\n    }\n  }\n\n  const waitForDrain = () => new Promise((resolve, reject) => {\n    assert(callback === null)\n\n    if (socket[kError]) {\n      reject(socket[kError])\n    } else {\n      callback = resolve\n    }\n  })\n\n  socket\n    .on('close', onDrain)\n    .on('drain', onDrain)\n\n  const writer = new AsyncWriter({ abort, socket, request, contentLength, client, expectsPayload, header })\n  try {\n    // It's up to the user to somehow abort the async iterable.\n    for await (const chunk of body) {\n      if (socket[kError]) {\n        throw socket[kError]\n      }\n\n      if (!writer.write(chunk)) {\n        await waitForDrain()\n      }\n    }\n\n    writer.end()\n  } catch (err) {\n    writer.destroy(err)\n  } finally {\n    socket\n      .off('close', onDrain)\n      .off('drain', onDrain)\n  }\n}\n\nclass AsyncWriter {\n  constructor ({ abort, socket, request, contentLength, client, expectsPayload, header }) {\n    this.socket = socket\n    this.request = request\n    this.contentLength = contentLength\n    this.client = client\n    this.bytesWritten = 0\n    this.expectsPayload = expectsPayload\n    this.header = header\n    this.abort = abort\n\n    socket[kWriting] = true\n  }\n\n  write (chunk) {\n    const { socket, request, contentLength, client, bytesWritten, expectsPayload, header } = this\n\n    if (socket[kError]) {\n      throw socket[kError]\n    }\n\n    if (socket.destroyed) {\n      return false\n    }\n\n    const len = Buffer.byteLength(chunk)\n    if (!len) {\n      return true\n    }\n\n    // We should defer writing chunks.\n    if (contentLength !== null && bytesWritten + len > contentLength) {\n      if (client[kStrictContentLength]) {\n        throw new RequestContentLengthMismatchError()\n      }\n\n      process.emitWarning(new RequestContentLengthMismatchError())\n    }\n\n    socket.cork()\n\n    if (bytesWritten === 0) {\n      if (!expectsPayload) {\n        socket[kReset] = true\n      }\n\n      if (contentLength === null) {\n        socket.write(`${header}transfer-encoding: chunked\\r\\n`, 'latin1')\n      } else {\n        socket.write(`${header}content-length: ${contentLength}\\r\\n\\r\\n`, 'latin1')\n      }\n    }\n\n    if (contentLength === null) {\n      socket.write(`\\r\\n${len.toString(16)}\\r\\n`, 'latin1')\n    }\n\n    this.bytesWritten += len\n\n    const ret = socket.write(chunk)\n\n    socket.uncork()\n\n    request.onBodySent(chunk)\n\n    if (!ret) {\n      if (socket[kParser].timeout && socket[kParser].timeoutType === TIMEOUT_HEADERS) {\n        // istanbul ignore else: only for jest\n        if (socket[kParser].timeout.refresh) {\n          socket[kParser].timeout.refresh()\n        }\n      }\n    }\n\n    return ret\n  }\n\n  end () {\n    const { socket, contentLength, client, bytesWritten, expectsPayload, header, request } = this\n    request.onRequestSent()\n\n    socket[kWriting] = false\n\n    if (socket[kError]) {\n      throw socket[kError]\n    }\n\n    if (socket.destroyed) {\n      return\n    }\n\n    if (bytesWritten === 0) {\n      if (expectsPayload) {\n        // https://tools.ietf.org/html/rfc7230#section-3.3.2\n        // A user agent SHOULD send a Content-Length in a request message when\n        // no Transfer-Encoding is sent and the request method defines a meaning\n        // for an enclosed payload body.\n\n        socket.write(`${header}content-length: 0\\r\\n\\r\\n`, 'latin1')\n      } else {\n        socket.write(`${header}\\r\\n`, 'latin1')\n      }\n    } else if (contentLength === null) {\n      socket.write('\\r\\n0\\r\\n\\r\\n', 'latin1')\n    }\n\n    if (contentLength !== null && bytesWritten !== contentLength) {\n      if (client[kStrictContentLength]) {\n        throw new RequestContentLengthMismatchError()\n      } else {\n        process.emitWarning(new RequestContentLengthMismatchError())\n      }\n    }\n\n    if (socket[kParser].timeout && socket[kParser].timeoutType === TIMEOUT_HEADERS) {\n      // istanbul ignore else: only for jest\n      if (socket[kParser].timeout.refresh) {\n        socket[kParser].timeout.refresh()\n      }\n    }\n\n    client[kResume]()\n  }\n\n  destroy (err) {\n    const { socket, client, abort } = this\n\n    socket[kWriting] = false\n\n    if (err) {\n      assert(client[kRunning] <= 1, 'pipeline should only contain this request')\n      abort(err)\n    }\n  }\n}\n\nmodule.exports = connectH1\n", "'use strict'\n\nconst assert = require('node:assert')\nconst { pipeline } = require('node:stream')\nconst util = require('../core/util.js')\nconst {\n  RequestContentLengthMismatchError,\n  RequestAbortedError,\n  SocketError,\n  InformationalError\n} = require('../core/errors.js')\nconst {\n  kUrl,\n  kReset,\n  kClient,\n  kRunning,\n  kPending,\n  kQueue,\n  kPendingIdx,\n  kRunningIdx,\n  kError,\n  kSocket,\n  kStrictContentLength,\n  kOnError,\n  kMaxConcurrentStreams,\n  kHTTP2Session,\n  kResume\n} = require('../core/symbols.js')\n\nconst kOpenStreams = Symbol('open streams')\n\n// Experimental\nlet h2ExperimentalWarned = false\n\n/** @type {import('http2')} */\nlet http2\ntry {\n  http2 = require('node:http2')\n} catch {\n  // @ts-ignore\n  http2 = { constants: {} }\n}\n\nconst {\n  constants: {\n    HTTP2_HEADER_AUTHORITY,\n    HTTP2_HEADER_METHOD,\n    HTTP2_HEADER_PATH,\n    HTTP2_HEADER_SCHEME,\n    HTTP2_HEADER_CONTENT_LENGTH,\n    HTTP2_HEADER_EXPECT,\n    HTTP2_HEADER_STATUS\n  }\n} = http2\n\nfunction parseH2Headers (headers) {\n  const result = []\n\n  for (const [name, value] of Object.entries(headers)) {\n    // h2 may concat the header value by array\n    // e.g. Set-Cookie\n    if (Array.isArray(value)) {\n      for (const subvalue of value) {\n        // we need to provide each header value of header name\n        // because the headers handler expect name-value pair\n        result.push(Buffer.from(name), Buffer.from(subvalue))\n      }\n    } else {\n      result.push(Buffer.from(name), Buffer.from(value))\n    }\n  }\n\n  return result\n}\n\nasync function connectH2 (client, socket) {\n  client[kSocket] = socket\n\n  if (!h2ExperimentalWarned) {\n    h2ExperimentalWarned = true\n    process.emitWarning('H2 support is experimental, expect them to change at any time.', {\n      code: 'UNDICI-H2'\n    })\n  }\n\n  const session = http2.connect(client[kUrl], {\n    createConnection: () => socket,\n    peerMaxConcurrentStreams: client[kMaxConcurrentStreams]\n  })\n\n  session[kOpenStreams] = 0\n  session[kClient] = client\n  session[kSocket] = socket\n\n  util.addListener(session, 'error', onHttp2SessionError)\n  util.addListener(session, 'frameError', onHttp2FrameError)\n  util.addListener(session, 'end', onHttp2SessionEnd)\n  util.addListener(session, 'goaway', onHTTP2GoAway)\n  util.addListener(session, 'close', function () {\n    const { [kClient]: client } = this\n    const { [kSocket]: socket } = client\n\n    const err = this[kSocket][kError] || this[kError] || new SocketError('closed', util.getSocketInfo(socket))\n\n    client[kHTTP2Session] = null\n\n    if (client.destroyed) {\n      assert(client[kPending] === 0)\n\n      // Fail entire queue.\n      const requests = client[kQueue].splice(client[kRunningIdx])\n      for (let i = 0; i < requests.length; i++) {\n        const request = requests[i]\n        util.errorRequest(client, request, err)\n      }\n    }\n  })\n\n  session.unref()\n\n  client[kHTTP2Session] = session\n  socket[kHTTP2Session] = session\n\n  util.addListener(socket, 'error', function (err) {\n    assert(err.code !== 'ERR_TLS_CERT_ALTNAME_INVALID')\n\n    this[kError] = err\n\n    this[kClient][kOnError](err)\n  })\n\n  util.addListener(socket, 'end', function () {\n    util.destroy(this, new SocketError('other side closed', util.getSocketInfo(this)))\n  })\n\n  util.addListener(socket, 'close', function () {\n    const err = this[kError] || new SocketError('closed', util.getSocketInfo(this))\n\n    client[kSocket] = null\n\n    if (this[kHTTP2Session] != null) {\n      this[kHTTP2Session].destroy(err)\n    }\n\n    client[kPendingIdx] = client[kRunningIdx]\n\n    assert(client[kRunning] === 0)\n\n    client.emit('disconnect', client[kUrl], [client], err)\n\n    client[kResume]()\n  })\n\n  let closed = false\n  socket.on('close', () => {\n    closed = true\n  })\n\n  return {\n    version: 'h2',\n    defaultPipelining: Infinity,\n    write (...args) {\n      // TODO (fix): return\n      writeH2(client, ...args)\n    },\n    resume () {\n\n    },\n    destroy (err, callback) {\n      if (closed) {\n        queueMicrotask(callback)\n      } else {\n        // Destroying the socket will trigger the session close\n        socket.destroy(err).on('close', callback)\n      }\n    },\n    get destroyed () {\n      return socket.destroyed\n    },\n    busy () {\n      return false\n    }\n  }\n}\n\nfunction onHttp2SessionError (err) {\n  assert(err.code !== 'ERR_TLS_CERT_ALTNAME_INVALID')\n\n  this[kSocket][kError] = err\n  this[kClient][kOnError](err)\n}\n\nfunction onHttp2FrameError (type, code, id) {\n  if (id === 0) {\n    const err = new InformationalError(`HTTP/2: \"frameError\" received - type ${type}, code ${code}`)\n    this[kSocket][kError] = err\n    this[kClient][kOnError](err)\n  }\n}\n\nfunction onHttp2SessionEnd () {\n  const err = new SocketError('other side closed', util.getSocketInfo(this[kSocket]))\n  this.destroy(err)\n  util.destroy(this[kSocket], err)\n}\n\n/**\n * This is the root cause of #3011\n * We need to handle GOAWAY frames properly, and trigger the session close\n * along with the socket right away\n */\nfunction onHTTP2GoAway (code) {\n  const err = new RequestAbortedError(`HTTP/2: \"GOAWAY\" frame received with code ${code}`)\n\n  // We need to trigger the close cycle right away\n  // We need to destroy the session and the socket\n  // Requests should be failed with the error after the current one is handled\n  this[kSocket][kError] = err\n  this[kClient][kOnError](err)\n\n  this.unref()\n\n  util.destroy(this[kSocket], err)\n}\n\n// https://www.rfc-editor.org/rfc/rfc7230#section-3.3.2\nfunction shouldSendContentLength (method) {\n  return method !== 'GET' && method !== 'HEAD' && method !== 'OPTIONS' && method !== 'TRACE' && method !== 'CONNECT'\n}\n\nfunction writeH2 (client, request) {\n  const session = client[kHTTP2Session]\n  const { body, method, path, host, upgrade, expectContinue, signal, headers: reqHeaders } = request\n\n  if (upgrade) {\n    util.errorRequest(client, request, new Error('Upgrade not supported for H2'))\n    return false\n  }\n\n  if (request.aborted) {\n    return false\n  }\n\n  const headers = {}\n  for (let n = 0; n < reqHeaders.length; n += 2) {\n    const key = reqHeaders[n + 0]\n    const val = reqHeaders[n + 1]\n\n    if (Array.isArray(val)) {\n      for (let i = 0; i < val.length; i++) {\n        if (headers[key]) {\n          headers[key] += `,${val[i]}`\n        } else {\n          headers[key] = val[i]\n        }\n      }\n    } else {\n      headers[key] = val\n    }\n  }\n\n  /** @type {import('node:http2').ClientHttp2Stream} */\n  let stream\n\n  const { hostname, port } = client[kUrl]\n\n  headers[HTTP2_HEADER_AUTHORITY] = host || `${hostname}${port ? `:${port}` : ''}`\n  headers[HTTP2_HEADER_METHOD] = method\n\n  const abort = (err) => {\n    if (request.aborted || request.completed) {\n      return\n    }\n\n    err = err || new RequestAbortedError()\n\n    util.errorRequest(client, request, err)\n\n    if (stream != null) {\n      util.destroy(stream, err)\n    }\n\n    // We do not destroy the socket as we can continue using the session\n    // the stream get's destroyed and the session remains to create new streams\n    util.destroy(body, err)\n  }\n\n  try {\n    // We are already connected, streams are pending.\n    // We can call on connect, and wait for abort\n    request.onConnect(abort)\n  } catch (err) {\n    util.errorRequest(client, request, err)\n  }\n\n  if (method === 'CONNECT') {\n    session.ref()\n    // We are already connected, streams are pending, first request\n    // will create a new stream. We trigger a request to create the stream and wait until\n    // `ready` event is triggered\n    // We disabled endStream to allow the user to write to the stream\n    stream = session.request(headers, { endStream: false, signal })\n\n    if (stream.id && !stream.pending) {\n      request.onUpgrade(null, null, stream)\n      ++session[kOpenStreams]\n    } else {\n      stream.once('ready', () => {\n        request.onUpgrade(null, null, stream)\n        ++session[kOpenStreams]\n      })\n    }\n\n    stream.once('close', () => {\n      session[kOpenStreams] -= 1\n      if (session[kOpenStreams] === 0) session.unref()\n    })\n\n    return true\n  }\n\n  // https://tools.ietf.org/html/rfc7540#section-8.3\n  // :path and :scheme headers must be omitted when sending CONNECT\n\n  headers[HTTP2_HEADER_PATH] = path\n  headers[HTTP2_HEADER_SCHEME] = 'https'\n\n  // https://tools.ietf.org/html/rfc7231#section-4.3.1\n  // https://tools.ietf.org/html/rfc7231#section-4.3.2\n  // https://tools.ietf.org/html/rfc7231#section-4.3.5\n\n  // Sending a payload body on a request that does not\n  // expect it can cause undefined behavior on some\n  // servers and corrupt connection state. Do not\n  // re-use the connection for further requests.\n\n  const expectsPayload = (\n    method === 'PUT' ||\n    method === 'POST' ||\n    method === 'PATCH'\n  )\n\n  if (body && typeof body.read === 'function') {\n    // Try to read EOF in order to get length.\n    body.read(0)\n  }\n\n  let contentLength = util.bodyLength(body)\n\n  if (contentLength == null) {\n    contentLength = request.contentLength\n  }\n\n  if (contentLength === 0 || !expectsPayload) {\n    // https://tools.ietf.org/html/rfc7230#section-3.3.2\n    // A user agent SHOULD NOT send a Content-Length header field when\n    // the request message does not contain a payload body and the method\n    // semantics do not anticipate such a body.\n\n    contentLength = null\n  }\n\n  // https://github.com/nodejs/undici/issues/2046\n  // A user agent may send a Content-Length header with 0 value, this should be allowed.\n  if (shouldSendContentLength(method) && contentLength > 0 && request.contentLength != null && request.contentLength !== contentLength) {\n    if (client[kStrictContentLength]) {\n      util.errorRequest(client, request, new RequestContentLengthMismatchError())\n      return false\n    }\n\n    process.emitWarning(new RequestContentLengthMismatchError())\n  }\n\n  if (contentLength != null) {\n    assert(body, 'no body must not have content length')\n    headers[HTTP2_HEADER_CONTENT_LENGTH] = `${contentLength}`\n  }\n\n  session.ref()\n\n  const shouldEndStream = method === 'GET' || method === 'HEAD' || body === null\n  if (expectContinue) {\n    headers[HTTP2_HEADER_EXPECT] = '100-continue'\n    stream = session.request(headers, { endStream: shouldEndStream, signal })\n\n    stream.once('continue', writeBodyH2)\n  } else {\n    stream = session.request(headers, {\n      endStream: shouldEndStream,\n      signal\n    })\n    writeBodyH2()\n  }\n\n  // Increment counter as we have new streams open\n  ++session[kOpenStreams]\n\n  stream.once('response', headers => {\n    const { [HTTP2_HEADER_STATUS]: statusCode, ...realHeaders } = headers\n    request.onResponseStarted()\n\n    // Due to the stream nature, it is possible we face a race condition\n    // where the stream has been assigned, but the request has been aborted\n    // the request remains in-flight and headers hasn't been received yet\n    // for those scenarios, best effort is to destroy the stream immediately\n    // as there's no value to keep it open.\n    if (request.aborted) {\n      const err = new RequestAbortedError()\n      util.errorRequest(client, request, err)\n      util.destroy(stream, err)\n      return\n    }\n\n    if (request.onHeaders(Number(statusCode), parseH2Headers(realHeaders), stream.resume.bind(stream), '') === false) {\n      stream.pause()\n    }\n\n    stream.on('data', (chunk) => {\n      if (request.onData(chunk) === false) {\n        stream.pause()\n      }\n    })\n  })\n\n  stream.once('end', () => {\n    // When state is null, it means we haven't consumed body and the stream still do not have\n    // a state.\n    // Present specially when using pipeline or stream\n    if (stream.state?.state == null || stream.state.state < 6) {\n      request.onComplete([])\n      return\n    }\n\n    // Stream is closed or half-closed-remote (6), decrement counter and cleanup\n    // It does not have sense to continue working with the stream as we do not\n    // have yet RST_STREAM support on client-side\n    if (session[kOpenStreams] === 0) {\n      session.unref()\n    }\n\n    abort(new InformationalError('HTTP/2: stream half-closed (remote)'))\n  })\n\n  stream.once('close', () => {\n    session[kOpenStreams] -= 1\n    if (session[kOpenStreams] === 0) {\n      session.unref()\n    }\n  })\n\n  stream.once('error', function (err) {\n    abort(err)\n  })\n\n  stream.once('frameError', (type, code) => {\n    abort(new InformationalError(`HTTP/2: \"frameError\" received - type ${type}, code ${code}`))\n  })\n\n  // stream.on('aborted', () => {\n  //   // TODO(HTTP/2): Support aborted\n  // })\n\n  // stream.on('timeout', () => {\n  //   // TODO(HTTP/2): Support timeout\n  // })\n\n  // stream.on('push', headers => {\n  //   // TODO(HTTP/2): Support push\n  // })\n\n  // stream.on('trailers', headers => {\n  //   // TODO(HTTP/2): Support trailers\n  // })\n\n  return true\n\n  function writeBodyH2 () {\n    /* istanbul ignore else: assertion */\n    if (!body || contentLength === 0) {\n      writeBuffer(\n        abort,\n        stream,\n        null,\n        client,\n        request,\n        client[kSocket],\n        contentLength,\n        expectsPayload\n      )\n    } else if (util.isBuffer(body)) {\n      writeBuffer(\n        abort,\n        stream,\n        body,\n        client,\n        request,\n        client[kSocket],\n        contentLength,\n        expectsPayload\n      )\n    } else if (util.isBlobLike(body)) {\n      if (typeof body.stream === 'function') {\n        writeIterable(\n          abort,\n          stream,\n          body.stream(),\n          client,\n          request,\n          client[kSocket],\n          contentLength,\n          expectsPayload\n        )\n      } else {\n        writeBlob(\n          abort,\n          stream,\n          body,\n          client,\n          request,\n          client[kSocket],\n          contentLength,\n          expectsPayload\n        )\n      }\n    } else if (util.isStream(body)) {\n      writeStream(\n        abort,\n        client[kSocket],\n        expectsPayload,\n        stream,\n        body,\n        client,\n        request,\n        contentLength\n      )\n    } else if (util.isIterable(body)) {\n      writeIterable(\n        abort,\n        stream,\n        body,\n        client,\n        request,\n        client[kSocket],\n        contentLength,\n        expectsPayload\n      )\n    } else {\n      assert(false)\n    }\n  }\n}\n\nfunction writeBuffer (abort, h2stream, body, client, request, socket, contentLength, expectsPayload) {\n  try {\n    if (body != null && util.isBuffer(body)) {\n      assert(contentLength === body.byteLength, 'buffer body must have content length')\n      h2stream.cork()\n      h2stream.write(body)\n      h2stream.uncork()\n      h2stream.end()\n\n      request.onBodySent(body)\n    }\n\n    if (!expectsPayload) {\n      socket[kReset] = true\n    }\n\n    request.onRequestSent()\n    client[kResume]()\n  } catch (error) {\n    abort(error)\n  }\n}\n\nfunction writeStream (abort, socket, expectsPayload, h2stream, body, client, request, contentLength) {\n  assert(contentLength !== 0 || client[kRunning] === 0, 'stream body cannot be pipelined')\n\n  // For HTTP/2, is enough to pipe the stream\n  const pipe = pipeline(\n    body,\n    h2stream,\n    (err) => {\n      if (err) {\n        util.destroy(pipe, err)\n        abort(err)\n      } else {\n        util.removeAllListeners(pipe)\n        request.onRequestSent()\n\n        if (!expectsPayload) {\n          socket[kReset] = true\n        }\n\n        client[kResume]()\n      }\n    }\n  )\n\n  util.addListener(pipe, 'data', onPipeData)\n\n  function onPipeData (chunk) {\n    request.onBodySent(chunk)\n  }\n}\n\nasync function writeBlob (abort, h2stream, body, client, request, socket, contentLength, expectsPayload) {\n  assert(contentLength === body.size, 'blob body must have content length')\n\n  try {\n    if (contentLength != null && contentLength !== body.size) {\n      throw new RequestContentLengthMismatchError()\n    }\n\n    const buffer = Buffer.from(await body.arrayBuffer())\n\n    h2stream.cork()\n    h2stream.write(buffer)\n    h2stream.uncork()\n    h2stream.end()\n\n    request.onBodySent(buffer)\n    request.onRequestSent()\n\n    if (!expectsPayload) {\n      socket[kReset] = true\n    }\n\n    client[kResume]()\n  } catch (err) {\n    abort(err)\n  }\n}\n\nasync function writeIterable (abort, h2stream, body, client, request, socket, contentLength, expectsPayload) {\n  assert(contentLength !== 0 || client[kRunning] === 0, 'iterator body cannot be pipelined')\n\n  let callback = null\n  function onDrain () {\n    if (callback) {\n      const cb = callback\n      callback = null\n      cb()\n    }\n  }\n\n  const waitForDrain = () => new Promise((resolve, reject) => {\n    assert(callback === null)\n\n    if (socket[kError]) {\n      reject(socket[kError])\n    } else {\n      callback = resolve\n    }\n  })\n\n  h2stream\n    .on('close', onDrain)\n    .on('drain', onDrain)\n\n  try {\n    // It's up to the user to somehow abort the async iterable.\n    for await (const chunk of body) {\n      if (socket[kError]) {\n        throw socket[kError]\n      }\n\n      const res = h2stream.write(chunk)\n      request.onBodySent(chunk)\n      if (!res) {\n        await waitForDrain()\n      }\n    }\n\n    h2stream.end()\n\n    request.onRequestSent()\n\n    if (!expectsPayload) {\n      socket[kReset] = true\n    }\n\n    client[kResume]()\n  } catch (err) {\n    abort(err)\n  } finally {\n    h2stream\n      .off('close', onDrain)\n      .off('drain', onDrain)\n  }\n}\n\nmodule.exports = connectH2\n", "'use strict'\n\nconst util = require('../core/util')\nconst { kBodyUsed } = require('../core/symbols')\nconst assert = require('node:assert')\nconst { InvalidArgumentError } = require('../core/errors')\nconst EE = require('node:events')\n\nconst redirectableStatusCodes = [300, 301, 302, 303, 307, 308]\n\nconst kBody = Symbol('body')\n\nclass BodyAsyncIterable {\n  constructor (body) {\n    this[kBody] = body\n    this[kBodyUsed] = false\n  }\n\n  async * [Symbol.asyncIterator] () {\n    assert(!this[kBodyUsed], 'disturbed')\n    this[kBodyUsed] = true\n    yield * this[kBody]\n  }\n}\n\nclass RedirectHandler {\n  constructor (dispatch, maxRedirections, opts, handler) {\n    if (maxRedirections != null && (!Number.isInteger(maxRedirections) || maxRedirections < 0)) {\n      throw new InvalidArgumentError('maxRedirections must be a positive number')\n    }\n\n    util.validateHandler(handler, opts.method, opts.upgrade)\n\n    this.dispatch = dispatch\n    this.location = null\n    this.abort = null\n    this.opts = { ...opts, maxRedirections: 0 } // opts must be a copy\n    this.maxRedirections = maxRedirections\n    this.handler = handler\n    this.history = []\n    this.redirectionLimitReached = false\n\n    if (util.isStream(this.opts.body)) {\n      // TODO (fix): Provide some way for the user to cache the file to e.g. /tmp\n      // so that it can be dispatched again?\n      // TODO (fix): Do we need 100-expect support to provide a way to do this properly?\n      if (util.bodyLength(this.opts.body) === 0) {\n        this.opts.body\n          .on('data', function () {\n            assert(false)\n          })\n      }\n\n      if (typeof this.opts.body.readableDidRead !== 'boolean') {\n        this.opts.body[kBodyUsed] = false\n        EE.prototype.on.call(this.opts.body, 'data', function () {\n          this[kBodyUsed] = true\n        })\n      }\n    } else if (this.opts.body && typeof this.opts.body.pipeTo === 'function') {\n      // TODO (fix): We can't access ReadableStream internal state\n      // to determine whether or not it has been disturbed. This is just\n      // a workaround.\n      this.opts.body = new BodyAsyncIterable(this.opts.body)\n    } else if (\n      this.opts.body &&\n      typeof this.opts.body !== 'string' &&\n      !ArrayBuffer.isView(this.opts.body) &&\n      util.isIterable(this.opts.body)\n    ) {\n      // TODO: Should we allow re-using iterable if !this.opts.idempotent\n      // or through some other flag?\n      this.opts.body = new BodyAsyncIterable(this.opts.body)\n    }\n  }\n\n  onConnect (abort) {\n    this.abort = abort\n    this.handler.onConnect(abort, { history: this.history })\n  }\n\n  onUpgrade (statusCode, headers, socket) {\n    this.handler.onUpgrade(statusCode, headers, socket)\n  }\n\n  onError (error) {\n    this.handler.onError(error)\n  }\n\n  onHeaders (statusCode, headers, resume, statusText) {\n    this.location = this.history.length >= this.maxRedirections || util.isDisturbed(this.opts.body)\n      ? null\n      : parseLocation(statusCode, headers)\n\n    if (this.opts.throwOnMaxRedirect && this.history.length >= this.maxRedirections) {\n      if (this.request) {\n        this.request.abort(new Error('max redirects'))\n      }\n\n      this.redirectionLimitReached = true\n      this.abort(new Error('max redirects'))\n      return\n    }\n\n    if (this.opts.origin) {\n      this.history.push(new URL(this.opts.path, this.opts.origin))\n    }\n\n    if (!this.location) {\n      return this.handler.onHeaders(statusCode, headers, resume, statusText)\n    }\n\n    const { origin, pathname, search } = util.parseURL(new URL(this.location, this.opts.origin && new URL(this.opts.path, this.opts.origin)))\n    const path = search ? `${pathname}${search}` : pathname\n\n    // Remove headers referring to the original URL.\n    // By default it is Host only, unless it's a 303 (see below), which removes also all Content-* headers.\n    // https://tools.ietf.org/html/rfc7231#section-6.4\n    this.opts.headers = cleanRequestHeaders(this.opts.headers, statusCode === 303, this.opts.origin !== origin)\n    this.opts.path = path\n    this.opts.origin = origin\n    this.opts.maxRedirections = 0\n    this.opts.query = null\n\n    // https://tools.ietf.org/html/rfc7231#section-6.4.4\n    // In case of HTTP 303, always replace method to be either HEAD or GET\n    if (statusCode === 303 && this.opts.method !== 'HEAD') {\n      this.opts.method = 'GET'\n      this.opts.body = null\n    }\n  }\n\n  onData (chunk) {\n    if (this.location) {\n      /*\n        https://tools.ietf.org/html/rfc7231#section-6.4\n\n        TLDR: undici always ignores 3xx response bodies.\n\n        Redirection is used to serve the requested resource from another URL, so it is assumes that\n        no body is generated (and thus can be ignored). Even though generating a body is not prohibited.\n\n        For status 301, 302, 303, 307 and 308 (the latter from RFC 7238), the specs mention that the body usually\n        (which means it's optional and not mandated) contain just an hyperlink to the value of\n        the Location response header, so the body can be ignored safely.\n\n        For status 300, which is \"Multiple Choices\", the spec mentions both generating a Location\n        response header AND a response body with the other possible location to follow.\n        Since the spec explicitly chooses not to specify a format for such body and leave it to\n        servers and browsers implementors, we ignore the body as there is no specified way to eventually parse it.\n      */\n    } else {\n      return this.handler.onData(chunk)\n    }\n  }\n\n  onComplete (trailers) {\n    if (this.location) {\n      /*\n        https://tools.ietf.org/html/rfc7231#section-6.4\n\n        TLDR: undici always ignores 3xx response trailers as they are not expected in case of redirections\n        and neither are useful if present.\n\n        See comment on onData method above for more detailed information.\n      */\n\n      this.location = null\n      this.abort = null\n\n      this.dispatch(this.opts, this)\n    } else {\n      this.handler.onComplete(trailers)\n    }\n  }\n\n  onBodySent (chunk) {\n    if (this.handler.onBodySent) {\n      this.handler.onBodySent(chunk)\n    }\n  }\n}\n\nfunction parseLocation (statusCode, headers) {\n  if (redirectableStatusCodes.indexOf(statusCode) === -1) {\n    return null\n  }\n\n  for (let i = 0; i < headers.length; i += 2) {\n    if (headers[i].length === 8 && util.headerNameToString(headers[i]) === 'location') {\n      return headers[i + 1]\n    }\n  }\n}\n\n// https://tools.ietf.org/html/rfc7231#section-6.4.4\nfunction shouldRemoveHeader (header, removeContent, unknownOrigin) {\n  if (header.length === 4) {\n    return util.headerNameToString(header) === 'host'\n  }\n  if (removeContent && util.headerNameToString(header).startsWith('content-')) {\n    return true\n  }\n  if (unknownOrigin && (header.length === 13 || header.length === 6 || header.length === 19)) {\n    const name = util.headerNameToString(header)\n    return name === 'authorization' || name === 'cookie' || name === 'proxy-authorization'\n  }\n  return false\n}\n\n// https://tools.ietf.org/html/rfc7231#section-6.4\nfunction cleanRequestHeaders (headers, removeContent, unknownOrigin) {\n  const ret = []\n  if (Array.isArray(headers)) {\n    for (let i = 0; i < headers.length; i += 2) {\n      if (!shouldRemoveHeader(headers[i], removeContent, unknownOrigin)) {\n        ret.push(headers[i], headers[i + 1])\n      }\n    }\n  } else if (headers && typeof headers === 'object') {\n    for (const key of Object.keys(headers)) {\n      if (!shouldRemoveHeader(key, removeContent, unknownOrigin)) {\n        ret.push(key, headers[key])\n      }\n    }\n  } else {\n    assert(headers == null, 'headers must be an object or an array')\n  }\n  return ret\n}\n\nmodule.exports = RedirectHandler\n", "'use strict'\n\nconst RedirectHandler = require('../handler/redirect-handler')\n\nfunction createRedirectInterceptor ({ maxRedirections: defaultMaxRedirections }) {\n  return (dispatch) => {\n    return function Intercept (opts, handler) {\n      const { maxRedirections = defaultMaxRedirections } = opts\n\n      if (!maxRedirections) {\n        return dispatch(opts, handler)\n      }\n\n      const redirectHandler = new RedirectHandler(dispatch, maxRedirections, opts, handler)\n      opts = { ...opts, maxRedirections: 0 } // Stop sub dispatcher from also redirecting.\n      return dispatch(opts, redirectHandler)\n    }\n  }\n}\n\nmodule.exports = createRedirectInterceptor\n", "// @ts-check\n\n'use strict'\n\nconst assert = require('node:assert')\nconst net = require('node:net')\nconst http = require('node:http')\nconst util = require('../core/util.js')\nconst { channels } = require('../core/diagnostics.js')\nconst Request = require('../core/request.js')\nconst DispatcherBase = require('./dispatcher-base')\nconst {\n  InvalidArgumentError,\n  InformationalError,\n  ClientDestroyedError\n} = require('../core/errors.js')\nconst buildConnector = require('../core/connect.js')\nconst {\n  kUrl,\n  kServerName,\n  kClient,\n  kBusy,\n  kConnect,\n  kResuming,\n  kRunning,\n  kPending,\n  kSize,\n  kQueue,\n  kConnected,\n  kConnecting,\n  kNeedDrain,\n  kKeepAliveDefaultTimeout,\n  kHostHeader,\n  kPendingIdx,\n  kRunningIdx,\n  kError,\n  kPipelining,\n  kKeepAliveTimeoutValue,\n  kMaxHeadersSize,\n  kKeepAliveMaxTimeout,\n  kKeepAliveTimeoutThreshold,\n  kHeadersTimeout,\n  kBodyTimeout,\n  kStrictContentLength,\n  kConnector,\n  kMaxRedirections,\n  kMaxRequests,\n  kCounter,\n  kClose,\n  kDestroy,\n  kDispatch,\n  kInterceptors,\n  kLocalAddress,\n  kMaxResponseSize,\n  kOnError,\n  kHTTPContext,\n  kMaxConcurrentStreams,\n  kResume\n} = require('../core/symbols.js')\nconst connectH1 = require('./client-h1.js')\nconst connectH2 = require('./client-h2.js')\nlet deprecatedInterceptorWarned = false\n\nconst kClosedResolve = Symbol('kClosedResolve')\n\nfunction getPipelining (client) {\n  return client[kPipelining] ?? client[kHTTPContext]?.defaultPipelining ?? 1\n}\n\n/**\n * @type {import('../../types/client.js').default}\n */\nclass Client extends DispatcherBase {\n  /**\n   *\n   * @param {string|URL} url\n   * @param {import('../../types/client.js').Client.Options} options\n   */\n  constructor (url, {\n    interceptors,\n    maxHeaderSize,\n    headersTimeout,\n    socketTimeout,\n    requestTimeout,\n    connectTimeout,\n    bodyTimeout,\n    idleTimeout,\n    keepAlive,\n    keepAliveTimeout,\n    maxKeepAliveTimeout,\n    keepAliveMaxTimeout,\n    keepAliveTimeoutThreshold,\n    socketPath,\n    pipelining,\n    tls,\n    strictContentLength,\n    maxCachedSessions,\n    maxRedirections,\n    connect,\n    maxRequestsPerClient,\n    localAddress,\n    maxResponseSize,\n    autoSelectFamily,\n    autoSelectFamilyAttemptTimeout,\n    // h2\n    maxConcurrentStreams,\n    allowH2\n  } = {}) {\n    super()\n\n    if (keepAlive !== undefined) {\n      throw new InvalidArgumentError('unsupported keepAlive, use pipelining=0 instead')\n    }\n\n    if (socketTimeout !== undefined) {\n      throw new InvalidArgumentError('unsupported socketTimeout, use headersTimeout & bodyTimeout instead')\n    }\n\n    if (requestTimeout !== undefined) {\n      throw new InvalidArgumentError('unsupported requestTimeout, use headersTimeout & bodyTimeout instead')\n    }\n\n    if (idleTimeout !== undefined) {\n      throw new InvalidArgumentError('unsupported idleTimeout, use keepAliveTimeout instead')\n    }\n\n    if (maxKeepAliveTimeout !== undefined) {\n      throw new InvalidArgumentError('unsupported maxKeepAliveTimeout, use keepAliveMaxTimeout instead')\n    }\n\n    if (maxHeaderSize != null && !Number.isFinite(maxHeaderSize)) {\n      throw new InvalidArgumentError('invalid maxHeaderSize')\n    }\n\n    if (socketPath != null && typeof socketPath !== 'string') {\n      throw new InvalidArgumentError('invalid socketPath')\n    }\n\n    if (connectTimeout != null && (!Number.isFinite(connectTimeout) || connectTimeout < 0)) {\n      throw new InvalidArgumentError('invalid connectTimeout')\n    }\n\n    if (keepAliveTimeout != null && (!Number.isFinite(keepAliveTimeout) || keepAliveTimeout <= 0)) {\n      throw new InvalidArgumentError('invalid keepAliveTimeout')\n    }\n\n    if (keepAliveMaxTimeout != null && (!Number.isFinite(keepAliveMaxTimeout) || keepAliveMaxTimeout <= 0)) {\n      throw new InvalidArgumentError('invalid keepAliveMaxTimeout')\n    }\n\n    if (keepAliveTimeoutThreshold != null && !Number.isFinite(keepAliveTimeoutThreshold)) {\n      throw new InvalidArgumentError('invalid keepAliveTimeoutThreshold')\n    }\n\n    if (headersTimeout != null && (!Number.isInteger(headersTimeout) || headersTimeout < 0)) {\n      throw new InvalidArgumentError('headersTimeout must be a positive integer or zero')\n    }\n\n    if (bodyTimeout != null && (!Number.isInteger(bodyTimeout) || bodyTimeout < 0)) {\n      throw new InvalidArgumentError('bodyTimeout must be a positive integer or zero')\n    }\n\n    if (connect != null && typeof connect !== 'function' && typeof connect !== 'object') {\n      throw new InvalidArgumentError('connect must be a function or an object')\n    }\n\n    if (maxRedirections != null && (!Number.isInteger(maxRedirections) || maxRedirections < 0)) {\n      throw new InvalidArgumentError('maxRedirections must be a positive number')\n    }\n\n    if (maxRequestsPerClient != null && (!Number.isInteger(maxRequestsPerClient) || maxRequestsPerClient < 0)) {\n      throw new InvalidArgumentError('maxRequestsPerClient must be a positive number')\n    }\n\n    if (localAddress != null && (typeof localAddress !== 'string' || net.isIP(localAddress) === 0)) {\n      throw new InvalidArgumentError('localAddress must be valid string IP address')\n    }\n\n    if (maxResponseSize != null && (!Number.isInteger(maxResponseSize) || maxResponseSize < -1)) {\n      throw new InvalidArgumentError('maxResponseSize must be a positive number')\n    }\n\n    if (\n      autoSelectFamilyAttemptTimeout != null &&\n      (!Number.isInteger(autoSelectFamilyAttemptTimeout) || autoSelectFamilyAttemptTimeout < -1)\n    ) {\n      throw new InvalidArgumentError('autoSelectFamilyAttemptTimeout must be a positive number')\n    }\n\n    // h2\n    if (allowH2 != null && typeof allowH2 !== 'boolean') {\n      throw new InvalidArgumentError('allowH2 must be a valid boolean value')\n    }\n\n    if (maxConcurrentStreams != null && (typeof maxConcurrentStreams !== 'number' || maxConcurrentStreams < 1)) {\n      throw new InvalidArgumentError('maxConcurrentStreams must be a positive integer, greater than 0')\n    }\n\n    if (typeof connect !== 'function') {\n      connect = buildConnector({\n        ...tls,\n        maxCachedSessions,\n        allowH2,\n        socketPath,\n        timeout: connectTimeout,\n        ...(autoSelectFamily ? { autoSelectFamily, autoSelectFamilyAttemptTimeout } : undefined),\n        ...connect\n      })\n    }\n\n    if (interceptors?.Client && Array.isArray(interceptors.Client)) {\n      this[kInterceptors] = interceptors.Client\n      if (!deprecatedInterceptorWarned) {\n        deprecatedInterceptorWarned = true\n        process.emitWarning('Client.Options#interceptor is deprecated. Use Dispatcher#compose instead.', {\n          code: 'UNDICI-CLIENT-INTERCEPTOR-DEPRECATED'\n        })\n      }\n    } else {\n      this[kInterceptors] = [createRedirectInterceptor({ maxRedirections })]\n    }\n\n    this[kUrl] = util.parseOrigin(url)\n    this[kConnector] = connect\n    this[kPipelining] = pipelining != null ? pipelining : 1\n    this[kMaxHeadersSize] = maxHeaderSize || http.maxHeaderSize\n    this[kKeepAliveDefaultTimeout] = keepAliveTimeout == null ? 4e3 : keepAliveTimeout\n    this[kKeepAliveMaxTimeout] = keepAliveMaxTimeout == null ? 600e3 : keepAliveMaxTimeout\n    this[kKeepAliveTimeoutThreshold] = keepAliveTimeoutThreshold == null ? 2e3 : keepAliveTimeoutThreshold\n    this[kKeepAliveTimeoutValue] = this[kKeepAliveDefaultTimeout]\n    this[kServerName] = null\n    this[kLocalAddress] = localAddress != null ? localAddress : null\n    this[kResuming] = 0 // 0, idle, 1, scheduled, 2 resuming\n    this[kNeedDrain] = 0 // 0, idle, 1, scheduled, 2 resuming\n    this[kHostHeader] = `host: ${this[kUrl].hostname}${this[kUrl].port ? `:${this[kUrl].port}` : ''}\\r\\n`\n    this[kBodyTimeout] = bodyTimeout != null ? bodyTimeout : 300e3\n    this[kHeadersTimeout] = headersTimeout != null ? headersTimeout : 300e3\n    this[kStrictContentLength] = strictContentLength == null ? true : strictContentLength\n    this[kMaxRedirections] = maxRedirections\n    this[kMaxRequests] = maxRequestsPerClient\n    this[kClosedResolve] = null\n    this[kMaxResponseSize] = maxResponseSize > -1 ? maxResponseSize : -1\n    this[kMaxConcurrentStreams] = maxConcurrentStreams != null ? maxConcurrentStreams : 100 // Max peerConcurrentStreams for a Node h2 server\n    this[kHTTPContext] = null\n\n    // kQueue is built up of 3 sections separated by\n    // the kRunningIdx and kPendingIdx indices.\n    // |   complete   |   running   |   pending   |\n    //                ^ kRunningIdx ^ kPendingIdx ^ kQueue.length\n    // kRunningIdx points to the first running element.\n    // kPendingIdx points to the first pending element.\n    // This implements a fast queue with an amortized\n    // time of O(1).\n\n    this[kQueue] = []\n    this[kRunningIdx] = 0\n    this[kPendingIdx] = 0\n\n    this[kResume] = (sync) => resume(this, sync)\n    this[kOnError] = (err) => onError(this, err)\n  }\n\n  get pipelining () {\n    return this[kPipelining]\n  }\n\n  set pipelining (value) {\n    this[kPipelining] = value\n    this[kResume](true)\n  }\n\n  get [kPending] () {\n    return this[kQueue].length - this[kPendingIdx]\n  }\n\n  get [kRunning] () {\n    return this[kPendingIdx] - this[kRunningIdx]\n  }\n\n  get [kSize] () {\n    return this[kQueue].length - this[kRunningIdx]\n  }\n\n  get [kConnected] () {\n    return !!this[kHTTPContext] && !this[kConnecting] && !this[kHTTPContext].destroyed\n  }\n\n  get [kBusy] () {\n    return Boolean(\n      this[kHTTPContext]?.busy(null) ||\n      (this[kSize] >= (getPipelining(this) || 1)) ||\n      this[kPending] > 0\n    )\n  }\n\n  /* istanbul ignore: only used for test */\n  [kConnect] (cb) {\n    connect(this)\n    this.once('connect', cb)\n  }\n\n  [kDispatch] (opts, handler) {\n    const origin = opts.origin || this[kUrl].origin\n    const request = new Request(origin, opts, handler)\n\n    this[kQueue].push(request)\n    if (this[kResuming]) {\n      // Do nothing.\n    } else if (util.bodyLength(request.body) == null && util.isIterable(request.body)) {\n      // Wait a tick in case stream/iterator is ended in the same tick.\n      this[kResuming] = 1\n      queueMicrotask(() => resume(this))\n    } else {\n      this[kResume](true)\n    }\n\n    if (this[kResuming] && this[kNeedDrain] !== 2 && this[kBusy]) {\n      this[kNeedDrain] = 2\n    }\n\n    return this[kNeedDrain] < 2\n  }\n\n  async [kClose] () {\n    // TODO: for H2 we need to gracefully flush the remaining enqueued\n    // request and close each stream.\n    return new Promise((resolve) => {\n      if (this[kSize]) {\n        this[kClosedResolve] = resolve\n      } else {\n        resolve(null)\n      }\n    })\n  }\n\n  async [kDestroy] (err) {\n    return new Promise((resolve) => {\n      const requests = this[kQueue].splice(this[kPendingIdx])\n      for (let i = 0; i < requests.length; i++) {\n        const request = requests[i]\n        util.errorRequest(this, request, err)\n      }\n\n      const callback = () => {\n        if (this[kClosedResolve]) {\n          // TODO (fix): Should we error here with ClientDestroyedError?\n          this[kClosedResolve]()\n          this[kClosedResolve] = null\n        }\n        resolve(null)\n      }\n\n      if (this[kHTTPContext]) {\n        this[kHTTPContext].destroy(err, callback)\n        this[kHTTPContext] = null\n      } else {\n        queueMicrotask(callback)\n      }\n\n      this[kResume]()\n    })\n  }\n}\n\nconst createRedirectInterceptor = require('../interceptor/redirect-interceptor.js')\n\nfunction onError (client, err) {\n  if (\n    client[kRunning] === 0 &&\n    err.code !== 'UND_ERR_INFO' &&\n    err.code !== 'UND_ERR_SOCKET'\n  ) {\n    // Error is not caused by running request and not a recoverable\n    // socket error.\n\n    assert(client[kPendingIdx] === client[kRunningIdx])\n\n    const requests = client[kQueue].splice(client[kRunningIdx])\n\n    for (let i = 0; i < requests.length; i++) {\n      const request = requests[i]\n      util.errorRequest(client, request, err)\n    }\n    assert(client[kSize] === 0)\n  }\n}\n\nasync function connect (client) {\n  assert(!client[kConnecting])\n  assert(!client[kHTTPContext])\n\n  let { host, hostname, protocol, port } = client[kUrl]\n\n  // Resolve ipv6\n  if (hostname[0] === '[') {\n    const idx = hostname.indexOf(']')\n\n    assert(idx !== -1)\n    const ip = hostname.substring(1, idx)\n\n    assert(net.isIP(ip))\n    hostname = ip\n  }\n\n  client[kConnecting] = true\n\n  if (channels.beforeConnect.hasSubscribers) {\n    channels.beforeConnect.publish({\n      connectParams: {\n        host,\n        hostname,\n        protocol,\n        port,\n        version: client[kHTTPContext]?.version,\n        servername: client[kServerName],\n        localAddress: client[kLocalAddress]\n      },\n      connector: client[kConnector]\n    })\n  }\n\n  try {\n    const socket = await new Promise((resolve, reject) => {\n      client[kConnector]({\n        host,\n        hostname,\n        protocol,\n        port,\n        servername: client[kServerName],\n        localAddress: client[kLocalAddress]\n      }, (err, socket) => {\n        if (err) {\n          reject(err)\n        } else {\n          resolve(socket)\n        }\n      })\n    })\n\n    if (client.destroyed) {\n      util.destroy(socket.on('error', () => {}), new ClientDestroyedError())\n      return\n    }\n\n    assert(socket)\n\n    try {\n      client[kHTTPContext] = socket.alpnProtocol === 'h2'\n        ? await connectH2(client, socket)\n        : await connectH1(client, socket)\n    } catch (err) {\n      socket.destroy().on('error', () => {})\n      throw err\n    }\n\n    client[kConnecting] = false\n\n    socket[kCounter] = 0\n    socket[kMaxRequests] = client[kMaxRequests]\n    socket[kClient] = client\n    socket[kError] = null\n\n    if (channels.connected.hasSubscribers) {\n      channels.connected.publish({\n        connectParams: {\n          host,\n          hostname,\n          protocol,\n          port,\n          version: client[kHTTPContext]?.version,\n          servername: client[kServerName],\n          localAddress: client[kLocalAddress]\n        },\n        connector: client[kConnector],\n        socket\n      })\n    }\n    client.emit('connect', client[kUrl], [client])\n  } catch (err) {\n    if (client.destroyed) {\n      return\n    }\n\n    client[kConnecting] = false\n\n    if (channels.connectError.hasSubscribers) {\n      channels.connectError.publish({\n        connectParams: {\n          host,\n          hostname,\n          protocol,\n          port,\n          version: client[kHTTPContext]?.version,\n          servername: client[kServerName],\n          localAddress: client[kLocalAddress]\n        },\n        connector: client[kConnector],\n        error: err\n      })\n    }\n\n    if (err.code === 'ERR_TLS_CERT_ALTNAME_INVALID') {\n      assert(client[kRunning] === 0)\n      while (client[kPending] > 0 && client[kQueue][client[kPendingIdx]].servername === client[kServerName]) {\n        const request = client[kQueue][client[kPendingIdx]++]\n        util.errorRequest(client, request, err)\n      }\n    } else {\n      onError(client, err)\n    }\n\n    client.emit('connectionError', client[kUrl], [client], err)\n  }\n\n  client[kResume]()\n}\n\nfunction emitDrain (client) {\n  client[kNeedDrain] = 0\n  client.emit('drain', client[kUrl], [client])\n}\n\nfunction resume (client, sync) {\n  if (client[kResuming] === 2) {\n    return\n  }\n\n  client[kResuming] = 2\n\n  _resume(client, sync)\n  client[kResuming] = 0\n\n  if (client[kRunningIdx] > 256) {\n    client[kQueue].splice(0, client[kRunningIdx])\n    client[kPendingIdx] -= client[kRunningIdx]\n    client[kRunningIdx] = 0\n  }\n}\n\nfunction _resume (client, sync) {\n  while (true) {\n    if (client.destroyed) {\n      assert(client[kPending] === 0)\n      return\n    }\n\n    if (client[kClosedResolve] && !client[kSize]) {\n      client[kClosedResolve]()\n      client[kClosedResolve] = null\n      return\n    }\n\n    if (client[kHTTPContext]) {\n      client[kHTTPContext].resume()\n    }\n\n    if (client[kBusy]) {\n      client[kNeedDrain] = 2\n    } else if (client[kNeedDrain] === 2) {\n      if (sync) {\n        client[kNeedDrain] = 1\n        queueMicrotask(() => emitDrain(client))\n      } else {\n        emitDrain(client)\n      }\n      continue\n    }\n\n    if (client[kPending] === 0) {\n      return\n    }\n\n    if (client[kRunning] >= (getPipelining(client) || 1)) {\n      return\n    }\n\n    const request = client[kQueue][client[kPendingIdx]]\n\n    if (client[kUrl].protocol === 'https:' && client[kServerName] !== request.servername) {\n      if (client[kRunning] > 0) {\n        return\n      }\n\n      client[kServerName] = request.servername\n      client[kHTTPContext]?.destroy(new InformationalError('servername changed'), () => {\n        client[kHTTPContext] = null\n        resume(client)\n      })\n    }\n\n    if (client[kConnecting]) {\n      return\n    }\n\n    if (!client[kHTTPContext]) {\n      connect(client)\n      return\n    }\n\n    if (client[kHTTPContext].destroyed) {\n      return\n    }\n\n    if (client[kHTTPContext].busy(request)) {\n      return\n    }\n\n    if (!request.aborted && client[kHTTPContext].write(request)) {\n      client[kPendingIdx]++\n    } else {\n      client[kQueue].splice(client[kPendingIdx], 1)\n    }\n  }\n}\n\nmodule.exports = Client\n", "/* eslint-disable */\n\n'use strict'\n\n// Extracted from node/lib/internal/fixed_queue.js\n\n// Currently optimal queue size, tested on V8 6.0 - 6.6. Must be power of two.\nconst kSize = 2048;\nconst kMask = kSize - 1;\n\n// The FixedQueue is implemented as a singly-linked list of fixed-size\n// circular buffers. It looks something like this:\n//\n//  head                                                       tail\n//    |                                                          |\n//    v                                                          v\n// +-----------+ <-----\\       +-----------+ <------\\         +-----------+\n// |  [null]   |        \\----- |   next    |         \\------- |   next    |\n// +-----------+               +-----------+                  +-----------+\n// |   item    | <-- bottom    |   item    | <-- bottom       |  [empty]  |\n// |   item    |               |   item    |                  |  [empty]  |\n// |   item    |               |   item    |                  |  [empty]  |\n// |   item    |               |   item    |                  |  [empty]  |\n// |   item    |               |   item    |       bottom --> |   item    |\n// |   item    |               |   item    |                  |   item    |\n// |    ...    |               |    ...    |                  |    ...    |\n// |   item    |               |   item    |                  |   item    |\n// |   item    |               |   item    |                  |   item    |\n// |  [empty]  | <-- top       |   item    |                  |   item    |\n// |  [empty]  |               |   item    |                  |   item    |\n// |  [empty]  |               |  [empty]  | <-- top  top --> |  [empty]  |\n// +-----------+               +-----------+                  +-----------+\n//\n// Or, if there is only one circular buffer, it looks something\n// like either of these:\n//\n//  head   tail                                 head   tail\n//    |     |                                     |     |\n//    v     v                                     v     v\n// +-----------+                               +-----------+\n// |  [null]   |                               |  [null]   |\n// +-----------+                               +-----------+\n// |  [empty]  |                               |   item    |\n// |  [empty]  |                               |   item    |\n// |   item    | <-- bottom            top --> |  [empty]  |\n// |   item    |                               |  [empty]  |\n// |  [empty]  | <-- top            bottom --> |   item    |\n// |  [empty]  |                               |   item    |\n// +-----------+                               +-----------+\n//\n// Adding a value means moving `top` forward by one, removing means\n// moving `bottom` forward by one. After reaching the end, the queue\n// wraps around.\n//\n// When `top === bottom` the current queue is empty and when\n// `top + 1 === bottom` it's full. This wastes a single space of storage\n// but allows much quicker checks.\n\nclass FixedCircularBuffer {\n  constructor() {\n    this.bottom = 0;\n    this.top = 0;\n    this.list = new Array(kSize);\n    this.next = null;\n  }\n\n  isEmpty() {\n    return this.top === this.bottom;\n  }\n\n  isFull() {\n    return ((this.top + 1) & kMask) === this.bottom;\n  }\n\n  push(data) {\n    this.list[this.top] = data;\n    this.top = (this.top + 1) & kMask;\n  }\n\n  shift() {\n    const nextItem = this.list[this.bottom];\n    if (nextItem === undefined)\n      return null;\n    this.list[this.bottom] = undefined;\n    this.bottom = (this.bottom + 1) & kMask;\n    return nextItem;\n  }\n}\n\nmodule.exports = class FixedQueue {\n  constructor() {\n    this.head = this.tail = new FixedCircularBuffer();\n  }\n\n  isEmpty() {\n    return this.head.isEmpty();\n  }\n\n  push(data) {\n    if (this.head.isFull()) {\n      // Head is full: Creates a new queue, sets the old queue's `.next` to it,\n      // and sets it as the new main queue.\n      this.head = this.head.next = new FixedCircularBuffer();\n    }\n    this.head.push(data);\n  }\n\n  shift() {\n    const tail = this.tail;\n    const next = tail.shift();\n    if (tail.isEmpty() && tail.next !== null) {\n      // If there is another queue, it forms the new tail.\n      this.tail = tail.next;\n    }\n    return next;\n  }\n};\n", "const { kFree, kConnected, kPending, kQueued, kRunning, kSize } = require('../core/symbols')\nconst kPool = Symbol('pool')\n\nclass PoolStats {\n  constructor (pool) {\n    this[kPool] = pool\n  }\n\n  get connected () {\n    return this[kPool][kConnected]\n  }\n\n  get free () {\n    return this[kPool][kFree]\n  }\n\n  get pending () {\n    return this[kPool][kPending]\n  }\n\n  get queued () {\n    return this[kPool][kQueued]\n  }\n\n  get running () {\n    return this[kPool][kRunning]\n  }\n\n  get size () {\n    return this[kPool][kSize]\n  }\n}\n\nmodule.exports = PoolStats\n", "'use strict'\n\nconst DispatcherBase = require('./dispatcher-base')\nconst FixedQueue = require('./fixed-queue')\nconst { kConnected, kSize, kRunning, kPending, kQueued, kBusy, kFree, kUrl, kClose, kDestroy, kDispatch } = require('../core/symbols')\nconst PoolStats = require('./pool-stats')\n\nconst kClients = Symbol('clients')\nconst kNeedDrain = Symbol('needDrain')\nconst kQueue = Symbol('queue')\nconst kClosedResolve = Symbol('closed resolve')\nconst kOnDrain = Symbol('onDrain')\nconst kOnConnect = Symbol('onConnect')\nconst kOnDisconnect = Symbol('onDisconnect')\nconst kOnConnectionError = Symbol('onConnectionError')\nconst kGetDispatcher = Symbol('get dispatcher')\nconst kAddClient = Symbol('add client')\nconst kRemoveClient = Symbol('remove client')\nconst kStats = Symbol('stats')\n\nclass PoolBase extends DispatcherBase {\n  constructor () {\n    super()\n\n    this[kQueue] = new FixedQueue()\n    this[kClients] = []\n    this[kQueued] = 0\n\n    const pool = this\n\n    this[kOnDrain] = function onDrain (origin, targets) {\n      const queue = pool[kQueue]\n\n      let needDrain = false\n\n      while (!needDrain) {\n        const item = queue.shift()\n        if (!item) {\n          break\n        }\n        pool[kQueued]--\n        needDrain = !this.dispatch(item.opts, item.handler)\n      }\n\n      this[kNeedDrain] = needDrain\n\n      if (!this[kNeedDrain] && pool[kNeedDrain]) {\n        pool[kNeedDrain] = false\n        pool.emit('drain', origin, [pool, ...targets])\n      }\n\n      if (pool[kClosedResolve] && queue.isEmpty()) {\n        Promise\n          .all(pool[kClients].map(c => c.close()))\n          .then(pool[kClosedResolve])\n      }\n    }\n\n    this[kOnConnect] = (origin, targets) => {\n      pool.emit('connect', origin, [pool, ...targets])\n    }\n\n    this[kOnDisconnect] = (origin, targets, err) => {\n      pool.emit('disconnect', origin, [pool, ...targets], err)\n    }\n\n    this[kOnConnectionError] = (origin, targets, err) => {\n      pool.emit('connectionError', origin, [pool, ...targets], err)\n    }\n\n    this[kStats] = new PoolStats(this)\n  }\n\n  get [kBusy] () {\n    return this[kNeedDrain]\n  }\n\n  get [kConnected] () {\n    return this[kClients].filter(client => client[kConnected]).length\n  }\n\n  get [kFree] () {\n    return this[kClients].filter(client => client[kConnected] && !client[kNeedDrain]).length\n  }\n\n  get [kPending] () {\n    let ret = this[kQueued]\n    for (const { [kPending]: pending } of this[kClients]) {\n      ret += pending\n    }\n    return ret\n  }\n\n  get [kRunning] () {\n    let ret = 0\n    for (const { [kRunning]: running } of this[kClients]) {\n      ret += running\n    }\n    return ret\n  }\n\n  get [kSize] () {\n    let ret = this[kQueued]\n    for (const { [kSize]: size } of this[kClients]) {\n      ret += size\n    }\n    return ret\n  }\n\n  get stats () {\n    return this[kStats]\n  }\n\n  async [kClose] () {\n    if (this[kQueue].isEmpty()) {\n      return Promise.all(this[kClients].map(c => c.close()))\n    } else {\n      return new Promise((resolve) => {\n        this[kClosedResolve] = resolve\n      })\n    }\n  }\n\n  async [kDestroy] (err) {\n    while (true) {\n      const item = this[kQueue].shift()\n      if (!item) {\n        break\n      }\n      item.handler.onError(err)\n    }\n\n    return Promise.all(this[kClients].map(c => c.destroy(err)))\n  }\n\n  [kDispatch] (opts, handler) {\n    const dispatcher = this[kGetDispatcher]()\n\n    if (!dispatcher) {\n      this[kNeedDrain] = true\n      this[kQueue].push({ opts, handler })\n      this[kQueued]++\n    } else if (!dispatcher.dispatch(opts, handler)) {\n      dispatcher[kNeedDrain] = true\n      this[kNeedDrain] = !this[kGetDispatcher]()\n    }\n\n    return !this[kNeedDrain]\n  }\n\n  [kAddClient] (client) {\n    client\n      .on('drain', this[kOnDrain])\n      .on('connect', this[kOnConnect])\n      .on('disconnect', this[kOnDisconnect])\n      .on('connectionError', this[kOnConnectionError])\n\n    this[kClients].push(client)\n\n    if (this[kNeedDrain]) {\n      queueMicrotask(() => {\n        if (this[kNeedDrain]) {\n          this[kOnDrain](client[kUrl], [this, client])\n        }\n      })\n    }\n\n    return this\n  }\n\n  [kRemoveClient] (client) {\n    client.close(() => {\n      const idx = this[kClients].indexOf(client)\n      if (idx !== -1) {\n        this[kClients].splice(idx, 1)\n      }\n    })\n\n    this[kNeedDrain] = this[kClients].some(dispatcher => (\n      !dispatcher[kNeedDrain] &&\n      dispatcher.closed !== true &&\n      dispatcher.destroyed !== true\n    ))\n  }\n}\n\nmodule.exports = {\n  PoolBase,\n  kClients,\n  kNeedDrain,\n  kAddClient,\n  kRemoveClient,\n  kGetDispatcher\n}\n", "'use strict'\n\nconst {\n  PoolBase,\n  kClients,\n  kNeedDrain,\n  kAddClient,\n  kGetDispatcher\n} = require('./pool-base')\nconst Client = require('./client')\nconst {\n  InvalidArgumentError\n} = require('../core/errors')\nconst util = require('../core/util')\nconst { kUrl, kInterceptors } = require('../core/symbols')\nconst buildConnector = require('../core/connect')\n\nconst kOptions = Symbol('options')\nconst kConnections = Symbol('connections')\nconst kFactory = Symbol('factory')\n\nfunction defaultFactory (origin, opts) {\n  return new Client(origin, opts)\n}\n\nclass Pool extends PoolBase {\n  constructor (origin, {\n    connections,\n    factory = defaultFactory,\n    connect,\n    connectTimeout,\n    tls,\n    maxCachedSessions,\n    socketPath,\n    autoSelectFamily,\n    autoSelectFamilyAttemptTimeout,\n    allowH2,\n    ...options\n  } = {}) {\n    super()\n\n    if (connections != null && (!Number.isFinite(connections) || connections < 0)) {\n      throw new InvalidArgumentError('invalid connections')\n    }\n\n    if (typeof factory !== 'function') {\n      throw new InvalidArgumentError('factory must be a function.')\n    }\n\n    if (connect != null && typeof connect !== 'function' && typeof connect !== 'object') {\n      throw new InvalidArgumentError('connect must be a function or an object')\n    }\n\n    if (typeof connect !== 'function') {\n      connect = buildConnector({\n        ...tls,\n        maxCachedSessions,\n        allowH2,\n        socketPath,\n        timeout: connectTimeout,\n        ...(autoSelectFamily ? { autoSelectFamily, autoSelectFamilyAttemptTimeout } : undefined),\n        ...connect\n      })\n    }\n\n    this[kInterceptors] = options.interceptors?.Pool && Array.isArray(options.interceptors.Pool)\n      ? options.interceptors.Pool\n      : []\n    this[kConnections] = connections || null\n    this[kUrl] = util.parseOrigin(origin)\n    this[kOptions] = { ...util.deepClone(options), connect, allowH2 }\n    this[kOptions].interceptors = options.interceptors\n      ? { ...options.interceptors }\n      : undefined\n    this[kFactory] = factory\n  }\n\n  [kGetDispatcher] () {\n    for (const client of this[kClients]) {\n      if (!client[kNeedDrain]) {\n        return client\n      }\n    }\n\n    if (!this[kConnections] || this[kClients].length < this[kConnections]) {\n      const dispatcher = this[kFactory](this[kUrl], this[kOptions])\n      this[kAddClient](dispatcher)\n      return dispatcher\n    }\n  }\n}\n\nmodule.exports = Pool\n", "'use strict'\n\nconst {\n  BalancedPoolMissingUpstreamError,\n  InvalidArgumentError\n} = require('../core/errors')\nconst {\n  PoolBase,\n  kClients,\n  kNeedDrain,\n  kAddClient,\n  kRemoveClient,\n  kGetDispatcher\n} = require('./pool-base')\nconst Pool = require('./pool')\nconst { kUrl, kInterceptors } = require('../core/symbols')\nconst { parseOrigin } = require('../core/util')\nconst kFactory = Symbol('factory')\n\nconst kOptions = Symbol('options')\nconst kGreatestCommonDivisor = Symbol('kGreatestCommonDivisor')\nconst kCurrentWeight = Symbol('kCurrentWeight')\nconst kIndex = Symbol('kIndex')\nconst kWeight = Symbol('kWeight')\nconst kMaxWeightPerServer = Symbol('kMaxWeightPerServer')\nconst kErrorPenalty = Symbol('kErrorPenalty')\n\n/**\n * Calculate the greatest common divisor of two numbers by\n * using the Euclidean algorithm.\n *\n * @param {number} a\n * @param {number} b\n * @returns {number}\n */\nfunction getGreatestCommonDivisor (a, b) {\n  if (a === 0) return b\n\n  while (b !== 0) {\n    const t = b\n    b = a % b\n    a = t\n  }\n  return a\n}\n\nfunction defaultFactory (origin, opts) {\n  return new Pool(origin, opts)\n}\n\nclass BalancedPool extends PoolBase {\n  constructor (upstreams = [], { factory = defaultFactory, ...opts } = {}) {\n    super()\n\n    this[kOptions] = opts\n    this[kIndex] = -1\n    this[kCurrentWeight] = 0\n\n    this[kMaxWeightPerServer] = this[kOptions].maxWeightPerServer || 100\n    this[kErrorPenalty] = this[kOptions].errorPenalty || 15\n\n    if (!Array.isArray(upstreams)) {\n      upstreams = [upstreams]\n    }\n\n    if (typeof factory !== 'function') {\n      throw new InvalidArgumentError('factory must be a function.')\n    }\n\n    this[kInterceptors] = opts.interceptors?.BalancedPool && Array.isArray(opts.interceptors.BalancedPool)\n      ? opts.interceptors.BalancedPool\n      : []\n    this[kFactory] = factory\n\n    for (const upstream of upstreams) {\n      this.addUpstream(upstream)\n    }\n    this._updateBalancedPoolStats()\n  }\n\n  addUpstream (upstream) {\n    const upstreamOrigin = parseOrigin(upstream).origin\n\n    if (this[kClients].find((pool) => (\n      pool[kUrl].origin === upstreamOrigin &&\n      pool.closed !== true &&\n      pool.destroyed !== true\n    ))) {\n      return this\n    }\n    const pool = this[kFactory](upstreamOrigin, Object.assign({}, this[kOptions]))\n\n    this[kAddClient](pool)\n    pool.on('connect', () => {\n      pool[kWeight] = Math.min(this[kMaxWeightPerServer], pool[kWeight] + this[kErrorPenalty])\n    })\n\n    pool.on('connectionError', () => {\n      pool[kWeight] = Math.max(1, pool[kWeight] - this[kErrorPenalty])\n      this._updateBalancedPoolStats()\n    })\n\n    pool.on('disconnect', (...args) => {\n      const err = args[2]\n      if (err && err.code === 'UND_ERR_SOCKET') {\n        // decrease the weight of the pool.\n        pool[kWeight] = Math.max(1, pool[kWeight] - this[kErrorPenalty])\n        this._updateBalancedPoolStats()\n      }\n    })\n\n    for (const client of this[kClients]) {\n      client[kWeight] = this[kMaxWeightPerServer]\n    }\n\n    this._updateBalancedPoolStats()\n\n    return this\n  }\n\n  _updateBalancedPoolStats () {\n    let result = 0\n    for (let i = 0; i < this[kClients].length; i++) {\n      result = getGreatestCommonDivisor(this[kClients][i][kWeight], result)\n    }\n\n    this[kGreatestCommonDivisor] = result\n  }\n\n  removeUpstream (upstream) {\n    const upstreamOrigin = parseOrigin(upstream).origin\n\n    const pool = this[kClients].find((pool) => (\n      pool[kUrl].origin === upstreamOrigin &&\n      pool.closed !== true &&\n      pool.destroyed !== true\n    ))\n\n    if (pool) {\n      this[kRemoveClient](pool)\n    }\n\n    return this\n  }\n\n  get upstreams () {\n    return this[kClients]\n      .filter(dispatcher => dispatcher.closed !== true && dispatcher.destroyed !== true)\n      .map((p) => p[kUrl].origin)\n  }\n\n  [kGetDispatcher] () {\n    // We validate that pools is greater than 0,\n    // otherwise we would have to wait until an upstream\n    // is added, which might never happen.\n    if (this[kClients].length === 0) {\n      throw new BalancedPoolMissingUpstreamError()\n    }\n\n    const dispatcher = this[kClients].find(dispatcher => (\n      !dispatcher[kNeedDrain] &&\n      dispatcher.closed !== true &&\n      dispatcher.destroyed !== true\n    ))\n\n    if (!dispatcher) {\n      return\n    }\n\n    const allClientsBusy = this[kClients].map(pool => pool[kNeedDrain]).reduce((a, b) => a && b, true)\n\n    if (allClientsBusy) {\n      return\n    }\n\n    let counter = 0\n\n    let maxWeightIndex = this[kClients].findIndex(pool => !pool[kNeedDrain])\n\n    while (counter++ < this[kClients].length) {\n      this[kIndex] = (this[kIndex] + 1) % this[kClients].length\n      const pool = this[kClients][this[kIndex]]\n\n      // find pool index with the largest weight\n      if (pool[kWeight] > this[kClients][maxWeightIndex][kWeight] && !pool[kNeedDrain]) {\n        maxWeightIndex = this[kIndex]\n      }\n\n      // decrease the current weight every `this[kClients].length`.\n      if (this[kIndex] === 0) {\n        // Set the current weight to the next lower weight.\n        this[kCurrentWeight] = this[kCurrentWeight] - this[kGreatestCommonDivisor]\n\n        if (this[kCurrentWeight] <= 0) {\n          this[kCurrentWeight] = this[kMaxWeightPerServer]\n        }\n      }\n      if (pool[kWeight] >= this[kCurrentWeight] && (!pool[kNeedDrain])) {\n        return pool\n      }\n    }\n\n    this[kCurrentWeight] = this[kClients][maxWeightIndex][kWeight]\n    this[kIndex] = maxWeightIndex\n    return this[kClients][maxWeightIndex]\n  }\n}\n\nmodule.exports = BalancedPool\n", "'use strict'\n\nconst { InvalidArgumentError } = require('../core/errors')\nconst { kClients, kRunning, kClose, kDestroy, kDispatch, kInterceptors } = require('../core/symbols')\nconst DispatcherBase = require('./dispatcher-base')\nconst Pool = require('./pool')\nconst Client = require('./client')\nconst util = require('../core/util')\nconst createRedirectInterceptor = require('../interceptor/redirect-interceptor')\n\nconst kOnConnect = Symbol('onConnect')\nconst kOnDisconnect = Symbol('onDisconnect')\nconst kOnConnectionError = Symbol('onConnectionError')\nconst kMaxRedirections = Symbol('maxRedirections')\nconst kOnDrain = Symbol('onDrain')\nconst kFactory = Symbol('factory')\nconst kOptions = Symbol('options')\n\nfunction defaultFactory (origin, opts) {\n  return opts && opts.connections === 1\n    ? new Client(origin, opts)\n    : new Pool(origin, opts)\n}\n\nclass Agent extends DispatcherBase {\n  constructor ({ factory = defaultFactory, maxRedirections = 0, connect, ...options } = {}) {\n    super()\n\n    if (typeof factory !== 'function') {\n      throw new InvalidArgumentError('factory must be a function.')\n    }\n\n    if (connect != null && typeof connect !== 'function' && typeof connect !== 'object') {\n      throw new InvalidArgumentError('connect must be a function or an object')\n    }\n\n    if (!Number.isInteger(maxRedirections) || maxRedirections < 0) {\n      throw new InvalidArgumentError('maxRedirections must be a positive number')\n    }\n\n    if (connect && typeof connect !== 'function') {\n      connect = { ...connect }\n    }\n\n    this[kInterceptors] = options.interceptors?.Agent && Array.isArray(options.interceptors.Agent)\n      ? options.interceptors.Agent\n      : [createRedirectInterceptor({ maxRedirections })]\n\n    this[kOptions] = { ...util.deepClone(options), connect }\n    this[kOptions].interceptors = options.interceptors\n      ? { ...options.interceptors }\n      : undefined\n    this[kMaxRedirections] = maxRedirections\n    this[kFactory] = factory\n    this[kClients] = new Map()\n\n    this[kOnDrain] = (origin, targets) => {\n      this.emit('drain', origin, [this, ...targets])\n    }\n\n    this[kOnConnect] = (origin, targets) => {\n      this.emit('connect', origin, [this, ...targets])\n    }\n\n    this[kOnDisconnect] = (origin, targets, err) => {\n      this.emit('disconnect', origin, [this, ...targets], err)\n    }\n\n    this[kOnConnectionError] = (origin, targets, err) => {\n      this.emit('connectionError', origin, [this, ...targets], err)\n    }\n  }\n\n  get [kRunning] () {\n    let ret = 0\n    for (const client of this[kClients].values()) {\n      ret += client[kRunning]\n    }\n    return ret\n  }\n\n  [kDispatch] (opts, handler) {\n    let key\n    if (opts.origin && (typeof opts.origin === 'string' || opts.origin instanceof URL)) {\n      key = String(opts.origin)\n    } else {\n      throw new InvalidArgumentError('opts.origin must be a non-empty string or URL.')\n    }\n\n    let dispatcher = this[kClients].get(key)\n\n    if (!dispatcher) {\n      dispatcher = this[kFactory](opts.origin, this[kOptions])\n        .on('drain', this[kOnDrain])\n        .on('connect', this[kOnConnect])\n        .on('disconnect', this[kOnDisconnect])\n        .on('connectionError', this[kOnConnectionError])\n\n      // This introduces a tiny memory leak, as dispatchers are never removed from the map.\n      // TODO(mcollina): remove te timer when the client/pool do not have any more\n      // active connections.\n      this[kClients].set(key, dispatcher)\n    }\n\n    return dispatcher.dispatch(opts, handler)\n  }\n\n  async [kClose] () {\n    const closePromises = []\n    for (const client of this[kClients].values()) {\n      closePromises.push(client.close())\n    }\n    this[kClients].clear()\n\n    await Promise.all(closePromises)\n  }\n\n  async [kDestroy] (err) {\n    const destroyPromises = []\n    for (const client of this[kClients].values()) {\n      destroyPromises.push(client.destroy(err))\n    }\n    this[kClients].clear()\n\n    await Promise.all(destroyPromises)\n  }\n}\n\nmodule.exports = Agent\n", "'use strict'\n\nconst { kProxy, kClose, kDestroy, kInterceptors } = require('../core/symbols')\nconst { URL } = require('node:url')\nconst Agent = require('./agent')\nconst Pool = require('./pool')\nconst DispatcherBase = require('./dispatcher-base')\nconst { InvalidArgumentError, RequestAbortedError, SecureProxyConnectionError } = require('../core/errors')\nconst buildConnector = require('../core/connect')\n\nconst kAgent = Symbol('proxy agent')\nconst kClient = Symbol('proxy client')\nconst kProxyHeaders = Symbol('proxy headers')\nconst kRequestTls = Symbol('request tls settings')\nconst kProxyTls = Symbol('proxy tls settings')\nconst kConnectEndpoint = Symbol('connect endpoint function')\n\nfunction defaultProtocolPort (protocol) {\n  return protocol === 'https:' ? 443 : 80\n}\n\nfunction defaultFactory (origin, opts) {\n  return new Pool(origin, opts)\n}\n\nclass ProxyAgent extends DispatcherBase {\n  constructor (opts) {\n    super()\n\n    if (!opts || (typeof opts === 'object' && !(opts instanceof URL) && !opts.uri)) {\n      throw new InvalidArgumentError('Proxy uri is mandatory')\n    }\n\n    const { clientFactory = defaultFactory } = opts\n    if (typeof clientFactory !== 'function') {\n      throw new InvalidArgumentError('Proxy opts.clientFactory must be a function.')\n    }\n\n    const url = this.#getUrl(opts)\n    const { href, origin, port, protocol, username, password, hostname: proxyHostname } = url\n\n    this[kProxy] = { uri: href, protocol }\n    this[kInterceptors] = opts.interceptors?.ProxyAgent && Array.isArray(opts.interceptors.ProxyAgent)\n      ? opts.interceptors.ProxyAgent\n      : []\n    this[kRequestTls] = opts.requestTls\n    this[kProxyTls] = opts.proxyTls\n    this[kProxyHeaders] = opts.headers || {}\n\n    if (opts.auth && opts.token) {\n      throw new InvalidArgumentError('opts.auth cannot be used in combination with opts.token')\n    } else if (opts.auth) {\n      /* @deprecated in favour of opts.token */\n      this[kProxyHeaders]['proxy-authorization'] = `Basic ${opts.auth}`\n    } else if (opts.token) {\n      this[kProxyHeaders]['proxy-authorization'] = opts.token\n    } else if (username && password) {\n      this[kProxyHeaders]['proxy-authorization'] = `Basic ${Buffer.from(`${decodeURIComponent(username)}:${decodeURIComponent(password)}`).toString('base64')}`\n    }\n\n    const connect = buildConnector({ ...opts.proxyTls })\n    this[kConnectEndpoint] = buildConnector({ ...opts.requestTls })\n    this[kClient] = clientFactory(url, { connect })\n    this[kAgent] = new Agent({\n      ...opts,\n      connect: async (opts, callback) => {\n        let requestedPath = opts.host\n        if (!opts.port) {\n          requestedPath += `:${defaultProtocolPort(opts.protocol)}`\n        }\n        try {\n          const { socket, statusCode } = await this[kClient].connect({\n            origin,\n            port,\n            path: requestedPath,\n            signal: opts.signal,\n            headers: {\n              ...this[kProxyHeaders],\n              host: opts.host\n            },\n            servername: this[kProxyTls]?.servername || proxyHostname\n          })\n          if (statusCode !== 200) {\n            socket.on('error', () => {}).destroy()\n            callback(new RequestAbortedError(`Proxy response (${statusCode}) !== 200 when HTTP Tunneling`))\n          }\n          if (opts.protocol !== 'https:') {\n            callback(null, socket)\n            return\n          }\n          let servername\n          if (this[kRequestTls]) {\n            servername = this[kRequestTls].servername\n          } else {\n            servername = opts.servername\n          }\n          this[kConnectEndpoint]({ ...opts, servername, httpSocket: socket }, callback)\n        } catch (err) {\n          if (err.code === 'ERR_TLS_CERT_ALTNAME_INVALID') {\n            // Throw a custom error to avoid loop in client.js#connect\n            callback(new SecureProxyConnectionError(err))\n          } else {\n            callback(err)\n          }\n        }\n      }\n    })\n  }\n\n  dispatch (opts, handler) {\n    const headers = buildHeaders(opts.headers)\n    throwIfProxyAuthIsSent(headers)\n\n    if (headers && !('host' in headers) && !('Host' in headers)) {\n      const { host } = new URL(opts.origin)\n      headers.host = host\n    }\n\n    return this[kAgent].dispatch(\n      {\n        ...opts,\n        headers\n      },\n      handler\n    )\n  }\n\n  /**\n   * @param {import('../types/proxy-agent').ProxyAgent.Options | string | URL} opts\n   * @returns {URL}\n   */\n  #getUrl (opts) {\n    if (typeof opts === 'string') {\n      return new URL(opts)\n    } else if (opts instanceof URL) {\n      return opts\n    } else {\n      return new URL(opts.uri)\n    }\n  }\n\n  async [kClose] () {\n    await this[kAgent].close()\n    await this[kClient].close()\n  }\n\n  async [kDestroy] () {\n    await this[kAgent].destroy()\n    await this[kClient].destroy()\n  }\n}\n\n/**\n * @param {string[] | Record<string, string>} headers\n * @returns {Record<string, string>}\n */\nfunction buildHeaders (headers) {\n  // When using undici.fetch, the headers list is stored\n  // as an array.\n  if (Array.isArray(headers)) {\n    /** @type {Record<string, string>} */\n    const headersPair = {}\n\n    for (let i = 0; i < headers.length; i += 2) {\n      headersPair[headers[i]] = headers[i + 1]\n    }\n\n    return headersPair\n  }\n\n  return headers\n}\n\n/**\n * @param {Record<string, string>} headers\n *\n * Previous versions of ProxyAgent suggests the Proxy-Authorization in request headers\n * Nevertheless, it was changed and to avoid a security vulnerability by end users\n * this check was created.\n * It should be removed in the next major version for performance reasons\n */\nfunction throwIfProxyAuthIsSent (headers) {\n  const existProxyAuth = headers && Object.keys(headers)\n    .find((key) => key.toLowerCase() === 'proxy-authorization')\n  if (existProxyAuth) {\n    throw new InvalidArgumentError('Proxy-Authorization should be sent in ProxyAgent constructor')\n  }\n}\n\nmodule.exports = ProxyAgent\n", "'use strict'\n\nconst DispatcherBase = require('./dispatcher-base')\nconst { kClose, kDestroy, kClosed, kDestroyed, kDispatch, kNoProxyAgent, kHttpProxyAgent, kHttpsProxyAgent } = require('../core/symbols')\nconst ProxyAgent = require('./proxy-agent')\nconst Agent = require('./agent')\n\nconst DEFAULT_PORTS = {\n  'http:': 80,\n  'https:': 443\n}\n\nlet experimentalWarned = false\n\nclass EnvHttpProxyAgent extends DispatcherBase {\n  #noProxyValue = null\n  #noProxyEntries = null\n  #opts = null\n\n  constructor (opts = {}) {\n    super()\n    this.#opts = opts\n\n    if (!experimentalWarned) {\n      experimentalWarned = true\n      process.emitWarning('EnvHttpProxyAgent is experimental, expect them to change at any time.', {\n        code: 'UNDICI-EHPA'\n      })\n    }\n\n    const { httpProxy, httpsProxy, noProxy, ...agentOpts } = opts\n\n    this[kNoProxyAgent] = new Agent(agentOpts)\n\n    const HTTP_PROXY = httpProxy ?? process.env.http_proxy ?? process.env.HTTP_PROXY\n    if (HTTP_PROXY) {\n      this[kHttpProxyAgent] = new ProxyAgent({ ...agentOpts, uri: HTTP_PROXY })\n    } else {\n      this[kHttpProxyAgent] = this[kNoProxyAgent]\n    }\n\n    const HTTPS_PROXY = httpsProxy ?? process.env.https_proxy ?? process.env.HTTPS_PROXY\n    if (HTTPS_PROXY) {\n      this[kHttpsProxyAgent] = new ProxyAgent({ ...agentOpts, uri: HTTPS_PROXY })\n    } else {\n      this[kHttpsProxyAgent] = this[kHttpProxyAgent]\n    }\n\n    this.#parseNoProxy()\n  }\n\n  [kDispatch] (opts, handler) {\n    const url = new URL(opts.origin)\n    const agent = this.#getProxyAgentForUrl(url)\n    return agent.dispatch(opts, handler)\n  }\n\n  async [kClose] () {\n    await this[kNoProxyAgent].close()\n    if (!this[kHttpProxyAgent][kClosed]) {\n      await this[kHttpProxyAgent].close()\n    }\n    if (!this[kHttpsProxyAgent][kClosed]) {\n      await this[kHttpsProxyAgent].close()\n    }\n  }\n\n  async [kDestroy] (err) {\n    await this[kNoProxyAgent].destroy(err)\n    if (!this[kHttpProxyAgent][kDestroyed]) {\n      await this[kHttpProxyAgent].destroy(err)\n    }\n    if (!this[kHttpsProxyAgent][kDestroyed]) {\n      await this[kHttpsProxyAgent].destroy(err)\n    }\n  }\n\n  #getProxyAgentForUrl (url) {\n    let { protocol, host: hostname, port } = url\n\n    // Stripping ports in this way instead of using parsedUrl.hostname to make\n    // sure that the brackets around IPv6 addresses are kept.\n    hostname = hostname.replace(/:\\d*$/, '').toLowerCase()\n    port = Number.parseInt(port, 10) || DEFAULT_PORTS[protocol] || 0\n    if (!this.#shouldProxy(hostname, port)) {\n      return this[kNoProxyAgent]\n    }\n    if (protocol === 'https:') {\n      return this[kHttpsProxyAgent]\n    }\n    return this[kHttpProxyAgent]\n  }\n\n  #shouldProxy (hostname, port) {\n    if (this.#noProxyChanged) {\n      this.#parseNoProxy()\n    }\n\n    if (this.#noProxyEntries.length === 0) {\n      return true // Always proxy if NO_PROXY is not set or empty.\n    }\n    if (this.#noProxyValue === '*') {\n      return false // Never proxy if wildcard is set.\n    }\n\n    for (let i = 0; i < this.#noProxyEntries.length; i++) {\n      const entry = this.#noProxyEntries[i]\n      if (entry.port && entry.port !== port) {\n        continue // Skip if ports don't match.\n      }\n      if (!/^[.*]/.test(entry.hostname)) {\n        // No wildcards, so don't proxy only if there is not an exact match.\n        if (hostname === entry.hostname) {\n          return false\n        }\n      } else {\n        // Don't proxy if the hostname ends with the no_proxy host.\n        if (hostname.endsWith(entry.hostname.replace(/^\\*/, ''))) {\n          return false\n        }\n      }\n    }\n\n    return true\n  }\n\n  #parseNoProxy () {\n    const noProxyValue = this.#opts.noProxy ?? this.#noProxyEnv\n    const noProxySplit = noProxyValue.split(/[,\\s]/)\n    const noProxyEntries = []\n\n    for (let i = 0; i < noProxySplit.length; i++) {\n      const entry = noProxySplit[i]\n      if (!entry) {\n        continue\n      }\n      const parsed = entry.match(/^(.+):(\\d+)$/)\n      noProxyEntries.push({\n        hostname: (parsed ? parsed[1] : entry).toLowerCase(),\n        port: parsed ? Number.parseInt(parsed[2], 10) : 0\n      })\n    }\n\n    this.#noProxyValue = noProxyValue\n    this.#noProxyEntries = noProxyEntries\n  }\n\n  get #noProxyChanged () {\n    if (this.#opts.noProxy !== undefined) {\n      return false\n    }\n    return this.#noProxyValue !== this.#noProxyEnv\n  }\n\n  get #noProxyEnv () {\n    return process.env.no_proxy ?? process.env.NO_PROXY ?? ''\n  }\n}\n\nmodule.exports = EnvHttpProxyAgent\n", "'use strict'\nconst assert = require('node:assert')\n\nconst { kRetryHandlerDefaultRetry } = require('../core/symbols')\nconst { RequestRetryError } = require('../core/errors')\nconst {\n  isDisturbed,\n  parseHeaders,\n  parseRangeHeader,\n  wrapRequestBody\n} = require('../core/util')\n\nfunction calculateRetryAfterHeader (retryAfter) {\n  const current = Date.now()\n  return new Date(retryAfter).getTime() - current\n}\n\nclass RetryHandler {\n  constructor (opts, handlers) {\n    const { retryOptions, ...dispatchOpts } = opts\n    const {\n      // Retry scoped\n      retry: retryFn,\n      maxRetries,\n      maxTimeout,\n      minTimeout,\n      timeoutFactor,\n      // Response scoped\n      methods,\n      errorCodes,\n      retryAfter,\n      statusCodes\n    } = retryOptions ?? {}\n\n    this.dispatch = handlers.dispatch\n    this.handler = handlers.handler\n    this.opts = { ...dispatchOpts, body: wrapRequestBody(opts.body) }\n    this.abort = null\n    this.aborted = false\n    this.retryOpts = {\n      retry: retryFn ?? RetryHandler[kRetryHandlerDefaultRetry],\n      retryAfter: retryAfter ?? true,\n      maxTimeout: maxTimeout ?? 30 * 1000, // 30s,\n      minTimeout: minTimeout ?? 500, // .5s\n      timeoutFactor: timeoutFactor ?? 2,\n      maxRetries: maxRetries ?? 5,\n      // What errors we should retry\n      methods: methods ?? ['GET', 'HEAD', 'OPTIONS', 'PUT', 'DELETE', 'TRACE'],\n      // Indicates which errors to retry\n      statusCodes: statusCodes ?? [500, 502, 503, 504, 429],\n      // List of errors to retry\n      errorCodes: errorCodes ?? [\n        'ECONNRESET',\n        'ECONNREFUSED',\n        'ENOTFOUND',\n        'ENETDOWN',\n        'ENETUNREACH',\n        'EHOSTDOWN',\n        'EHOSTUNREACH',\n        'EPIPE',\n        'UND_ERR_SOCKET'\n      ]\n    }\n\n    this.retryCount = 0\n    this.retryCountCheckpoint = 0\n    this.start = 0\n    this.end = null\n    this.etag = null\n    this.resume = null\n\n    // Handle possible onConnect duplication\n    this.handler.onConnect(reason => {\n      this.aborted = true\n      if (this.abort) {\n        this.abort(reason)\n      } else {\n        this.reason = reason\n      }\n    })\n  }\n\n  onRequestSent () {\n    if (this.handler.onRequestSent) {\n      this.handler.onRequestSent()\n    }\n  }\n\n  onUpgrade (statusCode, headers, socket) {\n    if (this.handler.onUpgrade) {\n      this.handler.onUpgrade(statusCode, headers, socket)\n    }\n  }\n\n  onConnect (abort) {\n    if (this.aborted) {\n      abort(this.reason)\n    } else {\n      this.abort = abort\n    }\n  }\n\n  onBodySent (chunk) {\n    if (this.handler.onBodySent) return this.handler.onBodySent(chunk)\n  }\n\n  static [kRetryHandlerDefaultRetry] (err, { state, opts }, cb) {\n    const { statusCode, code, headers } = err\n    const { method, retryOptions } = opts\n    const {\n      maxRetries,\n      minTimeout,\n      maxTimeout,\n      timeoutFactor,\n      statusCodes,\n      errorCodes,\n      methods\n    } = retryOptions\n    const { counter } = state\n\n    // Any code that is not a Undici's originated and allowed to retry\n    if (code && code !== 'UND_ERR_REQ_RETRY' && !errorCodes.includes(code)) {\n      cb(err)\n      return\n    }\n\n    // If a set of method are provided and the current method is not in the list\n    if (Array.isArray(methods) && !methods.includes(method)) {\n      cb(err)\n      return\n    }\n\n    // If a set of status code are provided and the current status code is not in the list\n    if (\n      statusCode != null &&\n      Array.isArray(statusCodes) &&\n      !statusCodes.includes(statusCode)\n    ) {\n      cb(err)\n      return\n    }\n\n    // If we reached the max number of retries\n    if (counter > maxRetries) {\n      cb(err)\n      return\n    }\n\n    let retryAfterHeader = headers?.['retry-after']\n    if (retryAfterHeader) {\n      retryAfterHeader = Number(retryAfterHeader)\n      retryAfterHeader = Number.isNaN(retryAfterHeader)\n        ? calculateRetryAfterHeader(retryAfterHeader)\n        : retryAfterHeader * 1e3 // Retry-After is in seconds\n    }\n\n    const retryTimeout =\n      retryAfterHeader > 0\n        ? Math.min(retryAfterHeader, maxTimeout)\n        : Math.min(minTimeout * timeoutFactor ** (counter - 1), maxTimeout)\n\n    setTimeout(() => cb(null), retryTimeout)\n  }\n\n  onHeaders (statusCode, rawHeaders, resume, statusMessage) {\n    const headers = parseHeaders(rawHeaders)\n\n    this.retryCount += 1\n\n    if (statusCode >= 300) {\n      if (this.retryOpts.statusCodes.includes(statusCode) === false) {\n        return this.handler.onHeaders(\n          statusCode,\n          rawHeaders,\n          resume,\n          statusMessage\n        )\n      } else {\n        this.abort(\n          new RequestRetryError('Request failed', statusCode, {\n            headers,\n            data: {\n              count: this.retryCount\n            }\n          })\n        )\n        return false\n      }\n    }\n\n    // Checkpoint for resume from where we left it\n    if (this.resume != null) {\n      this.resume = null\n\n      if (statusCode !== 206) {\n        return true\n      }\n\n      const contentRange = parseRangeHeader(headers['content-range'])\n      // If no content range\n      if (!contentRange) {\n        this.abort(\n          new RequestRetryError('Content-Range mismatch', statusCode, {\n            headers,\n            data: { count: this.retryCount }\n          })\n        )\n        return false\n      }\n\n      // Let's start with a weak etag check\n      if (this.etag != null && this.etag !== headers.etag) {\n        this.abort(\n          new RequestRetryError('ETag mismatch', statusCode, {\n            headers,\n            data: { count: this.retryCount }\n          })\n        )\n        return false\n      }\n\n      const { start, size, end = size } = contentRange\n\n      assert(this.start === start, 'content-range mismatch')\n      assert(this.end == null || this.end === end, 'content-range mismatch')\n\n      this.resume = resume\n      return true\n    }\n\n    if (this.end == null) {\n      if (statusCode === 206) {\n        // First time we receive 206\n        const range = parseRangeHeader(headers['content-range'])\n\n        if (range == null) {\n          return this.handler.onHeaders(\n            statusCode,\n            rawHeaders,\n            resume,\n            statusMessage\n          )\n        }\n\n        const { start, size, end = size } = range\n        assert(\n          start != null && Number.isFinite(start),\n          'content-range mismatch'\n        )\n        assert(end != null && Number.isFinite(end), 'invalid content-length')\n\n        this.start = start\n        this.end = end\n      }\n\n      // We make our best to checkpoint the body for further range headers\n      if (this.end == null) {\n        const contentLength = headers['content-length']\n        this.end = contentLength != null ? Number(contentLength) : null\n      }\n\n      assert(Number.isFinite(this.start))\n      assert(\n        this.end == null || Number.isFinite(this.end),\n        'invalid content-length'\n      )\n\n      this.resume = resume\n      this.etag = headers.etag != null ? headers.etag : null\n\n      // Weak etags are not useful for comparison nor cache\n      // for instance not safe to assume if the response is byte-per-byte\n      // equal\n      if (this.etag != null && this.etag.startsWith('W/')) {\n        this.etag = null\n      }\n\n      return this.handler.onHeaders(\n        statusCode,\n        rawHeaders,\n        resume,\n        statusMessage\n      )\n    }\n\n    const err = new RequestRetryError('Request failed', statusCode, {\n      headers,\n      data: { count: this.retryCount }\n    })\n\n    this.abort(err)\n\n    return false\n  }\n\n  onData (chunk) {\n    this.start += chunk.length\n\n    return this.handler.onData(chunk)\n  }\n\n  onComplete (rawTrailers) {\n    this.retryCount = 0\n    return this.handler.onComplete(rawTrailers)\n  }\n\n  onError (err) {\n    if (this.aborted || isDisturbed(this.opts.body)) {\n      return this.handler.onError(err)\n    }\n\n    // We reconcile in case of a mix between network errors\n    // and server error response\n    if (this.retryCount - this.retryCountCheckpoint > 0) {\n      // We count the difference between the last checkpoint and the current retry count\n      this.retryCount =\n        this.retryCountCheckpoint +\n        (this.retryCount - this.retryCountCheckpoint)\n    } else {\n      this.retryCount += 1\n    }\n\n    this.retryOpts.retry(\n      err,\n      {\n        state: { counter: this.retryCount },\n        opts: { retryOptions: this.retryOpts, ...this.opts }\n      },\n      onRetry.bind(this)\n    )\n\n    function onRetry (err) {\n      if (err != null || this.aborted || isDisturbed(this.opts.body)) {\n        return this.handler.onError(err)\n      }\n\n      if (this.start !== 0) {\n        const headers = { range: `bytes=${this.start}-${this.end ?? ''}` }\n\n        // Weak etag check - weak etags will make comparison algorithms never match\n        if (this.etag != null) {\n          headers['if-match'] = this.etag\n        }\n\n        this.opts = {\n          ...this.opts,\n          headers: {\n            ...this.opts.headers,\n            ...headers\n          }\n        }\n      }\n\n      try {\n        this.retryCountCheckpoint = this.retryCount\n        this.dispatch(this.opts, this)\n      } catch (err) {\n        this.handler.onError(err)\n      }\n    }\n  }\n}\n\nmodule.exports = RetryHandler\n", "'use strict'\n\nconst Dispatcher = require('./dispatcher')\nconst RetryHandler = require('../handler/retry-handler')\n\nclass RetryAgent extends Dispatcher {\n  #agent = null\n  #options = null\n  constructor (agent, options = {}) {\n    super(options)\n    this.#agent = agent\n    this.#options = options\n  }\n\n  dispatch (opts, handler) {\n    const retry = new RetryHandler({\n      ...opts,\n      retryOptions: this.#options\n    }, {\n      dispatch: this.#agent.dispatch.bind(this.#agent),\n      handler\n    })\n    return this.#agent.dispatch(opts, retry)\n  }\n\n  close () {\n    return this.#agent.close()\n  }\n\n  destroy () {\n    return this.#agent.destroy()\n  }\n}\n\nmodule.exports = RetryAgent\n", "// Ported from https://github.com/nodejs/undici/pull/907\n\n'use strict'\n\nconst assert = require('node:assert')\nconst { Readable } = require('node:stream')\nconst { RequestAbortedError, NotSupportedError, InvalidArgumentError, AbortError } = require('../core/errors')\nconst util = require('../core/util')\nconst { ReadableStreamFrom } = require('../core/util')\n\nconst kConsume = Symbol('kConsume')\nconst kReading = Symbol('kReading')\nconst kBody = Symbol('kBody')\nconst kAbort = Symbol('kAbort')\nconst kContentType = Symbol('kContentType')\nconst kContentLength = Symbol('kContentLength')\n\nconst noop = () => {}\n\nclass BodyReadable extends Readable {\n  constructor ({\n    resume,\n    abort,\n    contentType = '',\n    contentLength,\n    highWaterMark = 64 * 1024 // Same as nodejs fs streams.\n  }) {\n    super({\n      autoDestroy: true,\n      read: resume,\n      highWaterMark\n    })\n\n    this._readableState.dataEmitted = false\n\n    this[kAbort] = abort\n    this[kConsume] = null\n    this[kBody] = null\n    this[kContentType] = contentType\n    this[kContentLength] = contentLength\n\n    // Is stream being consumed through Readable API?\n    // This is an optimization so that we avoid checking\n    // for 'data' and 'readable' listeners in the hot path\n    // inside push().\n    this[kReading] = false\n  }\n\n  destroy (err) {\n    if (!err && !this._readableState.endEmitted) {\n      err = new RequestAbortedError()\n    }\n\n    if (err) {\n      this[kAbort]()\n    }\n\n    return super.destroy(err)\n  }\n\n  _destroy (err, callback) {\n    // Workaround for Node \"bug\". If the stream is destroyed in same\n    // tick as it is created, then a user who is waiting for a\n    // promise (i.e micro tick) for installing a 'error' listener will\n    // never get a chance and will always encounter an unhandled exception.\n    if (!this[kReading]) {\n      setImmediate(() => {\n        callback(err)\n      })\n    } else {\n      callback(err)\n    }\n  }\n\n  on (ev, ...args) {\n    if (ev === 'data' || ev === 'readable') {\n      this[kReading] = true\n    }\n    return super.on(ev, ...args)\n  }\n\n  addListener (ev, ...args) {\n    return this.on(ev, ...args)\n  }\n\n  off (ev, ...args) {\n    const ret = super.off(ev, ...args)\n    if (ev === 'data' || ev === 'readable') {\n      this[kReading] = (\n        this.listenerCount('data') > 0 ||\n        this.listenerCount('readable') > 0\n      )\n    }\n    return ret\n  }\n\n  removeListener (ev, ...args) {\n    return this.off(ev, ...args)\n  }\n\n  push (chunk) {\n    if (this[kConsume] && chunk !== null) {\n      consumePush(this[kConsume], chunk)\n      return this[kReading] ? super.push(chunk) : true\n    }\n    return super.push(chunk)\n  }\n\n  // https://fetch.spec.whatwg.org/#dom-body-text\n  async text () {\n    return consume(this, 'text')\n  }\n\n  // https://fetch.spec.whatwg.org/#dom-body-json\n  async json () {\n    return consume(this, 'json')\n  }\n\n  // https://fetch.spec.whatwg.org/#dom-body-blob\n  async blob () {\n    return consume(this, 'blob')\n  }\n\n  // https://fetch.spec.whatwg.org/#dom-body-arraybuffer\n  async arrayBuffer () {\n    return consume(this, 'arrayBuffer')\n  }\n\n  // https://fetch.spec.whatwg.org/#dom-body-formdata\n  async formData () {\n    // TODO: Implement.\n    throw new NotSupportedError()\n  }\n\n  // https://fetch.spec.whatwg.org/#dom-body-bodyused\n  get bodyUsed () {\n    return util.isDisturbed(this)\n  }\n\n  // https://fetch.spec.whatwg.org/#dom-body-body\n  get body () {\n    if (!this[kBody]) {\n      this[kBody] = ReadableStreamFrom(this)\n      if (this[kConsume]) {\n        // TODO: Is this the best way to force a lock?\n        this[kBody].getReader() // Ensure stream is locked.\n        assert(this[kBody].locked)\n      }\n    }\n    return this[kBody]\n  }\n\n  async dump (opts) {\n    let limit = Number.isFinite(opts?.limit) ? opts.limit : 128 * 1024\n    const signal = opts?.signal\n\n    if (signal != null && (typeof signal !== 'object' || !('aborted' in signal))) {\n      throw new InvalidArgumentError('signal must be an AbortSignal')\n    }\n\n    signal?.throwIfAborted()\n\n    if (this._readableState.closeEmitted) {\n      return null\n    }\n\n    return await new Promise((resolve, reject) => {\n      if (this[kContentLength] > limit) {\n        this.destroy(new AbortError())\n      }\n\n      const onAbort = () => {\n        this.destroy(signal.reason ?? new AbortError())\n      }\n      signal?.addEventListener('abort', onAbort)\n\n      this\n        .on('close', function () {\n          signal?.removeEventListener('abort', onAbort)\n          if (signal?.aborted) {\n            reject(signal.reason ?? new AbortError())\n          } else {\n            resolve(null)\n          }\n        })\n        .on('error', noop)\n        .on('data', function (chunk) {\n          limit -= chunk.length\n          if (limit <= 0) {\n            this.destroy()\n          }\n        })\n        .resume()\n    })\n  }\n}\n\n// https://streams.spec.whatwg.org/#readablestream-locked\nfunction isLocked (self) {\n  // Consume is an implicit lock.\n  return (self[kBody] && self[kBody].locked === true) || self[kConsume]\n}\n\n// https://fetch.spec.whatwg.org/#body-unusable\nfunction isUnusable (self) {\n  return util.isDisturbed(self) || isLocked(self)\n}\n\nasync function consume (stream, type) {\n  assert(!stream[kConsume])\n\n  return new Promise((resolve, reject) => {\n    if (isUnusable(stream)) {\n      const rState = stream._readableState\n      if (rState.destroyed && rState.closeEmitted === false) {\n        stream\n          .on('error', err => {\n            reject(err)\n          })\n          .on('close', () => {\n            reject(new TypeError('unusable'))\n          })\n      } else {\n        reject(rState.errored ?? new TypeError('unusable'))\n      }\n    } else {\n      queueMicrotask(() => {\n        stream[kConsume] = {\n          type,\n          stream,\n          resolve,\n          reject,\n          length: 0,\n          body: []\n        }\n\n        stream\n          .on('error', function (err) {\n            consumeFinish(this[kConsume], err)\n          })\n          .on('close', function () {\n            if (this[kConsume].body !== null) {\n              consumeFinish(this[kConsume], new RequestAbortedError())\n            }\n          })\n\n        consumeStart(stream[kConsume])\n      })\n    }\n  })\n}\n\nfunction consumeStart (consume) {\n  if (consume.body === null) {\n    return\n  }\n\n  const { _readableState: state } = consume.stream\n\n  if (state.bufferIndex) {\n    const start = state.bufferIndex\n    const end = state.buffer.length\n    for (let n = start; n < end; n++) {\n      consumePush(consume, state.buffer[n])\n    }\n  } else {\n    for (const chunk of state.buffer) {\n      consumePush(consume, chunk)\n    }\n  }\n\n  if (state.endEmitted) {\n    consumeEnd(this[kConsume])\n  } else {\n    consume.stream.on('end', function () {\n      consumeEnd(this[kConsume])\n    })\n  }\n\n  consume.stream.resume()\n\n  while (consume.stream.read() != null) {\n    // Loop\n  }\n}\n\n/**\n * @param {Buffer[]} chunks\n * @param {number} length\n */\nfunction chunksDecode (chunks, length) {\n  if (chunks.length === 0 || length === 0) {\n    return ''\n  }\n  const buffer = chunks.length === 1 ? chunks[0] : Buffer.concat(chunks, length)\n  const bufferLength = buffer.length\n\n  // Skip BOM.\n  const start =\n    bufferLength > 2 &&\n    buffer[0] === 0xef &&\n    buffer[1] === 0xbb &&\n    buffer[2] === 0xbf\n      ? 3\n      : 0\n  return buffer.utf8Slice(start, bufferLength)\n}\n\nfunction consumeEnd (consume) {\n  const { type, body, resolve, stream, length } = consume\n\n  try {\n    if (type === 'text') {\n      resolve(chunksDecode(body, length))\n    } else if (type === 'json') {\n      resolve(JSON.parse(chunksDecode(body, length)))\n    } else if (type === 'arrayBuffer') {\n      const dst = new Uint8Array(length)\n\n      let pos = 0\n      for (const buf of body) {\n        dst.set(buf, pos)\n        pos += buf.byteLength\n      }\n\n      resolve(dst.buffer)\n    } else if (type === 'blob') {\n      resolve(new Blob(body, { type: stream[kContentType] }))\n    }\n\n    consumeFinish(consume)\n  } catch (err) {\n    stream.destroy(err)\n  }\n}\n\nfunction consumePush (consume, chunk) {\n  consume.length += chunk.length\n  consume.body.push(chunk)\n}\n\nfunction consumeFinish (consume, err) {\n  if (consume.body === null) {\n    return\n  }\n\n  if (err) {\n    consume.reject(err)\n  } else {\n    consume.resolve()\n  }\n\n  consume.type = null\n  consume.stream = null\n  consume.resolve = null\n  consume.reject = null\n  consume.length = 0\n  consume.body = null\n}\n\nmodule.exports = { Readable: BodyReadable, chunksDecode }\n", "const assert = require('node:assert')\nconst {\n  ResponseStatusCodeError\n} = require('../core/errors')\n\nconst { chunksDecode } = require('./readable')\nconst CHUNK_LIMIT = 128 * 1024\n\nasync function getResolveErrorBodyCallback ({ callback, body, contentType, statusCode, statusMessage, headers }) {\n  assert(body)\n\n  let chunks = []\n  let length = 0\n\n  try {\n    for await (const chunk of body) {\n      chunks.push(chunk)\n      length += chunk.length\n      if (length > CHUNK_LIMIT) {\n        chunks = []\n        length = 0\n        break\n      }\n    }\n  } catch {\n    chunks = []\n    length = 0\n    // Do nothing....\n  }\n\n  const message = `Response status code ${statusCode}${statusMessage ? `: ${statusMessage}` : ''}`\n\n  if (statusCode === 204 || !contentType || !length) {\n    queueMicrotask(() => callback(new ResponseStatusCodeError(message, statusCode, headers)))\n    return\n  }\n\n  const stackTraceLimit = Error.stackTraceLimit\n  Error.stackTraceLimit = 0\n  let payload\n\n  try {\n    if (isContentTypeApplicationJson(contentType)) {\n      payload = JSON.parse(chunksDecode(chunks, length))\n    } else if (isContentTypeText(contentType)) {\n      payload = chunksDecode(chunks, length)\n    }\n  } catch {\n    // process in a callback to avoid throwing in the microtask queue\n  } finally {\n    Error.stackTraceLimit = stackTraceLimit\n  }\n  queueMicrotask(() => callback(new ResponseStatusCodeError(message, statusCode, headers, payload)))\n}\n\nconst isContentTypeApplicationJson = (contentType) => {\n  return (\n    contentType.length > 15 &&\n    contentType[11] === '/' &&\n    contentType[0] === 'a' &&\n    contentType[1] === 'p' &&\n    contentType[2] === 'p' &&\n    contentType[3] === 'l' &&\n    contentType[4] === 'i' &&\n    contentType[5] === 'c' &&\n    contentType[6] === 'a' &&\n    contentType[7] === 't' &&\n    contentType[8] === 'i' &&\n    contentType[9] === 'o' &&\n    contentType[10] === 'n' &&\n    contentType[12] === 'j' &&\n    contentType[13] === 's' &&\n    contentType[14] === 'o' &&\n    contentType[15] === 'n'\n  )\n}\n\nconst isContentTypeText = (contentType) => {\n  return (\n    contentType.length > 4 &&\n    contentType[4] === '/' &&\n    contentType[0] === 't' &&\n    contentType[1] === 'e' &&\n    contentType[2] === 'x' &&\n    contentType[3] === 't'\n  )\n}\n\nmodule.exports = {\n  getResolveErrorBodyCallback,\n  isContentTypeApplicationJson,\n  isContentTypeText\n}\n", "'use strict'\n\nconst assert = require('node:assert')\nconst { Readable } = require('./readable')\nconst { InvalidArgumentError, RequestAbortedError } = require('../core/errors')\nconst util = require('../core/util')\nconst { getResolveErrorBodyCallback } = require('./util')\nconst { AsyncResource } = require('node:async_hooks')\n\nclass RequestHandler extends AsyncResource {\n  constructor (opts, callback) {\n    if (!opts || typeof opts !== 'object') {\n      throw new InvalidArgumentError('invalid opts')\n    }\n\n    const { signal, method, opaque, body, onInfo, responseHeaders, throwOnError, highWaterMark } = opts\n\n    try {\n      if (typeof callback !== 'function') {\n        throw new InvalidArgumentError('invalid callback')\n      }\n\n      if (highWaterMark && (typeof highWaterMark !== 'number' || highWaterMark < 0)) {\n        throw new InvalidArgumentError('invalid highWaterMark')\n      }\n\n      if (signal && typeof signal.on !== 'function' && typeof signal.addEventListener !== 'function') {\n        throw new InvalidArgumentError('signal must be an EventEmitter or EventTarget')\n      }\n\n      if (method === 'CONNECT') {\n        throw new InvalidArgumentError('invalid method')\n      }\n\n      if (onInfo && typeof onInfo !== 'function') {\n        throw new InvalidArgumentError('invalid onInfo callback')\n      }\n\n      super('UNDICI_REQUEST')\n    } catch (err) {\n      if (util.isStream(body)) {\n        util.destroy(body.on('error', util.nop), err)\n      }\n      throw err\n    }\n\n    this.method = method\n    this.responseHeaders = responseHeaders || null\n    this.opaque = opaque || null\n    this.callback = callback\n    this.res = null\n    this.abort = null\n    this.body = body\n    this.trailers = {}\n    this.context = null\n    this.onInfo = onInfo || null\n    this.throwOnError = throwOnError\n    this.highWaterMark = highWaterMark\n    this.signal = signal\n    this.reason = null\n    this.removeAbortListener = null\n\n    if (util.isStream(body)) {\n      body.on('error', (err) => {\n        this.onError(err)\n      })\n    }\n\n    if (this.signal) {\n      if (this.signal.aborted) {\n        this.reason = this.signal.reason ?? new RequestAbortedError()\n      } else {\n        this.removeAbortListener = util.addAbortListener(this.signal, () => {\n          this.reason = this.signal.reason ?? new RequestAbortedError()\n          if (this.res) {\n            util.destroy(this.res, this.reason)\n          } else if (this.abort) {\n            this.abort(this.reason)\n          }\n\n          if (this.removeAbortListener) {\n            this.res?.off('close', this.removeAbortListener)\n            this.removeAbortListener()\n            this.removeAbortListener = null\n          }\n        })\n      }\n    }\n  }\n\n  onConnect (abort, context) {\n    if (this.reason) {\n      abort(this.reason)\n      return\n    }\n\n    assert(this.callback)\n\n    this.abort = abort\n    this.context = context\n  }\n\n  onHeaders (statusCode, rawHeaders, resume, statusMessage) {\n    const { callback, opaque, abort, context, responseHeaders, highWaterMark } = this\n\n    const headers = responseHeaders === 'raw' ? util.parseRawHeaders(rawHeaders) : util.parseHeaders(rawHeaders)\n\n    if (statusCode < 200) {\n      if (this.onInfo) {\n        this.onInfo({ statusCode, headers })\n      }\n      return\n    }\n\n    const parsedHeaders = responseHeaders === 'raw' ? util.parseHeaders(rawHeaders) : headers\n    const contentType = parsedHeaders['content-type']\n    const contentLength = parsedHeaders['content-length']\n    const res = new Readable({\n      resume,\n      abort,\n      contentType,\n      contentLength: this.method !== 'HEAD' && contentLength\n        ? Number(contentLength)\n        : null,\n      highWaterMark\n    })\n\n    if (this.removeAbortListener) {\n      res.on('close', this.removeAbortListener)\n    }\n\n    this.callback = null\n    this.res = res\n    if (callback !== null) {\n      if (this.throwOnError && statusCode >= 400) {\n        this.runInAsyncScope(getResolveErrorBodyCallback, null,\n          { callback, body: res, contentType, statusCode, statusMessage, headers }\n        )\n      } else {\n        this.runInAsyncScope(callback, null, null, {\n          statusCode,\n          headers,\n          trailers: this.trailers,\n          opaque,\n          body: res,\n          context\n        })\n      }\n    }\n  }\n\n  onData (chunk) {\n    return this.res.push(chunk)\n  }\n\n  onComplete (trailers) {\n    util.parseHeaders(trailers, this.trailers)\n    this.res.push(null)\n  }\n\n  onError (err) {\n    const { res, callback, body, opaque } = this\n\n    if (callback) {\n      // TODO: Does this need queueMicrotask?\n      this.callback = null\n      queueMicrotask(() => {\n        this.runInAsyncScope(callback, null, err, { opaque })\n      })\n    }\n\n    if (res) {\n      this.res = null\n      // Ensure all queued handlers are invoked before destroying res.\n      queueMicrotask(() => {\n        util.destroy(res, err)\n      })\n    }\n\n    if (body) {\n      this.body = null\n      util.destroy(body, err)\n    }\n\n    if (this.removeAbortListener) {\n      res?.off('close', this.removeAbortListener)\n      this.removeAbortListener()\n      this.removeAbortListener = null\n    }\n  }\n}\n\nfunction request (opts, callback) {\n  if (callback === undefined) {\n    return new Promise((resolve, reject) => {\n      request.call(this, opts, (err, data) => {\n        return err ? reject(err) : resolve(data)\n      })\n    })\n  }\n\n  try {\n    this.dispatch(opts, new RequestHandler(opts, callback))\n  } catch (err) {\n    if (typeof callback !== 'function') {\n      throw err\n    }\n    const opaque = opts?.opaque\n    queueMicrotask(() => callback(err, { opaque }))\n  }\n}\n\nmodule.exports = request\nmodule.exports.RequestHandler = RequestHandler\n", "const { addAbortListener } = require('../core/util')\nconst { RequestAbortedError } = require('../core/errors')\n\nconst kListener = Symbol('kListener')\nconst kSignal = Symbol('kSignal')\n\nfunction abort (self) {\n  if (self.abort) {\n    self.abort(self[kSignal]?.reason)\n  } else {\n    self.reason = self[kSignal]?.reason ?? new RequestAbortedError()\n  }\n  removeSignal(self)\n}\n\nfunction addSignal (self, signal) {\n  self.reason = null\n\n  self[kSignal] = null\n  self[kListener] = null\n\n  if (!signal) {\n    return\n  }\n\n  if (signal.aborted) {\n    abort(self)\n    return\n  }\n\n  self[kSignal] = signal\n  self[kListener] = () => {\n    abort(self)\n  }\n\n  addAbortListener(self[kSignal], self[kListener])\n}\n\nfunction removeSignal (self) {\n  if (!self[kSignal]) {\n    return\n  }\n\n  if ('removeEventListener' in self[kSignal]) {\n    self[kSignal].removeEventListener('abort', self[kListener])\n  } else {\n    self[kSignal].removeListener('abort', self[kListener])\n  }\n\n  self[kSignal] = null\n  self[kListener] = null\n}\n\nmodule.exports = {\n  addSignal,\n  removeSignal\n}\n", "'use strict'\n\nconst assert = require('node:assert')\nconst { finished, PassThrough } = require('node:stream')\nconst { InvalidArgumentError, InvalidReturnValueError } = require('../core/errors')\nconst util = require('../core/util')\nconst { getResolveErrorBodyCallback } = require('./util')\nconst { AsyncResource } = require('node:async_hooks')\nconst { addSignal, removeSignal } = require('./abort-signal')\n\nclass StreamHandler extends AsyncResource {\n  constructor (opts, factory, callback) {\n    if (!opts || typeof opts !== 'object') {\n      throw new InvalidArgumentError('invalid opts')\n    }\n\n    const { signal, method, opaque, body, onInfo, responseHeaders, throwOnError } = opts\n\n    try {\n      if (typeof callback !== 'function') {\n        throw new InvalidArgumentError('invalid callback')\n      }\n\n      if (typeof factory !== 'function') {\n        throw new InvalidArgumentError('invalid factory')\n      }\n\n      if (signal && typeof signal.on !== 'function' && typeof signal.addEventListener !== 'function') {\n        throw new InvalidArgumentError('signal must be an EventEmitter or EventTarget')\n      }\n\n      if (method === 'CONNECT') {\n        throw new InvalidArgumentError('invalid method')\n      }\n\n      if (onInfo && typeof onInfo !== 'function') {\n        throw new InvalidArgumentError('invalid onInfo callback')\n      }\n\n      super('UNDICI_STREAM')\n    } catch (err) {\n      if (util.isStream(body)) {\n        util.destroy(body.on('error', util.nop), err)\n      }\n      throw err\n    }\n\n    this.responseHeaders = responseHeaders || null\n    this.opaque = opaque || null\n    this.factory = factory\n    this.callback = callback\n    this.res = null\n    this.abort = null\n    this.context = null\n    this.trailers = null\n    this.body = body\n    this.onInfo = onInfo || null\n    this.throwOnError = throwOnError || false\n\n    if (util.isStream(body)) {\n      body.on('error', (err) => {\n        this.onError(err)\n      })\n    }\n\n    addSignal(this, signal)\n  }\n\n  onConnect (abort, context) {\n    if (this.reason) {\n      abort(this.reason)\n      return\n    }\n\n    assert(this.callback)\n\n    this.abort = abort\n    this.context = context\n  }\n\n  onHeaders (statusCode, rawHeaders, resume, statusMessage) {\n    const { factory, opaque, context, callback, responseHeaders } = this\n\n    const headers = responseHeaders === 'raw' ? util.parseRawHeaders(rawHeaders) : util.parseHeaders(rawHeaders)\n\n    if (statusCode < 200) {\n      if (this.onInfo) {\n        this.onInfo({ statusCode, headers })\n      }\n      return\n    }\n\n    this.factory = null\n\n    let res\n\n    if (this.throwOnError && statusCode >= 400) {\n      const parsedHeaders = responseHeaders === 'raw' ? util.parseHeaders(rawHeaders) : headers\n      const contentType = parsedHeaders['content-type']\n      res = new PassThrough()\n\n      this.callback = null\n      this.runInAsyncScope(getResolveErrorBodyCallback, null,\n        { callback, body: res, contentType, statusCode, statusMessage, headers }\n      )\n    } else {\n      if (factory === null) {\n        return\n      }\n\n      res = this.runInAsyncScope(factory, null, {\n        statusCode,\n        headers,\n        opaque,\n        context\n      })\n\n      if (\n        !res ||\n        typeof res.write !== 'function' ||\n        typeof res.end !== 'function' ||\n        typeof res.on !== 'function'\n      ) {\n        throw new InvalidReturnValueError('expected Writable')\n      }\n\n      // TODO: Avoid finished. It registers an unnecessary amount of listeners.\n      finished(res, { readable: false }, (err) => {\n        const { callback, res, opaque, trailers, abort } = this\n\n        this.res = null\n        if (err || !res.readable) {\n          util.destroy(res, err)\n        }\n\n        this.callback = null\n        this.runInAsyncScope(callback, null, err || null, { opaque, trailers })\n\n        if (err) {\n          abort()\n        }\n      })\n    }\n\n    res.on('drain', resume)\n\n    this.res = res\n\n    const needDrain = res.writableNeedDrain !== undefined\n      ? res.writableNeedDrain\n      : res._writableState?.needDrain\n\n    return needDrain !== true\n  }\n\n  onData (chunk) {\n    const { res } = this\n\n    return res ? res.write(chunk) : true\n  }\n\n  onComplete (trailers) {\n    const { res } = this\n\n    removeSignal(this)\n\n    if (!res) {\n      return\n    }\n\n    this.trailers = util.parseHeaders(trailers)\n\n    res.end()\n  }\n\n  onError (err) {\n    const { res, callback, opaque, body } = this\n\n    removeSignal(this)\n\n    this.factory = null\n\n    if (res) {\n      this.res = null\n      util.destroy(res, err)\n    } else if (callback) {\n      this.callback = null\n      queueMicrotask(() => {\n        this.runInAsyncScope(callback, null, err, { opaque })\n      })\n    }\n\n    if (body) {\n      this.body = null\n      util.destroy(body, err)\n    }\n  }\n}\n\nfunction stream (opts, factory, callback) {\n  if (callback === undefined) {\n    return new Promise((resolve, reject) => {\n      stream.call(this, opts, factory, (err, data) => {\n        return err ? reject(err) : resolve(data)\n      })\n    })\n  }\n\n  try {\n    this.dispatch(opts, new StreamHandler(opts, factory, callback))\n  } catch (err) {\n    if (typeof callback !== 'function') {\n      throw err\n    }\n    const opaque = opts?.opaque\n    queueMicrotask(() => callback(err, { opaque }))\n  }\n}\n\nmodule.exports = stream\n", "'use strict'\n\nconst {\n  Readable,\n  Duplex,\n  PassThrough\n} = require('node:stream')\nconst {\n  InvalidArgumentError,\n  InvalidReturnValueError,\n  RequestAbortedError\n} = require('../core/errors')\nconst util = require('../core/util')\nconst { AsyncResource } = require('node:async_hooks')\nconst { addSignal, removeSignal } = require('./abort-signal')\nconst assert = require('node:assert')\n\nconst kResume = Symbol('resume')\n\nclass PipelineRequest extends Readable {\n  constructor () {\n    super({ autoDestroy: true })\n\n    this[kResume] = null\n  }\n\n  _read () {\n    const { [kResume]: resume } = this\n\n    if (resume) {\n      this[kResume] = null\n      resume()\n    }\n  }\n\n  _destroy (err, callback) {\n    this._read()\n\n    callback(err)\n  }\n}\n\nclass PipelineResponse extends Readable {\n  constructor (resume) {\n    super({ autoDestroy: true })\n    this[kResume] = resume\n  }\n\n  _read () {\n    this[kResume]()\n  }\n\n  _destroy (err, callback) {\n    if (!err && !this._readableState.endEmitted) {\n      err = new RequestAbortedError()\n    }\n\n    callback(err)\n  }\n}\n\nclass PipelineHandler extends AsyncResource {\n  constructor (opts, handler) {\n    if (!opts || typeof opts !== 'object') {\n      throw new InvalidArgumentError('invalid opts')\n    }\n\n    if (typeof handler !== 'function') {\n      throw new InvalidArgumentError('invalid handler')\n    }\n\n    const { signal, method, opaque, onInfo, responseHeaders } = opts\n\n    if (signal && typeof signal.on !== 'function' && typeof signal.addEventListener !== 'function') {\n      throw new InvalidArgumentError('signal must be an EventEmitter or EventTarget')\n    }\n\n    if (method === 'CONNECT') {\n      throw new InvalidArgumentError('invalid method')\n    }\n\n    if (onInfo && typeof onInfo !== 'function') {\n      throw new InvalidArgumentError('invalid onInfo callback')\n    }\n\n    super('UNDICI_PIPELINE')\n\n    this.opaque = opaque || null\n    this.responseHeaders = responseHeaders || null\n    this.handler = handler\n    this.abort = null\n    this.context = null\n    this.onInfo = onInfo || null\n\n    this.req = new PipelineRequest().on('error', util.nop)\n\n    this.ret = new Duplex({\n      readableObjectMode: opts.objectMode,\n      autoDestroy: true,\n      read: () => {\n        const { body } = this\n\n        if (body?.resume) {\n          body.resume()\n        }\n      },\n      write: (chunk, encoding, callback) => {\n        const { req } = this\n\n        if (req.push(chunk, encoding) || req._readableState.destroyed) {\n          callback()\n        } else {\n          req[kResume] = callback\n        }\n      },\n      destroy: (err, callback) => {\n        const { body, req, res, ret, abort } = this\n\n        if (!err && !ret._readableState.endEmitted) {\n          err = new RequestAbortedError()\n        }\n\n        if (abort && err) {\n          abort()\n        }\n\n        util.destroy(body, err)\n        util.destroy(req, err)\n        util.destroy(res, err)\n\n        removeSignal(this)\n\n        callback(err)\n      }\n    }).on('prefinish', () => {\n      const { req } = this\n\n      // Node < 15 does not call _final in same tick.\n      req.push(null)\n    })\n\n    this.res = null\n\n    addSignal(this, signal)\n  }\n\n  onConnect (abort, context) {\n    const { ret, res } = this\n\n    if (this.reason) {\n      abort(this.reason)\n      return\n    }\n\n    assert(!res, 'pipeline cannot be retried')\n    assert(!ret.destroyed)\n\n    this.abort = abort\n    this.context = context\n  }\n\n  onHeaders (statusCode, rawHeaders, resume) {\n    const { opaque, handler, context } = this\n\n    if (statusCode < 200) {\n      if (this.onInfo) {\n        const headers = this.responseHeaders === 'raw' ? util.parseRawHeaders(rawHeaders) : util.parseHeaders(rawHeaders)\n        this.onInfo({ statusCode, headers })\n      }\n      return\n    }\n\n    this.res = new PipelineResponse(resume)\n\n    let body\n    try {\n      this.handler = null\n      const headers = this.responseHeaders === 'raw' ? util.parseRawHeaders(rawHeaders) : util.parseHeaders(rawHeaders)\n      body = this.runInAsyncScope(handler, null, {\n        statusCode,\n        headers,\n        opaque,\n        body: this.res,\n        context\n      })\n    } catch (err) {\n      this.res.on('error', util.nop)\n      throw err\n    }\n\n    if (!body || typeof body.on !== 'function') {\n      throw new InvalidReturnValueError('expected Readable')\n    }\n\n    body\n      .on('data', (chunk) => {\n        const { ret, body } = this\n\n        if (!ret.push(chunk) && body.pause) {\n          body.pause()\n        }\n      })\n      .on('error', (err) => {\n        const { ret } = this\n\n        util.destroy(ret, err)\n      })\n      .on('end', () => {\n        const { ret } = this\n\n        ret.push(null)\n      })\n      .on('close', () => {\n        const { ret } = this\n\n        if (!ret._readableState.ended) {\n          util.destroy(ret, new RequestAbortedError())\n        }\n      })\n\n    this.body = body\n  }\n\n  onData (chunk) {\n    const { res } = this\n    return res.push(chunk)\n  }\n\n  onComplete (trailers) {\n    const { res } = this\n    res.push(null)\n  }\n\n  onError (err) {\n    const { ret } = this\n    this.handler = null\n    util.destroy(ret, err)\n  }\n}\n\nfunction pipeline (opts, handler) {\n  try {\n    const pipelineHandler = new PipelineHandler(opts, handler)\n    this.dispatch({ ...opts, body: pipelineHandler.req }, pipelineHandler)\n    return pipelineHandler.ret\n  } catch (err) {\n    return new PassThrough().destroy(err)\n  }\n}\n\nmodule.exports = pipeline\n", "'use strict'\n\nconst { InvalidArgumentError, SocketError } = require('../core/errors')\nconst { AsyncResource } = require('node:async_hooks')\nconst util = require('../core/util')\nconst { addSignal, removeSignal } = require('./abort-signal')\nconst assert = require('node:assert')\n\nclass UpgradeHandler extends AsyncResource {\n  constructor (opts, callback) {\n    if (!opts || typeof opts !== 'object') {\n      throw new InvalidArgumentError('invalid opts')\n    }\n\n    if (typeof callback !== 'function') {\n      throw new InvalidArgumentError('invalid callback')\n    }\n\n    const { signal, opaque, responseHeaders } = opts\n\n    if (signal && typeof signal.on !== 'function' && typeof signal.addEventListener !== 'function') {\n      throw new InvalidArgumentError('signal must be an EventEmitter or EventTarget')\n    }\n\n    super('UNDICI_UPGRADE')\n\n    this.responseHeaders = responseHeaders || null\n    this.opaque = opaque || null\n    this.callback = callback\n    this.abort = null\n    this.context = null\n\n    addSignal(this, signal)\n  }\n\n  onConnect (abort, context) {\n    if (this.reason) {\n      abort(this.reason)\n      return\n    }\n\n    assert(this.callback)\n\n    this.abort = abort\n    this.context = null\n  }\n\n  onHeaders () {\n    throw new SocketError('bad upgrade', null)\n  }\n\n  onUpgrade (statusCode, rawHeaders, socket) {\n    const { callback, opaque, context } = this\n\n    assert.strictEqual(statusCode, 101)\n\n    removeSignal(this)\n\n    this.callback = null\n    const headers = this.responseHeaders === 'raw' ? util.parseRawHeaders(rawHeaders) : util.parseHeaders(rawHeaders)\n    this.runInAsyncScope(callback, null, null, {\n      headers,\n      socket,\n      opaque,\n      context\n    })\n  }\n\n  onError (err) {\n    const { callback, opaque } = this\n\n    removeSignal(this)\n\n    if (callback) {\n      this.callback = null\n      queueMicrotask(() => {\n        this.runInAsyncScope(callback, null, err, { opaque })\n      })\n    }\n  }\n}\n\nfunction upgrade (opts, callback) {\n  if (callback === undefined) {\n    return new Promise((resolve, reject) => {\n      upgrade.call(this, opts, (err, data) => {\n        return err ? reject(err) : resolve(data)\n      })\n    })\n  }\n\n  try {\n    const upgradeHandler = new UpgradeHandler(opts, callback)\n    this.dispatch({\n      ...opts,\n      method: opts.method || 'GET',\n      upgrade: opts.protocol || 'Websocket'\n    }, upgradeHandler)\n  } catch (err) {\n    if (typeof callback !== 'function') {\n      throw err\n    }\n    const opaque = opts?.opaque\n    queueMicrotask(() => callback(err, { opaque }))\n  }\n}\n\nmodule.exports = upgrade\n", "'use strict'\n\nconst assert = require('node:assert')\nconst { AsyncResource } = require('node:async_hooks')\nconst { InvalidArgumentError, SocketError } = require('../core/errors')\nconst util = require('../core/util')\nconst { addSignal, removeSignal } = require('./abort-signal')\n\nclass ConnectHandler extends AsyncResource {\n  constructor (opts, callback) {\n    if (!opts || typeof opts !== 'object') {\n      throw new InvalidArgumentError('invalid opts')\n    }\n\n    if (typeof callback !== 'function') {\n      throw new InvalidArgumentError('invalid callback')\n    }\n\n    const { signal, opaque, responseHeaders } = opts\n\n    if (signal && typeof signal.on !== 'function' && typeof signal.addEventListener !== 'function') {\n      throw new InvalidArgumentError('signal must be an EventEmitter or EventTarget')\n    }\n\n    super('UNDICI_CONNECT')\n\n    this.opaque = opaque || null\n    this.responseHeaders = responseHeaders || null\n    this.callback = callback\n    this.abort = null\n\n    addSignal(this, signal)\n  }\n\n  onConnect (abort, context) {\n    if (this.reason) {\n      abort(this.reason)\n      return\n    }\n\n    assert(this.callback)\n\n    this.abort = abort\n    this.context = context\n  }\n\n  onHeaders () {\n    throw new SocketError('bad connect', null)\n  }\n\n  onUpgrade (statusCode, rawHeaders, socket) {\n    const { callback, opaque, context } = this\n\n    removeSignal(this)\n\n    this.callback = null\n\n    let headers = rawHeaders\n    // Indicates is an HTTP2Session\n    if (headers != null) {\n      headers = this.responseHeaders === 'raw' ? util.parseRawHeaders(rawHeaders) : util.parseHeaders(rawHeaders)\n    }\n\n    this.runInAsyncScope(callback, null, null, {\n      statusCode,\n      headers,\n      socket,\n      opaque,\n      context\n    })\n  }\n\n  onError (err) {\n    const { callback, opaque } = this\n\n    removeSignal(this)\n\n    if (callback) {\n      this.callback = null\n      queueMicrotask(() => {\n        this.runInAsyncScope(callback, null, err, { opaque })\n      })\n    }\n  }\n}\n\nfunction connect (opts, callback) {\n  if (callback === undefined) {\n    return new Promise((resolve, reject) => {\n      connect.call(this, opts, (err, data) => {\n        return err ? reject(err) : resolve(data)\n      })\n    })\n  }\n\n  try {\n    const connectHandler = new ConnectHandler(opts, callback)\n    this.dispatch({ ...opts, method: 'CONNECT' }, connectHandler)\n  } catch (err) {\n    if (typeof callback !== 'function') {\n      throw err\n    }\n    const opaque = opts?.opaque\n    queueMicrotask(() => callback(err, { opaque }))\n  }\n}\n\nmodule.exports = connect\n", "'use strict'\n\nmodule.exports.request = require('./api-request')\nmodule.exports.stream = require('./api-stream')\nmodule.exports.pipeline = require('./api-pipeline')\nmodule.exports.upgrade = require('./api-upgrade')\nmodule.exports.connect = require('./api-connect')\n", "'use strict'\n\nconst { UndiciError } = require('../core/errors')\n\nclass MockNotMatchedError extends UndiciError {\n  constructor (message) {\n    super(message)\n    Error.captureStackTrace(this, MockNotMatchedError)\n    this.name = 'MockNotMatchedError'\n    this.message = message || 'The request does not match any registered mock dispatches'\n    this.code = 'UND_MOCK_ERR_MOCK_NOT_MATCHED'\n  }\n}\n\nmodule.exports = {\n  MockNotMatchedError\n}\n", "'use strict'\n\nmodule.exports = {\n  kAgent: Symbol('agent'),\n  kOptions: Symbol('options'),\n  kFactory: Symbol('factory'),\n  kDispatches: Symbol('dispatches'),\n  kDispatchKey: Symbol('dispatch key'),\n  kDefaultHeaders: Symbol('default headers'),\n  kDefaultTrailers: Symbol('default trailers'),\n  kContentLength: Symbol('content length'),\n  kMockAgent: Symbol('mock agent'),\n  kMockAgentSet: Symbol('mock agent set'),\n  kMockAgentGet: Symbol('mock agent get'),\n  kMockDispatch: Symbol('mock dispatch'),\n  kClose: Symbol('close'),\n  kOriginalClose: Symbol('original agent close'),\n  kOrigin: Symbol('origin'),\n  kIsMockActive: Symbol('is mock active'),\n  kNetConnect: Symbol('net connect'),\n  kGetNetConnect: Symbol('get net connect'),\n  kConnected: Symbol('connected')\n}\n", "'use strict'\n\nconst { MockNotMatchedError } = require('./mock-errors')\nconst {\n  kDispatches,\n  kMockAgent,\n  kOriginalDispatch,\n  kOrigin,\n  kGetNetConnect\n} = require('./mock-symbols')\nconst { buildURL } = require('../core/util')\nconst { STATUS_CODES } = require('node:http')\nconst {\n  types: {\n    isPromise\n  }\n} = require('node:util')\n\nfunction matchValue (match, value) {\n  if (typeof match === 'string') {\n    return match === value\n  }\n  if (match instanceof RegExp) {\n    return match.test(value)\n  }\n  if (typeof match === 'function') {\n    return match(value) === true\n  }\n  return false\n}\n\nfunction lowerCaseEntries (headers) {\n  return Object.fromEntries(\n    Object.entries(headers).map(([headerName, headerValue]) => {\n      return [headerName.toLocaleLowerCase(), headerValue]\n    })\n  )\n}\n\n/**\n * @param {import('../../index').Headers|string[]|Record<string, string>} headers\n * @param {string} key\n */\nfunction getHeaderByName (headers, key) {\n  if (Array.isArray(headers)) {\n    for (let i = 0; i < headers.length; i += 2) {\n      if (headers[i].toLocaleLowerCase() === key.toLocaleLowerCase()) {\n        return headers[i + 1]\n      }\n    }\n\n    return undefined\n  } else if (typeof headers.get === 'function') {\n    return headers.get(key)\n  } else {\n    return lowerCaseEntries(headers)[key.toLocaleLowerCase()]\n  }\n}\n\n/** @param {string[]} headers */\nfunction buildHeadersFromArray (headers) { // fetch HeadersList\n  const clone = headers.slice()\n  const entries = []\n  for (let index = 0; index < clone.length; index += 2) {\n    entries.push([clone[index], clone[index + 1]])\n  }\n  return Object.fromEntries(entries)\n}\n\nfunction matchHeaders (mockDispatch, headers) {\n  if (typeof mockDispatch.headers === 'function') {\n    if (Array.isArray(headers)) { // fetch HeadersList\n      headers = buildHeadersFromArray(headers)\n    }\n    return mockDispatch.headers(headers ? lowerCaseEntries(headers) : {})\n  }\n  if (typeof mockDispatch.headers === 'undefined') {\n    return true\n  }\n  if (typeof headers !== 'object' || typeof mockDispatch.headers !== 'object') {\n    return false\n  }\n\n  for (const [matchHeaderName, matchHeaderValue] of Object.entries(mockDispatch.headers)) {\n    const headerValue = getHeaderByName(headers, matchHeaderName)\n\n    if (!matchValue(matchHeaderValue, headerValue)) {\n      return false\n    }\n  }\n  return true\n}\n\nfunction safeUrl (path) {\n  if (typeof path !== 'string') {\n    return path\n  }\n\n  const pathSegments = path.split('?')\n\n  if (pathSegments.length !== 2) {\n    return path\n  }\n\n  const qp = new URLSearchParams(pathSegments.pop())\n  qp.sort()\n  return [...pathSegments, qp.toString()].join('?')\n}\n\nfunction matchKey (mockDispatch, { path, method, body, headers }) {\n  const pathMatch = matchValue(mockDispatch.path, path)\n  const methodMatch = matchValue(mockDispatch.method, method)\n  const bodyMatch = typeof mockDispatch.body !== 'undefined' ? matchValue(mockDispatch.body, body) : true\n  const headersMatch = matchHeaders(mockDispatch, headers)\n  return pathMatch && methodMatch && bodyMatch && headersMatch\n}\n\nfunction getResponseData (data) {\n  if (Buffer.isBuffer(data)) {\n    return data\n  } else if (typeof data === 'object') {\n    return JSON.stringify(data)\n  } else {\n    return data.toString()\n  }\n}\n\nfunction getMockDispatch (mockDispatches, key) {\n  const basePath = key.query ? buildURL(key.path, key.query) : key.path\n  const resolvedPath = typeof basePath === 'string' ? safeUrl(basePath) : basePath\n\n  // Match path\n  let matchedMockDispatches = mockDispatches.filter(({ consumed }) => !consumed).filter(({ path }) => matchValue(safeUrl(path), resolvedPath))\n  if (matchedMockDispatches.length === 0) {\n    throw new MockNotMatchedError(`Mock dispatch not matched for path '${resolvedPath}'`)\n  }\n\n  // Match method\n  matchedMockDispatches = matchedMockDispatches.filter(({ method }) => matchValue(method, key.method))\n  if (matchedMockDispatches.length === 0) {\n    throw new MockNotMatchedError(`Mock dispatch not matched for method '${key.method}' on path '${resolvedPath}'`)\n  }\n\n  // Match body\n  matchedMockDispatches = matchedMockDispatches.filter(({ body }) => typeof body !== 'undefined' ? matchValue(body, key.body) : true)\n  if (matchedMockDispatches.length === 0) {\n    throw new MockNotMatchedError(`Mock dispatch not matched for body '${key.body}' on path '${resolvedPath}'`)\n  }\n\n  // Match headers\n  matchedMockDispatches = matchedMockDispatches.filter((mockDispatch) => matchHeaders(mockDispatch, key.headers))\n  if (matchedMockDispatches.length === 0) {\n    const headers = typeof key.headers === 'object' ? JSON.stringify(key.headers) : key.headers\n    throw new MockNotMatchedError(`Mock dispatch not matched for headers '${headers}' on path '${resolvedPath}'`)\n  }\n\n  return matchedMockDispatches[0]\n}\n\nfunction addMockDispatch (mockDispatches, key, data) {\n  const baseData = { timesInvoked: 0, times: 1, persist: false, consumed: false }\n  const replyData = typeof data === 'function' ? { callback: data } : { ...data }\n  const newMockDispatch = { ...baseData, ...key, pending: true, data: { error: null, ...replyData } }\n  mockDispatches.push(newMockDispatch)\n  return newMockDispatch\n}\n\nfunction deleteMockDispatch (mockDispatches, key) {\n  const index = mockDispatches.findIndex(dispatch => {\n    if (!dispatch.consumed) {\n      return false\n    }\n    return matchKey(dispatch, key)\n  })\n  if (index !== -1) {\n    mockDispatches.splice(index, 1)\n  }\n}\n\nfunction buildKey (opts) {\n  const { path, method, body, headers, query } = opts\n  return {\n    path,\n    method,\n    body,\n    headers,\n    query\n  }\n}\n\nfunction generateKeyValues (data) {\n  const keys = Object.keys(data)\n  const result = []\n  for (let i = 0; i < keys.length; ++i) {\n    const key = keys[i]\n    const value = data[key]\n    const name = Buffer.from(`${key}`)\n    if (Array.isArray(value)) {\n      for (let j = 0; j < value.length; ++j) {\n        result.push(name, Buffer.from(`${value[j]}`))\n      }\n    } else {\n      result.push(name, Buffer.from(`${value}`))\n    }\n  }\n  return result\n}\n\n/**\n * @see https://developer.mozilla.org/en-US/docs/Web/HTTP/Status\n * @param {number} statusCode\n */\nfunction getStatusText (statusCode) {\n  return STATUS_CODES[statusCode] || 'unknown'\n}\n\nasync function getResponse (body) {\n  const buffers = []\n  for await (const data of body) {\n    buffers.push(data)\n  }\n  return Buffer.concat(buffers).toString('utf8')\n}\n\n/**\n * Mock dispatch function used to simulate undici dispatches\n */\nfunction mockDispatch (opts, handler) {\n  // Get mock dispatch from built key\n  const key = buildKey(opts)\n  const mockDispatch = getMockDispatch(this[kDispatches], key)\n\n  mockDispatch.timesInvoked++\n\n  // Here's where we resolve a callback if a callback is present for the dispatch data.\n  if (mockDispatch.data.callback) {\n    mockDispatch.data = { ...mockDispatch.data, ...mockDispatch.data.callback(opts) }\n  }\n\n  // Parse mockDispatch data\n  const { data: { statusCode, data, headers, trailers, error }, delay, persist } = mockDispatch\n  const { timesInvoked, times } = mockDispatch\n\n  // If it's used up and not persistent, mark as consumed\n  mockDispatch.consumed = !persist && timesInvoked >= times\n  mockDispatch.pending = timesInvoked < times\n\n  // If specified, trigger dispatch error\n  if (error !== null) {\n    deleteMockDispatch(this[kDispatches], key)\n    handler.onError(error)\n    return true\n  }\n\n  // Handle the request with a delay if necessary\n  if (typeof delay === 'number' && delay > 0) {\n    setTimeout(() => {\n      handleReply(this[kDispatches])\n    }, delay)\n  } else {\n    handleReply(this[kDispatches])\n  }\n\n  function handleReply (mockDispatches, _data = data) {\n    // fetch's HeadersList is a 1D string array\n    const optsHeaders = Array.isArray(opts.headers)\n      ? buildHeadersFromArray(opts.headers)\n      : opts.headers\n    const body = typeof _data === 'function'\n      ? _data({ ...opts, headers: optsHeaders })\n      : _data\n\n    // util.types.isPromise is likely needed for jest.\n    if (isPromise(body)) {\n      // If handleReply is asynchronous, throwing an error\n      // in the callback will reject the promise, rather than\n      // synchronously throw the error, which breaks some tests.\n      // Rather, we wait for the callback to resolve if it is a\n      // promise, and then re-run handleReply with the new body.\n      body.then((newData) => handleReply(mockDispatches, newData))\n      return\n    }\n\n    const responseData = getResponseData(body)\n    const responseHeaders = generateKeyValues(headers)\n    const responseTrailers = generateKeyValues(trailers)\n\n    handler.onConnect?.(err => handler.onError(err), null)\n    handler.onHeaders?.(statusCode, responseHeaders, resume, getStatusText(statusCode))\n    handler.onData?.(Buffer.from(responseData))\n    handler.onComplete?.(responseTrailers)\n    deleteMockDispatch(mockDispatches, key)\n  }\n\n  function resume () {}\n\n  return true\n}\n\nfunction buildMockDispatch () {\n  const agent = this[kMockAgent]\n  const origin = this[kOrigin]\n  const originalDispatch = this[kOriginalDispatch]\n\n  return function dispatch (opts, handler) {\n    if (agent.isMockActive) {\n      try {\n        mockDispatch.call(this, opts, handler)\n      } catch (error) {\n        if (error instanceof MockNotMatchedError) {\n          const netConnect = agent[kGetNetConnect]()\n          if (netConnect === false) {\n            throw new MockNotMatchedError(`${error.message}: subsequent request to origin ${origin} was not allowed (net.connect disabled)`)\n          }\n          if (checkNetConnect(netConnect, origin)) {\n            originalDispatch.call(this, opts, handler)\n          } else {\n            throw new MockNotMatchedError(`${error.message}: subsequent request to origin ${origin} was not allowed (net.connect is not enabled for this origin)`)\n          }\n        } else {\n          throw error\n        }\n      }\n    } else {\n      originalDispatch.call(this, opts, handler)\n    }\n  }\n}\n\nfunction checkNetConnect (netConnect, origin) {\n  const url = new URL(origin)\n  if (netConnect === true) {\n    return true\n  } else if (Array.isArray(netConnect) && netConnect.some((matcher) => matchValue(matcher, url.host))) {\n    return true\n  }\n  return false\n}\n\nfunction buildMockOptions (opts) {\n  if (opts) {\n    const { agent, ...mockOptions } = opts\n    return mockOptions\n  }\n}\n\nmodule.exports = {\n  getResponseData,\n  getMockDispatch,\n  addMockDispatch,\n  deleteMockDispatch,\n  buildKey,\n  generateKeyValues,\n  matchValue,\n  getResponse,\n  getStatusText,\n  mockDispatch,\n  buildMockDispatch,\n  checkNetConnect,\n  buildMockOptions,\n  getHeaderByName,\n  buildHeadersFromArray\n}\n", "'use strict'\n\nconst { getResponseData, buildKey, addMockDispatch } = require('./mock-utils')\nconst {\n  kDispatches,\n  kDispatchKey,\n  kDefaultHeaders,\n  kDefaultTrailers,\n  kContentLength,\n  kMockDispatch\n} = require('./mock-symbols')\nconst { InvalidArgumentError } = require('../core/errors')\nconst { buildURL } = require('../core/util')\n\n/**\n * Defines the scope API for an interceptor reply\n */\nclass MockScope {\n  constructor (mockDispatch) {\n    this[kMockDispatch] = mockDispatch\n  }\n\n  /**\n   * Delay a reply by a set amount in ms.\n   */\n  delay (waitInMs) {\n    if (typeof waitInMs !== 'number' || !Number.isInteger(waitInMs) || waitInMs <= 0) {\n      throw new InvalidArgumentError('waitInMs must be a valid integer > 0')\n    }\n\n    this[kMockDispatch].delay = waitInMs\n    return this\n  }\n\n  /**\n   * For a defined reply, never mark as consumed.\n   */\n  persist () {\n    this[kMockDispatch].persist = true\n    return this\n  }\n\n  /**\n   * Allow one to define a reply for a set amount of matching requests.\n   */\n  times (repeatTimes) {\n    if (typeof repeatTimes !== 'number' || !Number.isInteger(repeatTimes) || repeatTimes <= 0) {\n      throw new InvalidArgumentError('repeatTimes must be a valid integer > 0')\n    }\n\n    this[kMockDispatch].times = repeatTimes\n    return this\n  }\n}\n\n/**\n * Defines an interceptor for a Mock\n */\nclass MockInterceptor {\n  constructor (opts, mockDispatches) {\n    if (typeof opts !== 'object') {\n      throw new InvalidArgumentError('opts must be an object')\n    }\n    if (typeof opts.path === 'undefined') {\n      throw new InvalidArgumentError('opts.path must be defined')\n    }\n    if (typeof opts.method === 'undefined') {\n      opts.method = 'GET'\n    }\n    // See https://github.com/nodejs/undici/issues/1245\n    // As per RFC 3986, clients are not supposed to send URI\n    // fragments to servers when they retrieve a document,\n    if (typeof opts.path === 'string') {\n      if (opts.query) {\n        opts.path = buildURL(opts.path, opts.query)\n      } else {\n        // Matches https://github.com/nodejs/undici/blob/main/lib/web/fetch/index.js#L1811\n        const parsedURL = new URL(opts.path, 'data://')\n        opts.path = parsedURL.pathname + parsedURL.search\n      }\n    }\n    if (typeof opts.method === 'string') {\n      opts.method = opts.method.toUpperCase()\n    }\n\n    this[kDispatchKey] = buildKey(opts)\n    this[kDispatches] = mockDispatches\n    this[kDefaultHeaders] = {}\n    this[kDefaultTrailers] = {}\n    this[kContentLength] = false\n  }\n\n  createMockScopeDispatchData ({ statusCode, data, responseOptions }) {\n    const responseData = getResponseData(data)\n    const contentLength = this[kContentLength] ? { 'content-length': responseData.length } : {}\n    const headers = { ...this[kDefaultHeaders], ...contentLength, ...responseOptions.headers }\n    const trailers = { ...this[kDefaultTrailers], ...responseOptions.trailers }\n\n    return { statusCode, data, headers, trailers }\n  }\n\n  validateReplyParameters (replyParameters) {\n    if (typeof replyParameters.statusCode === 'undefined') {\n      throw new InvalidArgumentError('statusCode must be defined')\n    }\n    if (typeof replyParameters.responseOptions !== 'object' || replyParameters.responseOptions === null) {\n      throw new InvalidArgumentError('responseOptions must be an object')\n    }\n  }\n\n  /**\n   * Mock an undici request with a defined reply.\n   */\n  reply (replyOptionsCallbackOrStatusCode) {\n    // Values of reply aren't available right now as they\n    // can only be available when the reply callback is invoked.\n    if (typeof replyOptionsCallbackOrStatusCode === 'function') {\n      // We'll first wrap the provided callback in another function,\n      // this function will properly resolve the data from the callback\n      // when invoked.\n      const wrappedDefaultsCallback = (opts) => {\n        // Our reply options callback contains the parameter for statusCode, data and options.\n        const resolvedData = replyOptionsCallbackOrStatusCode(opts)\n\n        // Check if it is in the right format\n        if (typeof resolvedData !== 'object' || resolvedData === null) {\n          throw new InvalidArgumentError('reply options callback must return an object')\n        }\n\n        const replyParameters = { data: '', responseOptions: {}, ...resolvedData }\n        this.validateReplyParameters(replyParameters)\n        // Since the values can be obtained immediately we return them\n        // from this higher order function that will be resolved later.\n        return {\n          ...this.createMockScopeDispatchData(replyParameters)\n        }\n      }\n\n      // Add usual dispatch data, but this time set the data parameter to function that will eventually provide data.\n      const newMockDispatch = addMockDispatch(this[kDispatches], this[kDispatchKey], wrappedDefaultsCallback)\n      return new MockScope(newMockDispatch)\n    }\n\n    // We can have either one or three parameters, if we get here,\n    // we should have 1-3 parameters. So we spread the arguments of\n    // this function to obtain the parameters, since replyData will always\n    // just be the statusCode.\n    const replyParameters = {\n      statusCode: replyOptionsCallbackOrStatusCode,\n      data: arguments[1] === undefined ? '' : arguments[1],\n      responseOptions: arguments[2] === undefined ? {} : arguments[2]\n    }\n    this.validateReplyParameters(replyParameters)\n\n    // Send in-already provided data like usual\n    const dispatchData = this.createMockScopeDispatchData(replyParameters)\n    const newMockDispatch = addMockDispatch(this[kDispatches], this[kDispatchKey], dispatchData)\n    return new MockScope(newMockDispatch)\n  }\n\n  /**\n   * Mock an undici request with a defined error.\n   */\n  replyWithError (error) {\n    if (typeof error === 'undefined') {\n      throw new InvalidArgumentError('error must be defined')\n    }\n\n    const newMockDispatch = addMockDispatch(this[kDispatches], this[kDispatchKey], { error })\n    return new MockScope(newMockDispatch)\n  }\n\n  /**\n   * Set default reply headers on the interceptor for subsequent replies\n   */\n  defaultReplyHeaders (headers) {\n    if (typeof headers === 'undefined') {\n      throw new InvalidArgumentError('headers must be defined')\n    }\n\n    this[kDefaultHeaders] = headers\n    return this\n  }\n\n  /**\n   * Set default reply trailers on the interceptor for subsequent replies\n   */\n  defaultReplyTrailers (trailers) {\n    if (typeof trailers === 'undefined') {\n      throw new InvalidArgumentError('trailers must be defined')\n    }\n\n    this[kDefaultTrailers] = trailers\n    return this\n  }\n\n  /**\n   * Set reply content length header for replies on the interceptor\n   */\n  replyContentLength () {\n    this[kContentLength] = true\n    return this\n  }\n}\n\nmodule.exports.MockInterceptor = MockInterceptor\nmodule.exports.MockScope = MockScope\n", "'use strict'\n\nconst { promisify } = require('node:util')\nconst Client = require('../dispatcher/client')\nconst { buildMockDispatch } = require('./mock-utils')\nconst {\n  kDispatches,\n  kMockAgent,\n  kClose,\n  kOriginalClose,\n  kOrigin,\n  kOriginalDispatch,\n  kConnected\n} = require('./mock-symbols')\nconst { MockInterceptor } = require('./mock-interceptor')\nconst Symbols = require('../core/symbols')\nconst { InvalidArgumentError } = require('../core/errors')\n\n/**\n * MockClient provides an API that extends the Client to influence the mockDispatches.\n */\nclass MockClient extends Client {\n  constructor (origin, opts) {\n    super(origin, opts)\n\n    if (!opts || !opts.agent || typeof opts.agent.dispatch !== 'function') {\n      throw new InvalidArgumentError('Argument opts.agent must implement Agent')\n    }\n\n    this[kMockAgent] = opts.agent\n    this[kOrigin] = origin\n    this[kDispatches] = []\n    this[kConnected] = 1\n    this[kOriginalDispatch] = this.dispatch\n    this[kOriginalClose] = this.close.bind(this)\n\n    this.dispatch = buildMockDispatch.call(this)\n    this.close = this[kClose]\n  }\n\n  get [Symbols.kConnected] () {\n    return this[kConnected]\n  }\n\n  /**\n   * Sets up the base interceptor for mocking replies from undici.\n   */\n  intercept (opts) {\n    return new MockInterceptor(opts, this[kDispatches])\n  }\n\n  async [kClose] () {\n    await promisify(this[kOriginalClose])()\n    this[kConnected] = 0\n    this[kMockAgent][Symbols.kClients].delete(this[kOrigin])\n  }\n}\n\nmodule.exports = MockClient\n", "'use strict'\n\nconst { promisify } = require('node:util')\nconst Pool = require('../dispatcher/pool')\nconst { buildMockDispatch } = require('./mock-utils')\nconst {\n  kDispatches,\n  kMockAgent,\n  kClose,\n  kOriginalClose,\n  kOrigin,\n  kOriginalDispatch,\n  kConnected\n} = require('./mock-symbols')\nconst { MockInterceptor } = require('./mock-interceptor')\nconst Symbols = require('../core/symbols')\nconst { InvalidArgumentError } = require('../core/errors')\n\n/**\n * MockPool provides an API that extends the Pool to influence the mockDispatches.\n */\nclass MockPool extends Pool {\n  constructor (origin, opts) {\n    super(origin, opts)\n\n    if (!opts || !opts.agent || typeof opts.agent.dispatch !== 'function') {\n      throw new InvalidArgumentError('Argument opts.agent must implement Agent')\n    }\n\n    this[kMockAgent] = opts.agent\n    this[kOrigin] = origin\n    this[kDispatches] = []\n    this[kConnected] = 1\n    this[kOriginalDispatch] = this.dispatch\n    this[kOriginalClose] = this.close.bind(this)\n\n    this.dispatch = buildMockDispatch.call(this)\n    this.close = this[kClose]\n  }\n\n  get [Symbols.kConnected] () {\n    return this[kConnected]\n  }\n\n  /**\n   * Sets up the base interceptor for mocking replies from undici.\n   */\n  intercept (opts) {\n    return new MockInterceptor(opts, this[kDispatches])\n  }\n\n  async [kClose] () {\n    await promisify(this[kOriginalClose])()\n    this[kConnected] = 0\n    this[kMockAgent][Symbols.kClients].delete(this[kOrigin])\n  }\n}\n\nmodule.exports = MockPool\n", "'use strict'\n\nconst singulars = {\n  pronoun: 'it',\n  is: 'is',\n  was: 'was',\n  this: 'this'\n}\n\nconst plurals = {\n  pronoun: 'they',\n  is: 'are',\n  was: 'were',\n  this: 'these'\n}\n\nmodule.exports = class Pluralizer {\n  constructor (singular, plural) {\n    this.singular = singular\n    this.plural = plural\n  }\n\n  pluralize (count) {\n    const one = count === 1\n    const keys = one ? singulars : plurals\n    const noun = one ? this.singular : this.plural\n    return { ...keys, count, noun }\n  }\n}\n", "'use strict'\n\nconst { Transform } = require('node:stream')\nconst { Console } = require('node:console')\n\nconst PERSISTENT = process.versions.icu ? '✅' : 'Y '\nconst NOT_PERSISTENT = process.versions.icu ? '❌' : 'N '\n\n/**\n * Gets the output of `console.table(…)` as a string.\n */\nmodule.exports = class PendingInterceptorsFormatter {\n  constructor ({ disableColors } = {}) {\n    this.transform = new Transform({\n      transform (chunk, _enc, cb) {\n        cb(null, chunk)\n      }\n    })\n\n    this.logger = new Console({\n      stdout: this.transform,\n      inspectOptions: {\n        colors: !disableColors && !process.env.CI\n      }\n    })\n  }\n\n  format (pendingInterceptors) {\n    const withPrettyHeaders = pendingInterceptors.map(\n      ({ method, path, data: { statusCode }, persist, times, timesInvoked, origin }) => ({\n        Method: method,\n        Origin: origin,\n        Path: path,\n        'Status code': statusCode,\n        Persistent: persist ? PERSISTENT : NOT_PERSISTENT,\n        Invocations: timesInvoked,\n        Remaining: persist ? Infinity : times - timesInvoked\n      }))\n\n    this.logger.table(withPrettyHeaders)\n    return this.transform.read().toString()\n  }\n}\n", "'use strict'\n\nconst { kClients } = require('../core/symbols')\nconst Agent = require('../dispatcher/agent')\nconst {\n  kAgent,\n  kMockAgentSet,\n  kMockAgentGet,\n  kDispatches,\n  kIsMockActive,\n  kNetConnect,\n  kGetNetConnect,\n  kOptions,\n  kFactory\n} = require('./mock-symbols')\nconst MockClient = require('./mock-client')\nconst MockPool = require('./mock-pool')\nconst { matchValue, buildMockOptions } = require('./mock-utils')\nconst { InvalidArgumentError, UndiciError } = require('../core/errors')\nconst Dispatcher = require('../dispatcher/dispatcher')\nconst Pluralizer = require('./pluralizer')\nconst PendingInterceptorsFormatter = require('./pending-interceptors-formatter')\n\nclass MockAgent extends Dispatcher {\n  constructor (opts) {\n    super(opts)\n\n    this[kNetConnect] = true\n    this[kIsMockActive] = true\n\n    // Instantiate Agent and encapsulate\n    if ((opts?.agent && typeof opts.agent.dispatch !== 'function')) {\n      throw new InvalidArgumentError('Argument opts.agent must implement Agent')\n    }\n    const agent = opts?.agent ? opts.agent : new Agent(opts)\n    this[kAgent] = agent\n\n    this[kClients] = agent[kClients]\n    this[kOptions] = buildMockOptions(opts)\n  }\n\n  get (origin) {\n    let dispatcher = this[kMockAgentGet](origin)\n\n    if (!dispatcher) {\n      dispatcher = this[kFactory](origin)\n      this[kMockAgentSet](origin, dispatcher)\n    }\n    return dispatcher\n  }\n\n  dispatch (opts, handler) {\n    // Call MockAgent.get to perform additional setup before dispatching as normal\n    this.get(opts.origin)\n    return this[kAgent].dispatch(opts, handler)\n  }\n\n  async close () {\n    await this[kAgent].close()\n    this[kClients].clear()\n  }\n\n  deactivate () {\n    this[kIsMockActive] = false\n  }\n\n  activate () {\n    this[kIsMockActive] = true\n  }\n\n  enableNetConnect (matcher) {\n    if (typeof matcher === 'string' || typeof matcher === 'function' || matcher instanceof RegExp) {\n      if (Array.isArray(this[kNetConnect])) {\n        this[kNetConnect].push(matcher)\n      } else {\n        this[kNetConnect] = [matcher]\n      }\n    } else if (typeof matcher === 'undefined') {\n      this[kNetConnect] = true\n    } else {\n      throw new InvalidArgumentError('Unsupported matcher. Must be one of String|Function|RegExp.')\n    }\n  }\n\n  disableNetConnect () {\n    this[kNetConnect] = false\n  }\n\n  // This is required to bypass issues caused by using global symbols - see:\n  // https://github.com/nodejs/undici/issues/1447\n  get isMockActive () {\n    return this[kIsMockActive]\n  }\n\n  [kMockAgentSet] (origin, dispatcher) {\n    this[kClients].set(origin, dispatcher)\n  }\n\n  [kFactory] (origin) {\n    const mockOptions = Object.assign({ agent: this }, this[kOptions])\n    return this[kOptions] && this[kOptions].connections === 1\n      ? new MockClient(origin, mockOptions)\n      : new MockPool(origin, mockOptions)\n  }\n\n  [kMockAgentGet] (origin) {\n    // First check if we can immediately find it\n    const client = this[kClients].get(origin)\n    if (client) {\n      return client\n    }\n\n    // If the origin is not a string create a dummy parent pool and return to user\n    if (typeof origin !== 'string') {\n      const dispatcher = this[kFactory]('http://localhost:9999')\n      this[kMockAgentSet](origin, dispatcher)\n      return dispatcher\n    }\n\n    // If we match, create a pool and assign the same dispatches\n    for (const [keyMatcher, nonExplicitDispatcher] of Array.from(this[kClients])) {\n      if (nonExplicitDispatcher && typeof keyMatcher !== 'string' && matchValue(keyMatcher, origin)) {\n        const dispatcher = this[kFactory](origin)\n        this[kMockAgentSet](origin, dispatcher)\n        dispatcher[kDispatches] = nonExplicitDispatcher[kDispatches]\n        return dispatcher\n      }\n    }\n  }\n\n  [kGetNetConnect] () {\n    return this[kNetConnect]\n  }\n\n  pendingInterceptors () {\n    const mockAgentClients = this[kClients]\n\n    return Array.from(mockAgentClients.entries())\n      .flatMap(([origin, scope]) => scope[kDispatches].map(dispatch => ({ ...dispatch, origin })))\n      .filter(({ pending }) => pending)\n  }\n\n  assertNoPendingInterceptors ({ pendingInterceptorsFormatter = new PendingInterceptorsFormatter() } = {}) {\n    const pending = this.pendingInterceptors()\n\n    if (pending.length === 0) {\n      return\n    }\n\n    const pluralizer = new Pluralizer('interceptor', 'interceptors').pluralize(pending.length)\n\n    throw new UndiciError(`\n${pluralizer.count} ${pluralizer.noun} ${pluralizer.is} pending:\n\n${pendingInterceptorsFormatter.format(pending)}\n`.trim())\n  }\n}\n\nmodule.exports = MockAgent\n", "'use strict'\n\n// We include a version number for the Dispatcher API. In case of breaking changes,\n// this version number must be increased to avoid conflicts.\nconst globalDispatcher = Symbol.for('undici.globalDispatcher.1')\nconst { InvalidArgumentError } = require('./core/errors')\nconst Agent = require('./dispatcher/agent')\n\nif (getGlobalDispatcher() === undefined) {\n  setGlobalDispatcher(new Agent())\n}\n\nfunction setGlobalDispatcher (agent) {\n  if (!agent || typeof agent.dispatch !== 'function') {\n    throw new InvalidArgumentError('Argument agent must implement Agent')\n  }\n  Object.defineProperty(globalThis, globalDispatcher, {\n    value: agent,\n    writable: true,\n    enumerable: false,\n    configurable: false\n  })\n}\n\nfunction getGlobalDispatcher () {\n  return globalThis[globalDispatcher]\n}\n\nmodule.exports = {\n  setGlobalDispatcher,\n  getGlobalDispatcher\n}\n", "'use strict'\n\nmodule.exports = class DecoratorHandler {\n  #handler\n\n  constructor (handler) {\n    if (typeof handler !== 'object' || handler === null) {\n      throw new TypeError('handler must be an object')\n    }\n    this.#handler = handler\n  }\n\n  onConnect (...args) {\n    return this.#handler.onConnect?.(...args)\n  }\n\n  onError (...args) {\n    return this.#handler.onError?.(...args)\n  }\n\n  onUpgrade (...args) {\n    return this.#handler.onUpgrade?.(...args)\n  }\n\n  onResponseStarted (...args) {\n    return this.#handler.onResponseStarted?.(...args)\n  }\n\n  onHeaders (...args) {\n    return this.#handler.onHeaders?.(...args)\n  }\n\n  onData (...args) {\n    return this.#handler.onData?.(...args)\n  }\n\n  onComplete (...args) {\n    return this.#handler.onComplete?.(...args)\n  }\n\n  onBodySent (...args) {\n    return this.#handler.onBodySent?.(...args)\n  }\n}\n", "'use strict'\nconst RedirectHandler = require('../handler/redirect-handler')\n\nmodule.exports = opts => {\n  const globalMaxRedirections = opts?.maxRedirections\n  return dispatch => {\n    return function redirectInterceptor (opts, handler) {\n      const { maxRedirections = globalMaxRedirections, ...baseOpts } = opts\n\n      if (!maxRedirections) {\n        return dispatch(opts, handler)\n      }\n\n      const redirectHandler = new RedirectHandler(\n        dispatch,\n        maxRedirections,\n        opts,\n        handler\n      )\n\n      return dispatch(baseOpts, redirectHandler)\n    }\n  }\n}\n", "'use strict'\nconst RetryHandler = require('../handler/retry-handler')\n\nmodule.exports = globalOpts => {\n  return dispatch => {\n    return function retryInterceptor (opts, handler) {\n      return dispatch(\n        opts,\n        new RetryHandler(\n          { ...opts, retryOptions: { ...globalOpts, ...opts.retryOptions } },\n          {\n            handler,\n            dispatch\n          }\n        )\n      )\n    }\n  }\n}\n", "'use strict'\n\nconst util = require('../core/util')\nconst { InvalidArgumentError, RequestAbortedError } = require('../core/errors')\nconst DecoratorHandler = require('../handler/decorator-handler')\n\nclass DumpHandler extends DecoratorHandler {\n  #maxSize = 1024 * 1024\n  #abort = null\n  #dumped = false\n  #aborted = false\n  #size = 0\n  #reason = null\n  #handler = null\n\n  constructor ({ maxSize }, handler) {\n    super(handler)\n\n    if (maxSize != null && (!Number.isFinite(maxSize) || maxSize < 1)) {\n      throw new InvalidArgumentError('maxSize must be a number greater than 0')\n    }\n\n    this.#maxSize = maxSize ?? this.#maxSize\n    this.#handler = handler\n  }\n\n  onConnect (abort) {\n    this.#abort = abort\n\n    this.#handler.onConnect(this.#customAbort.bind(this))\n  }\n\n  #customAbort (reason) {\n    this.#aborted = true\n    this.#reason = reason\n  }\n\n  // TODO: will require adjustment after new hooks are out\n  onHeaders (statusCode, rawHeaders, resume, statusMessage) {\n    const headers = util.parseHeaders(rawHeaders)\n    const contentLength = headers['content-length']\n\n    if (contentLength != null && contentLength > this.#maxSize) {\n      throw new RequestAbortedError(\n        `Response size (${contentLength}) larger than maxSize (${\n          this.#maxSize\n        })`\n      )\n    }\n\n    if (this.#aborted) {\n      return true\n    }\n\n    return this.#handler.onHeaders(\n      statusCode,\n      rawHeaders,\n      resume,\n      statusMessage\n    )\n  }\n\n  onError (err) {\n    if (this.#dumped) {\n      return\n    }\n\n    err = this.#reason ?? err\n\n    this.#handler.onError(err)\n  }\n\n  onData (chunk) {\n    this.#size = this.#size + chunk.length\n\n    if (this.#size >= this.#maxSize) {\n      this.#dumped = true\n\n      if (this.#aborted) {\n        this.#handler.onError(this.#reason)\n      } else {\n        this.#handler.onComplete([])\n      }\n    }\n\n    return true\n  }\n\n  onComplete (trailers) {\n    if (this.#dumped) {\n      return\n    }\n\n    if (this.#aborted) {\n      this.#handler.onError(this.reason)\n      return\n    }\n\n    this.#handler.onComplete(trailers)\n  }\n}\n\nfunction createDumpInterceptor (\n  { maxSize: defaultMaxSize } = {\n    maxSize: 1024 * 1024\n  }\n) {\n  return dispatch => {\n    return function Intercept (opts, handler) {\n      const { dumpMaxSize = defaultMaxSize } =\n        opts\n\n      const dumpHandler = new DumpHandler(\n        { maxSize: dumpMaxSize },\n        handler\n      )\n\n      return dispatch(opts, dumpHandler)\n    }\n  }\n}\n\nmodule.exports = createDumpInterceptor\n", "// https://github.com/Ethan-Arrowood/undici-fetch\n\n'use strict'\n\nconst { kConstruct } = require('../../core/symbols')\nconst { kEnumerableProperty } = require('../../core/util')\nconst {\n  iteratorMixin,\n  isValidHeaderName,\n  isValidHeaderValue\n} = require('./util')\nconst { webidl } = require('./webidl')\nconst assert = require('node:assert')\nconst util = require('node:util')\n\nconst kHeadersMap = Symbol('headers map')\nconst kHeadersSortedMap = Symbol('headers map sorted')\n\n/**\n * @param {number} code\n */\nfunction isHTTPWhiteSpaceCharCode (code) {\n  return code === 0x00a || code === 0x00d || code === 0x009 || code === 0x020\n}\n\n/**\n * @see https://fetch.spec.whatwg.org/#concept-header-value-normalize\n * @param {string} potentialValue\n */\nfunction headerValueNormalize (potentialValue) {\n  //  To normalize a byte sequence potentialValue, remove\n  //  any leading and trailing HTTP whitespace bytes from\n  //  potentialValue.\n  let i = 0; let j = potentialValue.length\n\n  while (j > i && isHTTPWhiteSpaceCharCode(potentialValue.charCodeAt(j - 1))) --j\n  while (j > i && isHTTPWhiteSpaceCharCode(potentialValue.charCodeAt(i))) ++i\n\n  return i === 0 && j === potentialValue.length ? potentialValue : potentialValue.substring(i, j)\n}\n\nfunction fill (headers, object) {\n  // To fill a Headers object headers with a given object object, run these steps:\n\n  // 1. If object is a sequence, then for each header in object:\n  // Note: webidl conversion to array has already been done.\n  if (Array.isArray(object)) {\n    for (let i = 0; i < object.length; ++i) {\n      const header = object[i]\n      // 1. If header does not contain exactly two items, then throw a TypeError.\n      if (header.length !== 2) {\n        throw webidl.errors.exception({\n          header: 'Headers constructor',\n          message: `expected name/value pair to be length 2, found ${header.length}.`\n        })\n      }\n\n      // 2. Append (header’s first item, header’s second item) to headers.\n      appendHeader(headers, header[0], header[1])\n    }\n  } else if (typeof object === 'object' && object !== null) {\n    // Note: null should throw\n\n    // 2. Otherwise, object is a record, then for each key → value in object,\n    //    append (key, value) to headers\n    const keys = Object.keys(object)\n    for (let i = 0; i < keys.length; ++i) {\n      appendHeader(headers, keys[i], object[keys[i]])\n    }\n  } else {\n    throw webidl.errors.conversionFailed({\n      prefix: 'Headers constructor',\n      argument: 'Argument 1',\n      types: ['sequence<sequence<ByteString>>', 'record<ByteString, ByteString>']\n    })\n  }\n}\n\n/**\n * @see https://fetch.spec.whatwg.org/#concept-headers-append\n */\nfunction appendHeader (headers, name, value) {\n  // 1. Normalize value.\n  value = headerValueNormalize(value)\n\n  // 2. If name is not a header name or value is not a\n  //    header value, then throw a TypeError.\n  if (!isValidHeaderName(name)) {\n    throw webidl.errors.invalidArgument({\n      prefix: 'Headers.append',\n      value: name,\n      type: 'header name'\n    })\n  } else if (!isValidHeaderValue(value)) {\n    throw webidl.errors.invalidArgument({\n      prefix: 'Headers.append',\n      value,\n      type: 'header value'\n    })\n  }\n\n  // 3. If headers’s guard is \"immutable\", then throw a TypeError.\n  // 4. Otherwise, if headers’s guard is \"request\" and name is a\n  //    forbidden header name, return.\n  // 5. Otherwise, if headers’s guard is \"request-no-cors\":\n  //    TODO\n  // Note: undici does not implement forbidden header names\n  if (getHeadersGuard(headers) === 'immutable') {\n    throw new TypeError('immutable')\n  }\n\n  // 6. Otherwise, if headers’s guard is \"response\" and name is a\n  //    forbidden response-header name, return.\n\n  // 7. Append (name, value) to headers’s header list.\n  return getHeadersList(headers).append(name, value, false)\n\n  // 8. If headers’s guard is \"request-no-cors\", then remove\n  //    privileged no-CORS request headers from headers\n}\n\nfunction compareHeaderName (a, b) {\n  return a[0] < b[0] ? -1 : 1\n}\n\nclass HeadersList {\n  /** @type {[string, string][]|null} */\n  cookies = null\n\n  constructor (init) {\n    if (init instanceof HeadersList) {\n      this[kHeadersMap] = new Map(init[kHeadersMap])\n      this[kHeadersSortedMap] = init[kHeadersSortedMap]\n      this.cookies = init.cookies === null ? null : [...init.cookies]\n    } else {\n      this[kHeadersMap] = new Map(init)\n      this[kHeadersSortedMap] = null\n    }\n  }\n\n  /**\n   * @see https://fetch.spec.whatwg.org/#header-list-contains\n   * @param {string} name\n   * @param {boolean} isLowerCase\n   */\n  contains (name, isLowerCase) {\n    // A header list list contains a header name name if list\n    // contains a header whose name is a byte-case-insensitive\n    // match for name.\n\n    return this[kHeadersMap].has(isLowerCase ? name : name.toLowerCase())\n  }\n\n  clear () {\n    this[kHeadersMap].clear()\n    this[kHeadersSortedMap] = null\n    this.cookies = null\n  }\n\n  /**\n   * @see https://fetch.spec.whatwg.org/#concept-header-list-append\n   * @param {string} name\n   * @param {string} value\n   * @param {boolean} isLowerCase\n   */\n  append (name, value, isLowerCase) {\n    this[kHeadersSortedMap] = null\n\n    // 1. If list contains name, then set name to the first such\n    //    header’s name.\n    const lowercaseName = isLowerCase ? name : name.toLowerCase()\n    const exists = this[kHeadersMap].get(lowercaseName)\n\n    // 2. Append (name, value) to list.\n    if (exists) {\n      const delimiter = lowercaseName === 'cookie' ? '; ' : ', '\n      this[kHeadersMap].set(lowercaseName, {\n        name: exists.name,\n        value: `${exists.value}${delimiter}${value}`\n      })\n    } else {\n      this[kHeadersMap].set(lowercaseName, { name, value })\n    }\n\n    if (lowercaseName === 'set-cookie') {\n      (this.cookies ??= []).push(value)\n    }\n  }\n\n  /**\n   * @see https://fetch.spec.whatwg.org/#concept-header-list-set\n   * @param {string} name\n   * @param {string} value\n   * @param {boolean} isLowerCase\n   */\n  set (name, value, isLowerCase) {\n    this[kHeadersSortedMap] = null\n    const lowercaseName = isLowerCase ? name : name.toLowerCase()\n\n    if (lowercaseName === 'set-cookie') {\n      this.cookies = [value]\n    }\n\n    // 1. If list contains name, then set the value of\n    //    the first such header to value and remove the\n    //    others.\n    // 2. Otherwise, append header (name, value) to list.\n    this[kHeadersMap].set(lowercaseName, { name, value })\n  }\n\n  /**\n   * @see https://fetch.spec.whatwg.org/#concept-header-list-delete\n   * @param {string} name\n   * @param {boolean} isLowerCase\n   */\n  delete (name, isLowerCase) {\n    this[kHeadersSortedMap] = null\n    if (!isLowerCase) name = name.toLowerCase()\n\n    if (name === 'set-cookie') {\n      this.cookies = null\n    }\n\n    this[kHeadersMap].delete(name)\n  }\n\n  /**\n   * @see https://fetch.spec.whatwg.org/#concept-header-list-get\n   * @param {string} name\n   * @param {boolean} isLowerCase\n   * @returns {string | null}\n   */\n  get (name, isLowerCase) {\n    // 1. If list does not contain name, then return null.\n    // 2. Return the values of all headers in list whose name\n    //    is a byte-case-insensitive match for name,\n    //    separated from each other by 0x2C 0x20, in order.\n    return this[kHeadersMap].get(isLowerCase ? name : name.toLowerCase())?.value ?? null\n  }\n\n  * [Symbol.iterator] () {\n    // use the lowercased name\n    for (const { 0: name, 1: { value } } of this[kHeadersMap]) {\n      yield [name, value]\n    }\n  }\n\n  get entries () {\n    const headers = {}\n\n    if (this[kHeadersMap].size !== 0) {\n      for (const { name, value } of this[kHeadersMap].values()) {\n        headers[name] = value\n      }\n    }\n\n    return headers\n  }\n\n  rawValues () {\n    return this[kHeadersMap].values()\n  }\n\n  get entriesList () {\n    const headers = []\n\n    if (this[kHeadersMap].size !== 0) {\n      for (const { 0: lowerName, 1: { name, value } } of this[kHeadersMap]) {\n        if (lowerName === 'set-cookie') {\n          for (const cookie of this.cookies) {\n            headers.push([name, cookie])\n          }\n        } else {\n          headers.push([name, value])\n        }\n      }\n    }\n\n    return headers\n  }\n\n  // https://fetch.spec.whatwg.org/#convert-header-names-to-a-sorted-lowercase-set\n  toSortedArray () {\n    const size = this[kHeadersMap].size\n    const array = new Array(size)\n    // In most cases, you will use the fast-path.\n    // fast-path: Use binary insertion sort for small arrays.\n    if (size <= 32) {\n      if (size === 0) {\n        // If empty, it is an empty array. To avoid the first index assignment.\n        return array\n      }\n      // Improve performance by unrolling loop and avoiding double-loop.\n      // Double-loop-less version of the binary insertion sort.\n      const iterator = this[kHeadersMap][Symbol.iterator]()\n      const firstValue = iterator.next().value\n      // set [name, value] to first index.\n      array[0] = [firstValue[0], firstValue[1].value]\n      // https://fetch.spec.whatwg.org/#concept-header-list-sort-and-combine\n      // 3.2.2. Assert: value is non-null.\n      assert(firstValue[1].value !== null)\n      for (\n        let i = 1, j = 0, right = 0, left = 0, pivot = 0, x, value;\n        i < size;\n        ++i\n      ) {\n        // get next value\n        value = iterator.next().value\n        // set [name, value] to current index.\n        x = array[i] = [value[0], value[1].value]\n        // https://fetch.spec.whatwg.org/#concept-header-list-sort-and-combine\n        // 3.2.2. Assert: value is non-null.\n        assert(x[1] !== null)\n        left = 0\n        right = i\n        // binary search\n        while (left < right) {\n          // middle index\n          pivot = left + ((right - left) >> 1)\n          // compare header name\n          if (array[pivot][0] <= x[0]) {\n            left = pivot + 1\n          } else {\n            right = pivot\n          }\n        }\n        if (i !== pivot) {\n          j = i\n          while (j > left) {\n            array[j] = array[--j]\n          }\n          array[left] = x\n        }\n      }\n      /* c8 ignore next 4 */\n      if (!iterator.next().done) {\n        // This is for debugging and will never be called.\n        throw new TypeError('Unreachable')\n      }\n      return array\n    } else {\n      // This case would be a rare occurrence.\n      // slow-path: fallback\n      let i = 0\n      for (const { 0: name, 1: { value } } of this[kHeadersMap]) {\n        array[i++] = [name, value]\n        // https://fetch.spec.whatwg.org/#concept-header-list-sort-and-combine\n        // 3.2.2. Assert: value is non-null.\n        assert(value !== null)\n      }\n      return array.sort(compareHeaderName)\n    }\n  }\n}\n\n// https://fetch.spec.whatwg.org/#headers-class\nclass Headers {\n  #guard\n  #headersList\n\n  constructor (init = undefined) {\n    if (init === kConstruct) {\n      return\n    }\n\n    this.#headersList = new HeadersList()\n\n    // The new Headers(init) constructor steps are:\n\n    // 1. Set this’s guard to \"none\".\n    this.#guard = 'none'\n\n    // 2. If init is given, then fill this with init.\n    if (init !== undefined) {\n      init = webidl.converters.HeadersInit(init, 'Headers contructor', 'init')\n      fill(this, init)\n    }\n  }\n\n  // https://fetch.spec.whatwg.org/#dom-headers-append\n  append (name, value) {\n    webidl.brandCheck(this, Headers)\n\n    webidl.argumentLengthCheck(arguments, 2, 'Headers.append')\n\n    const prefix = 'Headers.append'\n    name = webidl.converters.ByteString(name, prefix, 'name')\n    value = webidl.converters.ByteString(value, prefix, 'value')\n\n    return appendHeader(this, name, value)\n  }\n\n  // https://fetch.spec.whatwg.org/#dom-headers-delete\n  delete (name) {\n    webidl.brandCheck(this, Headers)\n\n    webidl.argumentLengthCheck(arguments, 1, 'Headers.delete')\n\n    const prefix = 'Headers.delete'\n    name = webidl.converters.ByteString(name, prefix, 'name')\n\n    // 1. If name is not a header name, then throw a TypeError.\n    if (!isValidHeaderName(name)) {\n      throw webidl.errors.invalidArgument({\n        prefix: 'Headers.delete',\n        value: name,\n        type: 'header name'\n      })\n    }\n\n    // 2. If this’s guard is \"immutable\", then throw a TypeError.\n    // 3. Otherwise, if this’s guard is \"request\" and name is a\n    //    forbidden header name, return.\n    // 4. Otherwise, if this’s guard is \"request-no-cors\", name\n    //    is not a no-CORS-safelisted request-header name, and\n    //    name is not a privileged no-CORS request-header name,\n    //    return.\n    // 5. Otherwise, if this’s guard is \"response\" and name is\n    //    a forbidden response-header name, return.\n    // Note: undici does not implement forbidden header names\n    if (this.#guard === 'immutable') {\n      throw new TypeError('immutable')\n    }\n\n    // 6. If this’s header list does not contain name, then\n    //    return.\n    if (!this.#headersList.contains(name, false)) {\n      return\n    }\n\n    // 7. Delete name from this’s header list.\n    // 8. If this’s guard is \"request-no-cors\", then remove\n    //    privileged no-CORS request headers from this.\n    this.#headersList.delete(name, false)\n  }\n\n  // https://fetch.spec.whatwg.org/#dom-headers-get\n  get (name) {\n    webidl.brandCheck(this, Headers)\n\n    webidl.argumentLengthCheck(arguments, 1, 'Headers.get')\n\n    const prefix = 'Headers.get'\n    name = webidl.converters.ByteString(name, prefix, 'name')\n\n    // 1. If name is not a header name, then throw a TypeError.\n    if (!isValidHeaderName(name)) {\n      throw webidl.errors.invalidArgument({\n        prefix,\n        value: name,\n        type: 'header name'\n      })\n    }\n\n    // 2. Return the result of getting name from this’s header\n    //    list.\n    return this.#headersList.get(name, false)\n  }\n\n  // https://fetch.spec.whatwg.org/#dom-headers-has\n  has (name) {\n    webidl.brandCheck(this, Headers)\n\n    webidl.argumentLengthCheck(arguments, 1, 'Headers.has')\n\n    const prefix = 'Headers.has'\n    name = webidl.converters.ByteString(name, prefix, 'name')\n\n    // 1. If name is not a header name, then throw a TypeError.\n    if (!isValidHeaderName(name)) {\n      throw webidl.errors.invalidArgument({\n        prefix,\n        value: name,\n        type: 'header name'\n      })\n    }\n\n    // 2. Return true if this’s header list contains name;\n    //    otherwise false.\n    return this.#headersList.contains(name, false)\n  }\n\n  // https://fetch.spec.whatwg.org/#dom-headers-set\n  set (name, value) {\n    webidl.brandCheck(this, Headers)\n\n    webidl.argumentLengthCheck(arguments, 2, 'Headers.set')\n\n    const prefix = 'Headers.set'\n    name = webidl.converters.ByteString(name, prefix, 'name')\n    value = webidl.converters.ByteString(value, prefix, 'value')\n\n    // 1. Normalize value.\n    value = headerValueNormalize(value)\n\n    // 2. If name is not a header name or value is not a\n    //    header value, then throw a TypeError.\n    if (!isValidHeaderName(name)) {\n      throw webidl.errors.invalidArgument({\n        prefix,\n        value: name,\n        type: 'header name'\n      })\n    } else if (!isValidHeaderValue(value)) {\n      throw webidl.errors.invalidArgument({\n        prefix,\n        value,\n        type: 'header value'\n      })\n    }\n\n    // 3. If this’s guard is \"immutable\", then throw a TypeError.\n    // 4. Otherwise, if this’s guard is \"request\" and name is a\n    //    forbidden header name, return.\n    // 5. Otherwise, if this’s guard is \"request-no-cors\" and\n    //    name/value is not a no-CORS-safelisted request-header,\n    //    return.\n    // 6. Otherwise, if this’s guard is \"response\" and name is a\n    //    forbidden response-header name, return.\n    // Note: undici does not implement forbidden header names\n    if (this.#guard === 'immutable') {\n      throw new TypeError('immutable')\n    }\n\n    // 7. Set (name, value) in this’s header list.\n    // 8. If this’s guard is \"request-no-cors\", then remove\n    //    privileged no-CORS request headers from this\n    this.#headersList.set(name, value, false)\n  }\n\n  // https://fetch.spec.whatwg.org/#dom-headers-getsetcookie\n  getSetCookie () {\n    webidl.brandCheck(this, Headers)\n\n    // 1. If this’s header list does not contain `Set-Cookie`, then return « ».\n    // 2. Return the values of all headers in this’s header list whose name is\n    //    a byte-case-insensitive match for `Set-Cookie`, in order.\n\n    const list = this.#headersList.cookies\n\n    if (list) {\n      return [...list]\n    }\n\n    return []\n  }\n\n  // https://fetch.spec.whatwg.org/#concept-header-list-sort-and-combine\n  get [kHeadersSortedMap] () {\n    if (this.#headersList[kHeadersSortedMap]) {\n      return this.#headersList[kHeadersSortedMap]\n    }\n\n    // 1. Let headers be an empty list of headers with the key being the name\n    //    and value the value.\n    const headers = []\n\n    // 2. Let names be the result of convert header names to a sorted-lowercase\n    //    set with all the names of the headers in list.\n    const names = this.#headersList.toSortedArray()\n\n    const cookies = this.#headersList.cookies\n\n    // fast-path\n    if (cookies === null || cookies.length === 1) {\n      // Note: The non-null assertion of value has already been done by `HeadersList#toSortedArray`\n      return (this.#headersList[kHeadersSortedMap] = names)\n    }\n\n    // 3. For each name of names:\n    for (let i = 0; i < names.length; ++i) {\n      const { 0: name, 1: value } = names[i]\n      // 1. If name is `set-cookie`, then:\n      if (name === 'set-cookie') {\n        // 1. Let values be a list of all values of headers in list whose name\n        //    is a byte-case-insensitive match for name, in order.\n\n        // 2. For each value of values:\n        // 1. Append (name, value) to headers.\n        for (let j = 0; j < cookies.length; ++j) {\n          headers.push([name, cookies[j]])\n        }\n      } else {\n        // 2. Otherwise:\n\n        // 1. Let value be the result of getting name from list.\n\n        // 2. Assert: value is non-null.\n        // Note: This operation was done by `HeadersList#toSortedArray`.\n\n        // 3. Append (name, value) to headers.\n        headers.push([name, value])\n      }\n    }\n\n    // 4. Return headers.\n    return (this.#headersList[kHeadersSortedMap] = headers)\n  }\n\n  [util.inspect.custom] (depth, options) {\n    options.depth ??= depth\n\n    return `Headers ${util.formatWithOptions(options, this.#headersList.entries)}`\n  }\n\n  static getHeadersGuard (o) {\n    return o.#guard\n  }\n\n  static setHeadersGuard (o, guard) {\n    o.#guard = guard\n  }\n\n  static getHeadersList (o) {\n    return o.#headersList\n  }\n\n  static setHeadersList (o, list) {\n    o.#headersList = list\n  }\n}\n\nconst { getHeadersGuard, setHeadersGuard, getHeadersList, setHeadersList } = Headers\nReflect.deleteProperty(Headers, 'getHeadersGuard')\nReflect.deleteProperty(Headers, 'setHeadersGuard')\nReflect.deleteProperty(Headers, 'getHeadersList')\nReflect.deleteProperty(Headers, 'setHeadersList')\n\niteratorMixin('Headers', Headers, kHeadersSortedMap, 0, 1)\n\nObject.defineProperties(Headers.prototype, {\n  append: kEnumerableProperty,\n  delete: kEnumerableProperty,\n  get: kEnumerableProperty,\n  has: kEnumerableProperty,\n  set: kEnumerableProperty,\n  getSetCookie: kEnumerableProperty,\n  [Symbol.toStringTag]: {\n    value: 'Headers',\n    configurable: true\n  },\n  [util.inspect.custom]: {\n    enumerable: false\n  }\n})\n\nwebidl.converters.HeadersInit = function (V, prefix, argument) {\n  if (webidl.util.Type(V) === 'Object') {\n    const iterator = Reflect.get(V, Symbol.iterator)\n\n    // A work-around to ensure we send the properly-cased Headers when V is a Headers object.\n    // Read https://github.com/nodejs/undici/pull/3159#issuecomment-2075537226 before touching, please.\n    if (!util.types.isProxy(V) && iterator === Headers.prototype.entries) { // Headers object\n      try {\n        return getHeadersList(V).entriesList\n      } catch {\n        // fall-through\n      }\n    }\n\n    if (typeof iterator === 'function') {\n      return webidl.converters['sequence<sequence<ByteString>>'](V, prefix, argument, iterator.bind(V))\n    }\n\n    return webidl.converters['record<ByteString, ByteString>'](V, prefix, argument)\n  }\n\n  throw webidl.errors.conversionFailed({\n    prefix: 'Headers constructor',\n    argument: 'Argument 1',\n    types: ['sequence<sequence<ByteString>>', 'record<ByteString, ByteString>']\n  })\n}\n\nmodule.exports = {\n  fill,\n  // for test.\n  compareHeaderName,\n  Headers,\n  HeadersList,\n  getHeadersGuard,\n  setHeadersGuard,\n  setHeadersList,\n  getHeadersList\n}\n", "'use strict'\n\nconst { Headers, HeadersList, fill, getHeadersGuard, setHeadersGuard, setHeadersList } = require('./headers')\nconst { extractBody, cloneBody, mixinBody, hasFinalizationRegistry, streamRegistry, bodyUnusable } = require('./body')\nconst util = require('../../core/util')\nconst nodeUtil = require('node:util')\nconst { kEnumerableProperty } = util\nconst {\n  isValidReasonPhrase,\n  isCancelled,\n  isAborted,\n  isBlobLike,\n  serializeJavascriptValueToJSONString,\n  isErrorLike,\n  isomorphicEncode,\n  environmentSettingsObject: relevantRealm\n} = require('./util')\nconst {\n  redirectStatusSet,\n  nullBodyStatus\n} = require('./constants')\nconst { kState, kHeaders } = require('./symbols')\nconst { webidl } = require('./webidl')\nconst { FormData } = require('./formdata')\nconst { URLSerializer } = require('./data-url')\nconst { kConstruct } = require('../../core/symbols')\nconst assert = require('node:assert')\nconst { types } = require('node:util')\n\nconst textEncoder = new TextEncoder('utf-8')\n\n// https://fetch.spec.whatwg.org/#response-class\nclass Response {\n  // Creates network error Response.\n  static error () {\n    // The static error() method steps are to return the result of creating a\n    // Response object, given a new network error, \"immutable\", and this’s\n    // relevant Realm.\n    const responseObject = fromInnerResponse(makeNetworkError(), 'immutable')\n\n    return responseObject\n  }\n\n  // https://fetch.spec.whatwg.org/#dom-response-json\n  static json (data, init = {}) {\n    webidl.argumentLengthCheck(arguments, 1, 'Response.json')\n\n    if (init !== null) {\n      init = webidl.converters.ResponseInit(init)\n    }\n\n    // 1. Let bytes the result of running serialize a JavaScript value to JSON bytes on data.\n    const bytes = textEncoder.encode(\n      serializeJavascriptValueToJSONString(data)\n    )\n\n    // 2. Let body be the result of extracting bytes.\n    const body = extractBody(bytes)\n\n    // 3. Let responseObject be the result of creating a Response object, given a new response,\n    //    \"response\", and this’s relevant Realm.\n    const responseObject = fromInnerResponse(makeResponse({}), 'response')\n\n    // 4. Perform initialize a response given responseObject, init, and (body, \"application/json\").\n    initializeResponse(responseObject, init, { body: body[0], type: 'application/json' })\n\n    // 5. Return responseObject.\n    return responseObject\n  }\n\n  // Creates a redirect Response that redirects to url with status status.\n  static redirect (url, status = 302) {\n    webidl.argumentLengthCheck(arguments, 1, 'Response.redirect')\n\n    url = webidl.converters.USVString(url)\n    status = webidl.converters['unsigned short'](status)\n\n    // 1. Let parsedURL be the result of parsing url with current settings\n    // object’s API base URL.\n    // 2. If parsedURL is failure, then throw a TypeError.\n    // TODO: base-URL?\n    let parsedURL\n    try {\n      parsedURL = new URL(url, relevantRealm.settingsObject.baseUrl)\n    } catch (err) {\n      throw new TypeError(`Failed to parse URL from ${url}`, { cause: err })\n    }\n\n    // 3. If status is not a redirect status, then throw a RangeError.\n    if (!redirectStatusSet.has(status)) {\n      throw new RangeError(`Invalid status code ${status}`)\n    }\n\n    // 4. Let responseObject be the result of creating a Response object,\n    // given a new response, \"immutable\", and this’s relevant Realm.\n    const responseObject = fromInnerResponse(makeResponse({}), 'immutable')\n\n    // 5. Set responseObject’s response’s status to status.\n    responseObject[kState].status = status\n\n    // 6. Let value be parsedURL, serialized and isomorphic encoded.\n    const value = isomorphicEncode(URLSerializer(parsedURL))\n\n    // 7. Append `Location`/value to responseObject’s response’s header list.\n    responseObject[kState].headersList.append('location', value, true)\n\n    // 8. Return responseObject.\n    return responseObject\n  }\n\n  // https://fetch.spec.whatwg.org/#dom-response\n  constructor (body = null, init = {}) {\n    if (body === kConstruct) {\n      return\n    }\n\n    if (body !== null) {\n      body = webidl.converters.BodyInit(body)\n    }\n\n    init = webidl.converters.ResponseInit(init)\n\n    // 1. Set this’s response to a new response.\n    this[kState] = makeResponse({})\n\n    // 2. Set this’s headers to a new Headers object with this’s relevant\n    // Realm, whose header list is this’s response’s header list and guard\n    // is \"response\".\n    this[kHeaders] = new Headers(kConstruct)\n    setHeadersGuard(this[kHeaders], 'response')\n    setHeadersList(this[kHeaders], this[kState].headersList)\n\n    // 3. Let bodyWithType be null.\n    let bodyWithType = null\n\n    // 4. If body is non-null, then set bodyWithType to the result of extracting body.\n    if (body != null) {\n      const [extractedBody, type] = extractBody(body)\n      bodyWithType = { body: extractedBody, type }\n    }\n\n    // 5. Perform initialize a response given this, init, and bodyWithType.\n    initializeResponse(this, init, bodyWithType)\n  }\n\n  // Returns response’s type, e.g., \"cors\".\n  get type () {\n    webidl.brandCheck(this, Response)\n\n    // The type getter steps are to return this’s response’s type.\n    return this[kState].type\n  }\n\n  // Returns response’s URL, if it has one; otherwise the empty string.\n  get url () {\n    webidl.brandCheck(this, Response)\n\n    const urlList = this[kState].urlList\n\n    // The url getter steps are to return the empty string if this’s\n    // response’s URL is null; otherwise this’s response’s URL,\n    // serialized with exclude fragment set to true.\n    const url = urlList[urlList.length - 1] ?? null\n\n    if (url === null) {\n      return ''\n    }\n\n    return URLSerializer(url, true)\n  }\n\n  // Returns whether response was obtained through a redirect.\n  get redirected () {\n    webidl.brandCheck(this, Response)\n\n    // The redirected getter steps are to return true if this’s response’s URL\n    // list has more than one item; otherwise false.\n    return this[kState].urlList.length > 1\n  }\n\n  // Returns response’s status.\n  get status () {\n    webidl.brandCheck(this, Response)\n\n    // The status getter steps are to return this’s response’s status.\n    return this[kState].status\n  }\n\n  // Returns whether response’s status is an ok status.\n  get ok () {\n    webidl.brandCheck(this, Response)\n\n    // The ok getter steps are to return true if this’s response’s status is an\n    // ok status; otherwise false.\n    return this[kState].status >= 200 && this[kState].status <= 299\n  }\n\n  // Returns response’s status message.\n  get statusText () {\n    webidl.brandCheck(this, Response)\n\n    // The statusText getter steps are to return this’s response’s status\n    // message.\n    return this[kState].statusText\n  }\n\n  // Returns response’s headers as Headers.\n  get headers () {\n    webidl.brandCheck(this, Response)\n\n    // The headers getter steps are to return this’s headers.\n    return this[kHeaders]\n  }\n\n  get body () {\n    webidl.brandCheck(this, Response)\n\n    return this[kState].body ? this[kState].body.stream : null\n  }\n\n  get bodyUsed () {\n    webidl.brandCheck(this, Response)\n\n    return !!this[kState].body && util.isDisturbed(this[kState].body.stream)\n  }\n\n  // Returns a clone of response.\n  clone () {\n    webidl.brandCheck(this, Response)\n\n    // 1. If this is unusable, then throw a TypeError.\n    if (bodyUnusable(this)) {\n      throw webidl.errors.exception({\n        header: 'Response.clone',\n        message: 'Body has already been consumed.'\n      })\n    }\n\n    // 2. Let clonedResponse be the result of cloning this’s response.\n    const clonedResponse = cloneResponse(this[kState])\n\n    // 3. Return the result of creating a Response object, given\n    // clonedResponse, this’s headers’s guard, and this’s relevant Realm.\n    return fromInnerResponse(clonedResponse, getHeadersGuard(this[kHeaders]))\n  }\n\n  [nodeUtil.inspect.custom] (depth, options) {\n    if (options.depth === null) {\n      options.depth = 2\n    }\n\n    options.colors ??= true\n\n    const properties = {\n      status: this.status,\n      statusText: this.statusText,\n      headers: this.headers,\n      body: this.body,\n      bodyUsed: this.bodyUsed,\n      ok: this.ok,\n      redirected: this.redirected,\n      type: this.type,\n      url: this.url\n    }\n\n    return `Response ${nodeUtil.formatWithOptions(options, properties)}`\n  }\n}\n\nmixinBody(Response)\n\nObject.defineProperties(Response.prototype, {\n  type: kEnumerableProperty,\n  url: kEnumerableProperty,\n  status: kEnumerableProperty,\n  ok: kEnumerableProperty,\n  redirected: kEnumerableProperty,\n  statusText: kEnumerableProperty,\n  headers: kEnumerableProperty,\n  clone: kEnumerableProperty,\n  body: kEnumerableProperty,\n  bodyUsed: kEnumerableProperty,\n  [Symbol.toStringTag]: {\n    value: 'Response',\n    configurable: true\n  }\n})\n\nObject.defineProperties(Response, {\n  json: kEnumerableProperty,\n  redirect: kEnumerableProperty,\n  error: kEnumerableProperty\n})\n\n// https://fetch.spec.whatwg.org/#concept-response-clone\nfunction cloneResponse (response) {\n  // To clone a response response, run these steps:\n\n  // 1. If response is a filtered response, then return a new identical\n  // filtered response whose internal response is a clone of response’s\n  // internal response.\n  if (response.internalResponse) {\n    return filterResponse(\n      cloneResponse(response.internalResponse),\n      response.type\n    )\n  }\n\n  // 2. Let newResponse be a copy of response, except for its body.\n  const newResponse = makeResponse({ ...response, body: null })\n\n  // 3. If response’s body is non-null, then set newResponse’s body to the\n  // result of cloning response’s body.\n  if (response.body != null) {\n    newResponse.body = cloneBody(newResponse, response.body)\n  }\n\n  // 4. Return newResponse.\n  return newResponse\n}\n\nfunction makeResponse (init) {\n  return {\n    aborted: false,\n    rangeRequested: false,\n    timingAllowPassed: false,\n    requestIncludesCredentials: false,\n    type: 'default',\n    status: 200,\n    timingInfo: null,\n    cacheState: '',\n    statusText: '',\n    ...init,\n    headersList: init?.headersList\n      ? new HeadersList(init?.headersList)\n      : new HeadersList(),\n    urlList: init?.urlList ? [...init.urlList] : []\n  }\n}\n\nfunction makeNetworkError (reason) {\n  const isError = isErrorLike(reason)\n  return makeResponse({\n    type: 'error',\n    status: 0,\n    error: isError\n      ? reason\n      : new Error(reason ? String(reason) : reason),\n    aborted: reason && reason.name === 'AbortError'\n  })\n}\n\n// @see https://fetch.spec.whatwg.org/#concept-network-error\nfunction isNetworkError (response) {\n  return (\n    // A network error is a response whose type is \"error\",\n    response.type === 'error' &&\n    // status is 0\n    response.status === 0\n  )\n}\n\nfunction makeFilteredResponse (response, state) {\n  state = {\n    internalResponse: response,\n    ...state\n  }\n\n  return new Proxy(response, {\n    get (target, p) {\n      return p in state ? state[p] : target[p]\n    },\n    set (target, p, value) {\n      assert(!(p in state))\n      target[p] = value\n      return true\n    }\n  })\n}\n\n// https://fetch.spec.whatwg.org/#concept-filtered-response\nfunction filterResponse (response, type) {\n  // Set response to the following filtered response with response as its\n  // internal response, depending on request’s response tainting:\n  if (type === 'basic') {\n    // A basic filtered response is a filtered response whose type is \"basic\"\n    // and header list excludes any headers in internal response’s header list\n    // whose name is a forbidden response-header name.\n\n    // Note: undici does not implement forbidden response-header names\n    return makeFilteredResponse(response, {\n      type: 'basic',\n      headersList: response.headersList\n    })\n  } else if (type === 'cors') {\n    // A CORS filtered response is a filtered response whose type is \"cors\"\n    // and header list excludes any headers in internal response’s header\n    // list whose name is not a CORS-safelisted response-header name, given\n    // internal response’s CORS-exposed header-name list.\n\n    // Note: undici does not implement CORS-safelisted response-header names\n    return makeFilteredResponse(response, {\n      type: 'cors',\n      headersList: response.headersList\n    })\n  } else if (type === 'opaque') {\n    // An opaque filtered response is a filtered response whose type is\n    // \"opaque\", URL list is the empty list, status is 0, status message\n    // is the empty byte sequence, header list is empty, and body is null.\n\n    return makeFilteredResponse(response, {\n      type: 'opaque',\n      urlList: Object.freeze([]),\n      status: 0,\n      statusText: '',\n      body: null\n    })\n  } else if (type === 'opaqueredirect') {\n    // An opaque-redirect filtered response is a filtered response whose type\n    // is \"opaqueredirect\", status is 0, status message is the empty byte\n    // sequence, header list is empty, and body is null.\n\n    return makeFilteredResponse(response, {\n      type: 'opaqueredirect',\n      status: 0,\n      statusText: '',\n      headersList: [],\n      body: null\n    })\n  } else {\n    assert(false)\n  }\n}\n\n// https://fetch.spec.whatwg.org/#appropriate-network-error\nfunction makeAppropriateNetworkError (fetchParams, err = null) {\n  // 1. Assert: fetchParams is canceled.\n  assert(isCancelled(fetchParams))\n\n  // 2. Return an aborted network error if fetchParams is aborted;\n  // otherwise return a network error.\n  return isAborted(fetchParams)\n    ? makeNetworkError(Object.assign(new DOMException('The operation was aborted.', 'AbortError'), { cause: err }))\n    : makeNetworkError(Object.assign(new DOMException('Request was cancelled.'), { cause: err }))\n}\n\n// https://whatpr.org/fetch/1392.html#initialize-a-response\nfunction initializeResponse (response, init, body) {\n  // 1. If init[\"status\"] is not in the range 200 to 599, inclusive, then\n  //    throw a RangeError.\n  if (init.status !== null && (init.status < 200 || init.status > 599)) {\n    throw new RangeError('init[\"status\"] must be in the range of 200 to 599, inclusive.')\n  }\n\n  // 2. If init[\"statusText\"] does not match the reason-phrase token production,\n  //    then throw a TypeError.\n  if ('statusText' in init && init.statusText != null) {\n    // See, https://datatracker.ietf.org/doc/html/rfc7230#section-3.1.2:\n    //   reason-phrase  = *( HTAB / SP / VCHAR / obs-text )\n    if (!isValidReasonPhrase(String(init.statusText))) {\n      throw new TypeError('Invalid statusText')\n    }\n  }\n\n  // 3. Set response’s response’s status to init[\"status\"].\n  if ('status' in init && init.status != null) {\n    response[kState].status = init.status\n  }\n\n  // 4. Set response’s response’s status message to init[\"statusText\"].\n  if ('statusText' in init && init.statusText != null) {\n    response[kState].statusText = init.statusText\n  }\n\n  // 5. If init[\"headers\"] exists, then fill response’s headers with init[\"headers\"].\n  if ('headers' in init && init.headers != null) {\n    fill(response[kHeaders], init.headers)\n  }\n\n  // 6. If body was given, then:\n  if (body) {\n    // 1. If response's status is a null body status, then throw a TypeError.\n    if (nullBodyStatus.includes(response.status)) {\n      throw webidl.errors.exception({\n        header: 'Response constructor',\n        message: `Invalid response status code ${response.status}`\n      })\n    }\n\n    // 2. Set response's body to body's body.\n    response[kState].body = body.body\n\n    // 3. If body's type is non-null and response's header list does not contain\n    //    `Content-Type`, then append (`Content-Type`, body's type) to response's header list.\n    if (body.type != null && !response[kState].headersList.contains('content-type', true)) {\n      response[kState].headersList.append('content-type', body.type, true)\n    }\n  }\n}\n\n/**\n * @see https://fetch.spec.whatwg.org/#response-create\n * @param {any} innerResponse\n * @param {'request' | 'immutable' | 'request-no-cors' | 'response' | 'none'} guard\n * @returns {Response}\n */\nfunction fromInnerResponse (innerResponse, guard) {\n  const response = new Response(kConstruct)\n  response[kState] = innerResponse\n  response[kHeaders] = new Headers(kConstruct)\n  setHeadersList(response[kHeaders], innerResponse.headersList)\n  setHeadersGuard(response[kHeaders], guard)\n\n  if (hasFinalizationRegistry && innerResponse.body?.stream) {\n    // If the target (response) is reclaimed, the cleanup callback may be called at some point with\n    // the held value provided for it (innerResponse.body.stream). The held value can be any value:\n    // a primitive or an object, even undefined. If the held value is an object, the registry keeps\n    // a strong reference to it (so it can pass it to the cleanup callback later). Reworded from\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/FinalizationRegistry\n    streamRegistry.register(response, new WeakRef(innerResponse.body.stream))\n  }\n\n  return response\n}\n\nwebidl.converters.ReadableStream = webidl.interfaceConverter(\n  ReadableStream\n)\n\nwebidl.converters.FormData = webidl.interfaceConverter(\n  FormData\n)\n\nwebidl.converters.URLSearchParams = webidl.interfaceConverter(\n  URLSearchParams\n)\n\n// https://fetch.spec.whatwg.org/#typedefdef-xmlhttprequestbodyinit\nwebidl.converters.XMLHttpRequestBodyInit = function (V, prefix, name) {\n  if (typeof V === 'string') {\n    return webidl.converters.USVString(V, prefix, name)\n  }\n\n  if (isBlobLike(V)) {\n    return webidl.converters.Blob(V, prefix, name, { strict: false })\n  }\n\n  if (ArrayBuffer.isView(V) || types.isArrayBuffer(V)) {\n    return webidl.converters.BufferSource(V, prefix, name)\n  }\n\n  if (util.isFormDataLike(V)) {\n    return webidl.converters.FormData(V, prefix, name, { strict: false })\n  }\n\n  if (V instanceof URLSearchParams) {\n    return webidl.converters.URLSearchParams(V, prefix, name)\n  }\n\n  return webidl.converters.DOMString(V, prefix, name)\n}\n\n// https://fetch.spec.whatwg.org/#bodyinit\nwebidl.converters.BodyInit = function (V, prefix, argument) {\n  if (V instanceof ReadableStream) {\n    return webidl.converters.ReadableStream(V, prefix, argument)\n  }\n\n  // Note: the spec doesn't include async iterables,\n  // this is an undici extension.\n  if (V?.[Symbol.asyncIterator]) {\n    return V\n  }\n\n  return webidl.converters.XMLHttpRequestBodyInit(V, prefix, argument)\n}\n\nwebidl.converters.ResponseInit = webidl.dictionaryConverter([\n  {\n    key: 'status',\n    converter: webidl.converters['unsigned short'],\n    defaultValue: () => 200\n  },\n  {\n    key: 'statusText',\n    converter: webidl.converters.ByteString,\n    defaultValue: () => ''\n  },\n  {\n    key: 'headers',\n    converter: webidl.converters.HeadersInit\n  }\n])\n\nmodule.exports = {\n  isNetworkError,\n  makeNetworkError,\n  makeResponse,\n  makeAppropriateNetworkError,\n  filterResponse,\n  Response,\n  cloneResponse,\n  fromInnerResponse\n}\n", "'use strict'\n\nconst { kConnected, kSize } = require('../../core/symbols')\n\nclass CompatWeakRef {\n  constructor (value) {\n    this.value = value\n  }\n\n  deref () {\n    return this.value[kConnected] === 0 && this.value[kSize] === 0\n      ? undefined\n      : this.value\n  }\n}\n\nclass CompatFinalizer {\n  constructor (finalizer) {\n    this.finalizer = finalizer\n  }\n\n  register (dispatcher, key) {\n    if (dispatcher.on) {\n      dispatcher.on('disconnect', () => {\n        if (dispatcher[kConnected] === 0 && dispatcher[kSize] === 0) {\n          this.finalizer(key)\n        }\n      })\n    }\n  }\n\n  unregister (key) {}\n}\n\nmodule.exports = function () {\n  // FIXME: remove workaround when the Node bug is backported to v18\n  // https://github.com/nodejs/node/issues/49344#issuecomment-1741776308\n  if (process.env.NODE_V8_COVERAGE && process.version.startsWith('v18')) {\n    process._rawDebug('Using compatibility WeakRef and FinalizationRegistry')\n    return {\n      WeakRef: CompatWeakRef,\n      FinalizationRegistry: CompatFinalizer\n    }\n  }\n  return { WeakRef, FinalizationRegistry }\n}\n", "/* globals AbortController */\n\n'use strict'\n\nconst { extractBody, mixinBody, cloneBody, bodyUnusable } = require('./body')\nconst { Headers, fill: fillHeaders, HeadersList, setHeadersGuard, getHeadersGuard, setHeadersList, getHeadersList } = require('./headers')\nconst { FinalizationRegistry } = require('./dispatcher-weakref')()\nconst util = require('../../core/util')\nconst nodeUtil = require('node:util')\nconst {\n  isValidHTTPToken,\n  sameOrigin,\n  environmentSettingsObject\n} = require('./util')\nconst {\n  forbiddenMethodsSet,\n  corsSafeListedMethodsSet,\n  referrerPolicy,\n  requestRedirect,\n  requestMode,\n  requestCredentials,\n  requestCache,\n  requestDuplex\n} = require('./constants')\nconst { kEnumerableProperty, normalizedMethodRecordsBase, normalizedMethodRecords } = util\nconst { kHeaders, kSignal, kState, kDispatcher } = require('./symbols')\nconst { webidl } = require('./webidl')\nconst { URLSerializer } = require('./data-url')\nconst { kConstruct } = require('../../core/symbols')\nconst assert = require('node:assert')\nconst { getMaxListeners, setMaxListeners, getEventListeners, defaultMaxListeners } = require('node:events')\n\nconst kAbortController = Symbol('abortController')\n\nconst requestFinalizer = new FinalizationRegistry(({ signal, abort }) => {\n  signal.removeEventListener('abort', abort)\n})\n\nconst dependentControllerMap = new WeakMap()\n\nfunction buildAbort (acRef) {\n  return abort\n\n  function abort () {\n    const ac = acRef.deref()\n    if (ac !== undefined) {\n      // Currently, there is a problem with FinalizationRegistry.\n      // https://github.com/nodejs/node/issues/49344\n      // https://github.com/nodejs/node/issues/47748\n      // In the case of abort, the first step is to unregister from it.\n      // If the controller can refer to it, it is still registered.\n      // It will be removed in the future.\n      requestFinalizer.unregister(abort)\n\n      // Unsubscribe a listener.\n      // FinalizationRegistry will no longer be called, so this must be done.\n      this.removeEventListener('abort', abort)\n\n      ac.abort(this.reason)\n\n      const controllerList = dependentControllerMap.get(ac.signal)\n\n      if (controllerList !== undefined) {\n        if (controllerList.size !== 0) {\n          for (const ref of controllerList) {\n            const ctrl = ref.deref()\n            if (ctrl !== undefined) {\n              ctrl.abort(this.reason)\n            }\n          }\n          controllerList.clear()\n        }\n        dependentControllerMap.delete(ac.signal)\n      }\n    }\n  }\n}\n\nlet patchMethodWarning = false\n\n// https://fetch.spec.whatwg.org/#request-class\nclass Request {\n  // https://fetch.spec.whatwg.org/#dom-request\n  constructor (input, init = {}) {\n    if (input === kConstruct) {\n      return\n    }\n\n    const prefix = 'Request constructor'\n    webidl.argumentLengthCheck(arguments, 1, prefix)\n\n    input = webidl.converters.RequestInfo(input, prefix, 'input')\n    init = webidl.converters.RequestInit(init, prefix, 'init')\n\n    // 1. Let request be null.\n    let request = null\n\n    // 2. Let fallbackMode be null.\n    let fallbackMode = null\n\n    // 3. Let baseURL be this’s relevant settings object’s API base URL.\n    const baseUrl = environmentSettingsObject.settingsObject.baseUrl\n\n    // 4. Let signal be null.\n    let signal = null\n\n    // 5. If input is a string, then:\n    if (typeof input === 'string') {\n      this[kDispatcher] = init.dispatcher\n\n      // 1. Let parsedURL be the result of parsing input with baseURL.\n      // 2. If parsedURL is failure, then throw a TypeError.\n      let parsedURL\n      try {\n        parsedURL = new URL(input, baseUrl)\n      } catch (err) {\n        throw new TypeError('Failed to parse URL from ' + input, { cause: err })\n      }\n\n      // 3. If parsedURL includes credentials, then throw a TypeError.\n      if (parsedURL.username || parsedURL.password) {\n        throw new TypeError(\n          'Request cannot be constructed from a URL that includes credentials: ' +\n            input\n        )\n      }\n\n      // 4. Set request to a new request whose URL is parsedURL.\n      request = makeRequest({ urlList: [parsedURL] })\n\n      // 5. Set fallbackMode to \"cors\".\n      fallbackMode = 'cors'\n    } else {\n      this[kDispatcher] = init.dispatcher || input[kDispatcher]\n\n      // 6. Otherwise:\n\n      // 7. Assert: input is a Request object.\n      assert(input instanceof Request)\n\n      // 8. Set request to input’s request.\n      request = input[kState]\n\n      // 9. Set signal to input’s signal.\n      signal = input[kSignal]\n    }\n\n    // 7. Let origin be this’s relevant settings object’s origin.\n    const origin = environmentSettingsObject.settingsObject.origin\n\n    // 8. Let window be \"client\".\n    let window = 'client'\n\n    // 9. If request’s window is an environment settings object and its origin\n    // is same origin with origin, then set window to request’s window.\n    if (\n      request.window?.constructor?.name === 'EnvironmentSettingsObject' &&\n      sameOrigin(request.window, origin)\n    ) {\n      window = request.window\n    }\n\n    // 10. If init[\"window\"] exists and is non-null, then throw a TypeError.\n    if (init.window != null) {\n      throw new TypeError(`'window' option '${window}' must be null`)\n    }\n\n    // 11. If init[\"window\"] exists, then set window to \"no-window\".\n    if ('window' in init) {\n      window = 'no-window'\n    }\n\n    // 12. Set request to a new request with the following properties:\n    request = makeRequest({\n      // URL request’s URL.\n      // undici implementation note: this is set as the first item in request's urlList in makeRequest\n      // method request’s method.\n      method: request.method,\n      // header list A copy of request’s header list.\n      // undici implementation note: headersList is cloned in makeRequest\n      headersList: request.headersList,\n      // unsafe-request flag Set.\n      unsafeRequest: request.unsafeRequest,\n      // client This’s relevant settings object.\n      client: environmentSettingsObject.settingsObject,\n      // window window.\n      window,\n      // priority request’s priority.\n      priority: request.priority,\n      // origin request’s origin. The propagation of the origin is only significant for navigation requests\n      // being handled by a service worker. In this scenario a request can have an origin that is different\n      // from the current client.\n      origin: request.origin,\n      // referrer request’s referrer.\n      referrer: request.referrer,\n      // referrer policy request’s referrer policy.\n      referrerPolicy: request.referrerPolicy,\n      // mode request’s mode.\n      mode: request.mode,\n      // credentials mode request’s credentials mode.\n      credentials: request.credentials,\n      // cache mode request’s cache mode.\n      cache: request.cache,\n      // redirect mode request’s redirect mode.\n      redirect: request.redirect,\n      // integrity metadata request’s integrity metadata.\n      integrity: request.integrity,\n      // keepalive request’s keepalive.\n      keepalive: request.keepalive,\n      // reload-navigation flag request’s reload-navigation flag.\n      reloadNavigation: request.reloadNavigation,\n      // history-navigation flag request’s history-navigation flag.\n      historyNavigation: request.historyNavigation,\n      // URL list A clone of request’s URL list.\n      urlList: [...request.urlList]\n    })\n\n    const initHasKey = Object.keys(init).length !== 0\n\n    // 13. If init is not empty, then:\n    if (initHasKey) {\n      // 1. If request’s mode is \"navigate\", then set it to \"same-origin\".\n      if (request.mode === 'navigate') {\n        request.mode = 'same-origin'\n      }\n\n      // 2. Unset request’s reload-navigation flag.\n      request.reloadNavigation = false\n\n      // 3. Unset request’s history-navigation flag.\n      request.historyNavigation = false\n\n      // 4. Set request’s origin to \"client\".\n      request.origin = 'client'\n\n      // 5. Set request’s referrer to \"client\"\n      request.referrer = 'client'\n\n      // 6. Set request’s referrer policy to the empty string.\n      request.referrerPolicy = ''\n\n      // 7. Set request’s URL to request’s current URL.\n      request.url = request.urlList[request.urlList.length - 1]\n\n      // 8. Set request’s URL list to « request’s URL ».\n      request.urlList = [request.url]\n    }\n\n    // 14. If init[\"referrer\"] exists, then:\n    if (init.referrer !== undefined) {\n      // 1. Let referrer be init[\"referrer\"].\n      const referrer = init.referrer\n\n      // 2. If referrer is the empty string, then set request’s referrer to \"no-referrer\".\n      if (referrer === '') {\n        request.referrer = 'no-referrer'\n      } else {\n        // 1. Let parsedReferrer be the result of parsing referrer with\n        // baseURL.\n        // 2. If parsedReferrer is failure, then throw a TypeError.\n        let parsedReferrer\n        try {\n          parsedReferrer = new URL(referrer, baseUrl)\n        } catch (err) {\n          throw new TypeError(`Referrer \"${referrer}\" is not a valid URL.`, { cause: err })\n        }\n\n        // 3. If one of the following is true\n        // - parsedReferrer’s scheme is \"about\" and path is the string \"client\"\n        // - parsedReferrer’s origin is not same origin with origin\n        // then set request’s referrer to \"client\".\n        if (\n          (parsedReferrer.protocol === 'about:' && parsedReferrer.hostname === 'client') ||\n          (origin && !sameOrigin(parsedReferrer, environmentSettingsObject.settingsObject.baseUrl))\n        ) {\n          request.referrer = 'client'\n        } else {\n          // 4. Otherwise, set request’s referrer to parsedReferrer.\n          request.referrer = parsedReferrer\n        }\n      }\n    }\n\n    // 15. If init[\"referrerPolicy\"] exists, then set request’s referrer policy\n    // to it.\n    if (init.referrerPolicy !== undefined) {\n      request.referrerPolicy = init.referrerPolicy\n    }\n\n    // 16. Let mode be init[\"mode\"] if it exists, and fallbackMode otherwise.\n    let mode\n    if (init.mode !== undefined) {\n      mode = init.mode\n    } else {\n      mode = fallbackMode\n    }\n\n    // 17. If mode is \"navigate\", then throw a TypeError.\n    if (mode === 'navigate') {\n      throw webidl.errors.exception({\n        header: 'Request constructor',\n        message: 'invalid request mode navigate.'\n      })\n    }\n\n    // 18. If mode is non-null, set request’s mode to mode.\n    if (mode != null) {\n      request.mode = mode\n    }\n\n    // 19. If init[\"credentials\"] exists, then set request’s credentials mode\n    // to it.\n    if (init.credentials !== undefined) {\n      request.credentials = init.credentials\n    }\n\n    // 18. If init[\"cache\"] exists, then set request’s cache mode to it.\n    if (init.cache !== undefined) {\n      request.cache = init.cache\n    }\n\n    // 21. If request’s cache mode is \"only-if-cached\" and request’s mode is\n    // not \"same-origin\", then throw a TypeError.\n    if (request.cache === 'only-if-cached' && request.mode !== 'same-origin') {\n      throw new TypeError(\n        \"'only-if-cached' can be set only with 'same-origin' mode\"\n      )\n    }\n\n    // 22. If init[\"redirect\"] exists, then set request’s redirect mode to it.\n    if (init.redirect !== undefined) {\n      request.redirect = init.redirect\n    }\n\n    // 23. If init[\"integrity\"] exists, then set request’s integrity metadata to it.\n    if (init.integrity != null) {\n      request.integrity = String(init.integrity)\n    }\n\n    // 24. If init[\"keepalive\"] exists, then set request’s keepalive to it.\n    if (init.keepalive !== undefined) {\n      request.keepalive = Boolean(init.keepalive)\n    }\n\n    // 25. If init[\"method\"] exists, then:\n    if (init.method !== undefined) {\n      // 1. Let method be init[\"method\"].\n      let method = init.method\n\n      const mayBeNormalized = normalizedMethodRecords[method]\n\n      if (mayBeNormalized !== undefined) {\n        // Note: Bypass validation DELETE, GET, HEAD, OPTIONS, POST, PUT, PATCH and these lowercase ones\n        request.method = mayBeNormalized\n      } else {\n        // 2. If method is not a method or method is a forbidden method, then\n        // throw a TypeError.\n        if (!isValidHTTPToken(method)) {\n          throw new TypeError(`'${method}' is not a valid HTTP method.`)\n        }\n\n        const upperCase = method.toUpperCase()\n\n        if (forbiddenMethodsSet.has(upperCase)) {\n          throw new TypeError(`'${method}' HTTP method is unsupported.`)\n        }\n\n        // 3. Normalize method.\n        // https://fetch.spec.whatwg.org/#concept-method-normalize\n        // Note: must be in uppercase\n        method = normalizedMethodRecordsBase[upperCase] ?? method\n\n        // 4. Set request’s method to method.\n        request.method = method\n      }\n\n      if (!patchMethodWarning && request.method === 'patch') {\n        process.emitWarning('Using `patch` is highly likely to result in a `405 Method Not Allowed`. `PATCH` is much more likely to succeed.', {\n          code: 'UNDICI-FETCH-patch'\n        })\n\n        patchMethodWarning = true\n      }\n    }\n\n    // 26. If init[\"signal\"] exists, then set signal to it.\n    if (init.signal !== undefined) {\n      signal = init.signal\n    }\n\n    // 27. Set this’s request to request.\n    this[kState] = request\n\n    // 28. Set this’s signal to a new AbortSignal object with this’s relevant\n    // Realm.\n    // TODO: could this be simplified with AbortSignal.any\n    // (https://dom.spec.whatwg.org/#dom-abortsignal-any)\n    const ac = new AbortController()\n    this[kSignal] = ac.signal\n\n    // 29. If signal is not null, then make this’s signal follow signal.\n    if (signal != null) {\n      if (\n        !signal ||\n        typeof signal.aborted !== 'boolean' ||\n        typeof signal.addEventListener !== 'function'\n      ) {\n        throw new TypeError(\n          \"Failed to construct 'Request': member signal is not of type AbortSignal.\"\n        )\n      }\n\n      if (signal.aborted) {\n        ac.abort(signal.reason)\n      } else {\n        // Keep a strong ref to ac while request object\n        // is alive. This is needed to prevent AbortController\n        // from being prematurely garbage collected.\n        // See, https://github.com/nodejs/undici/issues/1926.\n        this[kAbortController] = ac\n\n        const acRef = new WeakRef(ac)\n        const abort = buildAbort(acRef)\n\n        // Third-party AbortControllers may not work with these.\n        // See, https://github.com/nodejs/undici/pull/1910#issuecomment-1464495619.\n        try {\n          // If the max amount of listeners is equal to the default, increase it\n          // This is only available in node >= v19.9.0\n          if (typeof getMaxListeners === 'function' && getMaxListeners(signal) === defaultMaxListeners) {\n            setMaxListeners(1500, signal)\n          } else if (getEventListeners(signal, 'abort').length >= defaultMaxListeners) {\n            setMaxListeners(1500, signal)\n          }\n        } catch {}\n\n        util.addAbortListener(signal, abort)\n        // The third argument must be a registry key to be unregistered.\n        // Without it, you cannot unregister.\n        // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/FinalizationRegistry\n        // abort is used as the unregister key. (because it is unique)\n        requestFinalizer.register(ac, { signal, abort }, abort)\n      }\n    }\n\n    // 30. Set this’s headers to a new Headers object with this’s relevant\n    // Realm, whose header list is request’s header list and guard is\n    // \"request\".\n    this[kHeaders] = new Headers(kConstruct)\n    setHeadersList(this[kHeaders], request.headersList)\n    setHeadersGuard(this[kHeaders], 'request')\n\n    // 31. If this’s request’s mode is \"no-cors\", then:\n    if (mode === 'no-cors') {\n      // 1. If this’s request’s method is not a CORS-safelisted method,\n      // then throw a TypeError.\n      if (!corsSafeListedMethodsSet.has(request.method)) {\n        throw new TypeError(\n          `'${request.method} is unsupported in no-cors mode.`\n        )\n      }\n\n      // 2. Set this’s headers’s guard to \"request-no-cors\".\n      setHeadersGuard(this[kHeaders], 'request-no-cors')\n    }\n\n    // 32. If init is not empty, then:\n    if (initHasKey) {\n      /** @type {HeadersList} */\n      const headersList = getHeadersList(this[kHeaders])\n      // 1. Let headers be a copy of this’s headers and its associated header\n      // list.\n      // 2. If init[\"headers\"] exists, then set headers to init[\"headers\"].\n      const headers = init.headers !== undefined ? init.headers : new HeadersList(headersList)\n\n      // 3. Empty this’s headers’s header list.\n      headersList.clear()\n\n      // 4. If headers is a Headers object, then for each header in its header\n      // list, append header’s name/header’s value to this’s headers.\n      if (headers instanceof HeadersList) {\n        for (const { name, value } of headers.rawValues()) {\n          headersList.append(name, value, false)\n        }\n        // Note: Copy the `set-cookie` meta-data.\n        headersList.cookies = headers.cookies\n      } else {\n        // 5. Otherwise, fill this’s headers with headers.\n        fillHeaders(this[kHeaders], headers)\n      }\n    }\n\n    // 33. Let inputBody be input’s request’s body if input is a Request\n    // object; otherwise null.\n    const inputBody = input instanceof Request ? input[kState].body : null\n\n    // 34. If either init[\"body\"] exists and is non-null or inputBody is\n    // non-null, and request’s method is `GET` or `HEAD`, then throw a\n    // TypeError.\n    if (\n      (init.body != null || inputBody != null) &&\n      (request.method === 'GET' || request.method === 'HEAD')\n    ) {\n      throw new TypeError('Request with GET/HEAD method cannot have body.')\n    }\n\n    // 35. Let initBody be null.\n    let initBody = null\n\n    // 36. If init[\"body\"] exists and is non-null, then:\n    if (init.body != null) {\n      // 1. Let Content-Type be null.\n      // 2. Set initBody and Content-Type to the result of extracting\n      // init[\"body\"], with keepalive set to request’s keepalive.\n      const [extractedBody, contentType] = extractBody(\n        init.body,\n        request.keepalive\n      )\n      initBody = extractedBody\n\n      // 3, If Content-Type is non-null and this’s headers’s header list does\n      // not contain `Content-Type`, then append `Content-Type`/Content-Type to\n      // this’s headers.\n      if (contentType && !getHeadersList(this[kHeaders]).contains('content-type', true)) {\n        this[kHeaders].append('content-type', contentType)\n      }\n    }\n\n    // 37. Let inputOrInitBody be initBody if it is non-null; otherwise\n    // inputBody.\n    const inputOrInitBody = initBody ?? inputBody\n\n    // 38. If inputOrInitBody is non-null and inputOrInitBody’s source is\n    // null, then:\n    if (inputOrInitBody != null && inputOrInitBody.source == null) {\n      // 1. If initBody is non-null and init[\"duplex\"] does not exist,\n      //    then throw a TypeError.\n      if (initBody != null && init.duplex == null) {\n        throw new TypeError('RequestInit: duplex option is required when sending a body.')\n      }\n\n      // 2. If this’s request’s mode is neither \"same-origin\" nor \"cors\",\n      // then throw a TypeError.\n      if (request.mode !== 'same-origin' && request.mode !== 'cors') {\n        throw new TypeError(\n          'If request is made from ReadableStream, mode should be \"same-origin\" or \"cors\"'\n        )\n      }\n\n      // 3. Set this’s request’s use-CORS-preflight flag.\n      request.useCORSPreflightFlag = true\n    }\n\n    // 39. Let finalBody be inputOrInitBody.\n    let finalBody = inputOrInitBody\n\n    // 40. If initBody is null and inputBody is non-null, then:\n    if (initBody == null && inputBody != null) {\n      // 1. If input is unusable, then throw a TypeError.\n      if (bodyUnusable(input)) {\n        throw new TypeError(\n          'Cannot construct a Request with a Request object that has already been used.'\n        )\n      }\n\n      // 2. Set finalBody to the result of creating a proxy for inputBody.\n      // https://streams.spec.whatwg.org/#readablestream-create-a-proxy\n      const identityTransform = new TransformStream()\n      inputBody.stream.pipeThrough(identityTransform)\n      finalBody = {\n        source: inputBody.source,\n        length: inputBody.length,\n        stream: identityTransform.readable\n      }\n    }\n\n    // 41. Set this’s request’s body to finalBody.\n    this[kState].body = finalBody\n  }\n\n  // Returns request’s HTTP method, which is \"GET\" by default.\n  get method () {\n    webidl.brandCheck(this, Request)\n\n    // The method getter steps are to return this’s request’s method.\n    return this[kState].method\n  }\n\n  // Returns the URL of request as a string.\n  get url () {\n    webidl.brandCheck(this, Request)\n\n    // The url getter steps are to return this’s request’s URL, serialized.\n    return URLSerializer(this[kState].url)\n  }\n\n  // Returns a Headers object consisting of the headers associated with request.\n  // Note that headers added in the network layer by the user agent will not\n  // be accounted for in this object, e.g., the \"Host\" header.\n  get headers () {\n    webidl.brandCheck(this, Request)\n\n    // The headers getter steps are to return this’s headers.\n    return this[kHeaders]\n  }\n\n  // Returns the kind of resource requested by request, e.g., \"document\"\n  // or \"script\".\n  get destination () {\n    webidl.brandCheck(this, Request)\n\n    // The destination getter are to return this’s request’s destination.\n    return this[kState].destination\n  }\n\n  // Returns the referrer of request. Its value can be a same-origin URL if\n  // explicitly set in init, the empty string to indicate no referrer, and\n  // \"about:client\" when defaulting to the global’s default. This is used\n  // during fetching to determine the value of the `Referer` header of the\n  // request being made.\n  get referrer () {\n    webidl.brandCheck(this, Request)\n\n    // 1. If this’s request’s referrer is \"no-referrer\", then return the\n    // empty string.\n    if (this[kState].referrer === 'no-referrer') {\n      return ''\n    }\n\n    // 2. If this’s request’s referrer is \"client\", then return\n    // \"about:client\".\n    if (this[kState].referrer === 'client') {\n      return 'about:client'\n    }\n\n    // Return this’s request’s referrer, serialized.\n    return this[kState].referrer.toString()\n  }\n\n  // Returns the referrer policy associated with request.\n  // This is used during fetching to compute the value of the request’s\n  // referrer.\n  get referrerPolicy () {\n    webidl.brandCheck(this, Request)\n\n    // The referrerPolicy getter steps are to return this’s request’s referrer policy.\n    return this[kState].referrerPolicy\n  }\n\n  // Returns the mode associated with request, which is a string indicating\n  // whether the request will use CORS, or will be restricted to same-origin\n  // URLs.\n  get mode () {\n    webidl.brandCheck(this, Request)\n\n    // The mode getter steps are to return this’s request’s mode.\n    return this[kState].mode\n  }\n\n  // Returns the credentials mode associated with request,\n  // which is a string indicating whether credentials will be sent with the\n  // request always, never, or only when sent to a same-origin URL.\n  get credentials () {\n    // The credentials getter steps are to return this’s request’s credentials mode.\n    return this[kState].credentials\n  }\n\n  // Returns the cache mode associated with request,\n  // which is a string indicating how the request will\n  // interact with the browser’s cache when fetching.\n  get cache () {\n    webidl.brandCheck(this, Request)\n\n    // The cache getter steps are to return this’s request’s cache mode.\n    return this[kState].cache\n  }\n\n  // Returns the redirect mode associated with request,\n  // which is a string indicating how redirects for the\n  // request will be handled during fetching. A request\n  // will follow redirects by default.\n  get redirect () {\n    webidl.brandCheck(this, Request)\n\n    // The redirect getter steps are to return this’s request’s redirect mode.\n    return this[kState].redirect\n  }\n\n  // Returns request’s subresource integrity metadata, which is a\n  // cryptographic hash of the resource being fetched. Its value\n  // consists of multiple hashes separated by whitespace. [SRI]\n  get integrity () {\n    webidl.brandCheck(this, Request)\n\n    // The integrity getter steps are to return this’s request’s integrity\n    // metadata.\n    return this[kState].integrity\n  }\n\n  // Returns a boolean indicating whether or not request can outlive the\n  // global in which it was created.\n  get keepalive () {\n    webidl.brandCheck(this, Request)\n\n    // The keepalive getter steps are to return this’s request’s keepalive.\n    return this[kState].keepalive\n  }\n\n  // Returns a boolean indicating whether or not request is for a reload\n  // navigation.\n  get isReloadNavigation () {\n    webidl.brandCheck(this, Request)\n\n    // The isReloadNavigation getter steps are to return true if this’s\n    // request’s reload-navigation flag is set; otherwise false.\n    return this[kState].reloadNavigation\n  }\n\n  // Returns a boolean indicating whether or not request is for a history\n  // navigation (a.k.a. back-forward navigation).\n  get isHistoryNavigation () {\n    webidl.brandCheck(this, Request)\n\n    // The isHistoryNavigation getter steps are to return true if this’s request’s\n    // history-navigation flag is set; otherwise false.\n    return this[kState].historyNavigation\n  }\n\n  // Returns the signal associated with request, which is an AbortSignal\n  // object indicating whether or not request has been aborted, and its\n  // abort event handler.\n  get signal () {\n    webidl.brandCheck(this, Request)\n\n    // The signal getter steps are to return this’s signal.\n    return this[kSignal]\n  }\n\n  get body () {\n    webidl.brandCheck(this, Request)\n\n    return this[kState].body ? this[kState].body.stream : null\n  }\n\n  get bodyUsed () {\n    webidl.brandCheck(this, Request)\n\n    return !!this[kState].body && util.isDisturbed(this[kState].body.stream)\n  }\n\n  get duplex () {\n    webidl.brandCheck(this, Request)\n\n    return 'half'\n  }\n\n  // Returns a clone of request.\n  clone () {\n    webidl.brandCheck(this, Request)\n\n    // 1. If this is unusable, then throw a TypeError.\n    if (bodyUnusable(this)) {\n      throw new TypeError('unusable')\n    }\n\n    // 2. Let clonedRequest be the result of cloning this’s request.\n    const clonedRequest = cloneRequest(this[kState])\n\n    // 3. Let clonedRequestObject be the result of creating a Request object,\n    // given clonedRequest, this’s headers’s guard, and this’s relevant Realm.\n    // 4. Make clonedRequestObject’s signal follow this’s signal.\n    const ac = new AbortController()\n    if (this.signal.aborted) {\n      ac.abort(this.signal.reason)\n    } else {\n      let list = dependentControllerMap.get(this.signal)\n      if (list === undefined) {\n        list = new Set()\n        dependentControllerMap.set(this.signal, list)\n      }\n      const acRef = new WeakRef(ac)\n      list.add(acRef)\n      util.addAbortListener(\n        ac.signal,\n        buildAbort(acRef)\n      )\n    }\n\n    // 4. Return clonedRequestObject.\n    return fromInnerRequest(clonedRequest, ac.signal, getHeadersGuard(this[kHeaders]))\n  }\n\n  [nodeUtil.inspect.custom] (depth, options) {\n    if (options.depth === null) {\n      options.depth = 2\n    }\n\n    options.colors ??= true\n\n    const properties = {\n      method: this.method,\n      url: this.url,\n      headers: this.headers,\n      destination: this.destination,\n      referrer: this.referrer,\n      referrerPolicy: this.referrerPolicy,\n      mode: this.mode,\n      credentials: this.credentials,\n      cache: this.cache,\n      redirect: this.redirect,\n      integrity: this.integrity,\n      keepalive: this.keepalive,\n      isReloadNavigation: this.isReloadNavigation,\n      isHistoryNavigation: this.isHistoryNavigation,\n      signal: this.signal\n    }\n\n    return `Request ${nodeUtil.formatWithOptions(options, properties)}`\n  }\n}\n\nmixinBody(Request)\n\n// https://fetch.spec.whatwg.org/#requests\nfunction makeRequest (init) {\n  return {\n    method: init.method ?? 'GET',\n    localURLsOnly: init.localURLsOnly ?? false,\n    unsafeRequest: init.unsafeRequest ?? false,\n    body: init.body ?? null,\n    client: init.client ?? null,\n    reservedClient: init.reservedClient ?? null,\n    replacesClientId: init.replacesClientId ?? '',\n    window: init.window ?? 'client',\n    keepalive: init.keepalive ?? false,\n    serviceWorkers: init.serviceWorkers ?? 'all',\n    initiator: init.initiator ?? '',\n    destination: init.destination ?? '',\n    priority: init.priority ?? null,\n    origin: init.origin ?? 'client',\n    policyContainer: init.policyContainer ?? 'client',\n    referrer: init.referrer ?? 'client',\n    referrerPolicy: init.referrerPolicy ?? '',\n    mode: init.mode ?? 'no-cors',\n    useCORSPreflightFlag: init.useCORSPreflightFlag ?? false,\n    credentials: init.credentials ?? 'same-origin',\n    useCredentials: init.useCredentials ?? false,\n    cache: init.cache ?? 'default',\n    redirect: init.redirect ?? 'follow',\n    integrity: init.integrity ?? '',\n    cryptoGraphicsNonceMetadata: init.cryptoGraphicsNonceMetadata ?? '',\n    parserMetadata: init.parserMetadata ?? '',\n    reloadNavigation: init.reloadNavigation ?? false,\n    historyNavigation: init.historyNavigation ?? false,\n    userActivation: init.userActivation ?? false,\n    taintedOrigin: init.taintedOrigin ?? false,\n    redirectCount: init.redirectCount ?? 0,\n    responseTainting: init.responseTainting ?? 'basic',\n    preventNoCacheCacheControlHeaderModification: init.preventNoCacheCacheControlHeaderModification ?? false,\n    done: init.done ?? false,\n    timingAllowFailed: init.timingAllowFailed ?? false,\n    urlList: init.urlList,\n    url: init.urlList[0],\n    headersList: init.headersList\n      ? new HeadersList(init.headersList)\n      : new HeadersList()\n  }\n}\n\n// https://fetch.spec.whatwg.org/#concept-request-clone\nfunction cloneRequest (request) {\n  // To clone a request request, run these steps:\n\n  // 1. Let newRequest be a copy of request, except for its body.\n  const newRequest = makeRequest({ ...request, body: null })\n\n  // 2. If request’s body is non-null, set newRequest’s body to the\n  // result of cloning request’s body.\n  if (request.body != null) {\n    newRequest.body = cloneBody(newRequest, request.body)\n  }\n\n  // 3. Return newRequest.\n  return newRequest\n}\n\n/**\n * @see https://fetch.spec.whatwg.org/#request-create\n * @param {any} innerRequest\n * @param {AbortSignal} signal\n * @param {'request' | 'immutable' | 'request-no-cors' | 'response' | 'none'} guard\n * @returns {Request}\n */\nfunction fromInnerRequest (innerRequest, signal, guard) {\n  const request = new Request(kConstruct)\n  request[kState] = innerRequest\n  request[kSignal] = signal\n  request[kHeaders] = new Headers(kConstruct)\n  setHeadersList(request[kHeaders], innerRequest.headersList)\n  setHeadersGuard(request[kHeaders], guard)\n  return request\n}\n\nObject.defineProperties(Request.prototype, {\n  method: kEnumerableProperty,\n  url: kEnumerableProperty,\n  headers: kEnumerableProperty,\n  redirect: kEnumerableProperty,\n  clone: kEnumerableProperty,\n  signal: kEnumerableProperty,\n  duplex: kEnumerableProperty,\n  destination: kEnumerableProperty,\n  body: kEnumerableProperty,\n  bodyUsed: kEnumerableProperty,\n  isHistoryNavigation: kEnumerableProperty,\n  isReloadNavigation: kEnumerableProperty,\n  keepalive: kEnumerableProperty,\n  integrity: kEnumerableProperty,\n  cache: kEnumerableProperty,\n  credentials: kEnumerableProperty,\n  attribute: kEnumerableProperty,\n  referrerPolicy: kEnumerableProperty,\n  referrer: kEnumerableProperty,\n  mode: kEnumerableProperty,\n  [Symbol.toStringTag]: {\n    value: 'Request',\n    configurable: true\n  }\n})\n\nwebidl.converters.Request = webidl.interfaceConverter(\n  Request\n)\n\n// https://fetch.spec.whatwg.org/#requestinfo\nwebidl.converters.RequestInfo = function (V, prefix, argument) {\n  if (typeof V === 'string') {\n    return webidl.converters.USVString(V, prefix, argument)\n  }\n\n  if (V instanceof Request) {\n    return webidl.converters.Request(V, prefix, argument)\n  }\n\n  return webidl.converters.USVString(V, prefix, argument)\n}\n\nwebidl.converters.AbortSignal = webidl.interfaceConverter(\n  AbortSignal\n)\n\n// https://fetch.spec.whatwg.org/#requestinit\nwebidl.converters.RequestInit = webidl.dictionaryConverter([\n  {\n    key: 'method',\n    converter: webidl.converters.ByteString\n  },\n  {\n    key: 'headers',\n    converter: webidl.converters.HeadersInit\n  },\n  {\n    key: 'body',\n    converter: webidl.nullableConverter(\n      webidl.converters.BodyInit\n    )\n  },\n  {\n    key: 'referrer',\n    converter: webidl.converters.USVString\n  },\n  {\n    key: 'referrerPolicy',\n    converter: webidl.converters.DOMString,\n    // https://w3c.github.io/webappsec-referrer-policy/#referrer-policy\n    allowedValues: referrerPolicy\n  },\n  {\n    key: 'mode',\n    converter: webidl.converters.DOMString,\n    // https://fetch.spec.whatwg.org/#concept-request-mode\n    allowedValues: requestMode\n  },\n  {\n    key: 'credentials',\n    converter: webidl.converters.DOMString,\n    // https://fetch.spec.whatwg.org/#requestcredentials\n    allowedValues: requestCredentials\n  },\n  {\n    key: 'cache',\n    converter: webidl.converters.DOMString,\n    // https://fetch.spec.whatwg.org/#requestcache\n    allowedValues: requestCache\n  },\n  {\n    key: 'redirect',\n    converter: webidl.converters.DOMString,\n    // https://fetch.spec.whatwg.org/#requestredirect\n    allowedValues: requestRedirect\n  },\n  {\n    key: 'integrity',\n    converter: webidl.converters.DOMString\n  },\n  {\n    key: 'keepalive',\n    converter: webidl.converters.boolean\n  },\n  {\n    key: 'signal',\n    converter: webidl.nullableConverter(\n      (signal) => webidl.converters.AbortSignal(\n        signal,\n        'RequestInit',\n        'signal',\n        { strict: false }\n      )\n    )\n  },\n  {\n    key: 'window',\n    converter: webidl.converters.any\n  },\n  {\n    key: 'duplex',\n    converter: webidl.converters.DOMString,\n    allowedValues: requestDuplex\n  },\n  {\n    key: 'dispatcher', // undici specific option\n    converter: webidl.converters.any\n  }\n])\n\nmodule.exports = { Request, makeRequest, fromInnerRequest, cloneRequest }\n", "// https://github.com/Ethan-Arrowood/undici-fetch\n\n'use strict'\n\nconst {\n  makeNetworkError,\n  makeAppropriateNetworkError,\n  filterResponse,\n  makeResponse,\n  fromInnerResponse\n} = require('./response')\nconst { HeadersList } = require('./headers')\nconst { Request, cloneRequest } = require('./request')\nconst zlib = require('node:zlib')\nconst {\n  bytesMatch,\n  makePolicyContainer,\n  clonePolicyContainer,\n  requestBadPort,\n  TAOCheck,\n  appendRequestOriginHeader,\n  responseLocationURL,\n  requestCurrentURL,\n  setRequestReferrerPolicyOnRedirect,\n  tryUpgradeRequestToAPotentiallyTrustworthyURL,\n  createOpaqueTimingInfo,\n  appendFetchMetadata,\n  corsCheck,\n  crossOriginResourcePolicyCheck,\n  determineRequestsReferrer,\n  coarsenedSharedCurrentTime,\n  createDeferredPromise,\n  isBlobLike,\n  sameOrigin,\n  isCancelled,\n  isAborted,\n  isErrorLike,\n  fullyReadBody,\n  readableStreamClose,\n  isomorphicEncode,\n  urlIsLocal,\n  urlIsHttpHttpsScheme,\n  urlHasHttpsScheme,\n  clampAndCoarsenConnectionTimingInfo,\n  simpleRangeHeaderValue,\n  buildContentRange,\n  createInflate,\n  extractMimeType\n} = require('./util')\nconst { kState, kDispatcher } = require('./symbols')\nconst assert = require('node:assert')\nconst { safelyExtractBody, extractBody } = require('./body')\nconst {\n  redirectStatusSet,\n  nullBodyStatus,\n  safeMethodsSet,\n  requestBodyHeader,\n  subresourceSet\n} = require('./constants')\nconst EE = require('node:events')\nconst { Readable, pipeline, finished } = require('node:stream')\nconst { addAbortListener, isErrored, isReadable, bufferToLowerCasedHeaderName } = require('../../core/util')\nconst { dataURLProcessor, serializeAMimeType, minimizeSupportedMimeType } = require('./data-url')\nconst { getGlobalDispatcher } = require('../../global')\nconst { webidl } = require('./webidl')\nconst { STATUS_CODES } = require('node:http')\nconst GET_OR_HEAD = ['GET', 'HEAD']\n\nconst defaultUserAgent = typeof __UNDICI_IS_NODE__ !== 'undefined' || typeof esbuildDetection !== 'undefined'\n  ? 'node'\n  : 'undici'\n\n/** @type {import('buffer').resolveObjectURL} */\nlet resolveObjectURL\n\nclass Fetch extends EE {\n  constructor (dispatcher) {\n    super()\n\n    this.dispatcher = dispatcher\n    this.connection = null\n    this.dump = false\n    this.state = 'ongoing'\n  }\n\n  terminate (reason) {\n    if (this.state !== 'ongoing') {\n      return\n    }\n\n    this.state = 'terminated'\n    this.connection?.destroy(reason)\n    this.emit('terminated', reason)\n  }\n\n  // https://fetch.spec.whatwg.org/#fetch-controller-abort\n  abort (error) {\n    if (this.state !== 'ongoing') {\n      return\n    }\n\n    // 1. Set controller’s state to \"aborted\".\n    this.state = 'aborted'\n\n    // 2. Let fallbackError be an \"AbortError\" DOMException.\n    // 3. Set error to fallbackError if it is not given.\n    if (!error) {\n      error = new DOMException('The operation was aborted.', 'AbortError')\n    }\n\n    // 4. Let serializedError be StructuredSerialize(error).\n    //    If that threw an exception, catch it, and let\n    //    serializedError be StructuredSerialize(fallbackError).\n\n    // 5. Set controller’s serialized abort reason to serializedError.\n    this.serializedAbortReason = error\n\n    this.connection?.destroy(error)\n    this.emit('terminated', error)\n  }\n}\n\nfunction handleFetchDone (response) {\n  finalizeAndReportTiming(response, 'fetch')\n}\n\n// https://fetch.spec.whatwg.org/#fetch-method\nfunction fetch (input, init = undefined) {\n  webidl.argumentLengthCheck(arguments, 1, 'globalThis.fetch')\n\n  // 1. Let p be a new promise.\n  let p = createDeferredPromise()\n\n  // 2. Let requestObject be the result of invoking the initial value of\n  // Request as constructor with input and init as arguments. If this throws\n  // an exception, reject p with it and return p.\n  let requestObject\n\n  try {\n    requestObject = new Request(input, init)\n  } catch (e) {\n    p.reject(e)\n    return p.promise\n  }\n\n  // 3. Let request be requestObject’s request.\n  const request = requestObject[kState]\n\n  // 4. If requestObject’s signal’s aborted flag is set, then:\n  if (requestObject.signal.aborted) {\n    // 1. Abort the fetch() call with p, request, null, and\n    //    requestObject’s signal’s abort reason.\n    abortFetch(p, request, null, requestObject.signal.reason)\n\n    // 2. Return p.\n    return p.promise\n  }\n\n  // 5. Let globalObject be request’s client’s global object.\n  const globalObject = request.client.globalObject\n\n  // 6. If globalObject is a ServiceWorkerGlobalScope object, then set\n  // request’s service-workers mode to \"none\".\n  if (globalObject?.constructor?.name === 'ServiceWorkerGlobalScope') {\n    request.serviceWorkers = 'none'\n  }\n\n  // 7. Let responseObject be null.\n  let responseObject = null\n\n  // 8. Let relevantRealm be this’s relevant Realm.\n\n  // 9. Let locallyAborted be false.\n  let locallyAborted = false\n\n  // 10. Let controller be null.\n  let controller = null\n\n  // 11. Add the following abort steps to requestObject’s signal:\n  addAbortListener(\n    requestObject.signal,\n    () => {\n      // 1. Set locallyAborted to true.\n      locallyAborted = true\n\n      // 2. Assert: controller is non-null.\n      assert(controller != null)\n\n      // 3. Abort controller with requestObject’s signal’s abort reason.\n      controller.abort(requestObject.signal.reason)\n\n      const realResponse = responseObject?.deref()\n\n      // 4. Abort the fetch() call with p, request, responseObject,\n      //    and requestObject’s signal’s abort reason.\n      abortFetch(p, request, realResponse, requestObject.signal.reason)\n    }\n  )\n\n  // 12. Let handleFetchDone given response response be to finalize and\n  // report timing with response, globalObject, and \"fetch\".\n  // see function handleFetchDone\n\n  // 13. Set controller to the result of calling fetch given request,\n  // with processResponseEndOfBody set to handleFetchDone, and processResponse\n  // given response being these substeps:\n\n  const processResponse = (response) => {\n    // 1. If locallyAborted is true, terminate these substeps.\n    if (locallyAborted) {\n      return\n    }\n\n    // 2. If response’s aborted flag is set, then:\n    if (response.aborted) {\n      // 1. Let deserializedError be the result of deserialize a serialized\n      //    abort reason given controller’s serialized abort reason and\n      //    relevantRealm.\n\n      // 2. Abort the fetch() call with p, request, responseObject, and\n      //    deserializedError.\n\n      abortFetch(p, request, responseObject, controller.serializedAbortReason)\n      return\n    }\n\n    // 3. If response is a network error, then reject p with a TypeError\n    // and terminate these substeps.\n    if (response.type === 'error') {\n      p.reject(new TypeError('fetch failed', { cause: response.error }))\n      return\n    }\n\n    // 4. Set responseObject to the result of creating a Response object,\n    // given response, \"immutable\", and relevantRealm.\n    responseObject = new WeakRef(fromInnerResponse(response, 'immutable'))\n\n    // 5. Resolve p with responseObject.\n    p.resolve(responseObject.deref())\n    p = null\n  }\n\n  controller = fetching({\n    request,\n    processResponseEndOfBody: handleFetchDone,\n    processResponse,\n    dispatcher: requestObject[kDispatcher] // undici\n  })\n\n  // 14. Return p.\n  return p.promise\n}\n\n// https://fetch.spec.whatwg.org/#finalize-and-report-timing\nfunction finalizeAndReportTiming (response, initiatorType = 'other') {\n  // 1. If response is an aborted network error, then return.\n  if (response.type === 'error' && response.aborted) {\n    return\n  }\n\n  // 2. If response’s URL list is null or empty, then return.\n  if (!response.urlList?.length) {\n    return\n  }\n\n  // 3. Let originalURL be response’s URL list[0].\n  const originalURL = response.urlList[0]\n\n  // 4. Let timingInfo be response’s timing info.\n  let timingInfo = response.timingInfo\n\n  // 5. Let cacheState be response’s cache state.\n  let cacheState = response.cacheState\n\n  // 6. If originalURL’s scheme is not an HTTP(S) scheme, then return.\n  if (!urlIsHttpHttpsScheme(originalURL)) {\n    return\n  }\n\n  // 7. If timingInfo is null, then return.\n  if (timingInfo === null) {\n    return\n  }\n\n  // 8. If response’s timing allow passed flag is not set, then:\n  if (!response.timingAllowPassed) {\n    //  1. Set timingInfo to a the result of creating an opaque timing info for timingInfo.\n    timingInfo = createOpaqueTimingInfo({\n      startTime: timingInfo.startTime\n    })\n\n    //  2. Set cacheState to the empty string.\n    cacheState = ''\n  }\n\n  // 9. Set timingInfo’s end time to the coarsened shared current time\n  // given global’s relevant settings object’s cross-origin isolated\n  // capability.\n  // TODO: given global’s relevant settings object’s cross-origin isolated\n  // capability?\n  timingInfo.endTime = coarsenedSharedCurrentTime()\n\n  // 10. Set response’s timing info to timingInfo.\n  response.timingInfo = timingInfo\n\n  // 11. Mark resource timing for timingInfo, originalURL, initiatorType,\n  // global, and cacheState.\n  markResourceTiming(\n    timingInfo,\n    originalURL.href,\n    initiatorType,\n    globalThis,\n    cacheState\n  )\n}\n\n// https://w3c.github.io/resource-timing/#dfn-mark-resource-timing\nconst markResourceTiming = performance.markResourceTiming\n\n// https://fetch.spec.whatwg.org/#abort-fetch\nfunction abortFetch (p, request, responseObject, error) {\n  // 1. Reject promise with error.\n  if (p) {\n    // We might have already resolved the promise at this stage\n    p.reject(error)\n  }\n\n  // 2. If request’s body is not null and is readable, then cancel request’s\n  // body with error.\n  if (request.body != null && isReadable(request.body?.stream)) {\n    request.body.stream.cancel(error).catch((err) => {\n      if (err.code === 'ERR_INVALID_STATE') {\n        // Node bug?\n        return\n      }\n      throw err\n    })\n  }\n\n  // 3. If responseObject is null, then return.\n  if (responseObject == null) {\n    return\n  }\n\n  // 4. Let response be responseObject’s response.\n  const response = responseObject[kState]\n\n  // 5. If response’s body is not null and is readable, then error response’s\n  // body with error.\n  if (response.body != null && isReadable(response.body?.stream)) {\n    response.body.stream.cancel(error).catch((err) => {\n      if (err.code === 'ERR_INVALID_STATE') {\n        // Node bug?\n        return\n      }\n      throw err\n    })\n  }\n}\n\n// https://fetch.spec.whatwg.org/#fetching\nfunction fetching ({\n  request,\n  processRequestBodyChunkLength,\n  processRequestEndOfBody,\n  processResponse,\n  processResponseEndOfBody,\n  processResponseConsumeBody,\n  useParallelQueue = false,\n  dispatcher = getGlobalDispatcher() // undici\n}) {\n  // Ensure that the dispatcher is set accordingly\n  assert(dispatcher)\n\n  // 1. Let taskDestination be null.\n  let taskDestination = null\n\n  // 2. Let crossOriginIsolatedCapability be false.\n  let crossOriginIsolatedCapability = false\n\n  // 3. If request’s client is non-null, then:\n  if (request.client != null) {\n    // 1. Set taskDestination to request’s client’s global object.\n    taskDestination = request.client.globalObject\n\n    // 2. Set crossOriginIsolatedCapability to request’s client’s cross-origin\n    // isolated capability.\n    crossOriginIsolatedCapability =\n      request.client.crossOriginIsolatedCapability\n  }\n\n  // 4. If useParallelQueue is true, then set taskDestination to the result of\n  // starting a new parallel queue.\n  // TODO\n\n  // 5. Let timingInfo be a new fetch timing info whose start time and\n  // post-redirect start time are the coarsened shared current time given\n  // crossOriginIsolatedCapability.\n  const currentTime = coarsenedSharedCurrentTime(crossOriginIsolatedCapability)\n  const timingInfo = createOpaqueTimingInfo({\n    startTime: currentTime\n  })\n\n  // 6. Let fetchParams be a new fetch params whose\n  // request is request,\n  // timing info is timingInfo,\n  // process request body chunk length is processRequestBodyChunkLength,\n  // process request end-of-body is processRequestEndOfBody,\n  // process response is processResponse,\n  // process response consume body is processResponseConsumeBody,\n  // process response end-of-body is processResponseEndOfBody,\n  // task destination is taskDestination,\n  // and cross-origin isolated capability is crossOriginIsolatedCapability.\n  const fetchParams = {\n    controller: new Fetch(dispatcher),\n    request,\n    timingInfo,\n    processRequestBodyChunkLength,\n    processRequestEndOfBody,\n    processResponse,\n    processResponseConsumeBody,\n    processResponseEndOfBody,\n    taskDestination,\n    crossOriginIsolatedCapability\n  }\n\n  // 7. If request’s body is a byte sequence, then set request’s body to\n  //    request’s body as a body.\n  // NOTE: Since fetching is only called from fetch, body should already be\n  // extracted.\n  assert(!request.body || request.body.stream)\n\n  // 8. If request’s window is \"client\", then set request’s window to request’s\n  // client, if request’s client’s global object is a Window object; otherwise\n  // \"no-window\".\n  if (request.window === 'client') {\n    // TODO: What if request.client is null?\n    request.window =\n      request.client?.globalObject?.constructor?.name === 'Window'\n        ? request.client\n        : 'no-window'\n  }\n\n  // 9. If request’s origin is \"client\", then set request’s origin to request’s\n  // client’s origin.\n  if (request.origin === 'client') {\n    request.origin = request.client.origin\n  }\n\n  // 10. If all of the following conditions are true:\n  // TODO\n\n  // 11. If request’s policy container is \"client\", then:\n  if (request.policyContainer === 'client') {\n    // 1. If request’s client is non-null, then set request’s policy\n    // container to a clone of request’s client’s policy container. [HTML]\n    if (request.client != null) {\n      request.policyContainer = clonePolicyContainer(\n        request.client.policyContainer\n      )\n    } else {\n      // 2. Otherwise, set request’s policy container to a new policy\n      // container.\n      request.policyContainer = makePolicyContainer()\n    }\n  }\n\n  // 12. If request’s header list does not contain `Accept`, then:\n  if (!request.headersList.contains('accept', true)) {\n    // 1. Let value be `*/*`.\n    const value = '*/*'\n\n    // 2. A user agent should set value to the first matching statement, if\n    // any, switching on request’s destination:\n    // \"document\"\n    // \"frame\"\n    // \"iframe\"\n    // `text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8`\n    // \"image\"\n    // `image/png,image/svg+xml,image/*;q=0.8,*/*;q=0.5`\n    // \"style\"\n    // `text/css,*/*;q=0.1`\n    // TODO\n\n    // 3. Append `Accept`/value to request’s header list.\n    request.headersList.append('accept', value, true)\n  }\n\n  // 13. If request’s header list does not contain `Accept-Language`, then\n  // user agents should append `Accept-Language`/an appropriate value to\n  // request’s header list.\n  if (!request.headersList.contains('accept-language', true)) {\n    request.headersList.append('accept-language', '*', true)\n  }\n\n  // 14. If request’s priority is null, then use request’s initiator and\n  // destination appropriately in setting request’s priority to a\n  // user-agent-defined object.\n  if (request.priority === null) {\n    // TODO\n  }\n\n  // 15. If request is a subresource request, then:\n  if (subresourceSet.has(request.destination)) {\n    // TODO\n  }\n\n  // 16. Run main fetch given fetchParams.\n  mainFetch(fetchParams)\n    .catch(err => {\n      fetchParams.controller.terminate(err)\n    })\n\n  // 17. Return fetchParam's controller\n  return fetchParams.controller\n}\n\n// https://fetch.spec.whatwg.org/#concept-main-fetch\nasync function mainFetch (fetchParams, recursive = false) {\n  // 1. Let request be fetchParams’s request.\n  const request = fetchParams.request\n\n  // 2. Let response be null.\n  let response = null\n\n  // 3. If request’s local-URLs-only flag is set and request’s current URL is\n  // not local, then set response to a network error.\n  if (request.localURLsOnly && !urlIsLocal(requestCurrentURL(request))) {\n    response = makeNetworkError('local URLs only')\n  }\n\n  // 4. Run report Content Security Policy violations for request.\n  // TODO\n\n  // 5. Upgrade request to a potentially trustworthy URL, if appropriate.\n  tryUpgradeRequestToAPotentiallyTrustworthyURL(request)\n\n  // 6. If should request be blocked due to a bad port, should fetching request\n  // be blocked as mixed content, or should request be blocked by Content\n  // Security Policy returns blocked, then set response to a network error.\n  if (requestBadPort(request) === 'blocked') {\n    response = makeNetworkError('bad port')\n  }\n  // TODO: should fetching request be blocked as mixed content?\n  // TODO: should request be blocked by Content Security Policy?\n\n  // 7. If request’s referrer policy is the empty string, then set request’s\n  // referrer policy to request’s policy container’s referrer policy.\n  if (request.referrerPolicy === '') {\n    request.referrerPolicy = request.policyContainer.referrerPolicy\n  }\n\n  // 8. If request’s referrer is not \"no-referrer\", then set request’s\n  // referrer to the result of invoking determine request’s referrer.\n  if (request.referrer !== 'no-referrer') {\n    request.referrer = determineRequestsReferrer(request)\n  }\n\n  // 9. Set request’s current URL’s scheme to \"https\" if all of the following\n  // conditions are true:\n  // - request’s current URL’s scheme is \"http\"\n  // - request’s current URL’s host is a domain\n  // - Matching request’s current URL’s host per Known HSTS Host Domain Name\n  //   Matching results in either a superdomain match with an asserted\n  //   includeSubDomains directive or a congruent match (with or without an\n  //   asserted includeSubDomains directive). [HSTS]\n  // TODO\n\n  // 10. If recursive is false, then run the remaining steps in parallel.\n  // TODO\n\n  // 11. If response is null, then set response to the result of running\n  // the steps corresponding to the first matching statement:\n  if (response === null) {\n    response = await (async () => {\n      const currentURL = requestCurrentURL(request)\n\n      if (\n        // - request’s current URL’s origin is same origin with request’s origin,\n        //   and request’s response tainting is \"basic\"\n        (sameOrigin(currentURL, request.url) && request.responseTainting === 'basic') ||\n        // request’s current URL’s scheme is \"data\"\n        (currentURL.protocol === 'data:') ||\n        // - request’s mode is \"navigate\" or \"websocket\"\n        (request.mode === 'navigate' || request.mode === 'websocket')\n      ) {\n        // 1. Set request’s response tainting to \"basic\".\n        request.responseTainting = 'basic'\n\n        // 2. Return the result of running scheme fetch given fetchParams.\n        return await schemeFetch(fetchParams)\n      }\n\n      // request’s mode is \"same-origin\"\n      if (request.mode === 'same-origin') {\n        // 1. Return a network error.\n        return makeNetworkError('request mode cannot be \"same-origin\"')\n      }\n\n      // request’s mode is \"no-cors\"\n      if (request.mode === 'no-cors') {\n        // 1. If request’s redirect mode is not \"follow\", then return a network\n        // error.\n        if (request.redirect !== 'follow') {\n          return makeNetworkError(\n            'redirect mode cannot be \"follow\" for \"no-cors\" request'\n          )\n        }\n\n        // 2. Set request’s response tainting to \"opaque\".\n        request.responseTainting = 'opaque'\n\n        // 3. Return the result of running scheme fetch given fetchParams.\n        return await schemeFetch(fetchParams)\n      }\n\n      // request’s current URL’s scheme is not an HTTP(S) scheme\n      if (!urlIsHttpHttpsScheme(requestCurrentURL(request))) {\n        // Return a network error.\n        return makeNetworkError('URL scheme must be a HTTP(S) scheme')\n      }\n\n      // - request’s use-CORS-preflight flag is set\n      // - request’s unsafe-request flag is set and either request’s method is\n      //   not a CORS-safelisted method or CORS-unsafe request-header names with\n      //   request’s header list is not empty\n      //    1. Set request’s response tainting to \"cors\".\n      //    2. Let corsWithPreflightResponse be the result of running HTTP fetch\n      //    given fetchParams and true.\n      //    3. If corsWithPreflightResponse is a network error, then clear cache\n      //    entries using request.\n      //    4. Return corsWithPreflightResponse.\n      // TODO\n\n      // Otherwise\n      //    1. Set request’s response tainting to \"cors\".\n      request.responseTainting = 'cors'\n\n      //    2. Return the result of running HTTP fetch given fetchParams.\n      return await httpFetch(fetchParams)\n    })()\n  }\n\n  // 12. If recursive is true, then return response.\n  if (recursive) {\n    return response\n  }\n\n  // 13. If response is not a network error and response is not a filtered\n  // response, then:\n  if (response.status !== 0 && !response.internalResponse) {\n    // If request’s response tainting is \"cors\", then:\n    if (request.responseTainting === 'cors') {\n      // 1. Let headerNames be the result of extracting header list values\n      // given `Access-Control-Expose-Headers` and response’s header list.\n      // TODO\n      // 2. If request’s credentials mode is not \"include\" and headerNames\n      // contains `*`, then set response’s CORS-exposed header-name list to\n      // all unique header names in response’s header list.\n      // TODO\n      // 3. Otherwise, if headerNames is not null or failure, then set\n      // response’s CORS-exposed header-name list to headerNames.\n      // TODO\n    }\n\n    // Set response to the following filtered response with response as its\n    // internal response, depending on request’s response tainting:\n    if (request.responseTainting === 'basic') {\n      response = filterResponse(response, 'basic')\n    } else if (request.responseTainting === 'cors') {\n      response = filterResponse(response, 'cors')\n    } else if (request.responseTainting === 'opaque') {\n      response = filterResponse(response, 'opaque')\n    } else {\n      assert(false)\n    }\n  }\n\n  // 14. Let internalResponse be response, if response is a network error,\n  // and response’s internal response otherwise.\n  let internalResponse =\n    response.status === 0 ? response : response.internalResponse\n\n  // 15. If internalResponse’s URL list is empty, then set it to a clone of\n  // request’s URL list.\n  if (internalResponse.urlList.length === 0) {\n    internalResponse.urlList.push(...request.urlList)\n  }\n\n  // 16. If request’s timing allow failed flag is unset, then set\n  // internalResponse’s timing allow passed flag.\n  if (!request.timingAllowFailed) {\n    response.timingAllowPassed = true\n  }\n\n  // 17. If response is not a network error and any of the following returns\n  // blocked\n  // - should internalResponse to request be blocked as mixed content\n  // - should internalResponse to request be blocked by Content Security Policy\n  // - should internalResponse to request be blocked due to its MIME type\n  // - should internalResponse to request be blocked due to nosniff\n  // TODO\n\n  // 18. If response’s type is \"opaque\", internalResponse’s status is 206,\n  // internalResponse’s range-requested flag is set, and request’s header\n  // list does not contain `Range`, then set response and internalResponse\n  // to a network error.\n  if (\n    response.type === 'opaque' &&\n    internalResponse.status === 206 &&\n    internalResponse.rangeRequested &&\n    !request.headers.contains('range', true)\n  ) {\n    response = internalResponse = makeNetworkError()\n  }\n\n  // 19. If response is not a network error and either request’s method is\n  // `HEAD` or `CONNECT`, or internalResponse’s status is a null body status,\n  // set internalResponse’s body to null and disregard any enqueuing toward\n  // it (if any).\n  if (\n    response.status !== 0 &&\n    (request.method === 'HEAD' ||\n      request.method === 'CONNECT' ||\n      nullBodyStatus.includes(internalResponse.status))\n  ) {\n    internalResponse.body = null\n    fetchParams.controller.dump = true\n  }\n\n  // 20. If request’s integrity metadata is not the empty string, then:\n  if (request.integrity) {\n    // 1. Let processBodyError be this step: run fetch finale given fetchParams\n    // and a network error.\n    const processBodyError = (reason) =>\n      fetchFinale(fetchParams, makeNetworkError(reason))\n\n    // 2. If request’s response tainting is \"opaque\", or response’s body is null,\n    // then run processBodyError and abort these steps.\n    if (request.responseTainting === 'opaque' || response.body == null) {\n      processBodyError(response.error)\n      return\n    }\n\n    // 3. Let processBody given bytes be these steps:\n    const processBody = (bytes) => {\n      // 1. If bytes do not match request’s integrity metadata,\n      // then run processBodyError and abort these steps. [SRI]\n      if (!bytesMatch(bytes, request.integrity)) {\n        processBodyError('integrity mismatch')\n        return\n      }\n\n      // 2. Set response’s body to bytes as a body.\n      response.body = safelyExtractBody(bytes)[0]\n\n      // 3. Run fetch finale given fetchParams and response.\n      fetchFinale(fetchParams, response)\n    }\n\n    // 4. Fully read response’s body given processBody and processBodyError.\n    await fullyReadBody(response.body, processBody, processBodyError)\n  } else {\n    // 21. Otherwise, run fetch finale given fetchParams and response.\n    fetchFinale(fetchParams, response)\n  }\n}\n\n// https://fetch.spec.whatwg.org/#concept-scheme-fetch\n// given a fetch params fetchParams\nfunction schemeFetch (fetchParams) {\n  // Note: since the connection is destroyed on redirect, which sets fetchParams to a\n  // cancelled state, we do not want this condition to trigger *unless* there have been\n  // no redirects. See https://github.com/nodejs/undici/issues/1776\n  // 1. If fetchParams is canceled, then return the appropriate network error for fetchParams.\n  if (isCancelled(fetchParams) && fetchParams.request.redirectCount === 0) {\n    return Promise.resolve(makeAppropriateNetworkError(fetchParams))\n  }\n\n  // 2. Let request be fetchParams’s request.\n  const { request } = fetchParams\n\n  const { protocol: scheme } = requestCurrentURL(request)\n\n  // 3. Switch on request’s current URL’s scheme and run the associated steps:\n  switch (scheme) {\n    case 'about:': {\n      // If request’s current URL’s path is the string \"blank\", then return a new response\n      // whose status message is `OK`, header list is « (`Content-Type`, `text/html;charset=utf-8`) »,\n      // and body is the empty byte sequence as a body.\n\n      // Otherwise, return a network error.\n      return Promise.resolve(makeNetworkError('about scheme is not supported'))\n    }\n    case 'blob:': {\n      if (!resolveObjectURL) {\n        resolveObjectURL = require('node:buffer').resolveObjectURL\n      }\n\n      // 1. Let blobURLEntry be request’s current URL’s blob URL entry.\n      const blobURLEntry = requestCurrentURL(request)\n\n      // https://github.com/web-platform-tests/wpt/blob/7b0ebaccc62b566a1965396e5be7bb2bc06f841f/FileAPI/url/resources/fetch-tests.js#L52-L56\n      // Buffer.resolveObjectURL does not ignore URL queries.\n      if (blobURLEntry.search.length !== 0) {\n        return Promise.resolve(makeNetworkError('NetworkError when attempting to fetch resource.'))\n      }\n\n      const blob = resolveObjectURL(blobURLEntry.toString())\n\n      // 2. If request’s method is not `GET`, blobURLEntry is null, or blobURLEntry’s\n      //    object is not a Blob object, then return a network error.\n      if (request.method !== 'GET' || !isBlobLike(blob)) {\n        return Promise.resolve(makeNetworkError('invalid method'))\n      }\n\n      // 3. Let blob be blobURLEntry’s object.\n      // Note: done above\n\n      // 4. Let response be a new response.\n      const response = makeResponse()\n\n      // 5. Let fullLength be blob’s size.\n      const fullLength = blob.size\n\n      // 6. Let serializedFullLength be fullLength, serialized and isomorphic encoded.\n      const serializedFullLength = isomorphicEncode(`${fullLength}`)\n\n      // 7. Let type be blob’s type.\n      const type = blob.type\n\n      // 8. If request’s header list does not contain `Range`:\n      // 9. Otherwise:\n      if (!request.headersList.contains('range', true)) {\n        // 1. Let bodyWithType be the result of safely extracting blob.\n        // Note: in the FileAPI a blob \"object\" is a Blob *or* a MediaSource.\n        // In node, this can only ever be a Blob. Therefore we can safely\n        // use extractBody directly.\n        const bodyWithType = extractBody(blob)\n\n        // 2. Set response’s status message to `OK`.\n        response.statusText = 'OK'\n\n        // 3. Set response’s body to bodyWithType’s body.\n        response.body = bodyWithType[0]\n\n        // 4. Set response’s header list to « (`Content-Length`, serializedFullLength), (`Content-Type`, type) ».\n        response.headersList.set('content-length', serializedFullLength, true)\n        response.headersList.set('content-type', type, true)\n      } else {\n        // 1. Set response’s range-requested flag.\n        response.rangeRequested = true\n\n        // 2. Let rangeHeader be the result of getting `Range` from request’s header list.\n        const rangeHeader = request.headersList.get('range', true)\n\n        // 3. Let rangeValue be the result of parsing a single range header value given rangeHeader and true.\n        const rangeValue = simpleRangeHeaderValue(rangeHeader, true)\n\n        // 4. If rangeValue is failure, then return a network error.\n        if (rangeValue === 'failure') {\n          return Promise.resolve(makeNetworkError('failed to fetch the data URL'))\n        }\n\n        // 5. Let (rangeStart, rangeEnd) be rangeValue.\n        let { rangeStartValue: rangeStart, rangeEndValue: rangeEnd } = rangeValue\n\n        // 6. If rangeStart is null:\n        // 7. Otherwise:\n        if (rangeStart === null) {\n          // 1. Set rangeStart to fullLength − rangeEnd.\n          rangeStart = fullLength - rangeEnd\n\n          // 2. Set rangeEnd to rangeStart + rangeEnd − 1.\n          rangeEnd = rangeStart + rangeEnd - 1\n        } else {\n          // 1. If rangeStart is greater than or equal to fullLength, then return a network error.\n          if (rangeStart >= fullLength) {\n            return Promise.resolve(makeNetworkError('Range start is greater than the blob\\'s size.'))\n          }\n\n          // 2. If rangeEnd is null or rangeEnd is greater than or equal to fullLength, then set\n          //    rangeEnd to fullLength − 1.\n          if (rangeEnd === null || rangeEnd >= fullLength) {\n            rangeEnd = fullLength - 1\n          }\n        }\n\n        // 8. Let slicedBlob be the result of invoking slice blob given blob, rangeStart,\n        //    rangeEnd + 1, and type.\n        const slicedBlob = blob.slice(rangeStart, rangeEnd, type)\n\n        // 9. Let slicedBodyWithType be the result of safely extracting slicedBlob.\n        // Note: same reason as mentioned above as to why we use extractBody\n        const slicedBodyWithType = extractBody(slicedBlob)\n\n        // 10. Set response’s body to slicedBodyWithType’s body.\n        response.body = slicedBodyWithType[0]\n\n        // 11. Let serializedSlicedLength be slicedBlob’s size, serialized and isomorphic encoded.\n        const serializedSlicedLength = isomorphicEncode(`${slicedBlob.size}`)\n\n        // 12. Let contentRange be the result of invoking build a content range given rangeStart,\n        //     rangeEnd, and fullLength.\n        const contentRange = buildContentRange(rangeStart, rangeEnd, fullLength)\n\n        // 13. Set response’s status to 206.\n        response.status = 206\n\n        // 14. Set response’s status message to `Partial Content`.\n        response.statusText = 'Partial Content'\n\n        // 15. Set response’s header list to « (`Content-Length`, serializedSlicedLength),\n        //     (`Content-Type`, type), (`Content-Range`, contentRange) ».\n        response.headersList.set('content-length', serializedSlicedLength, true)\n        response.headersList.set('content-type', type, true)\n        response.headersList.set('content-range', contentRange, true)\n      }\n\n      // 10. Return response.\n      return Promise.resolve(response)\n    }\n    case 'data:': {\n      // 1. Let dataURLStruct be the result of running the\n      //    data: URL processor on request’s current URL.\n      const currentURL = requestCurrentURL(request)\n      const dataURLStruct = dataURLProcessor(currentURL)\n\n      // 2. If dataURLStruct is failure, then return a\n      //    network error.\n      if (dataURLStruct === 'failure') {\n        return Promise.resolve(makeNetworkError('failed to fetch the data URL'))\n      }\n\n      // 3. Let mimeType be dataURLStruct’s MIME type, serialized.\n      const mimeType = serializeAMimeType(dataURLStruct.mimeType)\n\n      // 4. Return a response whose status message is `OK`,\n      //    header list is « (`Content-Type`, mimeType) »,\n      //    and body is dataURLStruct’s body as a body.\n      return Promise.resolve(makeResponse({\n        statusText: 'OK',\n        headersList: [\n          ['content-type', { name: 'Content-Type', value: mimeType }]\n        ],\n        body: safelyExtractBody(dataURLStruct.body)[0]\n      }))\n    }\n    case 'file:': {\n      // For now, unfortunate as it is, file URLs are left as an exercise for the reader.\n      // When in doubt, return a network error.\n      return Promise.resolve(makeNetworkError('not implemented... yet...'))\n    }\n    case 'http:':\n    case 'https:': {\n      // Return the result of running HTTP fetch given fetchParams.\n\n      return httpFetch(fetchParams)\n        .catch((err) => makeNetworkError(err))\n    }\n    default: {\n      return Promise.resolve(makeNetworkError('unknown scheme'))\n    }\n  }\n}\n\n// https://fetch.spec.whatwg.org/#finalize-response\nfunction finalizeResponse (fetchParams, response) {\n  // 1. Set fetchParams’s request’s done flag.\n  fetchParams.request.done = true\n\n  // 2, If fetchParams’s process response done is not null, then queue a fetch\n  // task to run fetchParams’s process response done given response, with\n  // fetchParams’s task destination.\n  if (fetchParams.processResponseDone != null) {\n    queueMicrotask(() => fetchParams.processResponseDone(response))\n  }\n}\n\n// https://fetch.spec.whatwg.org/#fetch-finale\nfunction fetchFinale (fetchParams, response) {\n  // 1. Let timingInfo be fetchParams’s timing info.\n  let timingInfo = fetchParams.timingInfo\n\n  // 2. If response is not a network error and fetchParams’s request’s client is a secure context,\n  //    then set timingInfo’s server-timing headers to the result of getting, decoding, and splitting\n  //    `Server-Timing` from response’s internal response’s header list.\n  // TODO\n\n  // 3. Let processResponseEndOfBody be the following steps:\n  const processResponseEndOfBody = () => {\n    // 1. Let unsafeEndTime be the unsafe shared current time.\n    const unsafeEndTime = Date.now() // ?\n\n    // 2. If fetchParams’s request’s destination is \"document\", then set fetchParams’s controller’s\n    //    full timing info to fetchParams’s timing info.\n    if (fetchParams.request.destination === 'document') {\n      fetchParams.controller.fullTimingInfo = timingInfo\n    }\n\n    // 3. Set fetchParams’s controller’s report timing steps to the following steps given a global object global:\n    fetchParams.controller.reportTimingSteps = () => {\n      // 1. If fetchParams’s request’s URL’s scheme is not an HTTP(S) scheme, then return.\n      if (fetchParams.request.url.protocol !== 'https:') {\n        return\n      }\n\n      // 2. Set timingInfo’s end time to the relative high resolution time given unsafeEndTime and global.\n      timingInfo.endTime = unsafeEndTime\n\n      // 3. Let cacheState be response’s cache state.\n      let cacheState = response.cacheState\n\n      // 4. Let bodyInfo be response’s body info.\n      const bodyInfo = response.bodyInfo\n\n      // 5. If response’s timing allow passed flag is not set, then set timingInfo to the result of creating an\n      //    opaque timing info for timingInfo and set cacheState to the empty string.\n      if (!response.timingAllowPassed) {\n        timingInfo = createOpaqueTimingInfo(timingInfo)\n\n        cacheState = ''\n      }\n\n      // 6. Let responseStatus be 0.\n      let responseStatus = 0\n\n      // 7. If fetchParams’s request’s mode is not \"navigate\" or response’s has-cross-origin-redirects is false:\n      if (fetchParams.request.mode !== 'navigator' || !response.hasCrossOriginRedirects) {\n        // 1. Set responseStatus to response’s status.\n        responseStatus = response.status\n\n        // 2. Let mimeType be the result of extracting a MIME type from response’s header list.\n        const mimeType = extractMimeType(response.headersList)\n\n        // 3. If mimeType is not failure, then set bodyInfo’s content type to the result of minimizing a supported MIME type given mimeType.\n        if (mimeType !== 'failure') {\n          bodyInfo.contentType = minimizeSupportedMimeType(mimeType)\n        }\n      }\n\n      // 8. If fetchParams’s request’s initiator type is non-null, then mark resource timing given timingInfo,\n      //    fetchParams’s request’s URL, fetchParams’s request’s initiator type, global, cacheState, bodyInfo,\n      //    and responseStatus.\n      if (fetchParams.request.initiatorType != null) {\n        // TODO: update markresourcetiming\n        markResourceTiming(timingInfo, fetchParams.request.url.href, fetchParams.request.initiatorType, globalThis, cacheState, bodyInfo, responseStatus)\n      }\n    }\n\n    // 4. Let processResponseEndOfBodyTask be the following steps:\n    const processResponseEndOfBodyTask = () => {\n      // 1. Set fetchParams’s request’s done flag.\n      fetchParams.request.done = true\n\n      // 2. If fetchParams’s process response end-of-body is non-null, then run fetchParams’s process\n      //    response end-of-body given response.\n      if (fetchParams.processResponseEndOfBody != null) {\n        queueMicrotask(() => fetchParams.processResponseEndOfBody(response))\n      }\n\n      // 3. If fetchParams’s request’s initiator type is non-null and fetchParams’s request’s client’s\n      //    global object is fetchParams’s task destination, then run fetchParams’s controller’s report\n      //    timing steps given fetchParams’s request’s client’s global object.\n      if (fetchParams.request.initiatorType != null) {\n        fetchParams.controller.reportTimingSteps()\n      }\n    }\n\n    // 5. Queue a fetch task to run processResponseEndOfBodyTask with fetchParams’s task destination\n    queueMicrotask(() => processResponseEndOfBodyTask())\n  }\n\n  // 4. If fetchParams’s process response is non-null, then queue a fetch task to run fetchParams’s\n  //    process response given response, with fetchParams’s task destination.\n  if (fetchParams.processResponse != null) {\n    queueMicrotask(() => {\n      fetchParams.processResponse(response)\n      fetchParams.processResponse = null\n    })\n  }\n\n  // 5. Let internalResponse be response, if response is a network error; otherwise response’s internal response.\n  const internalResponse = response.type === 'error' ? response : (response.internalResponse ?? response)\n\n  // 6. If internalResponse’s body is null, then run processResponseEndOfBody.\n  // 7. Otherwise:\n  if (internalResponse.body == null) {\n    processResponseEndOfBody()\n  } else {\n    // mcollina: all the following steps of the specs are skipped.\n    // The internal transform stream is not needed.\n    // See https://github.com/nodejs/undici/pull/3093#issuecomment-2050198541\n\n    // 1. Let transformStream be a new TransformStream.\n    // 2. Let identityTransformAlgorithm be an algorithm which, given chunk, enqueues chunk in transformStream.\n    // 3. Set up transformStream with transformAlgorithm set to identityTransformAlgorithm and flushAlgorithm\n    //    set to processResponseEndOfBody.\n    // 4. Set internalResponse’s body’s stream to the result of internalResponse’s body’s stream piped through transformStream.\n\n    finished(internalResponse.body.stream, () => {\n      processResponseEndOfBody()\n    })\n  }\n}\n\n// https://fetch.spec.whatwg.org/#http-fetch\nasync function httpFetch (fetchParams) {\n  // 1. Let request be fetchParams’s request.\n  const request = fetchParams.request\n\n  // 2. Let response be null.\n  let response = null\n\n  // 3. Let actualResponse be null.\n  let actualResponse = null\n\n  // 4. Let timingInfo be fetchParams’s timing info.\n  const timingInfo = fetchParams.timingInfo\n\n  // 5. If request’s service-workers mode is \"all\", then:\n  if (request.serviceWorkers === 'all') {\n    // TODO\n  }\n\n  // 6. If response is null, then:\n  if (response === null) {\n    // 1. If makeCORSPreflight is true and one of these conditions is true:\n    // TODO\n\n    // 2. If request’s redirect mode is \"follow\", then set request’s\n    // service-workers mode to \"none\".\n    if (request.redirect === 'follow') {\n      request.serviceWorkers = 'none'\n    }\n\n    // 3. Set response and actualResponse to the result of running\n    // HTTP-network-or-cache fetch given fetchParams.\n    actualResponse = response = await httpNetworkOrCacheFetch(fetchParams)\n\n    // 4. If request’s response tainting is \"cors\" and a CORS check\n    // for request and response returns failure, then return a network error.\n    if (\n      request.responseTainting === 'cors' &&\n      corsCheck(request, response) === 'failure'\n    ) {\n      return makeNetworkError('cors failure')\n    }\n\n    // 5. If the TAO check for request and response returns failure, then set\n    // request’s timing allow failed flag.\n    if (TAOCheck(request, response) === 'failure') {\n      request.timingAllowFailed = true\n    }\n  }\n\n  // 7. If either request’s response tainting or response’s type\n  // is \"opaque\", and the cross-origin resource policy check with\n  // request’s origin, request’s client, request’s destination,\n  // and actualResponse returns blocked, then return a network error.\n  if (\n    (request.responseTainting === 'opaque' || response.type === 'opaque') &&\n    crossOriginResourcePolicyCheck(\n      request.origin,\n      request.client,\n      request.destination,\n      actualResponse\n    ) === 'blocked'\n  ) {\n    return makeNetworkError('blocked')\n  }\n\n  // 8. If actualResponse’s status is a redirect status, then:\n  if (redirectStatusSet.has(actualResponse.status)) {\n    // 1. If actualResponse’s status is not 303, request’s body is not null,\n    // and the connection uses HTTP/2, then user agents may, and are even\n    // encouraged to, transmit an RST_STREAM frame.\n    // See, https://github.com/whatwg/fetch/issues/1288\n    if (request.redirect !== 'manual') {\n      fetchParams.controller.connection.destroy(undefined, false)\n    }\n\n    // 2. Switch on request’s redirect mode:\n    if (request.redirect === 'error') {\n      // Set response to a network error.\n      response = makeNetworkError('unexpected redirect')\n    } else if (request.redirect === 'manual') {\n      // Set response to an opaque-redirect filtered response whose internal\n      // response is actualResponse.\n      // NOTE(spec): On the web this would return an `opaqueredirect` response,\n      // but that doesn't make sense server side.\n      // See https://github.com/nodejs/undici/issues/1193.\n      response = actualResponse\n    } else if (request.redirect === 'follow') {\n      // Set response to the result of running HTTP-redirect fetch given\n      // fetchParams and response.\n      response = await httpRedirectFetch(fetchParams, response)\n    } else {\n      assert(false)\n    }\n  }\n\n  // 9. Set response’s timing info to timingInfo.\n  response.timingInfo = timingInfo\n\n  // 10. Return response.\n  return response\n}\n\n// https://fetch.spec.whatwg.org/#http-redirect-fetch\nfunction httpRedirectFetch (fetchParams, response) {\n  // 1. Let request be fetchParams’s request.\n  const request = fetchParams.request\n\n  // 2. Let actualResponse be response, if response is not a filtered response,\n  // and response’s internal response otherwise.\n  const actualResponse = response.internalResponse\n    ? response.internalResponse\n    : response\n\n  // 3. Let locationURL be actualResponse’s location URL given request’s current\n  // URL’s fragment.\n  let locationURL\n\n  try {\n    locationURL = responseLocationURL(\n      actualResponse,\n      requestCurrentURL(request).hash\n    )\n\n    // 4. If locationURL is null, then return response.\n    if (locationURL == null) {\n      return response\n    }\n  } catch (err) {\n    // 5. If locationURL is failure, then return a network error.\n    return Promise.resolve(makeNetworkError(err))\n  }\n\n  // 6. If locationURL’s scheme is not an HTTP(S) scheme, then return a network\n  // error.\n  if (!urlIsHttpHttpsScheme(locationURL)) {\n    return Promise.resolve(makeNetworkError('URL scheme must be a HTTP(S) scheme'))\n  }\n\n  // 7. If request’s redirect count is 20, then return a network error.\n  if (request.redirectCount === 20) {\n    return Promise.resolve(makeNetworkError('redirect count exceeded'))\n  }\n\n  // 8. Increase request’s redirect count by 1.\n  request.redirectCount += 1\n\n  // 9. If request’s mode is \"cors\", locationURL includes credentials, and\n  // request’s origin is not same origin with locationURL’s origin, then return\n  //  a network error.\n  if (\n    request.mode === 'cors' &&\n    (locationURL.username || locationURL.password) &&\n    !sameOrigin(request, locationURL)\n  ) {\n    return Promise.resolve(makeNetworkError('cross origin not allowed for request mode \"cors\"'))\n  }\n\n  // 10. If request’s response tainting is \"cors\" and locationURL includes\n  // credentials, then return a network error.\n  if (\n    request.responseTainting === 'cors' &&\n    (locationURL.username || locationURL.password)\n  ) {\n    return Promise.resolve(makeNetworkError(\n      'URL cannot contain credentials for request mode \"cors\"'\n    ))\n  }\n\n  // 11. If actualResponse’s status is not 303, request’s body is non-null,\n  // and request’s body’s source is null, then return a network error.\n  if (\n    actualResponse.status !== 303 &&\n    request.body != null &&\n    request.body.source == null\n  ) {\n    return Promise.resolve(makeNetworkError())\n  }\n\n  // 12. If one of the following is true\n  // - actualResponse’s status is 301 or 302 and request’s method is `POST`\n  // - actualResponse’s status is 303 and request’s method is not `GET` or `HEAD`\n  if (\n    ([301, 302].includes(actualResponse.status) && request.method === 'POST') ||\n    (actualResponse.status === 303 &&\n      !GET_OR_HEAD.includes(request.method))\n  ) {\n    // then:\n    // 1. Set request’s method to `GET` and request’s body to null.\n    request.method = 'GET'\n    request.body = null\n\n    // 2. For each headerName of request-body-header name, delete headerName from\n    // request’s header list.\n    for (const headerName of requestBodyHeader) {\n      request.headersList.delete(headerName)\n    }\n  }\n\n  // 13. If request’s current URL’s origin is not same origin with locationURL’s\n  //     origin, then for each headerName of CORS non-wildcard request-header name,\n  //     delete headerName from request’s header list.\n  if (!sameOrigin(requestCurrentURL(request), locationURL)) {\n    // https://fetch.spec.whatwg.org/#cors-non-wildcard-request-header-name\n    request.headersList.delete('authorization', true)\n\n    // https://fetch.spec.whatwg.org/#authentication-entries\n    request.headersList.delete('proxy-authorization', true)\n\n    // \"Cookie\" and \"Host\" are forbidden request-headers, which undici doesn't implement.\n    request.headersList.delete('cookie', true)\n    request.headersList.delete('host', true)\n  }\n\n  // 14. If request’s body is non-null, then set request’s body to the first return\n  // value of safely extracting request’s body’s source.\n  if (request.body != null) {\n    assert(request.body.source != null)\n    request.body = safelyExtractBody(request.body.source)[0]\n  }\n\n  // 15. Let timingInfo be fetchParams’s timing info.\n  const timingInfo = fetchParams.timingInfo\n\n  // 16. Set timingInfo’s redirect end time and post-redirect start time to the\n  // coarsened shared current time given fetchParams’s cross-origin isolated\n  // capability.\n  timingInfo.redirectEndTime = timingInfo.postRedirectStartTime =\n    coarsenedSharedCurrentTime(fetchParams.crossOriginIsolatedCapability)\n\n  // 17. If timingInfo’s redirect start time is 0, then set timingInfo’s\n  //  redirect start time to timingInfo’s start time.\n  if (timingInfo.redirectStartTime === 0) {\n    timingInfo.redirectStartTime = timingInfo.startTime\n  }\n\n  // 18. Append locationURL to request’s URL list.\n  request.urlList.push(locationURL)\n\n  // 19. Invoke set request’s referrer policy on redirect on request and\n  // actualResponse.\n  setRequestReferrerPolicyOnRedirect(request, actualResponse)\n\n  // 20. Return the result of running main fetch given fetchParams and true.\n  return mainFetch(fetchParams, true)\n}\n\n// https://fetch.spec.whatwg.org/#http-network-or-cache-fetch\nasync function httpNetworkOrCacheFetch (\n  fetchParams,\n  isAuthenticationFetch = false,\n  isNewConnectionFetch = false\n) {\n  // 1. Let request be fetchParams’s request.\n  const request = fetchParams.request\n\n  // 2. Let httpFetchParams be null.\n  let httpFetchParams = null\n\n  // 3. Let httpRequest be null.\n  let httpRequest = null\n\n  // 4. Let response be null.\n  let response = null\n\n  // 5. Let storedResponse be null.\n  // TODO: cache\n\n  // 6. Let httpCache be null.\n  const httpCache = null\n\n  // 7. Let the revalidatingFlag be unset.\n  const revalidatingFlag = false\n\n  // 8. Run these steps, but abort when the ongoing fetch is terminated:\n\n  //    1. If request’s window is \"no-window\" and request’s redirect mode is\n  //    \"error\", then set httpFetchParams to fetchParams and httpRequest to\n  //    request.\n  if (request.window === 'no-window' && request.redirect === 'error') {\n    httpFetchParams = fetchParams\n    httpRequest = request\n  } else {\n    // Otherwise:\n\n    // 1. Set httpRequest to a clone of request.\n    httpRequest = cloneRequest(request)\n\n    // 2. Set httpFetchParams to a copy of fetchParams.\n    httpFetchParams = { ...fetchParams }\n\n    // 3. Set httpFetchParams’s request to httpRequest.\n    httpFetchParams.request = httpRequest\n  }\n\n  //    3. Let includeCredentials be true if one of\n  const includeCredentials =\n    request.credentials === 'include' ||\n    (request.credentials === 'same-origin' &&\n      request.responseTainting === 'basic')\n\n  //    4. Let contentLength be httpRequest’s body’s length, if httpRequest’s\n  //    body is non-null; otherwise null.\n  const contentLength = httpRequest.body ? httpRequest.body.length : null\n\n  //    5. Let contentLengthHeaderValue be null.\n  let contentLengthHeaderValue = null\n\n  //    6. If httpRequest’s body is null and httpRequest’s method is `POST` or\n  //    `PUT`, then set contentLengthHeaderValue to `0`.\n  if (\n    httpRequest.body == null &&\n    ['POST', 'PUT'].includes(httpRequest.method)\n  ) {\n    contentLengthHeaderValue = '0'\n  }\n\n  //    7. If contentLength is non-null, then set contentLengthHeaderValue to\n  //    contentLength, serialized and isomorphic encoded.\n  if (contentLength != null) {\n    contentLengthHeaderValue = isomorphicEncode(`${contentLength}`)\n  }\n\n  //    8. If contentLengthHeaderValue is non-null, then append\n  //    `Content-Length`/contentLengthHeaderValue to httpRequest’s header\n  //    list.\n  if (contentLengthHeaderValue != null) {\n    httpRequest.headersList.append('content-length', contentLengthHeaderValue, true)\n  }\n\n  //    9. If contentLengthHeaderValue is non-null, then append (`Content-Length`,\n  //    contentLengthHeaderValue) to httpRequest’s header list.\n\n  //    10. If contentLength is non-null and httpRequest’s keepalive is true,\n  //    then:\n  if (contentLength != null && httpRequest.keepalive) {\n    // NOTE: keepalive is a noop outside of browser context.\n  }\n\n  //    11. If httpRequest’s referrer is a URL, then append\n  //    `Referer`/httpRequest’s referrer, serialized and isomorphic encoded,\n  //     to httpRequest’s header list.\n  if (httpRequest.referrer instanceof URL) {\n    httpRequest.headersList.append('referer', isomorphicEncode(httpRequest.referrer.href), true)\n  }\n\n  //    12. Append a request `Origin` header for httpRequest.\n  appendRequestOriginHeader(httpRequest)\n\n  //    13. Append the Fetch metadata headers for httpRequest. [FETCH-METADATA]\n  appendFetchMetadata(httpRequest)\n\n  //    14. If httpRequest’s header list does not contain `User-Agent`, then\n  //    user agents should append `User-Agent`/default `User-Agent` value to\n  //    httpRequest’s header list.\n  if (!httpRequest.headersList.contains('user-agent', true)) {\n    httpRequest.headersList.append('user-agent', defaultUserAgent)\n  }\n\n  //    15. If httpRequest’s cache mode is \"default\" and httpRequest’s header\n  //    list contains `If-Modified-Since`, `If-None-Match`,\n  //    `If-Unmodified-Since`, `If-Match`, or `If-Range`, then set\n  //    httpRequest’s cache mode to \"no-store\".\n  if (\n    httpRequest.cache === 'default' &&\n    (httpRequest.headersList.contains('if-modified-since', true) ||\n      httpRequest.headersList.contains('if-none-match', true) ||\n      httpRequest.headersList.contains('if-unmodified-since', true) ||\n      httpRequest.headersList.contains('if-match', true) ||\n      httpRequest.headersList.contains('if-range', true))\n  ) {\n    httpRequest.cache = 'no-store'\n  }\n\n  //    16. If httpRequest’s cache mode is \"no-cache\", httpRequest’s prevent\n  //    no-cache cache-control header modification flag is unset, and\n  //    httpRequest’s header list does not contain `Cache-Control`, then append\n  //    `Cache-Control`/`max-age=0` to httpRequest’s header list.\n  if (\n    httpRequest.cache === 'no-cache' &&\n    !httpRequest.preventNoCacheCacheControlHeaderModification &&\n    !httpRequest.headersList.contains('cache-control', true)\n  ) {\n    httpRequest.headersList.append('cache-control', 'max-age=0', true)\n  }\n\n  //    17. If httpRequest’s cache mode is \"no-store\" or \"reload\", then:\n  if (httpRequest.cache === 'no-store' || httpRequest.cache === 'reload') {\n    // 1. If httpRequest’s header list does not contain `Pragma`, then append\n    // `Pragma`/`no-cache` to httpRequest’s header list.\n    if (!httpRequest.headersList.contains('pragma', true)) {\n      httpRequest.headersList.append('pragma', 'no-cache', true)\n    }\n\n    // 2. If httpRequest’s header list does not contain `Cache-Control`,\n    // then append `Cache-Control`/`no-cache` to httpRequest’s header list.\n    if (!httpRequest.headersList.contains('cache-control', true)) {\n      httpRequest.headersList.append('cache-control', 'no-cache', true)\n    }\n  }\n\n  //    18. If httpRequest’s header list contains `Range`, then append\n  //    `Accept-Encoding`/`identity` to httpRequest’s header list.\n  if (httpRequest.headersList.contains('range', true)) {\n    httpRequest.headersList.append('accept-encoding', 'identity', true)\n  }\n\n  //    19. Modify httpRequest’s header list per HTTP. Do not append a given\n  //    header if httpRequest’s header list contains that header’s name.\n  //    TODO: https://github.com/whatwg/fetch/issues/1285#issuecomment-896560129\n  if (!httpRequest.headersList.contains('accept-encoding', true)) {\n    if (urlHasHttpsScheme(requestCurrentURL(httpRequest))) {\n      httpRequest.headersList.append('accept-encoding', 'br, gzip, deflate', true)\n    } else {\n      httpRequest.headersList.append('accept-encoding', 'gzip, deflate', true)\n    }\n  }\n\n  httpRequest.headersList.delete('host', true)\n\n  //    20. If includeCredentials is true, then:\n  if (includeCredentials) {\n    // 1. If the user agent is not configured to block cookies for httpRequest\n    // (see section 7 of [COOKIES]), then:\n    // TODO: credentials\n    // 2. If httpRequest’s header list does not contain `Authorization`, then:\n    // TODO: credentials\n  }\n\n  //    21. If there’s a proxy-authentication entry, use it as appropriate.\n  //    TODO: proxy-authentication\n\n  //    22. Set httpCache to the result of determining the HTTP cache\n  //    partition, given httpRequest.\n  //    TODO: cache\n\n  //    23. If httpCache is null, then set httpRequest’s cache mode to\n  //    \"no-store\".\n  if (httpCache == null) {\n    httpRequest.cache = 'no-store'\n  }\n\n  //    24. If httpRequest’s cache mode is neither \"no-store\" nor \"reload\",\n  //    then:\n  if (httpRequest.cache !== 'no-store' && httpRequest.cache !== 'reload') {\n    // TODO: cache\n  }\n\n  // 9. If aborted, then return the appropriate network error for fetchParams.\n  // TODO\n\n  // 10. If response is null, then:\n  if (response == null) {\n    // 1. If httpRequest’s cache mode is \"only-if-cached\", then return a\n    // network error.\n    if (httpRequest.cache === 'only-if-cached') {\n      return makeNetworkError('only if cached')\n    }\n\n    // 2. Let forwardResponse be the result of running HTTP-network fetch\n    // given httpFetchParams, includeCredentials, and isNewConnectionFetch.\n    const forwardResponse = await httpNetworkFetch(\n      httpFetchParams,\n      includeCredentials,\n      isNewConnectionFetch\n    )\n\n    // 3. If httpRequest’s method is unsafe and forwardResponse’s status is\n    // in the range 200 to 399, inclusive, invalidate appropriate stored\n    // responses in httpCache, as per the \"Invalidation\" chapter of HTTP\n    // Caching, and set storedResponse to null. [HTTP-CACHING]\n    if (\n      !safeMethodsSet.has(httpRequest.method) &&\n      forwardResponse.status >= 200 &&\n      forwardResponse.status <= 399\n    ) {\n      // TODO: cache\n    }\n\n    // 4. If the revalidatingFlag is set and forwardResponse’s status is 304,\n    // then:\n    if (revalidatingFlag && forwardResponse.status === 304) {\n      // TODO: cache\n    }\n\n    // 5. If response is null, then:\n    if (response == null) {\n      // 1. Set response to forwardResponse.\n      response = forwardResponse\n\n      // 2. Store httpRequest and forwardResponse in httpCache, as per the\n      // \"Storing Responses in Caches\" chapter of HTTP Caching. [HTTP-CACHING]\n      // TODO: cache\n    }\n  }\n\n  // 11. Set response’s URL list to a clone of httpRequest’s URL list.\n  response.urlList = [...httpRequest.urlList]\n\n  // 12. If httpRequest’s header list contains `Range`, then set response’s\n  // range-requested flag.\n  if (httpRequest.headersList.contains('range', true)) {\n    response.rangeRequested = true\n  }\n\n  // 13. Set response’s request-includes-credentials to includeCredentials.\n  response.requestIncludesCredentials = includeCredentials\n\n  // 14. If response’s status is 401, httpRequest’s response tainting is not\n  // \"cors\", includeCredentials is true, and request’s window is an environment\n  // settings object, then:\n  // TODO\n\n  // 15. If response’s status is 407, then:\n  if (response.status === 407) {\n    // 1. If request’s window is \"no-window\", then return a network error.\n    if (request.window === 'no-window') {\n      return makeNetworkError()\n    }\n\n    // 2. ???\n\n    // 3. If fetchParams is canceled, then return the appropriate network error for fetchParams.\n    if (isCancelled(fetchParams)) {\n      return makeAppropriateNetworkError(fetchParams)\n    }\n\n    // 4. Prompt the end user as appropriate in request’s window and store\n    // the result as a proxy-authentication entry. [HTTP-AUTH]\n    // TODO: Invoke some kind of callback?\n\n    // 5. Set response to the result of running HTTP-network-or-cache fetch given\n    // fetchParams.\n    // TODO\n    return makeNetworkError('proxy authentication required')\n  }\n\n  // 16. If all of the following are true\n  if (\n    // response’s status is 421\n    response.status === 421 &&\n    // isNewConnectionFetch is false\n    !isNewConnectionFetch &&\n    // request’s body is null, or request’s body is non-null and request’s body’s source is non-null\n    (request.body == null || request.body.source != null)\n  ) {\n    // then:\n\n    // 1. If fetchParams is canceled, then return the appropriate network error for fetchParams.\n    if (isCancelled(fetchParams)) {\n      return makeAppropriateNetworkError(fetchParams)\n    }\n\n    // 2. Set response to the result of running HTTP-network-or-cache\n    // fetch given fetchParams, isAuthenticationFetch, and true.\n\n    // TODO (spec): The spec doesn't specify this but we need to cancel\n    // the active response before we can start a new one.\n    // https://github.com/whatwg/fetch/issues/1293\n    fetchParams.controller.connection.destroy()\n\n    response = await httpNetworkOrCacheFetch(\n      fetchParams,\n      isAuthenticationFetch,\n      true\n    )\n  }\n\n  // 17. If isAuthenticationFetch is true, then create an authentication entry\n  if (isAuthenticationFetch) {\n    // TODO\n  }\n\n  // 18. Return response.\n  return response\n}\n\n// https://fetch.spec.whatwg.org/#http-network-fetch\nasync function httpNetworkFetch (\n  fetchParams,\n  includeCredentials = false,\n  forceNewConnection = false\n) {\n  assert(!fetchParams.controller.connection || fetchParams.controller.connection.destroyed)\n\n  fetchParams.controller.connection = {\n    abort: null,\n    destroyed: false,\n    destroy (err, abort = true) {\n      if (!this.destroyed) {\n        this.destroyed = true\n        if (abort) {\n          this.abort?.(err ?? new DOMException('The operation was aborted.', 'AbortError'))\n        }\n      }\n    }\n  }\n\n  // 1. Let request be fetchParams’s request.\n  const request = fetchParams.request\n\n  // 2. Let response be null.\n  let response = null\n\n  // 3. Let timingInfo be fetchParams’s timing info.\n  const timingInfo = fetchParams.timingInfo\n\n  // 4. Let httpCache be the result of determining the HTTP cache partition,\n  // given request.\n  // TODO: cache\n  const httpCache = null\n\n  // 5. If httpCache is null, then set request’s cache mode to \"no-store\".\n  if (httpCache == null) {\n    request.cache = 'no-store'\n  }\n\n  // 6. Let networkPartitionKey be the result of determining the network\n  // partition key given request.\n  // TODO\n\n  // 7. Let newConnection be \"yes\" if forceNewConnection is true; otherwise\n  // \"no\".\n  const newConnection = forceNewConnection ? 'yes' : 'no' // eslint-disable-line no-unused-vars\n\n  // 8. Switch on request’s mode:\n  if (request.mode === 'websocket') {\n    // Let connection be the result of obtaining a WebSocket connection,\n    // given request’s current URL.\n    // TODO\n  } else {\n    // Let connection be the result of obtaining a connection, given\n    // networkPartitionKey, request’s current URL’s origin,\n    // includeCredentials, and forceNewConnection.\n    // TODO\n  }\n\n  // 9. Run these steps, but abort when the ongoing fetch is terminated:\n\n  //    1. If connection is failure, then return a network error.\n\n  //    2. Set timingInfo’s final connection timing info to the result of\n  //    calling clamp and coarsen connection timing info with connection’s\n  //    timing info, timingInfo’s post-redirect start time, and fetchParams’s\n  //    cross-origin isolated capability.\n\n  //    3. If connection is not an HTTP/2 connection, request’s body is non-null,\n  //    and request’s body’s source is null, then append (`Transfer-Encoding`,\n  //    `chunked`) to request’s header list.\n\n  //    4. Set timingInfo’s final network-request start time to the coarsened\n  //    shared current time given fetchParams’s cross-origin isolated\n  //    capability.\n\n  //    5. Set response to the result of making an HTTP request over connection\n  //    using request with the following caveats:\n\n  //        - Follow the relevant requirements from HTTP. [HTTP] [HTTP-SEMANTICS]\n  //        [HTTP-COND] [HTTP-CACHING] [HTTP-AUTH]\n\n  //        - If request’s body is non-null, and request’s body’s source is null,\n  //        then the user agent may have a buffer of up to 64 kibibytes and store\n  //        a part of request’s body in that buffer. If the user agent reads from\n  //        request’s body beyond that buffer’s size and the user agent needs to\n  //        resend request, then instead return a network error.\n\n  //        - Set timingInfo’s final network-response start time to the coarsened\n  //        shared current time given fetchParams’s cross-origin isolated capability,\n  //        immediately after the user agent’s HTTP parser receives the first byte\n  //        of the response (e.g., frame header bytes for HTTP/2 or response status\n  //        line for HTTP/1.x).\n\n  //        - Wait until all the headers are transmitted.\n\n  //        - Any responses whose status is in the range 100 to 199, inclusive,\n  //        and is not 101, are to be ignored, except for the purposes of setting\n  //        timingInfo’s final network-response start time above.\n\n  //    - If request’s header list contains `Transfer-Encoding`/`chunked` and\n  //    response is transferred via HTTP/1.0 or older, then return a network\n  //    error.\n\n  //    - If the HTTP request results in a TLS client certificate dialog, then:\n\n  //        1. If request’s window is an environment settings object, make the\n  //        dialog available in request’s window.\n\n  //        2. Otherwise, return a network error.\n\n  // To transmit request’s body body, run these steps:\n  let requestBody = null\n  // 1. If body is null and fetchParams’s process request end-of-body is\n  // non-null, then queue a fetch task given fetchParams’s process request\n  // end-of-body and fetchParams’s task destination.\n  if (request.body == null && fetchParams.processRequestEndOfBody) {\n    queueMicrotask(() => fetchParams.processRequestEndOfBody())\n  } else if (request.body != null) {\n    // 2. Otherwise, if body is non-null:\n\n    //    1. Let processBodyChunk given bytes be these steps:\n    const processBodyChunk = async function * (bytes) {\n      // 1. If the ongoing fetch is terminated, then abort these steps.\n      if (isCancelled(fetchParams)) {\n        return\n      }\n\n      // 2. Run this step in parallel: transmit bytes.\n      yield bytes\n\n      // 3. If fetchParams’s process request body is non-null, then run\n      // fetchParams’s process request body given bytes’s length.\n      fetchParams.processRequestBodyChunkLength?.(bytes.byteLength)\n    }\n\n    // 2. Let processEndOfBody be these steps:\n    const processEndOfBody = () => {\n      // 1. If fetchParams is canceled, then abort these steps.\n      if (isCancelled(fetchParams)) {\n        return\n      }\n\n      // 2. If fetchParams’s process request end-of-body is non-null,\n      // then run fetchParams’s process request end-of-body.\n      if (fetchParams.processRequestEndOfBody) {\n        fetchParams.processRequestEndOfBody()\n      }\n    }\n\n    // 3. Let processBodyError given e be these steps:\n    const processBodyError = (e) => {\n      // 1. If fetchParams is canceled, then abort these steps.\n      if (isCancelled(fetchParams)) {\n        return\n      }\n\n      // 2. If e is an \"AbortError\" DOMException, then abort fetchParams’s controller.\n      if (e.name === 'AbortError') {\n        fetchParams.controller.abort()\n      } else {\n        fetchParams.controller.terminate(e)\n      }\n    }\n\n    // 4. Incrementally read request’s body given processBodyChunk, processEndOfBody,\n    // processBodyError, and fetchParams’s task destination.\n    requestBody = (async function * () {\n      try {\n        for await (const bytes of request.body.stream) {\n          yield * processBodyChunk(bytes)\n        }\n        processEndOfBody()\n      } catch (err) {\n        processBodyError(err)\n      }\n    })()\n  }\n\n  try {\n    // socket is only provided for websockets\n    const { body, status, statusText, headersList, socket } = await dispatch({ body: requestBody })\n\n    if (socket) {\n      response = makeResponse({ status, statusText, headersList, socket })\n    } else {\n      const iterator = body[Symbol.asyncIterator]()\n      fetchParams.controller.next = () => iterator.next()\n\n      response = makeResponse({ status, statusText, headersList })\n    }\n  } catch (err) {\n    // 10. If aborted, then:\n    if (err.name === 'AbortError') {\n      // 1. If connection uses HTTP/2, then transmit an RST_STREAM frame.\n      fetchParams.controller.connection.destroy()\n\n      // 2. Return the appropriate network error for fetchParams.\n      return makeAppropriateNetworkError(fetchParams, err)\n    }\n\n    return makeNetworkError(err)\n  }\n\n  // 11. Let pullAlgorithm be an action that resumes the ongoing fetch\n  // if it is suspended.\n  const pullAlgorithm = async () => {\n    await fetchParams.controller.resume()\n  }\n\n  // 12. Let cancelAlgorithm be an algorithm that aborts fetchParams’s\n  // controller with reason, given reason.\n  const cancelAlgorithm = (reason) => {\n    // If the aborted fetch was already terminated, then we do not\n    // need to do anything.\n    if (!isCancelled(fetchParams)) {\n      fetchParams.controller.abort(reason)\n    }\n  }\n\n  // 13. Let highWaterMark be a non-negative, non-NaN number, chosen by\n  // the user agent.\n  // TODO\n\n  // 14. Let sizeAlgorithm be an algorithm that accepts a chunk object\n  // and returns a non-negative, non-NaN, non-infinite number, chosen by the user agent.\n  // TODO\n\n  // 15. Let stream be a new ReadableStream.\n  // 16. Set up stream with byte reading support with pullAlgorithm set to pullAlgorithm,\n  //     cancelAlgorithm set to cancelAlgorithm.\n  const stream = new ReadableStream(\n    {\n      async start (controller) {\n        fetchParams.controller.controller = controller\n      },\n      async pull (controller) {\n        await pullAlgorithm(controller)\n      },\n      async cancel (reason) {\n        await cancelAlgorithm(reason)\n      },\n      type: 'bytes'\n    }\n  )\n\n  // 17. Run these steps, but abort when the ongoing fetch is terminated:\n\n  //    1. Set response’s body to a new body whose stream is stream.\n  response.body = { stream, source: null, length: null }\n\n  //    2. If response is not a network error and request’s cache mode is\n  //    not \"no-store\", then update response in httpCache for request.\n  //    TODO\n\n  //    3. If includeCredentials is true and the user agent is not configured\n  //    to block cookies for request (see section 7 of [COOKIES]), then run the\n  //    \"set-cookie-string\" parsing algorithm (see section 5.2 of [COOKIES]) on\n  //    the value of each header whose name is a byte-case-insensitive match for\n  //    `Set-Cookie` in response’s header list, if any, and request’s current URL.\n  //    TODO\n\n  // 18. If aborted, then:\n  // TODO\n\n  // 19. Run these steps in parallel:\n\n  //    1. Run these steps, but abort when fetchParams is canceled:\n  fetchParams.controller.onAborted = onAborted\n  fetchParams.controller.on('terminated', onAborted)\n  fetchParams.controller.resume = async () => {\n    // 1. While true\n    while (true) {\n      // 1-3. See onData...\n\n      // 4. Set bytes to the result of handling content codings given\n      // codings and bytes.\n      let bytes\n      let isFailure\n      try {\n        const { done, value } = await fetchParams.controller.next()\n\n        if (isAborted(fetchParams)) {\n          break\n        }\n\n        bytes = done ? undefined : value\n      } catch (err) {\n        if (fetchParams.controller.ended && !timingInfo.encodedBodySize) {\n          // zlib doesn't like empty streams.\n          bytes = undefined\n        } else {\n          bytes = err\n\n          // err may be propagated from the result of calling readablestream.cancel,\n          // which might not be an error. https://github.com/nodejs/undici/issues/2009\n          isFailure = true\n        }\n      }\n\n      if (bytes === undefined) {\n        // 2. Otherwise, if the bytes transmission for response’s message\n        // body is done normally and stream is readable, then close\n        // stream, finalize response for fetchParams and response, and\n        // abort these in-parallel steps.\n        readableStreamClose(fetchParams.controller.controller)\n\n        finalizeResponse(fetchParams, response)\n\n        return\n      }\n\n      // 5. Increase timingInfo’s decoded body size by bytes’s length.\n      timingInfo.decodedBodySize += bytes?.byteLength ?? 0\n\n      // 6. If bytes is failure, then terminate fetchParams’s controller.\n      if (isFailure) {\n        fetchParams.controller.terminate(bytes)\n        return\n      }\n\n      // 7. Enqueue a Uint8Array wrapping an ArrayBuffer containing bytes\n      // into stream.\n      const buffer = new Uint8Array(bytes)\n      if (buffer.byteLength) {\n        fetchParams.controller.controller.enqueue(buffer)\n      }\n\n      // 8. If stream is errored, then terminate the ongoing fetch.\n      if (isErrored(stream)) {\n        fetchParams.controller.terminate()\n        return\n      }\n\n      // 9. If stream doesn’t need more data ask the user agent to suspend\n      // the ongoing fetch.\n      if (fetchParams.controller.controller.desiredSize <= 0) {\n        return\n      }\n    }\n  }\n\n  //    2. If aborted, then:\n  function onAborted (reason) {\n    // 2. If fetchParams is aborted, then:\n    if (isAborted(fetchParams)) {\n      // 1. Set response’s aborted flag.\n      response.aborted = true\n\n      // 2. If stream is readable, then error stream with the result of\n      //    deserialize a serialized abort reason given fetchParams’s\n      //    controller’s serialized abort reason and an\n      //    implementation-defined realm.\n      if (isReadable(stream)) {\n        fetchParams.controller.controller.error(\n          fetchParams.controller.serializedAbortReason\n        )\n      }\n    } else {\n      // 3. Otherwise, if stream is readable, error stream with a TypeError.\n      if (isReadable(stream)) {\n        fetchParams.controller.controller.error(new TypeError('terminated', {\n          cause: isErrorLike(reason) ? reason : undefined\n        }))\n      }\n    }\n\n    // 4. If connection uses HTTP/2, then transmit an RST_STREAM frame.\n    // 5. Otherwise, the user agent should close connection unless it would be bad for performance to do so.\n    fetchParams.controller.connection.destroy()\n  }\n\n  // 20. Return response.\n  return response\n\n  function dispatch ({ body }) {\n    const url = requestCurrentURL(request)\n    /** @type {import('../..').Agent} */\n    const agent = fetchParams.controller.dispatcher\n\n    return new Promise((resolve, reject) => agent.dispatch(\n      {\n        path: url.pathname + url.search,\n        origin: url.origin,\n        method: request.method,\n        body: agent.isMockActive ? request.body && (request.body.source || request.body.stream) : body,\n        headers: request.headersList.entries,\n        maxRedirections: 0,\n        upgrade: request.mode === 'websocket' ? 'websocket' : undefined\n      },\n      {\n        body: null,\n        abort: null,\n\n        onConnect (abort) {\n          // TODO (fix): Do we need connection here?\n          const { connection } = fetchParams.controller\n\n          // Set timingInfo’s final connection timing info to the result of calling clamp and coarsen\n          // connection timing info with connection’s timing info, timingInfo’s post-redirect start\n          // time, and fetchParams’s cross-origin isolated capability.\n          // TODO: implement connection timing\n          timingInfo.finalConnectionTimingInfo = clampAndCoarsenConnectionTimingInfo(undefined, timingInfo.postRedirectStartTime, fetchParams.crossOriginIsolatedCapability)\n\n          if (connection.destroyed) {\n            abort(new DOMException('The operation was aborted.', 'AbortError'))\n          } else {\n            fetchParams.controller.on('terminated', abort)\n            this.abort = connection.abort = abort\n          }\n\n          // Set timingInfo’s final network-request start time to the coarsened shared current time given\n          // fetchParams’s cross-origin isolated capability.\n          timingInfo.finalNetworkRequestStartTime = coarsenedSharedCurrentTime(fetchParams.crossOriginIsolatedCapability)\n        },\n\n        onResponseStarted () {\n          // Set timingInfo’s final network-response start time to the coarsened shared current\n          // time given fetchParams’s cross-origin isolated capability, immediately after the\n          // user agent’s HTTP parser receives the first byte of the response (e.g., frame header\n          // bytes for HTTP/2 or response status line for HTTP/1.x).\n          timingInfo.finalNetworkResponseStartTime = coarsenedSharedCurrentTime(fetchParams.crossOriginIsolatedCapability)\n        },\n\n        onHeaders (status, rawHeaders, resume, statusText) {\n          if (status < 200) {\n            return\n          }\n\n          /** @type {string[]} */\n          let codings = []\n          let location = ''\n\n          const headersList = new HeadersList()\n\n          for (let i = 0; i < rawHeaders.length; i += 2) {\n            headersList.append(bufferToLowerCasedHeaderName(rawHeaders[i]), rawHeaders[i + 1].toString('latin1'), true)\n          }\n          const contentEncoding = headersList.get('content-encoding', true)\n          if (contentEncoding) {\n            // https://www.rfc-editor.org/rfc/rfc7231#section-3.1.2.1\n            // \"All content-coding values are case-insensitive...\"\n            codings = contentEncoding.toLowerCase().split(',').map((x) => x.trim())\n          }\n          location = headersList.get('location', true)\n\n          this.body = new Readable({ read: resume })\n\n          const decoders = []\n\n          const willFollow = location && request.redirect === 'follow' &&\n            redirectStatusSet.has(status)\n\n          // https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Encoding\n          if (codings.length !== 0 && request.method !== 'HEAD' && request.method !== 'CONNECT' && !nullBodyStatus.includes(status) && !willFollow) {\n            for (let i = 0; i < codings.length; ++i) {\n              const coding = codings[i]\n              // https://www.rfc-editor.org/rfc/rfc9112.html#section-7.2\n              if (coding === 'x-gzip' || coding === 'gzip') {\n                decoders.push(zlib.createGunzip({\n                  // Be less strict when decoding compressed responses, since sometimes\n                  // servers send slightly invalid responses that are still accepted\n                  // by common browsers.\n                  // Always using Z_SYNC_FLUSH is what cURL does.\n                  flush: zlib.constants.Z_SYNC_FLUSH,\n                  finishFlush: zlib.constants.Z_SYNC_FLUSH\n                }))\n              } else if (coding === 'deflate') {\n                decoders.push(createInflate())\n              } else if (coding === 'br') {\n                decoders.push(zlib.createBrotliDecompress())\n              } else {\n                decoders.length = 0\n                break\n              }\n            }\n          }\n\n          resolve({\n            status,\n            statusText,\n            headersList,\n            body: decoders.length\n              ? pipeline(this.body, ...decoders, () => { })\n              : this.body.on('error', () => { })\n          })\n\n          return true\n        },\n\n        onData (chunk) {\n          if (fetchParams.controller.dump) {\n            return\n          }\n\n          // 1. If one or more bytes have been transmitted from response’s\n          // message body, then:\n\n          //  1. Let bytes be the transmitted bytes.\n          const bytes = chunk\n\n          //  2. Let codings be the result of extracting header list values\n          //  given `Content-Encoding` and response’s header list.\n          //  See pullAlgorithm.\n\n          //  3. Increase timingInfo’s encoded body size by bytes’s length.\n          timingInfo.encodedBodySize += bytes.byteLength\n\n          //  4. See pullAlgorithm...\n\n          return this.body.push(bytes)\n        },\n\n        onComplete () {\n          if (this.abort) {\n            fetchParams.controller.off('terminated', this.abort)\n          }\n\n          if (fetchParams.controller.onAborted) {\n            fetchParams.controller.off('terminated', fetchParams.controller.onAborted)\n          }\n\n          fetchParams.controller.ended = true\n\n          this.body.push(null)\n        },\n\n        onError (error) {\n          if (this.abort) {\n            fetchParams.controller.off('terminated', this.abort)\n          }\n\n          this.body?.destroy(error)\n\n          fetchParams.controller.terminate(error)\n\n          reject(error)\n        },\n\n        onUpgrade (status, rawHeaders, socket) {\n          if (status !== 101) {\n            return\n          }\n\n          const headersList = new HeadersList()\n\n          for (let i = 0; i < rawHeaders.length; i += 2) {\n            headersList.append(bufferToLowerCasedHeaderName(rawHeaders[i]), rawHeaders[i + 1].toString('latin1'), true)\n          }\n\n          resolve({\n            status,\n            statusText: STATUS_CODES[status],\n            headersList,\n            socket\n          })\n\n          return true\n        }\n      }\n    ))\n  }\n}\n\nmodule.exports = {\n  fetch,\n  Fetch,\n  fetching,\n  finalizeAndReportTiming\n}\n", "'use strict'\n\nmodule.exports = {\n  kState: Symbol('FileReader state'),\n  kResult: Symbol('FileReader result'),\n  kError: Symbol('FileReader error'),\n  kLastProgressEventFired: Symbol('FileReader last progress event fired timestamp'),\n  kEvents: Symbol('FileReader events'),\n  kAborted: Symbol('FileReader aborted')\n}\n", "'use strict'\n\nconst { webidl } = require('../fetch/webidl')\n\nconst kState = Symbol('ProgressEvent state')\n\n/**\n * @see https://xhr.spec.whatwg.org/#progressevent\n */\nclass ProgressEvent extends Event {\n  constructor (type, eventInitDict = {}) {\n    type = webidl.converters.DOMString(type, 'ProgressEvent constructor', 'type')\n    eventInitDict = webidl.converters.ProgressEventInit(eventInitDict ?? {})\n\n    super(type, eventInitDict)\n\n    this[kState] = {\n      lengthComputable: eventInitDict.lengthComputable,\n      loaded: eventInitDict.loaded,\n      total: eventInitDict.total\n    }\n  }\n\n  get lengthComputable () {\n    webidl.brandCheck(this, ProgressEvent)\n\n    return this[kState].lengthComputable\n  }\n\n  get loaded () {\n    webidl.brandCheck(this, ProgressEvent)\n\n    return this[kState].loaded\n  }\n\n  get total () {\n    webidl.brandCheck(this, ProgressEvent)\n\n    return this[kState].total\n  }\n}\n\nwebidl.converters.ProgressEventInit = webidl.dictionaryConverter([\n  {\n    key: 'lengthComputable',\n    converter: webidl.converters.boolean,\n    defaultValue: () => false\n  },\n  {\n    key: 'loaded',\n    converter: webidl.converters['unsigned long long'],\n    defaultValue: () => 0\n  },\n  {\n    key: 'total',\n    converter: webidl.converters['unsigned long long'],\n    defaultValue: () => 0\n  },\n  {\n    key: 'bubbles',\n    converter: webidl.converters.boolean,\n    defaultValue: () => false\n  },\n  {\n    key: 'cancelable',\n    converter: webidl.converters.boolean,\n    defaultValue: () => false\n  },\n  {\n    key: 'composed',\n    converter: webidl.converters.boolean,\n    defaultValue: () => false\n  }\n])\n\nmodule.exports = {\n  ProgressEvent\n}\n", "'use strict'\n\n/**\n * @see https://encoding.spec.whatwg.org/#concept-encoding-get\n * @param {string|undefined} label\n */\nfunction getEncoding (label) {\n  if (!label) {\n    return 'failure'\n  }\n\n  // 1. Remove any leading and trailing ASCII whitespace from label.\n  // 2. If label is an ASCII case-insensitive match for any of the\n  //    labels listed in the table below, then return the\n  //    corresponding encoding; otherwise return failure.\n  switch (label.trim().toLowerCase()) {\n    case 'unicode-1-1-utf-8':\n    case 'unicode11utf8':\n    case 'unicode20utf8':\n    case 'utf-8':\n    case 'utf8':\n    case 'x-unicode20utf8':\n      return 'UTF-8'\n    case '866':\n    case 'cp866':\n    case 'csibm866':\n    case 'ibm866':\n      return 'IBM866'\n    case 'csisolatin2':\n    case 'iso-8859-2':\n    case 'iso-ir-101':\n    case 'iso8859-2':\n    case 'iso88592':\n    case 'iso_8859-2':\n    case 'iso_8859-2:1987':\n    case 'l2':\n    case 'latin2':\n      return 'ISO-8859-2'\n    case 'csisolatin3':\n    case 'iso-8859-3':\n    case 'iso-ir-109':\n    case 'iso8859-3':\n    case 'iso88593':\n    case 'iso_8859-3':\n    case 'iso_8859-3:1988':\n    case 'l3':\n    case 'latin3':\n      return 'ISO-8859-3'\n    case 'csisolatin4':\n    case 'iso-8859-4':\n    case 'iso-ir-110':\n    case 'iso8859-4':\n    case 'iso88594':\n    case 'iso_8859-4':\n    case 'iso_8859-4:1988':\n    case 'l4':\n    case 'latin4':\n      return 'ISO-8859-4'\n    case 'csisolatincyrillic':\n    case 'cyrillic':\n    case 'iso-8859-5':\n    case 'iso-ir-144':\n    case 'iso8859-5':\n    case 'iso88595':\n    case 'iso_8859-5':\n    case 'iso_8859-5:1988':\n      return 'ISO-8859-5'\n    case 'arabic':\n    case 'asmo-708':\n    case 'csiso88596e':\n    case 'csiso88596i':\n    case 'csisolatinarabic':\n    case 'ecma-114':\n    case 'iso-8859-6':\n    case 'iso-8859-6-e':\n    case 'iso-8859-6-i':\n    case 'iso-ir-127':\n    case 'iso8859-6':\n    case 'iso88596':\n    case 'iso_8859-6':\n    case 'iso_8859-6:1987':\n      return 'ISO-8859-6'\n    case 'csisolatingreek':\n    case 'ecma-118':\n    case 'elot_928':\n    case 'greek':\n    case 'greek8':\n    case 'iso-8859-7':\n    case 'iso-ir-126':\n    case 'iso8859-7':\n    case 'iso88597':\n    case 'iso_8859-7':\n    case 'iso_8859-7:1987':\n    case 'sun_eu_greek':\n      return 'ISO-8859-7'\n    case 'csiso88598e':\n    case 'csisolatinhebrew':\n    case 'hebrew':\n    case 'iso-8859-8':\n    case 'iso-8859-8-e':\n    case 'iso-ir-138':\n    case 'iso8859-8':\n    case 'iso88598':\n    case 'iso_8859-8':\n    case 'iso_8859-8:1988':\n    case 'visual':\n      return 'ISO-8859-8'\n    case 'csiso88598i':\n    case 'iso-8859-8-i':\n    case 'logical':\n      return 'ISO-8859-8-I'\n    case 'csisolatin6':\n    case 'iso-8859-10':\n    case 'iso-ir-157':\n    case 'iso8859-10':\n    case 'iso885910':\n    case 'l6':\n    case 'latin6':\n      return 'ISO-8859-10'\n    case 'iso-8859-13':\n    case 'iso8859-13':\n    case 'iso885913':\n      return 'ISO-8859-13'\n    case 'iso-8859-14':\n    case 'iso8859-14':\n    case 'iso885914':\n      return 'ISO-8859-14'\n    case 'csisolatin9':\n    case 'iso-8859-15':\n    case 'iso8859-15':\n    case 'iso885915':\n    case 'iso_8859-15':\n    case 'l9':\n      return 'ISO-8859-15'\n    case 'iso-8859-16':\n      return 'ISO-8859-16'\n    case 'cskoi8r':\n    case 'koi':\n    case 'koi8':\n    case 'koi8-r':\n    case 'koi8_r':\n      return 'KOI8-R'\n    case 'koi8-ru':\n    case 'koi8-u':\n      return 'KOI8-U'\n    case 'csmacintosh':\n    case 'mac':\n    case 'macintosh':\n    case 'x-mac-roman':\n      return 'macintosh'\n    case 'iso-8859-11':\n    case 'iso8859-11':\n    case 'iso885911':\n    case 'tis-620':\n    case 'windows-874':\n      return 'windows-874'\n    case 'cp1250':\n    case 'windows-1250':\n    case 'x-cp1250':\n      return 'windows-1250'\n    case 'cp1251':\n    case 'windows-1251':\n    case 'x-cp1251':\n      return 'windows-1251'\n    case 'ansi_x3.4-1968':\n    case 'ascii':\n    case 'cp1252':\n    case 'cp819':\n    case 'csisolatin1':\n    case 'ibm819':\n    case 'iso-8859-1':\n    case 'iso-ir-100':\n    case 'iso8859-1':\n    case 'iso88591':\n    case 'iso_8859-1':\n    case 'iso_8859-1:1987':\n    case 'l1':\n    case 'latin1':\n    case 'us-ascii':\n    case 'windows-1252':\n    case 'x-cp1252':\n      return 'windows-1252'\n    case 'cp1253':\n    case 'windows-1253':\n    case 'x-cp1253':\n      return 'windows-1253'\n    case 'cp1254':\n    case 'csisolatin5':\n    case 'iso-8859-9':\n    case 'iso-ir-148':\n    case 'iso8859-9':\n    case 'iso88599':\n    case 'iso_8859-9':\n    case 'iso_8859-9:1989':\n    case 'l5':\n    case 'latin5':\n    case 'windows-1254':\n    case 'x-cp1254':\n      return 'windows-1254'\n    case 'cp1255':\n    case 'windows-1255':\n    case 'x-cp1255':\n      return 'windows-1255'\n    case 'cp1256':\n    case 'windows-1256':\n    case 'x-cp1256':\n      return 'windows-1256'\n    case 'cp1257':\n    case 'windows-1257':\n    case 'x-cp1257':\n      return 'windows-1257'\n    case 'cp1258':\n    case 'windows-1258':\n    case 'x-cp1258':\n      return 'windows-1258'\n    case 'x-mac-cyrillic':\n    case 'x-mac-ukrainian':\n      return 'x-mac-cyrillic'\n    case 'chinese':\n    case 'csgb2312':\n    case 'csiso58gb231280':\n    case 'gb2312':\n    case 'gb_2312':\n    case 'gb_2312-80':\n    case 'gbk':\n    case 'iso-ir-58':\n    case 'x-gbk':\n      return 'GBK'\n    case 'gb18030':\n      return 'gb18030'\n    case 'big5':\n    case 'big5-hkscs':\n    case 'cn-big5':\n    case 'csbig5':\n    case 'x-x-big5':\n      return 'Big5'\n    case 'cseucpkdfmtjapanese':\n    case 'euc-jp':\n    case 'x-euc-jp':\n      return 'EUC-JP'\n    case 'csiso2022jp':\n    case 'iso-2022-jp':\n      return 'ISO-2022-JP'\n    case 'csshiftjis':\n    case 'ms932':\n    case 'ms_kanji':\n    case 'shift-jis':\n    case 'shift_jis':\n    case 'sjis':\n    case 'windows-31j':\n    case 'x-sjis':\n      return 'Shift_JIS'\n    case 'cseuckr':\n    case 'csksc56011987':\n    case 'euc-kr':\n    case 'iso-ir-149':\n    case 'korean':\n    case 'ks_c_5601-1987':\n    case 'ks_c_5601-1989':\n    case 'ksc5601':\n    case 'ksc_5601':\n    case 'windows-949':\n      return 'EUC-KR'\n    case 'csiso2022kr':\n    case 'hz-gb-2312':\n    case 'iso-2022-cn':\n    case 'iso-2022-cn-ext':\n    case 'iso-2022-kr':\n    case 'replacement':\n      return 'replacement'\n    case 'unicodefffe':\n    case 'utf-16be':\n      return 'UTF-16BE'\n    case 'csunicode':\n    case 'iso-10646-ucs-2':\n    case 'ucs-2':\n    case 'unicode':\n    case 'unicodefeff':\n    case 'utf-16':\n    case 'utf-16le':\n      return 'UTF-16LE'\n    case 'x-user-defined':\n      return 'x-user-defined'\n    default: return 'failure'\n  }\n}\n\nmodule.exports = {\n  getEncoding\n}\n", "'use strict'\n\nconst {\n  kState,\n  kError,\n  kResult,\n  kAborted,\n  kLastProgressEventFired\n} = require('./symbols')\nconst { ProgressEvent } = require('./progressevent')\nconst { getEncoding } = require('./encoding')\nconst { serializeAMimeType, parseMIMEType } = require('../fetch/data-url')\nconst { types } = require('node:util')\nconst { StringDecoder } = require('string_decoder')\nconst { btoa } = require('node:buffer')\n\n/** @type {PropertyDescriptor} */\nconst staticPropertyDescriptors = {\n  enumerable: true,\n  writable: false,\n  configurable: false\n}\n\n/**\n * @see https://w3c.github.io/FileAPI/#readOperation\n * @param {import('./filereader').FileReader} fr\n * @param {import('buffer').Blob} blob\n * @param {string} type\n * @param {string?} encodingName\n */\nfunction readOperation (fr, blob, type, encodingName) {\n  // 1. If fr’s state is \"loading\", throw an InvalidStateError\n  //    DOMException.\n  if (fr[kState] === 'loading') {\n    throw new DOMException('Invalid state', 'InvalidStateError')\n  }\n\n  // 2. Set fr’s state to \"loading\".\n  fr[kState] = 'loading'\n\n  // 3. Set fr’s result to null.\n  fr[kResult] = null\n\n  // 4. Set fr’s error to null.\n  fr[kError] = null\n\n  // 5. Let stream be the result of calling get stream on blob.\n  /** @type {import('stream/web').ReadableStream} */\n  const stream = blob.stream()\n\n  // 6. Let reader be the result of getting a reader from stream.\n  const reader = stream.getReader()\n\n  // 7. Let bytes be an empty byte sequence.\n  /** @type {Uint8Array[]} */\n  const bytes = []\n\n  // 8. Let chunkPromise be the result of reading a chunk from\n  //    stream with reader.\n  let chunkPromise = reader.read()\n\n  // 9. Let isFirstChunk be true.\n  let isFirstChunk = true\n\n  // 10. In parallel, while true:\n  // Note: \"In parallel\" just means non-blocking\n  // Note 2: readOperation itself cannot be async as double\n  // reading the body would then reject the promise, instead\n  // of throwing an error.\n  ;(async () => {\n    while (!fr[kAborted]) {\n      // 1. Wait for chunkPromise to be fulfilled or rejected.\n      try {\n        const { done, value } = await chunkPromise\n\n        // 2. If chunkPromise is fulfilled, and isFirstChunk is\n        //    true, queue a task to fire a progress event called\n        //    loadstart at fr.\n        if (isFirstChunk && !fr[kAborted]) {\n          queueMicrotask(() => {\n            fireAProgressEvent('loadstart', fr)\n          })\n        }\n\n        // 3. Set isFirstChunk to false.\n        isFirstChunk = false\n\n        // 4. If chunkPromise is fulfilled with an object whose\n        //    done property is false and whose value property is\n        //    a Uint8Array object, run these steps:\n        if (!done && types.isUint8Array(value)) {\n          // 1. Let bs be the byte sequence represented by the\n          //    Uint8Array object.\n\n          // 2. Append bs to bytes.\n          bytes.push(value)\n\n          // 3. If roughly 50ms have passed since these steps\n          //    were last invoked, queue a task to fire a\n          //    progress event called progress at fr.\n          if (\n            (\n              fr[kLastProgressEventFired] === undefined ||\n              Date.now() - fr[kLastProgressEventFired] >= 50\n            ) &&\n            !fr[kAborted]\n          ) {\n            fr[kLastProgressEventFired] = Date.now()\n            queueMicrotask(() => {\n              fireAProgressEvent('progress', fr)\n            })\n          }\n\n          // 4. Set chunkPromise to the result of reading a\n          //    chunk from stream with reader.\n          chunkPromise = reader.read()\n        } else if (done) {\n          // 5. Otherwise, if chunkPromise is fulfilled with an\n          //    object whose done property is true, queue a task\n          //    to run the following steps and abort this algorithm:\n          queueMicrotask(() => {\n            // 1. Set fr’s state to \"done\".\n            fr[kState] = 'done'\n\n            // 2. Let result be the result of package data given\n            //    bytes, type, blob’s type, and encodingName.\n            try {\n              const result = packageData(bytes, type, blob.type, encodingName)\n\n              // 4. Else:\n\n              if (fr[kAborted]) {\n                return\n              }\n\n              // 1. Set fr’s result to result.\n              fr[kResult] = result\n\n              // 2. Fire a progress event called load at the fr.\n              fireAProgressEvent('load', fr)\n            } catch (error) {\n              // 3. If package data threw an exception error:\n\n              // 1. Set fr’s error to error.\n              fr[kError] = error\n\n              // 2. Fire a progress event called error at fr.\n              fireAProgressEvent('error', fr)\n            }\n\n            // 5. If fr’s state is not \"loading\", fire a progress\n            //    event called loadend at the fr.\n            if (fr[kState] !== 'loading') {\n              fireAProgressEvent('loadend', fr)\n            }\n          })\n\n          break\n        }\n      } catch (error) {\n        if (fr[kAborted]) {\n          return\n        }\n\n        // 6. Otherwise, if chunkPromise is rejected with an\n        //    error error, queue a task to run the following\n        //    steps and abort this algorithm:\n        queueMicrotask(() => {\n          // 1. Set fr’s state to \"done\".\n          fr[kState] = 'done'\n\n          // 2. Set fr’s error to error.\n          fr[kError] = error\n\n          // 3. Fire a progress event called error at fr.\n          fireAProgressEvent('error', fr)\n\n          // 4. If fr’s state is not \"loading\", fire a progress\n          //    event called loadend at fr.\n          if (fr[kState] !== 'loading') {\n            fireAProgressEvent('loadend', fr)\n          }\n        })\n\n        break\n      }\n    }\n  })()\n}\n\n/**\n * @see https://w3c.github.io/FileAPI/#fire-a-progress-event\n * @see https://dom.spec.whatwg.org/#concept-event-fire\n * @param {string} e The name of the event\n * @param {import('./filereader').FileReader} reader\n */\nfunction fireAProgressEvent (e, reader) {\n  // The progress event e does not bubble. e.bubbles must be false\n  // The progress event e is NOT cancelable. e.cancelable must be false\n  const event = new ProgressEvent(e, {\n    bubbles: false,\n    cancelable: false\n  })\n\n  reader.dispatchEvent(event)\n}\n\n/**\n * @see https://w3c.github.io/FileAPI/#blob-package-data\n * @param {Uint8Array[]} bytes\n * @param {string} type\n * @param {string?} mimeType\n * @param {string?} encodingName\n */\nfunction packageData (bytes, type, mimeType, encodingName) {\n  // 1. A Blob has an associated package data algorithm, given\n  //    bytes, a type, a optional mimeType, and a optional\n  //    encodingName, which switches on type and runs the\n  //    associated steps:\n\n  switch (type) {\n    case 'DataURL': {\n      // 1. Return bytes as a DataURL [RFC2397] subject to\n      //    the considerations below:\n      //  * Use mimeType as part of the Data URL if it is\n      //    available in keeping with the Data URL\n      //    specification [RFC2397].\n      //  * If mimeType is not available return a Data URL\n      //    without a media-type. [RFC2397].\n\n      // https://datatracker.ietf.org/doc/html/rfc2397#section-3\n      // dataurl    := \"data:\" [ mediatype ] [ \";base64\" ] \",\" data\n      // mediatype  := [ type \"/\" subtype ] *( \";\" parameter )\n      // data       := *urlchar\n      // parameter  := attribute \"=\" value\n      let dataURL = 'data:'\n\n      const parsed = parseMIMEType(mimeType || 'application/octet-stream')\n\n      if (parsed !== 'failure') {\n        dataURL += serializeAMimeType(parsed)\n      }\n\n      dataURL += ';base64,'\n\n      const decoder = new StringDecoder('latin1')\n\n      for (const chunk of bytes) {\n        dataURL += btoa(decoder.write(chunk))\n      }\n\n      dataURL += btoa(decoder.end())\n\n      return dataURL\n    }\n    case 'Text': {\n      // 1. Let encoding be failure\n      let encoding = 'failure'\n\n      // 2. If the encodingName is present, set encoding to the\n      //    result of getting an encoding from encodingName.\n      if (encodingName) {\n        encoding = getEncoding(encodingName)\n      }\n\n      // 3. If encoding is failure, and mimeType is present:\n      if (encoding === 'failure' && mimeType) {\n        // 1. Let type be the result of parse a MIME type\n        //    given mimeType.\n        const type = parseMIMEType(mimeType)\n\n        // 2. If type is not failure, set encoding to the result\n        //    of getting an encoding from type’s parameters[\"charset\"].\n        if (type !== 'failure') {\n          encoding = getEncoding(type.parameters.get('charset'))\n        }\n      }\n\n      // 4. If encoding is failure, then set encoding to UTF-8.\n      if (encoding === 'failure') {\n        encoding = 'UTF-8'\n      }\n\n      // 5. Decode bytes using fallback encoding encoding, and\n      //    return the result.\n      return decode(bytes, encoding)\n    }\n    case 'ArrayBuffer': {\n      // Return a new ArrayBuffer whose contents are bytes.\n      const sequence = combineByteSequences(bytes)\n\n      return sequence.buffer\n    }\n    case 'BinaryString': {\n      // Return bytes as a binary string, in which every byte\n      //  is represented by a code unit of equal value [0..255].\n      let binaryString = ''\n\n      const decoder = new StringDecoder('latin1')\n\n      for (const chunk of bytes) {\n        binaryString += decoder.write(chunk)\n      }\n\n      binaryString += decoder.end()\n\n      return binaryString\n    }\n  }\n}\n\n/**\n * @see https://encoding.spec.whatwg.org/#decode\n * @param {Uint8Array[]} ioQueue\n * @param {string} encoding\n */\nfunction decode (ioQueue, encoding) {\n  const bytes = combineByteSequences(ioQueue)\n\n  // 1. Let BOMEncoding be the result of BOM sniffing ioQueue.\n  const BOMEncoding = BOMSniffing(bytes)\n\n  let slice = 0\n\n  // 2. If BOMEncoding is non-null:\n  if (BOMEncoding !== null) {\n    // 1. Set encoding to BOMEncoding.\n    encoding = BOMEncoding\n\n    // 2. Read three bytes from ioQueue, if BOMEncoding is\n    //    UTF-8; otherwise read two bytes.\n    //    (Do nothing with those bytes.)\n    slice = BOMEncoding === 'UTF-8' ? 3 : 2\n  }\n\n  // 3. Process a queue with an instance of encoding’s\n  //    decoder, ioQueue, output, and \"replacement\".\n\n  // 4. Return output.\n\n  const sliced = bytes.slice(slice)\n  return new TextDecoder(encoding).decode(sliced)\n}\n\n/**\n * @see https://encoding.spec.whatwg.org/#bom-sniff\n * @param {Uint8Array} ioQueue\n */\nfunction BOMSniffing (ioQueue) {\n  // 1. Let BOM be the result of peeking 3 bytes from ioQueue,\n  //    converted to a byte sequence.\n  const [a, b, c] = ioQueue\n\n  // 2. For each of the rows in the table below, starting with\n  //    the first one and going down, if BOM starts with the\n  //    bytes given in the first column, then return the\n  //    encoding given in the cell in the second column of that\n  //    row. Otherwise, return null.\n  if (a === 0xEF && b === 0xBB && c === 0xBF) {\n    return 'UTF-8'\n  } else if (a === 0xFE && b === 0xFF) {\n    return 'UTF-16BE'\n  } else if (a === 0xFF && b === 0xFE) {\n    return 'UTF-16LE'\n  }\n\n  return null\n}\n\n/**\n * @param {Uint8Array[]} sequences\n */\nfunction combineByteSequences (sequences) {\n  const size = sequences.reduce((a, b) => {\n    return a + b.byteLength\n  }, 0)\n\n  let offset = 0\n\n  return sequences.reduce((a, b) => {\n    a.set(b, offset)\n    offset += b.byteLength\n    return a\n  }, new Uint8Array(size))\n}\n\nmodule.exports = {\n  staticPropertyDescriptors,\n  readOperation,\n  fireAProgressEvent\n}\n", "'use strict'\n\nconst {\n  staticPropertyDescriptors,\n  readOperation,\n  fireAProgressEvent\n} = require('./util')\nconst {\n  kState,\n  kError,\n  kResult,\n  kEvents,\n  kAborted\n} = require('./symbols')\nconst { webidl } = require('../fetch/webidl')\nconst { kEnumerableProperty } = require('../../core/util')\n\nclass FileReader extends EventTarget {\n  constructor () {\n    super()\n\n    this[kState] = 'empty'\n    this[kResult] = null\n    this[kError] = null\n    this[kEvents] = {\n      loadend: null,\n      error: null,\n      abort: null,\n      load: null,\n      progress: null,\n      loadstart: null\n    }\n  }\n\n  /**\n   * @see https://w3c.github.io/FileAPI/#dfn-readAsArrayBuffer\n   * @param {import('buffer').Blob} blob\n   */\n  readAsArrayBuffer (blob) {\n    webidl.brandCheck(this, FileReader)\n\n    webidl.argumentLengthCheck(arguments, 1, 'FileReader.readAsArrayBuffer')\n\n    blob = webidl.converters.Blob(blob, { strict: false })\n\n    // The readAsArrayBuffer(blob) method, when invoked,\n    // must initiate a read operation for blob with ArrayBuffer.\n    readOperation(this, blob, 'ArrayBuffer')\n  }\n\n  /**\n   * @see https://w3c.github.io/FileAPI/#readAsBinaryString\n   * @param {import('buffer').Blob} blob\n   */\n  readAsBinaryString (blob) {\n    webidl.brandCheck(this, FileReader)\n\n    webidl.argumentLengthCheck(arguments, 1, 'FileReader.readAsBinaryString')\n\n    blob = webidl.converters.Blob(blob, { strict: false })\n\n    // The readAsBinaryString(blob) method, when invoked,\n    // must initiate a read operation for blob with BinaryString.\n    readOperation(this, blob, 'BinaryString')\n  }\n\n  /**\n   * @see https://w3c.github.io/FileAPI/#readAsDataText\n   * @param {import('buffer').Blob} blob\n   * @param {string?} encoding\n   */\n  readAsText (blob, encoding = undefined) {\n    webidl.brandCheck(this, FileReader)\n\n    webidl.argumentLengthCheck(arguments, 1, 'FileReader.readAsText')\n\n    blob = webidl.converters.Blob(blob, { strict: false })\n\n    if (encoding !== undefined) {\n      encoding = webidl.converters.DOMString(encoding, 'FileReader.readAsText', 'encoding')\n    }\n\n    // The readAsText(blob, encoding) method, when invoked,\n    // must initiate a read operation for blob with Text and encoding.\n    readOperation(this, blob, 'Text', encoding)\n  }\n\n  /**\n   * @see https://w3c.github.io/FileAPI/#dfn-readAsDataURL\n   * @param {import('buffer').Blob} blob\n   */\n  readAsDataURL (blob) {\n    webidl.brandCheck(this, FileReader)\n\n    webidl.argumentLengthCheck(arguments, 1, 'FileReader.readAsDataURL')\n\n    blob = webidl.converters.Blob(blob, { strict: false })\n\n    // The readAsDataURL(blob) method, when invoked, must\n    // initiate a read operation for blob with DataURL.\n    readOperation(this, blob, 'DataURL')\n  }\n\n  /**\n   * @see https://w3c.github.io/FileAPI/#dfn-abort\n   */\n  abort () {\n    // 1. If this's state is \"empty\" or if this's state is\n    //    \"done\" set this's result to null and terminate\n    //    this algorithm.\n    if (this[kState] === 'empty' || this[kState] === 'done') {\n      this[kResult] = null\n      return\n    }\n\n    // 2. If this's state is \"loading\" set this's state to\n    //    \"done\" and set this's result to null.\n    if (this[kState] === 'loading') {\n      this[kState] = 'done'\n      this[kResult] = null\n    }\n\n    // 3. If there are any tasks from this on the file reading\n    //    task source in an affiliated task queue, then remove\n    //    those tasks from that task queue.\n    this[kAborted] = true\n\n    // 4. Terminate the algorithm for the read method being processed.\n    // TODO\n\n    // 5. Fire a progress event called abort at this.\n    fireAProgressEvent('abort', this)\n\n    // 6. If this's state is not \"loading\", fire a progress\n    //    event called loadend at this.\n    if (this[kState] !== 'loading') {\n      fireAProgressEvent('loadend', this)\n    }\n  }\n\n  /**\n   * @see https://w3c.github.io/FileAPI/#dom-filereader-readystate\n   */\n  get readyState () {\n    webidl.brandCheck(this, FileReader)\n\n    switch (this[kState]) {\n      case 'empty': return this.EMPTY\n      case 'loading': return this.LOADING\n      case 'done': return this.DONE\n    }\n  }\n\n  /**\n   * @see https://w3c.github.io/FileAPI/#dom-filereader-result\n   */\n  get result () {\n    webidl.brandCheck(this, FileReader)\n\n    // The result attribute’s getter, when invoked, must return\n    // this's result.\n    return this[kResult]\n  }\n\n  /**\n   * @see https://w3c.github.io/FileAPI/#dom-filereader-error\n   */\n  get error () {\n    webidl.brandCheck(this, FileReader)\n\n    // The error attribute’s getter, when invoked, must return\n    // this's error.\n    return this[kError]\n  }\n\n  get onloadend () {\n    webidl.brandCheck(this, FileReader)\n\n    return this[kEvents].loadend\n  }\n\n  set onloadend (fn) {\n    webidl.brandCheck(this, FileReader)\n\n    if (this[kEvents].loadend) {\n      this.removeEventListener('loadend', this[kEvents].loadend)\n    }\n\n    if (typeof fn === 'function') {\n      this[kEvents].loadend = fn\n      this.addEventListener('loadend', fn)\n    } else {\n      this[kEvents].loadend = null\n    }\n  }\n\n  get onerror () {\n    webidl.brandCheck(this, FileReader)\n\n    return this[kEvents].error\n  }\n\n  set onerror (fn) {\n    webidl.brandCheck(this, FileReader)\n\n    if (this[kEvents].error) {\n      this.removeEventListener('error', this[kEvents].error)\n    }\n\n    if (typeof fn === 'function') {\n      this[kEvents].error = fn\n      this.addEventListener('error', fn)\n    } else {\n      this[kEvents].error = null\n    }\n  }\n\n  get onloadstart () {\n    webidl.brandCheck(this, FileReader)\n\n    return this[kEvents].loadstart\n  }\n\n  set onloadstart (fn) {\n    webidl.brandCheck(this, FileReader)\n\n    if (this[kEvents].loadstart) {\n      this.removeEventListener('loadstart', this[kEvents].loadstart)\n    }\n\n    if (typeof fn === 'function') {\n      this[kEvents].loadstart = fn\n      this.addEventListener('loadstart', fn)\n    } else {\n      this[kEvents].loadstart = null\n    }\n  }\n\n  get onprogress () {\n    webidl.brandCheck(this, FileReader)\n\n    return this[kEvents].progress\n  }\n\n  set onprogress (fn) {\n    webidl.brandCheck(this, FileReader)\n\n    if (this[kEvents].progress) {\n      this.removeEventListener('progress', this[kEvents].progress)\n    }\n\n    if (typeof fn === 'function') {\n      this[kEvents].progress = fn\n      this.addEventListener('progress', fn)\n    } else {\n      this[kEvents].progress = null\n    }\n  }\n\n  get onload () {\n    webidl.brandCheck(this, FileReader)\n\n    return this[kEvents].load\n  }\n\n  set onload (fn) {\n    webidl.brandCheck(this, FileReader)\n\n    if (this[kEvents].load) {\n      this.removeEventListener('load', this[kEvents].load)\n    }\n\n    if (typeof fn === 'function') {\n      this[kEvents].load = fn\n      this.addEventListener('load', fn)\n    } else {\n      this[kEvents].load = null\n    }\n  }\n\n  get onabort () {\n    webidl.brandCheck(this, FileReader)\n\n    return this[kEvents].abort\n  }\n\n  set onabort (fn) {\n    webidl.brandCheck(this, FileReader)\n\n    if (this[kEvents].abort) {\n      this.removeEventListener('abort', this[kEvents].abort)\n    }\n\n    if (typeof fn === 'function') {\n      this[kEvents].abort = fn\n      this.addEventListener('abort', fn)\n    } else {\n      this[kEvents].abort = null\n    }\n  }\n}\n\n// https://w3c.github.io/FileAPI/#dom-filereader-empty\nFileReader.EMPTY = FileReader.prototype.EMPTY = 0\n// https://w3c.github.io/FileAPI/#dom-filereader-loading\nFileReader.LOADING = FileReader.prototype.LOADING = 1\n// https://w3c.github.io/FileAPI/#dom-filereader-done\nFileReader.DONE = FileReader.prototype.DONE = 2\n\nObject.defineProperties(FileReader.prototype, {\n  EMPTY: staticPropertyDescriptors,\n  LOADING: staticPropertyDescriptors,\n  DONE: staticPropertyDescriptors,\n  readAsArrayBuffer: kEnumerableProperty,\n  readAsBinaryString: kEnumerableProperty,\n  readAsText: kEnumerableProperty,\n  readAsDataURL: kEnumerableProperty,\n  abort: kEnumerableProperty,\n  readyState: kEnumerableProperty,\n  result: kEnumerableProperty,\n  error: kEnumerableProperty,\n  onloadstart: kEnumerableProperty,\n  onprogress: kEnumerableProperty,\n  onload: kEnumerableProperty,\n  onabort: kEnumerableProperty,\n  onerror: kEnumerableProperty,\n  onloadend: kEnumerableProperty,\n  [Symbol.toStringTag]: {\n    value: 'FileReader',\n    writable: false,\n    enumerable: false,\n    configurable: true\n  }\n})\n\nObject.defineProperties(FileReader, {\n  EMPTY: staticPropertyDescriptors,\n  LOADING: staticPropertyDescriptors,\n  DONE: staticPropertyDescriptors\n})\n\nmodule.exports = {\n  FileReader\n}\n", "'use strict'\n\nmodule.exports = {\n  kConstruct: require('../../core/symbols').kConstruct\n}\n", "'use strict'\n\nconst assert = require('node:assert')\nconst { URLSerializer } = require('../fetch/data-url')\nconst { isValidHeaderName } = require('../fetch/util')\n\n/**\n * @see https://url.spec.whatwg.org/#concept-url-equals\n * @param {URL} A\n * @param {URL} B\n * @param {boolean | undefined} excludeFragment\n * @returns {boolean}\n */\nfunction urlEquals (A, B, excludeFragment = false) {\n  const serializedA = URLSerializer(A, excludeFragment)\n\n  const serializedB = URLSerializer(B, excludeFragment)\n\n  return serializedA === serializedB\n}\n\n/**\n * @see https://github.com/chromium/chromium/blob/694d20d134cb553d8d89e5500b9148012b1ba299/content/browser/cache_storage/cache_storage_cache.cc#L260-L262\n * @param {string} header\n */\nfunction getFieldValues (header) {\n  assert(header !== null)\n\n  const values = []\n\n  for (let value of header.split(',')) {\n    value = value.trim()\n\n    if (isValidHeaderName(value)) {\n      values.push(value)\n    }\n  }\n\n  return values\n}\n\nmodule.exports = {\n  urlEquals,\n  getFieldValues\n}\n", "'use strict'\n\nconst { kConstruct } = require('./symbols')\nconst { urlEquals, getFieldValues } = require('./util')\nconst { kEnumerableProperty, isDisturbed } = require('../../core/util')\nconst { webidl } = require('../fetch/webidl')\nconst { Response, cloneResponse, fromInnerResponse } = require('../fetch/response')\nconst { Request, fromInnerRequest } = require('../fetch/request')\nconst { kState } = require('../fetch/symbols')\nconst { fetching } = require('../fetch/index')\nconst { urlIsHttpHttpsScheme, createDeferredPromise, readAllBytes } = require('../fetch/util')\nconst assert = require('node:assert')\n\n/**\n * @see https://w3c.github.io/ServiceWorker/#dfn-cache-batch-operation\n * @typedef {Object} CacheBatchOperation\n * @property {'delete' | 'put'} type\n * @property {any} request\n * @property {any} response\n * @property {import('../../types/cache').CacheQueryOptions} options\n */\n\n/**\n * @see https://w3c.github.io/ServiceWorker/#dfn-request-response-list\n * @typedef {[any, any][]} requestResponseList\n */\n\nclass Cache {\n  /**\n   * @see https://w3c.github.io/ServiceWorker/#dfn-relevant-request-response-list\n   * @type {requestResponseList}\n   */\n  #relevantRequestResponseList\n\n  constructor () {\n    if (arguments[0] !== kConstruct) {\n      webidl.illegalConstructor()\n    }\n\n    this.#relevantRequestResponseList = arguments[1]\n  }\n\n  async match (request, options = {}) {\n    webidl.brandCheck(this, Cache)\n\n    const prefix = 'Cache.match'\n    webidl.argumentLengthCheck(arguments, 1, prefix)\n\n    request = webidl.converters.RequestInfo(request, prefix, 'request')\n    options = webidl.converters.CacheQueryOptions(options, prefix, 'options')\n\n    const p = this.#internalMatchAll(request, options, 1)\n\n    if (p.length === 0) {\n      return\n    }\n\n    return p[0]\n  }\n\n  async matchAll (request = undefined, options = {}) {\n    webidl.brandCheck(this, Cache)\n\n    const prefix = 'Cache.matchAll'\n    if (request !== undefined) request = webidl.converters.RequestInfo(request, prefix, 'request')\n    options = webidl.converters.CacheQueryOptions(options, prefix, 'options')\n\n    return this.#internalMatchAll(request, options)\n  }\n\n  async add (request) {\n    webidl.brandCheck(this, Cache)\n\n    const prefix = 'Cache.add'\n    webidl.argumentLengthCheck(arguments, 1, prefix)\n\n    request = webidl.converters.RequestInfo(request, prefix, 'request')\n\n    // 1.\n    const requests = [request]\n\n    // 2.\n    const responseArrayPromise = this.addAll(requests)\n\n    // 3.\n    return await responseArrayPromise\n  }\n\n  async addAll (requests) {\n    webidl.brandCheck(this, Cache)\n\n    const prefix = 'Cache.addAll'\n    webidl.argumentLengthCheck(arguments, 1, prefix)\n\n    // 1.\n    const responsePromises = []\n\n    // 2.\n    const requestList = []\n\n    // 3.\n    for (let request of requests) {\n      if (request === undefined) {\n        throw webidl.errors.conversionFailed({\n          prefix,\n          argument: 'Argument 1',\n          types: ['undefined is not allowed']\n        })\n      }\n\n      request = webidl.converters.RequestInfo(request)\n\n      if (typeof request === 'string') {\n        continue\n      }\n\n      // 3.1\n      const r = request[kState]\n\n      // 3.2\n      if (!urlIsHttpHttpsScheme(r.url) || r.method !== 'GET') {\n        throw webidl.errors.exception({\n          header: prefix,\n          message: 'Expected http/s scheme when method is not GET.'\n        })\n      }\n    }\n\n    // 4.\n    /** @type {ReturnType<typeof fetching>[]} */\n    const fetchControllers = []\n\n    // 5.\n    for (const request of requests) {\n      // 5.1\n      const r = new Request(request)[kState]\n\n      // 5.2\n      if (!urlIsHttpHttpsScheme(r.url)) {\n        throw webidl.errors.exception({\n          header: prefix,\n          message: 'Expected http/s scheme.'\n        })\n      }\n\n      // 5.4\n      r.initiator = 'fetch'\n      r.destination = 'subresource'\n\n      // 5.5\n      requestList.push(r)\n\n      // 5.6\n      const responsePromise = createDeferredPromise()\n\n      // 5.7\n      fetchControllers.push(fetching({\n        request: r,\n        processResponse (response) {\n          // 1.\n          if (response.type === 'error' || response.status === 206 || response.status < 200 || response.status > 299) {\n            responsePromise.reject(webidl.errors.exception({\n              header: 'Cache.addAll',\n              message: 'Received an invalid status code or the request failed.'\n            }))\n          } else if (response.headersList.contains('vary')) { // 2.\n            // 2.1\n            const fieldValues = getFieldValues(response.headersList.get('vary'))\n\n            // 2.2\n            for (const fieldValue of fieldValues) {\n              // 2.2.1\n              if (fieldValue === '*') {\n                responsePromise.reject(webidl.errors.exception({\n                  header: 'Cache.addAll',\n                  message: 'invalid vary field value'\n                }))\n\n                for (const controller of fetchControllers) {\n                  controller.abort()\n                }\n\n                return\n              }\n            }\n          }\n        },\n        processResponseEndOfBody (response) {\n          // 1.\n          if (response.aborted) {\n            responsePromise.reject(new DOMException('aborted', 'AbortError'))\n            return\n          }\n\n          // 2.\n          responsePromise.resolve(response)\n        }\n      }))\n\n      // 5.8\n      responsePromises.push(responsePromise.promise)\n    }\n\n    // 6.\n    const p = Promise.all(responsePromises)\n\n    // 7.\n    const responses = await p\n\n    // 7.1\n    const operations = []\n\n    // 7.2\n    let index = 0\n\n    // 7.3\n    for (const response of responses) {\n      // 7.3.1\n      /** @type {CacheBatchOperation} */\n      const operation = {\n        type: 'put', // 7.3.2\n        request: requestList[index], // 7.3.3\n        response // 7.3.4\n      }\n\n      operations.push(operation) // 7.3.5\n\n      index++ // 7.3.6\n    }\n\n    // 7.5\n    const cacheJobPromise = createDeferredPromise()\n\n    // 7.6.1\n    let errorData = null\n\n    // 7.6.2\n    try {\n      this.#batchCacheOperations(operations)\n    } catch (e) {\n      errorData = e\n    }\n\n    // 7.6.3\n    queueMicrotask(() => {\n      // 7.6.3.1\n      if (errorData === null) {\n        cacheJobPromise.resolve(undefined)\n      } else {\n        // 7.6.3.2\n        cacheJobPromise.reject(errorData)\n      }\n    })\n\n    // 7.7\n    return cacheJobPromise.promise\n  }\n\n  async put (request, response) {\n    webidl.brandCheck(this, Cache)\n\n    const prefix = 'Cache.put'\n    webidl.argumentLengthCheck(arguments, 2, prefix)\n\n    request = webidl.converters.RequestInfo(request, prefix, 'request')\n    response = webidl.converters.Response(response, prefix, 'response')\n\n    // 1.\n    let innerRequest = null\n\n    // 2.\n    if (request instanceof Request) {\n      innerRequest = request[kState]\n    } else { // 3.\n      innerRequest = new Request(request)[kState]\n    }\n\n    // 4.\n    if (!urlIsHttpHttpsScheme(innerRequest.url) || innerRequest.method !== 'GET') {\n      throw webidl.errors.exception({\n        header: prefix,\n        message: 'Expected an http/s scheme when method is not GET'\n      })\n    }\n\n    // 5.\n    const innerResponse = response[kState]\n\n    // 6.\n    if (innerResponse.status === 206) {\n      throw webidl.errors.exception({\n        header: prefix,\n        message: 'Got 206 status'\n      })\n    }\n\n    // 7.\n    if (innerResponse.headersList.contains('vary')) {\n      // 7.1.\n      const fieldValues = getFieldValues(innerResponse.headersList.get('vary'))\n\n      // 7.2.\n      for (const fieldValue of fieldValues) {\n        // 7.2.1\n        if (fieldValue === '*') {\n          throw webidl.errors.exception({\n            header: prefix,\n            message: 'Got * vary field value'\n          })\n        }\n      }\n    }\n\n    // 8.\n    if (innerResponse.body && (isDisturbed(innerResponse.body.stream) || innerResponse.body.stream.locked)) {\n      throw webidl.errors.exception({\n        header: prefix,\n        message: 'Response body is locked or disturbed'\n      })\n    }\n\n    // 9.\n    const clonedResponse = cloneResponse(innerResponse)\n\n    // 10.\n    const bodyReadPromise = createDeferredPromise()\n\n    // 11.\n    if (innerResponse.body != null) {\n      // 11.1\n      const stream = innerResponse.body.stream\n\n      // 11.2\n      const reader = stream.getReader()\n\n      // 11.3\n      readAllBytes(reader).then(bodyReadPromise.resolve, bodyReadPromise.reject)\n    } else {\n      bodyReadPromise.resolve(undefined)\n    }\n\n    // 12.\n    /** @type {CacheBatchOperation[]} */\n    const operations = []\n\n    // 13.\n    /** @type {CacheBatchOperation} */\n    const operation = {\n      type: 'put', // 14.\n      request: innerRequest, // 15.\n      response: clonedResponse // 16.\n    }\n\n    // 17.\n    operations.push(operation)\n\n    // 19.\n    const bytes = await bodyReadPromise.promise\n\n    if (clonedResponse.body != null) {\n      clonedResponse.body.source = bytes\n    }\n\n    // 19.1\n    const cacheJobPromise = createDeferredPromise()\n\n    // 19.2.1\n    let errorData = null\n\n    // 19.2.2\n    try {\n      this.#batchCacheOperations(operations)\n    } catch (e) {\n      errorData = e\n    }\n\n    // 19.2.3\n    queueMicrotask(() => {\n      // 19.2.3.1\n      if (errorData === null) {\n        cacheJobPromise.resolve()\n      } else { // 19.2.3.2\n        cacheJobPromise.reject(errorData)\n      }\n    })\n\n    return cacheJobPromise.promise\n  }\n\n  async delete (request, options = {}) {\n    webidl.brandCheck(this, Cache)\n\n    const prefix = 'Cache.delete'\n    webidl.argumentLengthCheck(arguments, 1, prefix)\n\n    request = webidl.converters.RequestInfo(request, prefix, 'request')\n    options = webidl.converters.CacheQueryOptions(options, prefix, 'options')\n\n    /**\n     * @type {Request}\n     */\n    let r = null\n\n    if (request instanceof Request) {\n      r = request[kState]\n\n      if (r.method !== 'GET' && !options.ignoreMethod) {\n        return false\n      }\n    } else {\n      assert(typeof request === 'string')\n\n      r = new Request(request)[kState]\n    }\n\n    /** @type {CacheBatchOperation[]} */\n    const operations = []\n\n    /** @type {CacheBatchOperation} */\n    const operation = {\n      type: 'delete',\n      request: r,\n      options\n    }\n\n    operations.push(operation)\n\n    const cacheJobPromise = createDeferredPromise()\n\n    let errorData = null\n    let requestResponses\n\n    try {\n      requestResponses = this.#batchCacheOperations(operations)\n    } catch (e) {\n      errorData = e\n    }\n\n    queueMicrotask(() => {\n      if (errorData === null) {\n        cacheJobPromise.resolve(!!requestResponses?.length)\n      } else {\n        cacheJobPromise.reject(errorData)\n      }\n    })\n\n    return cacheJobPromise.promise\n  }\n\n  /**\n   * @see https://w3c.github.io/ServiceWorker/#dom-cache-keys\n   * @param {any} request\n   * @param {import('../../types/cache').CacheQueryOptions} options\n   * @returns {Promise<readonly Request[]>}\n   */\n  async keys (request = undefined, options = {}) {\n    webidl.brandCheck(this, Cache)\n\n    const prefix = 'Cache.keys'\n\n    if (request !== undefined) request = webidl.converters.RequestInfo(request, prefix, 'request')\n    options = webidl.converters.CacheQueryOptions(options, prefix, 'options')\n\n    // 1.\n    let r = null\n\n    // 2.\n    if (request !== undefined) {\n      // 2.1\n      if (request instanceof Request) {\n        // 2.1.1\n        r = request[kState]\n\n        // 2.1.2\n        if (r.method !== 'GET' && !options.ignoreMethod) {\n          return []\n        }\n      } else if (typeof request === 'string') { // 2.2\n        r = new Request(request)[kState]\n      }\n    }\n\n    // 4.\n    const promise = createDeferredPromise()\n\n    // 5.\n    // 5.1\n    const requests = []\n\n    // 5.2\n    if (request === undefined) {\n      // 5.2.1\n      for (const requestResponse of this.#relevantRequestResponseList) {\n        // 5.2.1.1\n        requests.push(requestResponse[0])\n      }\n    } else { // 5.3\n      // 5.3.1\n      const requestResponses = this.#queryCache(r, options)\n\n      // 5.3.2\n      for (const requestResponse of requestResponses) {\n        // 5.3.2.1\n        requests.push(requestResponse[0])\n      }\n    }\n\n    // 5.4\n    queueMicrotask(() => {\n      // 5.4.1\n      const requestList = []\n\n      // 5.4.2\n      for (const request of requests) {\n        const requestObject = fromInnerRequest(\n          request,\n          new AbortController().signal,\n          'immutable'\n        )\n        // 5.4.2.1\n        requestList.push(requestObject)\n      }\n\n      // 5.4.3\n      promise.resolve(Object.freeze(requestList))\n    })\n\n    return promise.promise\n  }\n\n  /**\n   * @see https://w3c.github.io/ServiceWorker/#batch-cache-operations-algorithm\n   * @param {CacheBatchOperation[]} operations\n   * @returns {requestResponseList}\n   */\n  #batchCacheOperations (operations) {\n    // 1.\n    const cache = this.#relevantRequestResponseList\n\n    // 2.\n    const backupCache = [...cache]\n\n    // 3.\n    const addedItems = []\n\n    // 4.1\n    const resultList = []\n\n    try {\n      // 4.2\n      for (const operation of operations) {\n        // 4.2.1\n        if (operation.type !== 'delete' && operation.type !== 'put') {\n          throw webidl.errors.exception({\n            header: 'Cache.#batchCacheOperations',\n            message: 'operation type does not match \"delete\" or \"put\"'\n          })\n        }\n\n        // 4.2.2\n        if (operation.type === 'delete' && operation.response != null) {\n          throw webidl.errors.exception({\n            header: 'Cache.#batchCacheOperations',\n            message: 'delete operation should not have an associated response'\n          })\n        }\n\n        // 4.2.3\n        if (this.#queryCache(operation.request, operation.options, addedItems).length) {\n          throw new DOMException('???', 'InvalidStateError')\n        }\n\n        // 4.2.4\n        let requestResponses\n\n        // 4.2.5\n        if (operation.type === 'delete') {\n          // 4.2.5.1\n          requestResponses = this.#queryCache(operation.request, operation.options)\n\n          // TODO: the spec is wrong, this is needed to pass WPTs\n          if (requestResponses.length === 0) {\n            return []\n          }\n\n          // 4.2.5.2\n          for (const requestResponse of requestResponses) {\n            const idx = cache.indexOf(requestResponse)\n            assert(idx !== -1)\n\n            // 4.2.5.2.1\n            cache.splice(idx, 1)\n          }\n        } else if (operation.type === 'put') { // 4.2.6\n          // 4.2.6.1\n          if (operation.response == null) {\n            throw webidl.errors.exception({\n              header: 'Cache.#batchCacheOperations',\n              message: 'put operation should have an associated response'\n            })\n          }\n\n          // 4.2.6.2\n          const r = operation.request\n\n          // 4.2.6.3\n          if (!urlIsHttpHttpsScheme(r.url)) {\n            throw webidl.errors.exception({\n              header: 'Cache.#batchCacheOperations',\n              message: 'expected http or https scheme'\n            })\n          }\n\n          // 4.2.6.4\n          if (r.method !== 'GET') {\n            throw webidl.errors.exception({\n              header: 'Cache.#batchCacheOperations',\n              message: 'not get method'\n            })\n          }\n\n          // 4.2.6.5\n          if (operation.options != null) {\n            throw webidl.errors.exception({\n              header: 'Cache.#batchCacheOperations',\n              message: 'options must not be defined'\n            })\n          }\n\n          // 4.2.6.6\n          requestResponses = this.#queryCache(operation.request)\n\n          // 4.2.6.7\n          for (const requestResponse of requestResponses) {\n            const idx = cache.indexOf(requestResponse)\n            assert(idx !== -1)\n\n            // 4.2.6.7.1\n            cache.splice(idx, 1)\n          }\n\n          // 4.2.6.8\n          cache.push([operation.request, operation.response])\n\n          // 4.2.6.10\n          addedItems.push([operation.request, operation.response])\n        }\n\n        // 4.2.7\n        resultList.push([operation.request, operation.response])\n      }\n\n      // 4.3\n      return resultList\n    } catch (e) { // 5.\n      // 5.1\n      this.#relevantRequestResponseList.length = 0\n\n      // 5.2\n      this.#relevantRequestResponseList = backupCache\n\n      // 5.3\n      throw e\n    }\n  }\n\n  /**\n   * @see https://w3c.github.io/ServiceWorker/#query-cache\n   * @param {any} requestQuery\n   * @param {import('../../types/cache').CacheQueryOptions} options\n   * @param {requestResponseList} targetStorage\n   * @returns {requestResponseList}\n   */\n  #queryCache (requestQuery, options, targetStorage) {\n    /** @type {requestResponseList} */\n    const resultList = []\n\n    const storage = targetStorage ?? this.#relevantRequestResponseList\n\n    for (const requestResponse of storage) {\n      const [cachedRequest, cachedResponse] = requestResponse\n      if (this.#requestMatchesCachedItem(requestQuery, cachedRequest, cachedResponse, options)) {\n        resultList.push(requestResponse)\n      }\n    }\n\n    return resultList\n  }\n\n  /**\n   * @see https://w3c.github.io/ServiceWorker/#request-matches-cached-item-algorithm\n   * @param {any} requestQuery\n   * @param {any} request\n   * @param {any | null} response\n   * @param {import('../../types/cache').CacheQueryOptions | undefined} options\n   * @returns {boolean}\n   */\n  #requestMatchesCachedItem (requestQuery, request, response = null, options) {\n    // if (options?.ignoreMethod === false && request.method === 'GET') {\n    //   return false\n    // }\n\n    const queryURL = new URL(requestQuery.url)\n\n    const cachedURL = new URL(request.url)\n\n    if (options?.ignoreSearch) {\n      cachedURL.search = ''\n\n      queryURL.search = ''\n    }\n\n    if (!urlEquals(queryURL, cachedURL, true)) {\n      return false\n    }\n\n    if (\n      response == null ||\n      options?.ignoreVary ||\n      !response.headersList.contains('vary')\n    ) {\n      return true\n    }\n\n    const fieldValues = getFieldValues(response.headersList.get('vary'))\n\n    for (const fieldValue of fieldValues) {\n      if (fieldValue === '*') {\n        return false\n      }\n\n      const requestValue = request.headersList.get(fieldValue)\n      const queryValue = requestQuery.headersList.get(fieldValue)\n\n      // If one has the header and the other doesn't, or one has\n      // a different value than the other, return false\n      if (requestValue !== queryValue) {\n        return false\n      }\n    }\n\n    return true\n  }\n\n  #internalMatchAll (request, options, maxResponses = Infinity) {\n    // 1.\n    let r = null\n\n    // 2.\n    if (request !== undefined) {\n      if (request instanceof Request) {\n        // 2.1.1\n        r = request[kState]\n\n        // 2.1.2\n        if (r.method !== 'GET' && !options.ignoreMethod) {\n          return []\n        }\n      } else if (typeof request === 'string') {\n        // 2.2.1\n        r = new Request(request)[kState]\n      }\n    }\n\n    // 5.\n    // 5.1\n    const responses = []\n\n    // 5.2\n    if (request === undefined) {\n      // 5.2.1\n      for (const requestResponse of this.#relevantRequestResponseList) {\n        responses.push(requestResponse[1])\n      }\n    } else { // 5.3\n      // 5.3.1\n      const requestResponses = this.#queryCache(r, options)\n\n      // 5.3.2\n      for (const requestResponse of requestResponses) {\n        responses.push(requestResponse[1])\n      }\n    }\n\n    // 5.4\n    // We don't implement CORs so we don't need to loop over the responses, yay!\n\n    // 5.5.1\n    const responseList = []\n\n    // 5.5.2\n    for (const response of responses) {\n      // 5.5.2.1\n      const responseObject = fromInnerResponse(response, 'immutable')\n\n      responseList.push(responseObject.clone())\n\n      if (responseList.length >= maxResponses) {\n        break\n      }\n    }\n\n    // 6.\n    return Object.freeze(responseList)\n  }\n}\n\nObject.defineProperties(Cache.prototype, {\n  [Symbol.toStringTag]: {\n    value: 'Cache',\n    configurable: true\n  },\n  match: kEnumerableProperty,\n  matchAll: kEnumerableProperty,\n  add: kEnumerableProperty,\n  addAll: kEnumerableProperty,\n  put: kEnumerableProperty,\n  delete: kEnumerableProperty,\n  keys: kEnumerableProperty\n})\n\nconst cacheQueryOptionConverters = [\n  {\n    key: 'ignoreSearch',\n    converter: webidl.converters.boolean,\n    defaultValue: () => false\n  },\n  {\n    key: 'ignoreMethod',\n    converter: webidl.converters.boolean,\n    defaultValue: () => false\n  },\n  {\n    key: 'ignoreVary',\n    converter: webidl.converters.boolean,\n    defaultValue: () => false\n  }\n]\n\nwebidl.converters.CacheQueryOptions = webidl.dictionaryConverter(cacheQueryOptionConverters)\n\nwebidl.converters.MultiCacheQueryOptions = webidl.dictionaryConverter([\n  ...cacheQueryOptionConverters,\n  {\n    key: 'cacheName',\n    converter: webidl.converters.DOMString\n  }\n])\n\nwebidl.converters.Response = webidl.interfaceConverter(Response)\n\nwebidl.converters['sequence<RequestInfo>'] = webidl.sequenceConverter(\n  webidl.converters.RequestInfo\n)\n\nmodule.exports = {\n  Cache\n}\n", "'use strict'\n\nconst { kConstruct } = require('./symbols')\nconst { Cache } = require('./cache')\nconst { webidl } = require('../fetch/webidl')\nconst { kEnumerableProperty } = require('../../core/util')\n\nclass CacheStorage {\n  /**\n   * @see https://w3c.github.io/ServiceWorker/#dfn-relevant-name-to-cache-map\n   * @type {Map<string, import('./cache').requestResponseList}\n   */\n  #caches = new Map()\n\n  constructor () {\n    if (arguments[0] !== kConstruct) {\n      webidl.illegalConstructor()\n    }\n  }\n\n  async match (request, options = {}) {\n    webidl.brandCheck(this, CacheStorage)\n    webidl.argumentLengthCheck(arguments, 1, 'CacheStorage.match')\n\n    request = webidl.converters.RequestInfo(request)\n    options = webidl.converters.MultiCacheQueryOptions(options)\n\n    // 1.\n    if (options.cacheName != null) {\n      // 1.1.1.1\n      if (this.#caches.has(options.cacheName)) {\n        // 1.1.1.1.1\n        const cacheList = this.#caches.get(options.cacheName)\n        const cache = new Cache(kConstruct, cacheList)\n\n        return await cache.match(request, options)\n      }\n    } else { // 2.\n      // 2.2\n      for (const cacheList of this.#caches.values()) {\n        const cache = new Cache(kConstruct, cacheList)\n\n        // 2.2.1.2\n        const response = await cache.match(request, options)\n\n        if (response !== undefined) {\n          return response\n        }\n      }\n    }\n  }\n\n  /**\n   * @see https://w3c.github.io/ServiceWorker/#cache-storage-has\n   * @param {string} cacheName\n   * @returns {Promise<boolean>}\n   */\n  async has (cacheName) {\n    webidl.brandCheck(this, CacheStorage)\n\n    const prefix = 'CacheStorage.has'\n    webidl.argumentLengthCheck(arguments, 1, prefix)\n\n    cacheName = webidl.converters.DOMString(cacheName, prefix, 'cacheName')\n\n    // 2.1.1\n    // 2.2\n    return this.#caches.has(cacheName)\n  }\n\n  /**\n   * @see https://w3c.github.io/ServiceWorker/#dom-cachestorage-open\n   * @param {string} cacheName\n   * @returns {Promise<Cache>}\n   */\n  async open (cacheName) {\n    webidl.brandCheck(this, CacheStorage)\n\n    const prefix = 'CacheStorage.open'\n    webidl.argumentLengthCheck(arguments, 1, prefix)\n\n    cacheName = webidl.converters.DOMString(cacheName, prefix, 'cacheName')\n\n    // 2.1\n    if (this.#caches.has(cacheName)) {\n      // await caches.open('v1') !== await caches.open('v1')\n\n      // 2.1.1\n      const cache = this.#caches.get(cacheName)\n\n      // 2.1.1.1\n      return new Cache(kConstruct, cache)\n    }\n\n    // 2.2\n    const cache = []\n\n    // 2.3\n    this.#caches.set(cacheName, cache)\n\n    // 2.4\n    return new Cache(kConstruct, cache)\n  }\n\n  /**\n   * @see https://w3c.github.io/ServiceWorker/#cache-storage-delete\n   * @param {string} cacheName\n   * @returns {Promise<boolean>}\n   */\n  async delete (cacheName) {\n    webidl.brandCheck(this, CacheStorage)\n\n    const prefix = 'CacheStorage.delete'\n    webidl.argumentLengthCheck(arguments, 1, prefix)\n\n    cacheName = webidl.converters.DOMString(cacheName, prefix, 'cacheName')\n\n    return this.#caches.delete(cacheName)\n  }\n\n  /**\n   * @see https://w3c.github.io/ServiceWorker/#cache-storage-keys\n   * @returns {Promise<string[]>}\n   */\n  async keys () {\n    webidl.brandCheck(this, CacheStorage)\n\n    // 2.1\n    const keys = this.#caches.keys()\n\n    // 2.2\n    return [...keys]\n  }\n}\n\nObject.defineProperties(CacheStorage.prototype, {\n  [Symbol.toStringTag]: {\n    value: 'CacheStorage',\n    configurable: true\n  },\n  match: kEnumerableProperty,\n  has: kEnumerableProperty,\n  open: kEnumerableProperty,\n  delete: kEnumerableProperty,\n  keys: kEnumerableProperty\n})\n\nmodule.exports = {\n  CacheStorage\n}\n", "'use strict'\n\n// https://wicg.github.io/cookie-store/#cookie-maximum-attribute-value-size\nconst maxAttributeValueSize = 1024\n\n// https://wicg.github.io/cookie-store/#cookie-maximum-name-value-pair-size\nconst maxNameValuePairSize = 4096\n\nmodule.exports = {\n  maxAttributeValueSize,\n  maxNameValuePairSize\n}\n", "'use strict'\n\n/**\n * @param {string} value\n * @returns {boolean}\n */\nfunction isCTLExcludingHtab (value) {\n  for (let i = 0; i < value.length; ++i) {\n    const code = value.charCodeAt(i)\n\n    if (\n      (code >= 0x00 && code <= 0x08) ||\n      (code >= 0x0A && code <= 0x1F) ||\n      code === 0x7F\n    ) {\n      return true\n    }\n  }\n  return false\n}\n\n/**\n CHAR           = <any US-ASCII character (octets 0 - 127)>\n token          = 1*<any CHAR except CTLs or separators>\n separators     = \"(\" | \")\" | \"<\" | \">\" | \"@\"\n                | \",\" | \";\" | \":\" | \"\\\" | <\">\n                | \"/\" | \"[\" | \"]\" | \"?\" | \"=\"\n                | \"{\" | \"}\" | SP | HT\n * @param {string} name\n */\nfunction validateCookieName (name) {\n  for (let i = 0; i < name.length; ++i) {\n    const code = name.charCodeAt(i)\n\n    if (\n      code < 0x21 || // exclude CTLs (0-31), SP and HT\n      code > 0x7E || // exclude non-ascii and DEL\n      code === 0x22 || // \"\n      code === 0x28 || // (\n      code === 0x29 || // )\n      code === 0x3C || // <\n      code === 0x3E || // >\n      code === 0x40 || // @\n      code === 0x2C || // ,\n      code === 0x3B || // ;\n      code === 0x3A || // :\n      code === 0x5C || // \\\n      code === 0x2F || // /\n      code === 0x5B || // [\n      code === 0x5D || // ]\n      code === 0x3F || // ?\n      code === 0x3D || // =\n      code === 0x7B || // {\n      code === 0x7D // }\n    ) {\n      throw new Error('Invalid cookie name')\n    }\n  }\n}\n\n/**\n cookie-value      = *cookie-octet / ( DQUOTE *cookie-octet DQUOTE )\n cookie-octet      = %x21 / %x23-2B / %x2D-3A / %x3C-5B / %x5D-7E\n                       ; US-ASCII characters excluding CTLs,\n                       ; whitespace DQUOTE, comma, semicolon,\n                       ; and backslash\n * @param {string} value\n */\nfunction validateCookieValue (value) {\n  let len = value.length\n  let i = 0\n\n  // if the value is wrapped in DQUOTE\n  if (value[0] === '\"') {\n    if (len === 1 || value[len - 1] !== '\"') {\n      throw new Error('Invalid cookie value')\n    }\n    --len\n    ++i\n  }\n\n  while (i < len) {\n    const code = value.charCodeAt(i++)\n\n    if (\n      code < 0x21 || // exclude CTLs (0-31)\n      code > 0x7E || // non-ascii and DEL (127)\n      code === 0x22 || // \"\n      code === 0x2C || // ,\n      code === 0x3B || // ;\n      code === 0x5C // \\\n    ) {\n      throw new Error('Invalid cookie value')\n    }\n  }\n}\n\n/**\n * path-value        = <any CHAR except CTLs or \";\">\n * @param {string} path\n */\nfunction validateCookiePath (path) {\n  for (let i = 0; i < path.length; ++i) {\n    const code = path.charCodeAt(i)\n\n    if (\n      code < 0x20 || // exclude CTLs (0-31)\n      code === 0x7F || // DEL\n      code === 0x3B // ;\n    ) {\n      throw new Error('Invalid cookie path')\n    }\n  }\n}\n\n/**\n * I have no idea why these values aren't allowed to be honest,\n * but Deno tests these. - Khafra\n * @param {string} domain\n */\nfunction validateCookieDomain (domain) {\n  if (\n    domain.startsWith('-') ||\n    domain.endsWith('.') ||\n    domain.endsWith('-')\n  ) {\n    throw new Error('Invalid cookie domain')\n  }\n}\n\nconst IMFDays = [\n  'Sun', 'Mon', 'Tue', 'Wed',\n  'Thu', 'Fri', 'Sat'\n]\n\nconst IMFMonths = [\n  'Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun',\n  'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'\n]\n\nconst IMFPaddedNumbers = Array(61).fill(0).map((_, i) => i.toString().padStart(2, '0'))\n\n/**\n * @see https://www.rfc-editor.org/rfc/rfc7231#section-7.1.1.1\n * @param {number|Date} date\n  IMF-fixdate  = day-name \",\" SP date1 SP time-of-day SP GMT\n  ; fixed length/zone/capitalization subset of the format\n  ; see Section 3.3 of [RFC5322]\n\n  day-name     = %x4D.6F.6E ; \"Mon\", case-sensitive\n              / %x54.75.65 ; \"Tue\", case-sensitive\n              / %x57.65.64 ; \"Wed\", case-sensitive\n              / %x54.68.75 ; \"Thu\", case-sensitive\n              / %x46.72.69 ; \"Fri\", case-sensitive\n              / %x53.61.74 ; \"Sat\", case-sensitive\n              / %x53.75.6E ; \"Sun\", case-sensitive\n  date1        = day SP month SP year\n                  ; e.g., 02 Jun 1982\n\n  day          = 2DIGIT\n  month        = %x4A.61.6E ; \"Jan\", case-sensitive\n              / %x46.65.62 ; \"Feb\", case-sensitive\n              / %x4D.61.72 ; \"Mar\", case-sensitive\n              / %x41.70.72 ; \"Apr\", case-sensitive\n              / %x4D.61.79 ; \"May\", case-sensitive\n              / %x4A.75.6E ; \"Jun\", case-sensitive\n              / %x4A.75.6C ; \"Jul\", case-sensitive\n              / %x41.75.67 ; \"Aug\", case-sensitive\n              / %x53.65.70 ; \"Sep\", case-sensitive\n              / %x4F.63.74 ; \"Oct\", case-sensitive\n              / %x4E.6F.76 ; \"Nov\", case-sensitive\n              / %x44.65.63 ; \"Dec\", case-sensitive\n  year         = 4DIGIT\n\n  GMT          = %x47.4D.54 ; \"GMT\", case-sensitive\n\n  time-of-day  = hour \":\" minute \":\" second\n              ; 00:00:00 - 23:59:60 (leap second)\n\n  hour         = 2DIGIT\n  minute       = 2DIGIT\n  second       = 2DIGIT\n */\nfunction toIMFDate (date) {\n  if (typeof date === 'number') {\n    date = new Date(date)\n  }\n\n  return `${IMFDays[date.getUTCDay()]}, ${IMFPaddedNumbers[date.getUTCDate()]} ${IMFMonths[date.getUTCMonth()]} ${date.getUTCFullYear()} ${IMFPaddedNumbers[date.getUTCHours()]}:${IMFPaddedNumbers[date.getUTCMinutes()]}:${IMFPaddedNumbers[date.getUTCSeconds()]} GMT`\n}\n\n/**\n max-age-av        = \"Max-Age=\" non-zero-digit *DIGIT\n                       ; In practice, both expires-av and max-age-av\n                       ; are limited to dates representable by the\n                       ; user agent.\n * @param {number} maxAge\n */\nfunction validateCookieMaxAge (maxAge) {\n  if (maxAge < 0) {\n    throw new Error('Invalid cookie max-age')\n  }\n}\n\n/**\n * @see https://www.rfc-editor.org/rfc/rfc6265#section-4.1.1\n * @param {import('./index').Cookie} cookie\n */\nfunction stringify (cookie) {\n  if (cookie.name.length === 0) {\n    return null\n  }\n\n  validateCookieName(cookie.name)\n  validateCookieValue(cookie.value)\n\n  const out = [`${cookie.name}=${cookie.value}`]\n\n  // https://datatracker.ietf.org/doc/html/draft-ietf-httpbis-cookie-prefixes-00#section-3.1\n  // https://datatracker.ietf.org/doc/html/draft-ietf-httpbis-cookie-prefixes-00#section-3.2\n  if (cookie.name.startsWith('__Secure-')) {\n    cookie.secure = true\n  }\n\n  if (cookie.name.startsWith('__Host-')) {\n    cookie.secure = true\n    cookie.domain = null\n    cookie.path = '/'\n  }\n\n  if (cookie.secure) {\n    out.push('Secure')\n  }\n\n  if (cookie.httpOnly) {\n    out.push('HttpOnly')\n  }\n\n  if (typeof cookie.maxAge === 'number') {\n    validateCookieMaxAge(cookie.maxAge)\n    out.push(`Max-Age=${cookie.maxAge}`)\n  }\n\n  if (cookie.domain) {\n    validateCookieDomain(cookie.domain)\n    out.push(`Domain=${cookie.domain}`)\n  }\n\n  if (cookie.path) {\n    validateCookiePath(cookie.path)\n    out.push(`Path=${cookie.path}`)\n  }\n\n  if (cookie.expires && cookie.expires.toString() !== 'Invalid Date') {\n    out.push(`Expires=${toIMFDate(cookie.expires)}`)\n  }\n\n  if (cookie.sameSite) {\n    out.push(`SameSite=${cookie.sameSite}`)\n  }\n\n  for (const part of cookie.unparsed) {\n    if (!part.includes('=')) {\n      throw new Error('Invalid unparsed')\n    }\n\n    const [key, ...value] = part.split('=')\n\n    out.push(`${key.trim()}=${value.join('=')}`)\n  }\n\n  return out.join('; ')\n}\n\nmodule.exports = {\n  isCTLExcludingHtab,\n  validateCookieName,\n  validateCookiePath,\n  validateCookieValue,\n  toIMFDate,\n  stringify\n}\n", "'use strict'\n\nconst { maxNameValuePairSize, maxAttributeValueSize } = require('./constants')\nconst { isCTLExcludingHtab } = require('./util')\nconst { collectASequenceOfCodePointsFast } = require('../fetch/data-url')\nconst assert = require('node:assert')\n\n/**\n * @description Parses the field-value attributes of a set-cookie header string.\n * @see https://datatracker.ietf.org/doc/html/draft-ietf-httpbis-rfc6265bis#section-5.4\n * @param {string} header\n * @returns if the header is invalid, null will be returned\n */\nfunction parseSetCookie (header) {\n  // 1. If the set-cookie-string contains a %x00-08 / %x0A-1F / %x7F\n  //    character (CTL characters excluding HTAB): Abort these steps and\n  //    ignore the set-cookie-string entirely.\n  if (isCTLExcludingHtab(header)) {\n    return null\n  }\n\n  let nameValuePair = ''\n  let unparsedAttributes = ''\n  let name = ''\n  let value = ''\n\n  // 2. If the set-cookie-string contains a %x3B (\";\") character:\n  if (header.includes(';')) {\n    // 1. The name-value-pair string consists of the characters up to,\n    //    but not including, the first %x3B (\";\"), and the unparsed-\n    //    attributes consist of the remainder of the set-cookie-string\n    //    (including the %x3B (\";\") in question).\n    const position = { position: 0 }\n\n    nameValuePair = collectASequenceOfCodePointsFast(';', header, position)\n    unparsedAttributes = header.slice(position.position)\n  } else {\n    // Otherwise:\n\n    // 1. The name-value-pair string consists of all the characters\n    //    contained in the set-cookie-string, and the unparsed-\n    //    attributes is the empty string.\n    nameValuePair = header\n  }\n\n  // 3. If the name-value-pair string lacks a %x3D (\"=\") character, then\n  //    the name string is empty, and the value string is the value of\n  //    name-value-pair.\n  if (!nameValuePair.includes('=')) {\n    value = nameValuePair\n  } else {\n    //    Otherwise, the name string consists of the characters up to, but\n    //    not including, the first %x3D (\"=\") character, and the (possibly\n    //    empty) value string consists of the characters after the first\n    //    %x3D (\"=\") character.\n    const position = { position: 0 }\n    name = collectASequenceOfCodePointsFast(\n      '=',\n      nameValuePair,\n      position\n    )\n    value = nameValuePair.slice(position.position + 1)\n  }\n\n  // 4. Remove any leading or trailing WSP characters from the name\n  //    string and the value string.\n  name = name.trim()\n  value = value.trim()\n\n  // 5. If the sum of the lengths of the name string and the value string\n  //    is more than 4096 octets, abort these steps and ignore the set-\n  //    cookie-string entirely.\n  if (name.length + value.length > maxNameValuePairSize) {\n    return null\n  }\n\n  // 6. The cookie-name is the name string, and the cookie-value is the\n  //    value string.\n  return {\n    name, value, ...parseUnparsedAttributes(unparsedAttributes)\n  }\n}\n\n/**\n * Parses the remaining attributes of a set-cookie header\n * @see https://datatracker.ietf.org/doc/html/draft-ietf-httpbis-rfc6265bis#section-5.4\n * @param {string} unparsedAttributes\n * @param {[Object.<string, unknown>]={}} cookieAttributeList\n */\nfunction parseUnparsedAttributes (unparsedAttributes, cookieAttributeList = {}) {\n  // 1. If the unparsed-attributes string is empty, skip the rest of\n  //    these steps.\n  if (unparsedAttributes.length === 0) {\n    return cookieAttributeList\n  }\n\n  // 2. Discard the first character of the unparsed-attributes (which\n  //    will be a %x3B (\";\") character).\n  assert(unparsedAttributes[0] === ';')\n  unparsedAttributes = unparsedAttributes.slice(1)\n\n  let cookieAv = ''\n\n  // 3. If the remaining unparsed-attributes contains a %x3B (\";\")\n  //    character:\n  if (unparsedAttributes.includes(';')) {\n    // 1. Consume the characters of the unparsed-attributes up to, but\n    //    not including, the first %x3B (\";\") character.\n    cookieAv = collectASequenceOfCodePointsFast(\n      ';',\n      unparsedAttributes,\n      { position: 0 }\n    )\n    unparsedAttributes = unparsedAttributes.slice(cookieAv.length)\n  } else {\n    // Otherwise:\n\n    // 1. Consume the remainder of the unparsed-attributes.\n    cookieAv = unparsedAttributes\n    unparsedAttributes = ''\n  }\n\n  // Let the cookie-av string be the characters consumed in this step.\n\n  let attributeName = ''\n  let attributeValue = ''\n\n  // 4. If the cookie-av string contains a %x3D (\"=\") character:\n  if (cookieAv.includes('=')) {\n    // 1. The (possibly empty) attribute-name string consists of the\n    //    characters up to, but not including, the first %x3D (\"=\")\n    //    character, and the (possibly empty) attribute-value string\n    //    consists of the characters after the first %x3D (\"=\")\n    //    character.\n    const position = { position: 0 }\n\n    attributeName = collectASequenceOfCodePointsFast(\n      '=',\n      cookieAv,\n      position\n    )\n    attributeValue = cookieAv.slice(position.position + 1)\n  } else {\n    // Otherwise:\n\n    // 1. The attribute-name string consists of the entire cookie-av\n    //    string, and the attribute-value string is empty.\n    attributeName = cookieAv\n  }\n\n  // 5. Remove any leading or trailing WSP characters from the attribute-\n  //    name string and the attribute-value string.\n  attributeName = attributeName.trim()\n  attributeValue = attributeValue.trim()\n\n  // 6. If the attribute-value is longer than 1024 octets, ignore the\n  //    cookie-av string and return to Step 1 of this algorithm.\n  if (attributeValue.length > maxAttributeValueSize) {\n    return parseUnparsedAttributes(unparsedAttributes, cookieAttributeList)\n  }\n\n  // 7. Process the attribute-name and attribute-value according to the\n  //    requirements in the following subsections.  (Notice that\n  //    attributes with unrecognized attribute-names are ignored.)\n  const attributeNameLowercase = attributeName.toLowerCase()\n\n  // https://datatracker.ietf.org/doc/html/draft-ietf-httpbis-rfc6265bis#section-5.4.1\n  // If the attribute-name case-insensitively matches the string\n  // \"Expires\", the user agent MUST process the cookie-av as follows.\n  if (attributeNameLowercase === 'expires') {\n    // 1. Let the expiry-time be the result of parsing the attribute-value\n    //    as cookie-date (see Section 5.1.1).\n    const expiryTime = new Date(attributeValue)\n\n    // 2. If the attribute-value failed to parse as a cookie date, ignore\n    //    the cookie-av.\n\n    cookieAttributeList.expires = expiryTime\n  } else if (attributeNameLowercase === 'max-age') {\n    // https://datatracker.ietf.org/doc/html/draft-ietf-httpbis-rfc6265bis#section-5.4.2\n    // If the attribute-name case-insensitively matches the string \"Max-\n    // Age\", the user agent MUST process the cookie-av as follows.\n\n    // 1. If the first character of the attribute-value is not a DIGIT or a\n    //    \"-\" character, ignore the cookie-av.\n    const charCode = attributeValue.charCodeAt(0)\n\n    if ((charCode < 48 || charCode > 57) && attributeValue[0] !== '-') {\n      return parseUnparsedAttributes(unparsedAttributes, cookieAttributeList)\n    }\n\n    // 2. If the remainder of attribute-value contains a non-DIGIT\n    //    character, ignore the cookie-av.\n    if (!/^\\d+$/.test(attributeValue)) {\n      return parseUnparsedAttributes(unparsedAttributes, cookieAttributeList)\n    }\n\n    // 3. Let delta-seconds be the attribute-value converted to an integer.\n    const deltaSeconds = Number(attributeValue)\n\n    // 4. Let cookie-age-limit be the maximum age of the cookie (which\n    //    SHOULD be 400 days or less, see Section 4.1.2.2).\n\n    // 5. Set delta-seconds to the smaller of its present value and cookie-\n    //    age-limit.\n    // deltaSeconds = Math.min(deltaSeconds * 1000, maxExpiresMs)\n\n    // 6. If delta-seconds is less than or equal to zero (0), let expiry-\n    //    time be the earliest representable date and time.  Otherwise, let\n    //    the expiry-time be the current date and time plus delta-seconds\n    //    seconds.\n    // const expiryTime = deltaSeconds <= 0 ? Date.now() : Date.now() + deltaSeconds\n\n    // 7. Append an attribute to the cookie-attribute-list with an\n    //    attribute-name of Max-Age and an attribute-value of expiry-time.\n    cookieAttributeList.maxAge = deltaSeconds\n  } else if (attributeNameLowercase === 'domain') {\n    // https://datatracker.ietf.org/doc/html/draft-ietf-httpbis-rfc6265bis#section-5.4.3\n    // If the attribute-name case-insensitively matches the string \"Domain\",\n    // the user agent MUST process the cookie-av as follows.\n\n    // 1. Let cookie-domain be the attribute-value.\n    let cookieDomain = attributeValue\n\n    // 2. If cookie-domain starts with %x2E (\".\"), let cookie-domain be\n    //    cookie-domain without its leading %x2E (\".\").\n    if (cookieDomain[0] === '.') {\n      cookieDomain = cookieDomain.slice(1)\n    }\n\n    // 3. Convert the cookie-domain to lower case.\n    cookieDomain = cookieDomain.toLowerCase()\n\n    // 4. Append an attribute to the cookie-attribute-list with an\n    //    attribute-name of Domain and an attribute-value of cookie-domain.\n    cookieAttributeList.domain = cookieDomain\n  } else if (attributeNameLowercase === 'path') {\n    // https://datatracker.ietf.org/doc/html/draft-ietf-httpbis-rfc6265bis#section-5.4.4\n    // If the attribute-name case-insensitively matches the string \"Path\",\n    // the user agent MUST process the cookie-av as follows.\n\n    // 1. If the attribute-value is empty or if the first character of the\n    //    attribute-value is not %x2F (\"/\"):\n    let cookiePath = ''\n    if (attributeValue.length === 0 || attributeValue[0] !== '/') {\n      // 1. Let cookie-path be the default-path.\n      cookiePath = '/'\n    } else {\n      // Otherwise:\n\n      // 1. Let cookie-path be the attribute-value.\n      cookiePath = attributeValue\n    }\n\n    // 2. Append an attribute to the cookie-attribute-list with an\n    //    attribute-name of Path and an attribute-value of cookie-path.\n    cookieAttributeList.path = cookiePath\n  } else if (attributeNameLowercase === 'secure') {\n    // https://datatracker.ietf.org/doc/html/draft-ietf-httpbis-rfc6265bis#section-5.4.5\n    // If the attribute-name case-insensitively matches the string \"Secure\",\n    // the user agent MUST append an attribute to the cookie-attribute-list\n    // with an attribute-name of Secure and an empty attribute-value.\n\n    cookieAttributeList.secure = true\n  } else if (attributeNameLowercase === 'httponly') {\n    // https://datatracker.ietf.org/doc/html/draft-ietf-httpbis-rfc6265bis#section-5.4.6\n    // If the attribute-name case-insensitively matches the string\n    // \"HttpOnly\", the user agent MUST append an attribute to the cookie-\n    // attribute-list with an attribute-name of HttpOnly and an empty\n    // attribute-value.\n\n    cookieAttributeList.httpOnly = true\n  } else if (attributeNameLowercase === 'samesite') {\n    // https://datatracker.ietf.org/doc/html/draft-ietf-httpbis-rfc6265bis#section-5.4.7\n    // If the attribute-name case-insensitively matches the string\n    // \"SameSite\", the user agent MUST process the cookie-av as follows:\n\n    // 1. Let enforcement be \"Default\".\n    let enforcement = 'Default'\n\n    const attributeValueLowercase = attributeValue.toLowerCase()\n    // 2. If cookie-av's attribute-value is a case-insensitive match for\n    //    \"None\", set enforcement to \"None\".\n    if (attributeValueLowercase.includes('none')) {\n      enforcement = 'None'\n    }\n\n    // 3. If cookie-av's attribute-value is a case-insensitive match for\n    //    \"Strict\", set enforcement to \"Strict\".\n    if (attributeValueLowercase.includes('strict')) {\n      enforcement = 'Strict'\n    }\n\n    // 4. If cookie-av's attribute-value is a case-insensitive match for\n    //    \"Lax\", set enforcement to \"Lax\".\n    if (attributeValueLowercase.includes('lax')) {\n      enforcement = 'Lax'\n    }\n\n    // 5. Append an attribute to the cookie-attribute-list with an\n    //    attribute-name of \"SameSite\" and an attribute-value of\n    //    enforcement.\n    cookieAttributeList.sameSite = enforcement\n  } else {\n    cookieAttributeList.unparsed ??= []\n\n    cookieAttributeList.unparsed.push(`${attributeName}=${attributeValue}`)\n  }\n\n  // 8. Return to Step 1 of this algorithm.\n  return parseUnparsedAttributes(unparsedAttributes, cookieAttributeList)\n}\n\nmodule.exports = {\n  parseSetCookie,\n  parseUnparsedAttributes\n}\n", "'use strict'\n\nconst { parseSetCookie } = require('./parse')\nconst { stringify } = require('./util')\nconst { webidl } = require('../fetch/webidl')\nconst { Headers } = require('../fetch/headers')\n\n/**\n * @typedef {Object} Cookie\n * @property {string} name\n * @property {string} value\n * @property {Date|number|undefined} expires\n * @property {number|undefined} maxAge\n * @property {string|undefined} domain\n * @property {string|undefined} path\n * @property {boolean|undefined} secure\n * @property {boolean|undefined} httpOnly\n * @property {'Strict'|'Lax'|'None'} sameSite\n * @property {string[]} unparsed\n */\n\n/**\n * @param {Headers} headers\n * @returns {Record<string, string>}\n */\nfunction getCookies (headers) {\n  webidl.argumentLengthCheck(arguments, 1, 'getCookies')\n\n  webidl.brandCheck(headers, Headers, { strict: false })\n\n  const cookie = headers.get('cookie')\n  const out = {}\n\n  if (!cookie) {\n    return out\n  }\n\n  for (const piece of cookie.split(';')) {\n    const [name, ...value] = piece.split('=')\n\n    out[name.trim()] = value.join('=')\n  }\n\n  return out\n}\n\n/**\n * @param {Headers} headers\n * @param {string} name\n * @param {{ path?: string, domain?: string }|undefined} attributes\n * @returns {void}\n */\nfunction deleteCookie (headers, name, attributes) {\n  webidl.brandCheck(headers, Headers, { strict: false })\n\n  const prefix = 'deleteCookie'\n  webidl.argumentLengthCheck(arguments, 2, prefix)\n\n  name = webidl.converters.DOMString(name, prefix, 'name')\n  attributes = webidl.converters.DeleteCookieAttributes(attributes)\n\n  // Matches behavior of\n  // https://github.com/denoland/deno_std/blob/63827b16330b82489a04614027c33b7904e08be5/http/cookie.ts#L278\n  setCookie(headers, {\n    name,\n    value: '',\n    expires: new Date(0),\n    ...attributes\n  })\n}\n\n/**\n * @param {Headers} headers\n * @returns {Cookie[]}\n */\nfunction getSetCookies (headers) {\n  webidl.argumentLengthCheck(arguments, 1, 'getSetCookies')\n\n  webidl.brandCheck(headers, Headers, { strict: false })\n\n  const cookies = headers.getSetCookie()\n\n  if (!cookies) {\n    return []\n  }\n\n  return cookies.map((pair) => parseSetCookie(pair))\n}\n\n/**\n * @param {Headers} headers\n * @param {Cookie} cookie\n * @returns {void}\n */\nfunction setCookie (headers, cookie) {\n  webidl.argumentLengthCheck(arguments, 2, 'setCookie')\n\n  webidl.brandCheck(headers, Headers, { strict: false })\n\n  cookie = webidl.converters.Cookie(cookie)\n\n  const str = stringify(cookie)\n\n  if (str) {\n    headers.append('Set-Cookie', str)\n  }\n}\n\nwebidl.converters.DeleteCookieAttributes = webidl.dictionaryConverter([\n  {\n    converter: webidl.nullableConverter(webidl.converters.DOMString),\n    key: 'path',\n    defaultValue: () => null\n  },\n  {\n    converter: webidl.nullableConverter(webidl.converters.DOMString),\n    key: 'domain',\n    defaultValue: () => null\n  }\n])\n\nwebidl.converters.Cookie = webidl.dictionaryConverter([\n  {\n    converter: webidl.converters.DOMString,\n    key: 'name'\n  },\n  {\n    converter: webidl.converters.DOMString,\n    key: 'value'\n  },\n  {\n    converter: webidl.nullableConverter((value) => {\n      if (typeof value === 'number') {\n        return webidl.converters['unsigned long long'](value)\n      }\n\n      return new Date(value)\n    }),\n    key: 'expires',\n    defaultValue: () => null\n  },\n  {\n    converter: webidl.nullableConverter(webidl.converters['long long']),\n    key: 'maxAge',\n    defaultValue: () => null\n  },\n  {\n    converter: webidl.nullableConverter(webidl.converters.DOMString),\n    key: 'domain',\n    defaultValue: () => null\n  },\n  {\n    converter: webidl.nullableConverter(webidl.converters.DOMString),\n    key: 'path',\n    defaultValue: () => null\n  },\n  {\n    converter: webidl.nullableConverter(webidl.converters.boolean),\n    key: 'secure',\n    defaultValue: () => null\n  },\n  {\n    converter: webidl.nullableConverter(webidl.converters.boolean),\n    key: 'httpOnly',\n    defaultValue: () => null\n  },\n  {\n    converter: webidl.converters.USVString,\n    key: 'sameSite',\n    allowedValues: ['Strict', 'Lax', 'None']\n  },\n  {\n    converter: webidl.sequenceConverter(webidl.converters.DOMString),\n    key: 'unparsed',\n    defaultValue: () => new Array(0)\n  }\n])\n\nmodule.exports = {\n  getCookies,\n  deleteCookie,\n  getSetCookies,\n  setCookie\n}\n", "'use strict'\n\nconst { webidl } = require('../fetch/webidl')\nconst { kEnumerableProperty } = require('../../core/util')\nconst { kConstruct } = require('../../core/symbols')\nconst { MessagePort } = require('node:worker_threads')\n\n/**\n * @see https://html.spec.whatwg.org/multipage/comms.html#messageevent\n */\nclass MessageEvent extends Event {\n  #eventInit\n\n  constructor (type, eventInitDict = {}) {\n    if (type === kConstruct) {\n      super(arguments[1], arguments[2])\n      return\n    }\n\n    const prefix = 'MessageEvent constructor'\n    webidl.argumentLengthCheck(arguments, 1, prefix)\n\n    type = webidl.converters.DOMString(type, prefix, 'type')\n    eventInitDict = webidl.converters.MessageEventInit(eventInitDict, prefix, 'eventInitDict')\n\n    super(type, eventInitDict)\n\n    this.#eventInit = eventInitDict\n  }\n\n  get data () {\n    webidl.brandCheck(this, MessageEvent)\n\n    return this.#eventInit.data\n  }\n\n  get origin () {\n    webidl.brandCheck(this, MessageEvent)\n\n    return this.#eventInit.origin\n  }\n\n  get lastEventId () {\n    webidl.brandCheck(this, MessageEvent)\n\n    return this.#eventInit.lastEventId\n  }\n\n  get source () {\n    webidl.brandCheck(this, MessageEvent)\n\n    return this.#eventInit.source\n  }\n\n  get ports () {\n    webidl.brandCheck(this, MessageEvent)\n\n    if (!Object.isFrozen(this.#eventInit.ports)) {\n      Object.freeze(this.#eventInit.ports)\n    }\n\n    return this.#eventInit.ports\n  }\n\n  initMessageEvent (\n    type,\n    bubbles = false,\n    cancelable = false,\n    data = null,\n    origin = '',\n    lastEventId = '',\n    source = null,\n    ports = []\n  ) {\n    webidl.brandCheck(this, MessageEvent)\n\n    webidl.argumentLengthCheck(arguments, 1, 'MessageEvent.initMessageEvent')\n\n    return new MessageEvent(type, {\n      bubbles, cancelable, data, origin, lastEventId, source, ports\n    })\n  }\n\n  static createFastMessageEvent (type, init) {\n    const messageEvent = new MessageEvent(kConstruct, type, init)\n    messageEvent.#eventInit = init\n    messageEvent.#eventInit.data ??= null\n    messageEvent.#eventInit.origin ??= ''\n    messageEvent.#eventInit.lastEventId ??= ''\n    messageEvent.#eventInit.source ??= null\n    messageEvent.#eventInit.ports ??= []\n    return messageEvent\n  }\n}\n\nconst { createFastMessageEvent } = MessageEvent\ndelete MessageEvent.createFastMessageEvent\n\n/**\n * @see https://websockets.spec.whatwg.org/#the-closeevent-interface\n */\nclass CloseEvent extends Event {\n  #eventInit\n\n  constructor (type, eventInitDict = {}) {\n    const prefix = 'CloseEvent constructor'\n    webidl.argumentLengthCheck(arguments, 1, prefix)\n\n    type = webidl.converters.DOMString(type, prefix, 'type')\n    eventInitDict = webidl.converters.CloseEventInit(eventInitDict)\n\n    super(type, eventInitDict)\n\n    this.#eventInit = eventInitDict\n  }\n\n  get wasClean () {\n    webidl.brandCheck(this, CloseEvent)\n\n    return this.#eventInit.wasClean\n  }\n\n  get code () {\n    webidl.brandCheck(this, CloseEvent)\n\n    return this.#eventInit.code\n  }\n\n  get reason () {\n    webidl.brandCheck(this, CloseEvent)\n\n    return this.#eventInit.reason\n  }\n}\n\n// https://html.spec.whatwg.org/multipage/webappapis.html#the-errorevent-interface\nclass ErrorEvent extends Event {\n  #eventInit\n\n  constructor (type, eventInitDict) {\n    const prefix = 'ErrorEvent constructor'\n    webidl.argumentLengthCheck(arguments, 1, prefix)\n\n    super(type, eventInitDict)\n\n    type = webidl.converters.DOMString(type, prefix, 'type')\n    eventInitDict = webidl.converters.ErrorEventInit(eventInitDict ?? {})\n\n    this.#eventInit = eventInitDict\n  }\n\n  get message () {\n    webidl.brandCheck(this, ErrorEvent)\n\n    return this.#eventInit.message\n  }\n\n  get filename () {\n    webidl.brandCheck(this, ErrorEvent)\n\n    return this.#eventInit.filename\n  }\n\n  get lineno () {\n    webidl.brandCheck(this, ErrorEvent)\n\n    return this.#eventInit.lineno\n  }\n\n  get colno () {\n    webidl.brandCheck(this, ErrorEvent)\n\n    return this.#eventInit.colno\n  }\n\n  get error () {\n    webidl.brandCheck(this, ErrorEvent)\n\n    return this.#eventInit.error\n  }\n}\n\nObject.defineProperties(MessageEvent.prototype, {\n  [Symbol.toStringTag]: {\n    value: 'MessageEvent',\n    configurable: true\n  },\n  data: kEnumerableProperty,\n  origin: kEnumerableProperty,\n  lastEventId: kEnumerableProperty,\n  source: kEnumerableProperty,\n  ports: kEnumerableProperty,\n  initMessageEvent: kEnumerableProperty\n})\n\nObject.defineProperties(CloseEvent.prototype, {\n  [Symbol.toStringTag]: {\n    value: 'CloseEvent',\n    configurable: true\n  },\n  reason: kEnumerableProperty,\n  code: kEnumerableProperty,\n  wasClean: kEnumerableProperty\n})\n\nObject.defineProperties(ErrorEvent.prototype, {\n  [Symbol.toStringTag]: {\n    value: 'ErrorEvent',\n    configurable: true\n  },\n  message: kEnumerableProperty,\n  filename: kEnumerableProperty,\n  lineno: kEnumerableProperty,\n  colno: kEnumerableProperty,\n  error: kEnumerableProperty\n})\n\nwebidl.converters.MessagePort = webidl.interfaceConverter(MessagePort)\n\nwebidl.converters['sequence<MessagePort>'] = webidl.sequenceConverter(\n  webidl.converters.MessagePort\n)\n\nconst eventInit = [\n  {\n    key: 'bubbles',\n    converter: webidl.converters.boolean,\n    defaultValue: () => false\n  },\n  {\n    key: 'cancelable',\n    converter: webidl.converters.boolean,\n    defaultValue: () => false\n  },\n  {\n    key: 'composed',\n    converter: webidl.converters.boolean,\n    defaultValue: () => false\n  }\n]\n\nwebidl.converters.MessageEventInit = webidl.dictionaryConverter([\n  ...eventInit,\n  {\n    key: 'data',\n    converter: webidl.converters.any,\n    defaultValue: () => null\n  },\n  {\n    key: 'origin',\n    converter: webidl.converters.USVString,\n    defaultValue: () => ''\n  },\n  {\n    key: 'lastEventId',\n    converter: webidl.converters.DOMString,\n    defaultValue: () => ''\n  },\n  {\n    key: 'source',\n    // Node doesn't implement WindowProxy or ServiceWorker, so the only\n    // valid value for source is a MessagePort.\n    converter: webidl.nullableConverter(webidl.converters.MessagePort),\n    defaultValue: () => null\n  },\n  {\n    key: 'ports',\n    converter: webidl.converters['sequence<MessagePort>'],\n    defaultValue: () => new Array(0)\n  }\n])\n\nwebidl.converters.CloseEventInit = webidl.dictionaryConverter([\n  ...eventInit,\n  {\n    key: 'wasClean',\n    converter: webidl.converters.boolean,\n    defaultValue: () => false\n  },\n  {\n    key: 'code',\n    converter: webidl.converters['unsigned short'],\n    defaultValue: () => 0\n  },\n  {\n    key: 'reason',\n    converter: webidl.converters.USVString,\n    defaultValue: () => ''\n  }\n])\n\nwebidl.converters.ErrorEventInit = webidl.dictionaryConverter([\n  ...eventInit,\n  {\n    key: 'message',\n    converter: webidl.converters.DOMString,\n    defaultValue: () => ''\n  },\n  {\n    key: 'filename',\n    converter: webidl.converters.USVString,\n    defaultValue: () => ''\n  },\n  {\n    key: 'lineno',\n    converter: webidl.converters['unsigned long'],\n    defaultValue: () => 0\n  },\n  {\n    key: 'colno',\n    converter: webidl.converters['unsigned long'],\n    defaultValue: () => 0\n  },\n  {\n    key: 'error',\n    converter: webidl.converters.any\n  }\n])\n\nmodule.exports = {\n  MessageEvent,\n  CloseEvent,\n  ErrorEvent,\n  createFastMessageEvent\n}\n", "'use strict'\n\n// This is a Globally Unique Identifier unique used\n// to validate that the endpoint accepts websocket\n// connections.\n// See https://www.rfc-editor.org/rfc/rfc6455.html#section-1.3\nconst uid = '258EAFA5-E914-47DA-95CA-C5AB0DC85B11'\n\n/** @type {PropertyDescriptor} */\nconst staticPropertyDescriptors = {\n  enumerable: true,\n  writable: false,\n  configurable: false\n}\n\nconst states = {\n  CONNECTING: 0,\n  OPEN: 1,\n  CLOSING: 2,\n  CLOSED: 3\n}\n\nconst sentCloseFrameState = {\n  NOT_SENT: 0,\n  PROCESSING: 1,\n  SENT: 2\n}\n\nconst opcodes = {\n  CONTINUATION: 0x0,\n  TEXT: 0x1,\n  BINARY: 0x2,\n  CLOSE: 0x8,\n  PING: 0x9,\n  PONG: 0xA\n}\n\nconst maxUnsigned16Bit = 2 ** 16 - 1 // 65535\n\nconst parserStates = {\n  INFO: 0,\n  PAYLOADLENGTH_16: 2,\n  PAYLOADLENGTH_64: 3,\n  READ_DATA: 4\n}\n\nconst emptyBuffer = Buffer.allocUnsafe(0)\n\nconst sendHints = {\n  string: 1,\n  typedArray: 2,\n  arrayBuffer: 3,\n  blob: 4\n}\n\nmodule.exports = {\n  uid,\n  sentCloseFrameState,\n  staticPropertyDescriptors,\n  states,\n  opcodes,\n  maxUnsigned16Bit,\n  parserStates,\n  emptyBuffer,\n  sendHints\n}\n", "'use strict'\n\nmodule.exports = {\n  kWebSocketURL: Symbol('url'),\n  kReadyState: Symbol('ready state'),\n  kController: Symbol('controller'),\n  kResponse: Symbol('response'),\n  kBinaryType: Symbol('binary type'),\n  kSentClose: Symbol('sent close'),\n  kReceivedClose: Symbol('received close'),\n  kByteParser: Symbol('byte parser')\n}\n", "'use strict'\n\nconst { kReadyState, kController, kResponse, kBinaryType, kWebSocketURL } = require('./symbols')\nconst { states, opcodes } = require('./constants')\nconst { ErrorEvent, createFastMessageEvent } = require('./events')\nconst { isUtf8 } = require('node:buffer')\nconst { collectASequenceOfCodePointsFast, removeHTTPWhitespace } = require('../fetch/data-url')\n\n/* globals Blob */\n\n/**\n * @param {import('./websocket').WebSocket} ws\n * @returns {boolean}\n */\nfunction isConnecting (ws) {\n  // If the WebSocket connection is not yet established, and the connection\n  // is not yet closed, then the WebSocket connection is in the CONNECTING state.\n  return ws[kReadyState] === states.CONNECTING\n}\n\n/**\n * @param {import('./websocket').WebSocket} ws\n * @returns {boolean}\n */\nfunction isEstablished (ws) {\n  // If the server's response is validated as provided for above, it is\n  // said that _The WebSocket Connection is Established_ and that the\n  // WebSocket Connection is in the OPEN state.\n  return ws[kReadyState] === states.OPEN\n}\n\n/**\n * @param {import('./websocket').WebSocket} ws\n * @returns {boolean}\n */\nfunction isClosing (ws) {\n  // Upon either sending or receiving a Close control frame, it is said\n  // that _The WebSocket Closing Handshake is Started_ and that the\n  // WebSocket connection is in the CLOSING state.\n  return ws[kReadyState] === states.CLOSING\n}\n\n/**\n * @param {import('./websocket').WebSocket} ws\n * @returns {boolean}\n */\nfunction isClosed (ws) {\n  return ws[kReadyState] === states.CLOSED\n}\n\n/**\n * @see https://dom.spec.whatwg.org/#concept-event-fire\n * @param {string} e\n * @param {EventTarget} target\n * @param {(...args: ConstructorParameters<typeof Event>) => Event} eventFactory\n * @param {EventInit | undefined} eventInitDict\n */\nfunction fireEvent (e, target, eventFactory = (type, init) => new Event(type, init), eventInitDict = {}) {\n  // 1. If eventConstructor is not given, then let eventConstructor be Event.\n\n  // 2. Let event be the result of creating an event given eventConstructor,\n  //    in the relevant realm of target.\n  // 3. Initialize event’s type attribute to e.\n  const event = eventFactory(e, eventInitDict)\n\n  // 4. Initialize any other IDL attributes of event as described in the\n  //    invocation of this algorithm.\n\n  // 5. Return the result of dispatching event at target, with legacy target\n  //    override flag set if set.\n  target.dispatchEvent(event)\n}\n\n/**\n * @see https://websockets.spec.whatwg.org/#feedback-from-the-protocol\n * @param {import('./websocket').WebSocket} ws\n * @param {number} type Opcode\n * @param {Buffer} data application data\n */\nfunction websocketMessageReceived (ws, type, data) {\n  // 1. If ready state is not OPEN (1), then return.\n  if (ws[kReadyState] !== states.OPEN) {\n    return\n  }\n\n  // 2. Let dataForEvent be determined by switching on type and binary type:\n  let dataForEvent\n\n  if (type === opcodes.TEXT) {\n    // -> type indicates that the data is Text\n    //      a new DOMString containing data\n    try {\n      dataForEvent = utf8Decode(data)\n    } catch {\n      failWebsocketConnection(ws, 'Received invalid UTF-8 in text frame.')\n      return\n    }\n  } else if (type === opcodes.BINARY) {\n    if (ws[kBinaryType] === 'blob') {\n      // -> type indicates that the data is Binary and binary type is \"blob\"\n      //      a new Blob object, created in the relevant Realm of the WebSocket\n      //      object, that represents data as its raw data\n      dataForEvent = new Blob([data])\n    } else {\n      // -> type indicates that the data is Binary and binary type is \"arraybuffer\"\n      //      a new ArrayBuffer object, created in the relevant Realm of the\n      //      WebSocket object, whose contents are data\n      dataForEvent = toArrayBuffer(data)\n    }\n  }\n\n  // 3. Fire an event named message at the WebSocket object, using MessageEvent,\n  //    with the origin attribute initialized to the serialization of the WebSocket\n  //    object’s url's origin, and the data attribute initialized to dataForEvent.\n  fireEvent('message', ws, createFastMessageEvent, {\n    origin: ws[kWebSocketURL].origin,\n    data: dataForEvent\n  })\n}\n\nfunction toArrayBuffer (buffer) {\n  if (buffer.byteLength === buffer.buffer.byteLength) {\n    return buffer.buffer\n  }\n  return buffer.buffer.slice(buffer.byteOffset, buffer.byteOffset + buffer.byteLength)\n}\n\n/**\n * @see https://datatracker.ietf.org/doc/html/rfc6455\n * @see https://datatracker.ietf.org/doc/html/rfc2616\n * @see https://bugs.chromium.org/p/chromium/issues/detail?id=398407\n * @param {string} protocol\n */\nfunction isValidSubprotocol (protocol) {\n  // If present, this value indicates one\n  // or more comma-separated subprotocol the client wishes to speak,\n  // ordered by preference.  The elements that comprise this value\n  // MUST be non-empty strings with characters in the range U+0021 to\n  // U+007E not including separator characters as defined in\n  // [RFC2616] and MUST all be unique strings.\n  if (protocol.length === 0) {\n    return false\n  }\n\n  for (let i = 0; i < protocol.length; ++i) {\n    const code = protocol.charCodeAt(i)\n\n    if (\n      code < 0x21 || // CTL, contains SP (0x20) and HT (0x09)\n      code > 0x7E ||\n      code === 0x22 || // \"\n      code === 0x28 || // (\n      code === 0x29 || // )\n      code === 0x2C || // ,\n      code === 0x2F || // /\n      code === 0x3A || // :\n      code === 0x3B || // ;\n      code === 0x3C || // <\n      code === 0x3D || // =\n      code === 0x3E || // >\n      code === 0x3F || // ?\n      code === 0x40 || // @\n      code === 0x5B || // [\n      code === 0x5C || // \\\n      code === 0x5D || // ]\n      code === 0x7B || // {\n      code === 0x7D // }\n    ) {\n      return false\n    }\n  }\n\n  return true\n}\n\n/**\n * @see https://datatracker.ietf.org/doc/html/rfc6455#section-7-4\n * @param {number} code\n */\nfunction isValidStatusCode (code) {\n  if (code >= 1000 && code < 1015) {\n    return (\n      code !== 1004 && // reserved\n      code !== 1005 && // \"MUST NOT be set as a status code\"\n      code !== 1006 // \"MUST NOT be set as a status code\"\n    )\n  }\n\n  return code >= 3000 && code <= 4999\n}\n\n/**\n * @param {import('./websocket').WebSocket} ws\n * @param {string|undefined} reason\n */\nfunction failWebsocketConnection (ws, reason) {\n  const { [kController]: controller, [kResponse]: response } = ws\n\n  controller.abort()\n\n  if (response?.socket && !response.socket.destroyed) {\n    response.socket.destroy()\n  }\n\n  if (reason) {\n    // TODO: process.nextTick\n    fireEvent('error', ws, (type, init) => new ErrorEvent(type, init), {\n      error: new Error(reason),\n      message: reason\n    })\n  }\n}\n\n/**\n * @see https://datatracker.ietf.org/doc/html/rfc6455#section-5.5\n * @param {number} opcode\n */\nfunction isControlFrame (opcode) {\n  return (\n    opcode === opcodes.CLOSE ||\n    opcode === opcodes.PING ||\n    opcode === opcodes.PONG\n  )\n}\n\nfunction isContinuationFrame (opcode) {\n  return opcode === opcodes.CONTINUATION\n}\n\nfunction isTextBinaryFrame (opcode) {\n  return opcode === opcodes.TEXT || opcode === opcodes.BINARY\n}\n\nfunction isValidOpcode (opcode) {\n  return isTextBinaryFrame(opcode) || isContinuationFrame(opcode) || isControlFrame(opcode)\n}\n\n/**\n * Parses a Sec-WebSocket-Extensions header value.\n * @param {string} extensions\n * @returns {Map<string, string>}\n */\n// TODO(@Uzlopak, @KhafraDev): make compliant https://datatracker.ietf.org/doc/html/rfc6455#section-9.1\nfunction parseExtensions (extensions) {\n  const position = { position: 0 }\n  const extensionList = new Map()\n\n  while (position.position < extensions.length) {\n    const pair = collectASequenceOfCodePointsFast(';', extensions, position)\n    const [name, value = ''] = pair.split('=')\n\n    extensionList.set(\n      removeHTTPWhitespace(name, true, false),\n      removeHTTPWhitespace(value, false, true)\n    )\n\n    position.position++\n  }\n\n  return extensionList\n}\n\n/**\n * @see https://www.rfc-editor.org/rfc/rfc7692#section-7.1.2.2\n * @description \"client-max-window-bits = 1*DIGIT\"\n * @param {string} value\n */\nfunction isValidClientWindowBits (value) {\n  for (let i = 0; i < value.length; i++) {\n    const byte = value.charCodeAt(i)\n\n    if (byte < 0x30 || byte > 0x39) {\n      return false\n    }\n  }\n\n  return true\n}\n\n// https://nodejs.org/api/intl.html#detecting-internationalization-support\nconst hasIntl = typeof process.versions.icu === 'string'\nconst fatalDecoder = hasIntl ? new TextDecoder('utf-8', { fatal: true }) : undefined\n\n/**\n * Converts a Buffer to utf-8, even on platforms without icu.\n * @param {Buffer} buffer\n */\nconst utf8Decode = hasIntl\n  ? fatalDecoder.decode.bind(fatalDecoder)\n  : function (buffer) {\n    if (isUtf8(buffer)) {\n      return buffer.toString('utf-8')\n    }\n    throw new TypeError('Invalid utf-8 received.')\n  }\n\nmodule.exports = {\n  isConnecting,\n  isEstablished,\n  isClosing,\n  isClosed,\n  fireEvent,\n  isValidSubprotocol,\n  isValidStatusCode,\n  failWebsocketConnection,\n  websocketMessageReceived,\n  utf8Decode,\n  isControlFrame,\n  isContinuationFrame,\n  isTextBinaryFrame,\n  isValidOpcode,\n  parseExtensions,\n  isValidClientWindowBits\n}\n", "'use strict'\n\nconst { maxUnsigned16Bit } = require('./constants')\n\nconst BUFFER_SIZE = 16386\n\n/** @type {import('crypto')} */\nlet crypto\nlet buffer = null\nlet bufIdx = BUFFER_SIZE\n\ntry {\n  crypto = require('node:crypto')\n/* c8 ignore next 3 */\n} catch {\n  crypto = {\n    // not full compatibility, but minimum.\n    randomFillSync: function randomFillSync (buffer, _offset, _size) {\n      for (let i = 0; i < buffer.length; ++i) {\n        buffer[i] = Math.random() * 255 | 0\n      }\n      return buffer\n    }\n  }\n}\n\nfunction generateMask () {\n  if (bufIdx === BUFFER_SIZE) {\n    bufIdx = 0\n    crypto.randomFillSync((buffer ??= Buffer.allocUnsafe(BUFFER_SIZE)), 0, BUFFER_SIZE)\n  }\n  return [buffer[bufIdx++], buffer[bufIdx++], buffer[bufIdx++], buffer[bufIdx++]]\n}\n\nclass WebsocketFrameSend {\n  /**\n   * @param {Buffer|undefined} data\n   */\n  constructor (data) {\n    this.frameData = data\n  }\n\n  createFrame (opcode) {\n    const frameData = this.frameData\n    const maskKey = generateMask()\n    const bodyLength = frameData?.byteLength ?? 0\n\n    /** @type {number} */\n    let payloadLength = bodyLength // 0-125\n    let offset = 6\n\n    if (bodyLength > maxUnsigned16Bit) {\n      offset += 8 // payload length is next 8 bytes\n      payloadLength = 127\n    } else if (bodyLength > 125) {\n      offset += 2 // payload length is next 2 bytes\n      payloadLength = 126\n    }\n\n    const buffer = Buffer.allocUnsafe(bodyLength + offset)\n\n    // Clear first 2 bytes, everything else is overwritten\n    buffer[0] = buffer[1] = 0\n    buffer[0] |= 0x80 // FIN\n    buffer[0] = (buffer[0] & 0xF0) + opcode // opcode\n\n    /*! ws. MIT License. Einar Otto Stangvik <einaros@gmail.com> */\n    buffer[offset - 4] = maskKey[0]\n    buffer[offset - 3] = maskKey[1]\n    buffer[offset - 2] = maskKey[2]\n    buffer[offset - 1] = maskKey[3]\n\n    buffer[1] = payloadLength\n\n    if (payloadLength === 126) {\n      buffer.writeUInt16BE(bodyLength, 2)\n    } else if (payloadLength === 127) {\n      // Clear extended payload length\n      buffer[2] = buffer[3] = 0\n      buffer.writeUIntBE(bodyLength, 4, 6)\n    }\n\n    buffer[1] |= 0x80 // MASK\n\n    // mask body\n    for (let i = 0; i < bodyLength; ++i) {\n      buffer[offset + i] = frameData[i] ^ maskKey[i & 3]\n    }\n\n    return buffer\n  }\n}\n\nmodule.exports = {\n  WebsocketFrameSend\n}\n", "'use strict'\n\nconst { uid, states, sentCloseFrameState, emptyBuffer, opcodes } = require('./constants')\nconst {\n  kReadyState,\n  kSentClose,\n  kByteParser,\n  kReceivedClose,\n  kResponse\n} = require('./symbols')\nconst { fireEvent, failWebsocketConnection, isClosing, isClosed, isEstablished, parseExtensions } = require('./util')\nconst { channels } = require('../../core/diagnostics')\nconst { CloseEvent } = require('./events')\nconst { makeRequest } = require('../fetch/request')\nconst { fetching } = require('../fetch/index')\nconst { Headers, getHeadersList } = require('../fetch/headers')\nconst { getDecodeSplit } = require('../fetch/util')\nconst { WebsocketFrameSend } = require('./frame')\n\n/** @type {import('crypto')} */\nlet crypto\ntry {\n  crypto = require('node:crypto')\n/* c8 ignore next 3 */\n} catch {\n\n}\n\n/**\n * @see https://websockets.spec.whatwg.org/#concept-websocket-establish\n * @param {URL} url\n * @param {string|string[]} protocols\n * @param {import('./websocket').WebSocket} ws\n * @param {(response: any, extensions: string[] | undefined) => void} onEstablish\n * @param {Partial<import('../../types/websocket').WebSocketInit>} options\n */\nfunction establishWebSocketConnection (url, protocols, client, ws, onEstablish, options) {\n  // 1. Let requestURL be a copy of url, with its scheme set to \"http\", if url’s\n  //    scheme is \"ws\", and to \"https\" otherwise.\n  const requestURL = url\n\n  requestURL.protocol = url.protocol === 'ws:' ? 'http:' : 'https:'\n\n  // 2. Let request be a new request, whose URL is requestURL, client is client,\n  //    service-workers mode is \"none\", referrer is \"no-referrer\", mode is\n  //    \"websocket\", credentials mode is \"include\", cache mode is \"no-store\" ,\n  //    and redirect mode is \"error\".\n  const request = makeRequest({\n    urlList: [requestURL],\n    client,\n    serviceWorkers: 'none',\n    referrer: 'no-referrer',\n    mode: 'websocket',\n    credentials: 'include',\n    cache: 'no-store',\n    redirect: 'error'\n  })\n\n  // Note: undici extension, allow setting custom headers.\n  if (options.headers) {\n    const headersList = getHeadersList(new Headers(options.headers))\n\n    request.headersList = headersList\n  }\n\n  // 3. Append (`Upgrade`, `websocket`) to request’s header list.\n  // 4. Append (`Connection`, `Upgrade`) to request’s header list.\n  // Note: both of these are handled by undici currently.\n  // https://github.com/nodejs/undici/blob/68c269c4144c446f3f1220951338daef4a6b5ec4/lib/client.js#L1397\n\n  // 5. Let keyValue be a nonce consisting of a randomly selected\n  //    16-byte value that has been forgiving-base64-encoded and\n  //    isomorphic encoded.\n  const keyValue = crypto.randomBytes(16).toString('base64')\n\n  // 6. Append (`Sec-WebSocket-Key`, keyValue) to request’s\n  //    header list.\n  request.headersList.append('sec-websocket-key', keyValue)\n\n  // 7. Append (`Sec-WebSocket-Version`, `13`) to request’s\n  //    header list.\n  request.headersList.append('sec-websocket-version', '13')\n\n  // 8. For each protocol in protocols, combine\n  //    (`Sec-WebSocket-Protocol`, protocol) in request’s header\n  //    list.\n  for (const protocol of protocols) {\n    request.headersList.append('sec-websocket-protocol', protocol)\n  }\n\n  // 9. Let permessageDeflate be a user-agent defined\n  //    \"permessage-deflate\" extension header value.\n  // https://github.com/mozilla/gecko-dev/blob/ce78234f5e653a5d3916813ff990f053510227bc/netwerk/protocol/websocket/WebSocketChannel.cpp#L2673\n  const permessageDeflate = 'permessage-deflate; client_max_window_bits'\n\n  // 10. Append (`Sec-WebSocket-Extensions`, permessageDeflate) to\n  //     request’s header list.\n  request.headersList.append('sec-websocket-extensions', permessageDeflate)\n\n  // 11. Fetch request with useParallelQueue set to true, and\n  //     processResponse given response being these steps:\n  const controller = fetching({\n    request,\n    useParallelQueue: true,\n    dispatcher: options.dispatcher,\n    processResponse (response) {\n      // 1. If response is a network error or its status is not 101,\n      //    fail the WebSocket connection.\n      if (response.type === 'error' || response.status !== 101) {\n        failWebsocketConnection(ws, 'Received network error or non-101 status code.')\n        return\n      }\n\n      // 2. If protocols is not the empty list and extracting header\n      //    list values given `Sec-WebSocket-Protocol` and response’s\n      //    header list results in null, failure, or the empty byte\n      //    sequence, then fail the WebSocket connection.\n      if (protocols.length !== 0 && !response.headersList.get('Sec-WebSocket-Protocol')) {\n        failWebsocketConnection(ws, 'Server did not respond with sent protocols.')\n        return\n      }\n\n      // 3. Follow the requirements stated step 2 to step 6, inclusive,\n      //    of the last set of steps in section 4.1 of The WebSocket\n      //    Protocol to validate response. This either results in fail\n      //    the WebSocket connection or the WebSocket connection is\n      //    established.\n\n      // 2. If the response lacks an |Upgrade| header field or the |Upgrade|\n      //    header field contains a value that is not an ASCII case-\n      //    insensitive match for the value \"websocket\", the client MUST\n      //    _Fail the WebSocket Connection_.\n      if (response.headersList.get('Upgrade')?.toLowerCase() !== 'websocket') {\n        failWebsocketConnection(ws, 'Server did not set Upgrade header to \"websocket\".')\n        return\n      }\n\n      // 3. If the response lacks a |Connection| header field or the\n      //    |Connection| header field doesn't contain a token that is an\n      //    ASCII case-insensitive match for the value \"Upgrade\", the client\n      //    MUST _Fail the WebSocket Connection_.\n      if (response.headersList.get('Connection')?.toLowerCase() !== 'upgrade') {\n        failWebsocketConnection(ws, 'Server did not set Connection header to \"upgrade\".')\n        return\n      }\n\n      // 4. If the response lacks a |Sec-WebSocket-Accept| header field or\n      //    the |Sec-WebSocket-Accept| contains a value other than the\n      //    base64-encoded SHA-1 of the concatenation of the |Sec-WebSocket-\n      //    Key| (as a string, not base64-decoded) with the string \"258EAFA5-\n      //    E914-47DA-95CA-C5AB0DC85B11\" but ignoring any leading and\n      //    trailing whitespace, the client MUST _Fail the WebSocket\n      //    Connection_.\n      const secWSAccept = response.headersList.get('Sec-WebSocket-Accept')\n      const digest = crypto.createHash('sha1').update(keyValue + uid).digest('base64')\n      if (secWSAccept !== digest) {\n        failWebsocketConnection(ws, 'Incorrect hash received in Sec-WebSocket-Accept header.')\n        return\n      }\n\n      // 5. If the response includes a |Sec-WebSocket-Extensions| header\n      //    field and this header field indicates the use of an extension\n      //    that was not present in the client's handshake (the server has\n      //    indicated an extension not requested by the client), the client\n      //    MUST _Fail the WebSocket Connection_.  (The parsing of this\n      //    header field to determine which extensions are requested is\n      //    discussed in Section 9.1.)\n      const secExtension = response.headersList.get('Sec-WebSocket-Extensions')\n      let extensions\n\n      if (secExtension !== null) {\n        extensions = parseExtensions(secExtension)\n\n        if (!extensions.has('permessage-deflate')) {\n          failWebsocketConnection(ws, 'Sec-WebSocket-Extensions header does not match.')\n          return\n        }\n      }\n\n      // 6. If the response includes a |Sec-WebSocket-Protocol| header field\n      //    and this header field indicates the use of a subprotocol that was\n      //    not present in the client's handshake (the server has indicated a\n      //    subprotocol not requested by the client), the client MUST _Fail\n      //    the WebSocket Connection_.\n      const secProtocol = response.headersList.get('Sec-WebSocket-Protocol')\n\n      if (secProtocol !== null) {\n        const requestProtocols = getDecodeSplit('sec-websocket-protocol', request.headersList)\n\n        // The client can request that the server use a specific subprotocol by\n        // including the |Sec-WebSocket-Protocol| field in its handshake.  If it\n        // is specified, the server needs to include the same field and one of\n        // the selected subprotocol values in its response for the connection to\n        // be established.\n        if (!requestProtocols.includes(secProtocol)) {\n          failWebsocketConnection(ws, 'Protocol was not set in the opening handshake.')\n          return\n        }\n      }\n\n      response.socket.on('data', onSocketData)\n      response.socket.on('close', onSocketClose)\n      response.socket.on('error', onSocketError)\n\n      if (channels.open.hasSubscribers) {\n        channels.open.publish({\n          address: response.socket.address(),\n          protocol: secProtocol,\n          extensions: secExtension\n        })\n      }\n\n      onEstablish(response, extensions)\n    }\n  })\n\n  return controller\n}\n\nfunction closeWebSocketConnection (ws, code, reason, reasonByteLength) {\n  if (isClosing(ws) || isClosed(ws)) {\n    // If this's ready state is CLOSING (2) or CLOSED (3)\n    // Do nothing.\n  } else if (!isEstablished(ws)) {\n    // If the WebSocket connection is not yet established\n    // Fail the WebSocket connection and set this's ready state\n    // to CLOSING (2).\n    failWebsocketConnection(ws, 'Connection was closed before it was established.')\n    ws[kReadyState] = states.CLOSING\n  } else if (ws[kSentClose] === sentCloseFrameState.NOT_SENT) {\n    // If the WebSocket closing handshake has not yet been started\n    // Start the WebSocket closing handshake and set this's ready\n    // state to CLOSING (2).\n    // - If neither code nor reason is present, the WebSocket Close\n    //   message must not have a body.\n    // - If code is present, then the status code to use in the\n    //   WebSocket Close message must be the integer given by code.\n    // - If reason is also present, then reasonBytes must be\n    //   provided in the Close message after the status code.\n\n    ws[kSentClose] = sentCloseFrameState.PROCESSING\n\n    const frame = new WebsocketFrameSend()\n\n    // If neither code nor reason is present, the WebSocket Close\n    // message must not have a body.\n\n    // If code is present, then the status code to use in the\n    // WebSocket Close message must be the integer given by code.\n    if (code !== undefined && reason === undefined) {\n      frame.frameData = Buffer.allocUnsafe(2)\n      frame.frameData.writeUInt16BE(code, 0)\n    } else if (code !== undefined && reason !== undefined) {\n      // If reason is also present, then reasonBytes must be\n      // provided in the Close message after the status code.\n      frame.frameData = Buffer.allocUnsafe(2 + reasonByteLength)\n      frame.frameData.writeUInt16BE(code, 0)\n      // the body MAY contain UTF-8-encoded data with value /reason/\n      frame.frameData.write(reason, 2, 'utf-8')\n    } else {\n      frame.frameData = emptyBuffer\n    }\n\n    /** @type {import('stream').Duplex} */\n    const socket = ws[kResponse].socket\n\n    socket.write(frame.createFrame(opcodes.CLOSE))\n\n    ws[kSentClose] = sentCloseFrameState.SENT\n\n    // Upon either sending or receiving a Close control frame, it is said\n    // that _The WebSocket Closing Handshake is Started_ and that the\n    // WebSocket connection is in the CLOSING state.\n    ws[kReadyState] = states.CLOSING\n  } else {\n    // Otherwise\n    // Set this's ready state to CLOSING (2).\n    ws[kReadyState] = states.CLOSING\n  }\n}\n\n/**\n * @param {Buffer} chunk\n */\nfunction onSocketData (chunk) {\n  if (!this.ws[kByteParser].write(chunk)) {\n    this.pause()\n  }\n}\n\n/**\n * @see https://websockets.spec.whatwg.org/#feedback-from-the-protocol\n * @see https://datatracker.ietf.org/doc/html/rfc6455#section-7.1.4\n */\nfunction onSocketClose () {\n  const { ws } = this\n  const { [kResponse]: response } = ws\n\n  response.socket.off('data', onSocketData)\n  response.socket.off('close', onSocketClose)\n  response.socket.off('error', onSocketError)\n\n  // If the TCP connection was closed after the\n  // WebSocket closing handshake was completed, the WebSocket connection\n  // is said to have been closed _cleanly_.\n  const wasClean = ws[kSentClose] === sentCloseFrameState.SENT && ws[kReceivedClose]\n\n  let code = 1005\n  let reason = ''\n\n  const result = ws[kByteParser].closingInfo\n\n  if (result && !result.error) {\n    code = result.code ?? 1005\n    reason = result.reason\n  } else if (!ws[kReceivedClose]) {\n    // If _The WebSocket\n    // Connection is Closed_ and no Close control frame was received by the\n    // endpoint (such as could occur if the underlying transport connection\n    // is lost), _The WebSocket Connection Close Code_ is considered to be\n    // 1006.\n    code = 1006\n  }\n\n  // 1. Change the ready state to CLOSED (3).\n  ws[kReadyState] = states.CLOSED\n\n  // 2. If the user agent was required to fail the WebSocket\n  //    connection, or if the WebSocket connection was closed\n  //    after being flagged as full, fire an event named error\n  //    at the WebSocket object.\n  // TODO\n\n  // 3. Fire an event named close at the WebSocket object,\n  //    using CloseEvent, with the wasClean attribute\n  //    initialized to true if the connection closed cleanly\n  //    and false otherwise, the code attribute initialized to\n  //    the WebSocket connection close code, and the reason\n  //    attribute initialized to the result of applying UTF-8\n  //    decode without BOM to the WebSocket connection close\n  //    reason.\n  // TODO: process.nextTick\n  fireEvent('close', ws, (type, init) => new CloseEvent(type, init), {\n    wasClean, code, reason\n  })\n\n  if (channels.close.hasSubscribers) {\n    channels.close.publish({\n      websocket: ws,\n      code,\n      reason\n    })\n  }\n}\n\nfunction onSocketError (error) {\n  const { ws } = this\n\n  ws[kReadyState] = states.CLOSING\n\n  if (channels.socketError.hasSubscribers) {\n    channels.socketError.publish(error)\n  }\n\n  this.destroy()\n}\n\nmodule.exports = {\n  establishWebSocketConnection,\n  closeWebSocketConnection\n}\n", "'use strict'\n\nconst { createInflateRaw, Z_DEFAULT_WINDOWBITS } = require('node:zlib')\nconst { isValidClientWindowBits } = require('./util')\n\nconst tail = Buffer.from([0x00, 0x00, 0xff, 0xff])\nconst kBuffer = Symbol('kBuffer')\nconst kLength = Symbol('kLength')\n\nclass PerMessageDeflate {\n  /** @type {import('node:zlib').InflateRaw} */\n  #inflate\n\n  #options = {}\n\n  constructor (extensions) {\n    this.#options.serverNoContextTakeover = extensions.has('server_no_context_takeover')\n    this.#options.serverMaxWindowBits = extensions.get('server_max_window_bits')\n  }\n\n  decompress (chunk, fin, callback) {\n    // An endpoint uses the following algorithm to decompress a message.\n    // 1.  Append 4 octets of 0x00 0x00 0xff 0xff to the tail end of the\n    //     payload of the message.\n    // 2.  Decompress the resulting data using DEFLATE.\n\n    if (!this.#inflate) {\n      let windowBits = Z_DEFAULT_WINDOWBITS\n\n      if (this.#options.serverMaxWindowBits) { // empty values default to Z_DEFAULT_WINDOWBITS\n        if (!isValidClientWindowBits(this.#options.serverMaxWindowBits)) {\n          callback(new Error('Invalid server_max_window_bits'))\n          return\n        }\n\n        windowBits = Number.parseInt(this.#options.serverMaxWindowBits)\n      }\n\n      this.#inflate = createInflateRaw({ windowBits })\n      this.#inflate[kBuffer] = []\n      this.#inflate[kLength] = 0\n\n      this.#inflate.on('data', (data) => {\n        this.#inflate[kBuffer].push(data)\n        this.#inflate[kLength] += data.length\n      })\n\n      this.#inflate.on('error', (err) => {\n        this.#inflate = null\n        callback(err)\n      })\n    }\n\n    this.#inflate.write(chunk)\n    if (fin) {\n      this.#inflate.write(tail)\n    }\n\n    this.#inflate.flush(() => {\n      const full = Buffer.concat(this.#inflate[kBuffer], this.#inflate[kLength])\n\n      this.#inflate[kBuffer].length = 0\n      this.#inflate[kLength] = 0\n\n      callback(null, full)\n    })\n  }\n}\n\nmodule.exports = { PerMessageDeflate }\n", "'use strict'\n\nconst { Writable } = require('node:stream')\nconst assert = require('node:assert')\nconst { parserStates, opcodes, states, emptyBuffer, sentCloseFrameState } = require('./constants')\nconst { kReadyState, kSentClose, kResponse, kReceivedClose } = require('./symbols')\nconst { channels } = require('../../core/diagnostics')\nconst {\n  isValidStatusCode,\n  isValidOpcode,\n  failWebsocketConnection,\n  websocketMessageReceived,\n  utf8Decode,\n  isControlFrame,\n  isTextBinaryFrame,\n  isContinuationFrame\n} = require('./util')\nconst { WebsocketFrameSend } = require('./frame')\nconst { closeWebSocketConnection } = require('./connection')\nconst { PerMessageDeflate } = require('./permessage-deflate')\n\n// This code was influenced by ws released under the MIT license.\n// Copyright (c) 2011 Einar Otto Stangvik <einaros@gmail.com>\n// Copyright (c) 2013 Arnout Kazemier and contributors\n// Copyright (c) 2016 Luigi Pinca and contributors\n\nclass ByteParser extends Writable {\n  #buffers = []\n  #byteOffset = 0\n  #loop = false\n\n  #state = parserStates.INFO\n\n  #info = {}\n  #fragments = []\n\n  /** @type {Map<string, PerMessageDeflate>} */\n  #extensions\n\n  constructor (ws, extensions) {\n    super()\n\n    this.ws = ws\n    this.#extensions = extensions == null ? new Map() : extensions\n\n    if (this.#extensions.has('permessage-deflate')) {\n      this.#extensions.set('permessage-deflate', new PerMessageDeflate(extensions))\n    }\n  }\n\n  /**\n   * @param {Buffer} chunk\n   * @param {() => void} callback\n   */\n  _write (chunk, _, callback) {\n    this.#buffers.push(chunk)\n    this.#byteOffset += chunk.length\n    this.#loop = true\n\n    this.run(callback)\n  }\n\n  /**\n   * Runs whenever a new chunk is received.\n   * Callback is called whenever there are no more chunks buffering,\n   * or not enough bytes are buffered to parse.\n   */\n  run (callback) {\n    while (this.#loop) {\n      if (this.#state === parserStates.INFO) {\n        // If there aren't enough bytes to parse the payload length, etc.\n        if (this.#byteOffset < 2) {\n          return callback()\n        }\n\n        const buffer = this.consume(2)\n        const fin = (buffer[0] & 0x80) !== 0\n        const opcode = buffer[0] & 0x0F\n        const masked = (buffer[1] & 0x80) === 0x80\n\n        const fragmented = !fin && opcode !== opcodes.CONTINUATION\n        const payloadLength = buffer[1] & 0x7F\n\n        const rsv1 = buffer[0] & 0x40\n        const rsv2 = buffer[0] & 0x20\n        const rsv3 = buffer[0] & 0x10\n\n        if (!isValidOpcode(opcode)) {\n          failWebsocketConnection(this.ws, 'Invalid opcode received')\n          return callback()\n        }\n\n        if (masked) {\n          failWebsocketConnection(this.ws, 'Frame cannot be masked')\n          return callback()\n        }\n\n        // MUST be 0 unless an extension is negotiated that defines meanings\n        // for non-zero values.  If a nonzero value is received and none of\n        // the negotiated extensions defines the meaning of such a nonzero\n        // value, the receiving endpoint MUST _Fail the WebSocket\n        // Connection_.\n        // This document allocates the RSV1 bit of the WebSocket header for\n        // PMCEs and calls the bit the \"Per-Message Compressed\" bit.  On a\n        // WebSocket connection where a PMCE is in use, this bit indicates\n        // whether a message is compressed or not.\n        if (rsv1 !== 0 && !this.#extensions.has('permessage-deflate')) {\n          failWebsocketConnection(this.ws, 'Expected RSV1 to be clear.')\n          return\n        }\n\n        if (rsv2 !== 0 || rsv3 !== 0) {\n          failWebsocketConnection(this.ws, 'RSV1, RSV2, RSV3 must be clear')\n          return\n        }\n\n        if (fragmented && !isTextBinaryFrame(opcode)) {\n          // Only text and binary frames can be fragmented\n          failWebsocketConnection(this.ws, 'Invalid frame type was fragmented.')\n          return\n        }\n\n        // If we are already parsing a text/binary frame and do not receive either\n        // a continuation frame or close frame, fail the connection.\n        if (isTextBinaryFrame(opcode) && this.#fragments.length > 0) {\n          failWebsocketConnection(this.ws, 'Expected continuation frame')\n          return\n        }\n\n        if (this.#info.fragmented && fragmented) {\n          // A fragmented frame can't be fragmented itself\n          failWebsocketConnection(this.ws, 'Fragmented frame exceeded 125 bytes.')\n          return\n        }\n\n        // \"All control frames MUST have a payload length of 125 bytes or less\n        // and MUST NOT be fragmented.\"\n        if ((payloadLength > 125 || fragmented) && isControlFrame(opcode)) {\n          failWebsocketConnection(this.ws, 'Control frame either too large or fragmented')\n          return\n        }\n\n        if (isContinuationFrame(opcode) && this.#fragments.length === 0 && !this.#info.compressed) {\n          failWebsocketConnection(this.ws, 'Unexpected continuation frame')\n          return\n        }\n\n        if (payloadLength <= 125) {\n          this.#info.payloadLength = payloadLength\n          this.#state = parserStates.READ_DATA\n        } else if (payloadLength === 126) {\n          this.#state = parserStates.PAYLOADLENGTH_16\n        } else if (payloadLength === 127) {\n          this.#state = parserStates.PAYLOADLENGTH_64\n        }\n\n        if (isTextBinaryFrame(opcode)) {\n          this.#info.binaryType = opcode\n          this.#info.compressed = rsv1 !== 0\n        }\n\n        this.#info.opcode = opcode\n        this.#info.masked = masked\n        this.#info.fin = fin\n        this.#info.fragmented = fragmented\n      } else if (this.#state === parserStates.PAYLOADLENGTH_16) {\n        if (this.#byteOffset < 2) {\n          return callback()\n        }\n\n        const buffer = this.consume(2)\n\n        this.#info.payloadLength = buffer.readUInt16BE(0)\n        this.#state = parserStates.READ_DATA\n      } else if (this.#state === parserStates.PAYLOADLENGTH_64) {\n        if (this.#byteOffset < 8) {\n          return callback()\n        }\n\n        const buffer = this.consume(8)\n        const upper = buffer.readUInt32BE(0)\n\n        // 2^31 is the maximum bytes an arraybuffer can contain\n        // on 32-bit systems. Although, on 64-bit systems, this is\n        // 2^53-1 bytes.\n        // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Errors/Invalid_array_length\n        // https://source.chromium.org/chromium/chromium/src/+/main:v8/src/common/globals.h;drc=1946212ac0100668f14eb9e2843bdd846e510a1e;bpv=1;bpt=1;l=1275\n        // https://source.chromium.org/chromium/chromium/src/+/main:v8/src/objects/js-array-buffer.h;l=34;drc=1946212ac0100668f14eb9e2843bdd846e510a1e\n        if (upper > 2 ** 31 - 1) {\n          failWebsocketConnection(this.ws, 'Received payload length > 2^31 bytes.')\n          return\n        }\n\n        const lower = buffer.readUInt32BE(4)\n\n        this.#info.payloadLength = (upper << 8) + lower\n        this.#state = parserStates.READ_DATA\n      } else if (this.#state === parserStates.READ_DATA) {\n        if (this.#byteOffset < this.#info.payloadLength) {\n          return callback()\n        }\n\n        const body = this.consume(this.#info.payloadLength)\n\n        if (isControlFrame(this.#info.opcode)) {\n          this.#loop = this.parseControlFrame(body)\n          this.#state = parserStates.INFO\n        } else {\n          if (!this.#info.compressed) {\n            this.#fragments.push(body)\n\n            // If the frame is not fragmented, a message has been received.\n            // If the frame is fragmented, it will terminate with a fin bit set\n            // and an opcode of 0 (continuation), therefore we handle that when\n            // parsing continuation frames, not here.\n            if (!this.#info.fragmented && this.#info.fin) {\n              const fullMessage = Buffer.concat(this.#fragments)\n              websocketMessageReceived(this.ws, this.#info.binaryType, fullMessage)\n              this.#fragments.length = 0\n            }\n\n            this.#state = parserStates.INFO\n          } else {\n            this.#extensions.get('permessage-deflate').decompress(body, this.#info.fin, (error, data) => {\n              if (error) {\n                closeWebSocketConnection(this.ws, 1007, error.message, error.message.length)\n                return\n              }\n\n              this.#fragments.push(data)\n\n              if (!this.#info.fin) {\n                this.#state = parserStates.INFO\n                this.#loop = true\n                this.run(callback)\n                return\n              }\n\n              websocketMessageReceived(this.ws, this.#info.binaryType, Buffer.concat(this.#fragments))\n\n              this.#loop = true\n              this.#state = parserStates.INFO\n              this.#fragments.length = 0\n              this.run(callback)\n            })\n\n            this.#loop = false\n            break\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Take n bytes from the buffered Buffers\n   * @param {number} n\n   * @returns {Buffer}\n   */\n  consume (n) {\n    if (n > this.#byteOffset) {\n      throw new Error('Called consume() before buffers satiated.')\n    } else if (n === 0) {\n      return emptyBuffer\n    }\n\n    if (this.#buffers[0].length === n) {\n      this.#byteOffset -= this.#buffers[0].length\n      return this.#buffers.shift()\n    }\n\n    const buffer = Buffer.allocUnsafe(n)\n    let offset = 0\n\n    while (offset !== n) {\n      const next = this.#buffers[0]\n      const { length } = next\n\n      if (length + offset === n) {\n        buffer.set(this.#buffers.shift(), offset)\n        break\n      } else if (length + offset > n) {\n        buffer.set(next.subarray(0, n - offset), offset)\n        this.#buffers[0] = next.subarray(n - offset)\n        break\n      } else {\n        buffer.set(this.#buffers.shift(), offset)\n        offset += next.length\n      }\n    }\n\n    this.#byteOffset -= n\n\n    return buffer\n  }\n\n  parseCloseBody (data) {\n    assert(data.length !== 1)\n\n    // https://datatracker.ietf.org/doc/html/rfc6455#section-7.1.5\n    /** @type {number|undefined} */\n    let code\n\n    if (data.length >= 2) {\n      // _The WebSocket Connection Close Code_ is\n      // defined as the status code (Section 7.4) contained in the first Close\n      // control frame received by the application\n      code = data.readUInt16BE(0)\n    }\n\n    if (code !== undefined && !isValidStatusCode(code)) {\n      return { code: 1002, reason: 'Invalid status code', error: true }\n    }\n\n    // https://datatracker.ietf.org/doc/html/rfc6455#section-7.1.6\n    /** @type {Buffer} */\n    let reason = data.subarray(2)\n\n    // Remove BOM\n    if (reason[0] === 0xEF && reason[1] === 0xBB && reason[2] === 0xBF) {\n      reason = reason.subarray(3)\n    }\n\n    try {\n      reason = utf8Decode(reason)\n    } catch {\n      return { code: 1007, reason: 'Invalid UTF-8', error: true }\n    }\n\n    return { code, reason, error: false }\n  }\n\n  /**\n   * Parses control frames.\n   * @param {Buffer} body\n   */\n  parseControlFrame (body) {\n    const { opcode, payloadLength } = this.#info\n\n    if (opcode === opcodes.CLOSE) {\n      if (payloadLength === 1) {\n        failWebsocketConnection(this.ws, 'Received close frame with a 1-byte body.')\n        return false\n      }\n\n      this.#info.closeInfo = this.parseCloseBody(body)\n\n      if (this.#info.closeInfo.error) {\n        const { code, reason } = this.#info.closeInfo\n\n        closeWebSocketConnection(this.ws, code, reason, reason.length)\n        failWebsocketConnection(this.ws, reason)\n        return false\n      }\n\n      if (this.ws[kSentClose] !== sentCloseFrameState.SENT) {\n        // If an endpoint receives a Close frame and did not previously send a\n        // Close frame, the endpoint MUST send a Close frame in response.  (When\n        // sending a Close frame in response, the endpoint typically echos the\n        // status code it received.)\n        let body = emptyBuffer\n        if (this.#info.closeInfo.code) {\n          body = Buffer.allocUnsafe(2)\n          body.writeUInt16BE(this.#info.closeInfo.code, 0)\n        }\n        const closeFrame = new WebsocketFrameSend(body)\n\n        this.ws[kResponse].socket.write(\n          closeFrame.createFrame(opcodes.CLOSE),\n          (err) => {\n            if (!err) {\n              this.ws[kSentClose] = sentCloseFrameState.SENT\n            }\n          }\n        )\n      }\n\n      // Upon either sending or receiving a Close control frame, it is said\n      // that _The WebSocket Closing Handshake is Started_ and that the\n      // WebSocket connection is in the CLOSING state.\n      this.ws[kReadyState] = states.CLOSING\n      this.ws[kReceivedClose] = true\n\n      return false\n    } else if (opcode === opcodes.PING) {\n      // Upon receipt of a Ping frame, an endpoint MUST send a Pong frame in\n      // response, unless it already received a Close frame.\n      // A Pong frame sent in response to a Ping frame must have identical\n      // \"Application data\"\n\n      if (!this.ws[kReceivedClose]) {\n        const frame = new WebsocketFrameSend(body)\n\n        this.ws[kResponse].socket.write(frame.createFrame(opcodes.PONG))\n\n        if (channels.ping.hasSubscribers) {\n          channels.ping.publish({\n            payload: body\n          })\n        }\n      }\n    } else if (opcode === opcodes.PONG) {\n      // A Pong frame MAY be sent unsolicited.  This serves as a\n      // unidirectional heartbeat.  A response to an unsolicited Pong frame is\n      // not expected.\n\n      if (channels.pong.hasSubscribers) {\n        channels.pong.publish({\n          payload: body\n        })\n      }\n    }\n\n    return true\n  }\n\n  get closingInfo () {\n    return this.#info.closeInfo\n  }\n}\n\nmodule.exports = {\n  ByteParser\n}\n", "'use strict'\n\nconst { WebsocketFrameSend } = require('./frame')\nconst { opcodes, sendHints } = require('./constants')\nconst FixedQueue = require('../../dispatcher/fixed-queue')\n\n/** @type {typeof Uint8Array} */\nconst FastBuffer = Buffer[Symbol.species]\n\n/**\n * @typedef {object} SendQueueNode\n * @property {Promise<void> | null} promise\n * @property {((...args: any[]) => any)} callback\n * @property {Buffer | null} frame\n */\n\nclass SendQueue {\n  /**\n   * @type {FixedQueue}\n   */\n  #queue = new FixedQueue()\n\n  /**\n   * @type {boolean}\n   */\n  #running = false\n\n  /** @type {import('node:net').Socket} */\n  #socket\n\n  constructor (socket) {\n    this.#socket = socket\n  }\n\n  add (item, cb, hint) {\n    if (hint !== sendHints.blob) {\n      const frame = createFrame(item, hint)\n      if (!this.#running) {\n        // fast-path\n        this.#socket.write(frame, cb)\n      } else {\n        /** @type {SendQueueNode} */\n        const node = {\n          promise: null,\n          callback: cb,\n          frame\n        }\n        this.#queue.push(node)\n      }\n      return\n    }\n\n    /** @type {SendQueueNode} */\n    const node = {\n      promise: item.arrayBuffer().then((ab) => {\n        node.promise = null\n        node.frame = createFrame(ab, hint)\n      }),\n      callback: cb,\n      frame: null\n    }\n\n    this.#queue.push(node)\n\n    if (!this.#running) {\n      this.#run()\n    }\n  }\n\n  async #run () {\n    this.#running = true\n    const queue = this.#queue\n    while (!queue.isEmpty()) {\n      const node = queue.shift()\n      // wait pending promise\n      if (node.promise !== null) {\n        await node.promise\n      }\n      // write\n      this.#socket.write(node.frame, node.callback)\n      // cleanup\n      node.callback = node.frame = null\n    }\n    this.#running = false\n  }\n}\n\nfunction createFrame (data, hint) {\n  return new WebsocketFrameSend(toBuffer(data, hint)).createFrame(hint === sendHints.string ? opcodes.TEXT : opcodes.BINARY)\n}\n\nfunction toBuffer (data, hint) {\n  switch (hint) {\n    case sendHints.string:\n      return Buffer.from(data)\n    case sendHints.arrayBuffer:\n    case sendHints.blob:\n      return new FastBuffer(data)\n    case sendHints.typedArray:\n      return new FastBuffer(data.buffer, data.byteOffset, data.byteLength)\n  }\n}\n\nmodule.exports = { SendQueue }\n", "'use strict'\n\nconst { webidl } = require('../fetch/webidl')\nconst { URLSerializer } = require('../fetch/data-url')\nconst { environmentSettingsObject } = require('../fetch/util')\nconst { staticPropertyDescriptors, states, sentCloseFrameState, sendHints } = require('./constants')\nconst {\n  kWebSocketURL,\n  kReadyState,\n  kController,\n  kBinaryType,\n  kResponse,\n  kSentClose,\n  kByteParser\n} = require('./symbols')\nconst {\n  isConnecting,\n  isEstablished,\n  isClosing,\n  isValidSubprotocol,\n  fireEvent\n} = require('./util')\nconst { establishWebSocketConnection, closeWebSocketConnection } = require('./connection')\nconst { ByteParser } = require('./receiver')\nconst { kEnumerableProperty, isBlobLike } = require('../../core/util')\nconst { getGlobalDispatcher } = require('../../global')\nconst { types } = require('node:util')\nconst { ErrorEvent, CloseEvent } = require('./events')\nconst { SendQueue } = require('./sender')\n\n// https://websockets.spec.whatwg.org/#interface-definition\nclass WebSocket extends EventTarget {\n  #events = {\n    open: null,\n    error: null,\n    close: null,\n    message: null\n  }\n\n  #bufferedAmount = 0\n  #protocol = ''\n  #extensions = ''\n\n  /** @type {SendQueue} */\n  #sendQueue\n\n  /**\n   * @param {string} url\n   * @param {string|string[]} protocols\n   */\n  constructor (url, protocols = []) {\n    super()\n\n    const prefix = 'WebSocket constructor'\n    webidl.argumentLengthCheck(arguments, 1, prefix)\n\n    const options = webidl.converters['DOMString or sequence<DOMString> or WebSocketInit'](protocols, prefix, 'options')\n\n    url = webidl.converters.USVString(url, prefix, 'url')\n    protocols = options.protocols\n\n    // 1. Let baseURL be this's relevant settings object's API base URL.\n    const baseURL = environmentSettingsObject.settingsObject.baseUrl\n\n    // 1. Let urlRecord be the result of applying the URL parser to url with baseURL.\n    let urlRecord\n\n    try {\n      urlRecord = new URL(url, baseURL)\n    } catch (e) {\n      // 3. If urlRecord is failure, then throw a \"SyntaxError\" DOMException.\n      throw new DOMException(e, 'SyntaxError')\n    }\n\n    // 4. If urlRecord’s scheme is \"http\", then set urlRecord’s scheme to \"ws\".\n    if (urlRecord.protocol === 'http:') {\n      urlRecord.protocol = 'ws:'\n    } else if (urlRecord.protocol === 'https:') {\n      // 5. Otherwise, if urlRecord’s scheme is \"https\", set urlRecord’s scheme to \"wss\".\n      urlRecord.protocol = 'wss:'\n    }\n\n    // 6. If urlRecord’s scheme is not \"ws\" or \"wss\", then throw a \"SyntaxError\" DOMException.\n    if (urlRecord.protocol !== 'ws:' && urlRecord.protocol !== 'wss:') {\n      throw new DOMException(\n        `Expected a ws: or wss: protocol, got ${urlRecord.protocol}`,\n        'SyntaxError'\n      )\n    }\n\n    // 7. If urlRecord’s fragment is non-null, then throw a \"SyntaxError\"\n    //    DOMException.\n    if (urlRecord.hash || urlRecord.href.endsWith('#')) {\n      throw new DOMException('Got fragment', 'SyntaxError')\n    }\n\n    // 8. If protocols is a string, set protocols to a sequence consisting\n    //    of just that string.\n    if (typeof protocols === 'string') {\n      protocols = [protocols]\n    }\n\n    // 9. If any of the values in protocols occur more than once or otherwise\n    //    fail to match the requirements for elements that comprise the value\n    //    of `Sec-WebSocket-Protocol` fields as defined by The WebSocket\n    //    protocol, then throw a \"SyntaxError\" DOMException.\n    if (protocols.length !== new Set(protocols.map(p => p.toLowerCase())).size) {\n      throw new DOMException('Invalid Sec-WebSocket-Protocol value', 'SyntaxError')\n    }\n\n    if (protocols.length > 0 && !protocols.every(p => isValidSubprotocol(p))) {\n      throw new DOMException('Invalid Sec-WebSocket-Protocol value', 'SyntaxError')\n    }\n\n    // 10. Set this's url to urlRecord.\n    this[kWebSocketURL] = new URL(urlRecord.href)\n\n    // 11. Let client be this's relevant settings object.\n    const client = environmentSettingsObject.settingsObject\n\n    // 12. Run this step in parallel:\n\n    //    1. Establish a WebSocket connection given urlRecord, protocols,\n    //       and client.\n    this[kController] = establishWebSocketConnection(\n      urlRecord,\n      protocols,\n      client,\n      this,\n      (response, extensions) => this.#onConnectionEstablished(response, extensions),\n      options\n    )\n\n    // Each WebSocket object has an associated ready state, which is a\n    // number representing the state of the connection. Initially it must\n    // be CONNECTING (0).\n    this[kReadyState] = WebSocket.CONNECTING\n\n    this[kSentClose] = sentCloseFrameState.NOT_SENT\n\n    // The extensions attribute must initially return the empty string.\n\n    // The protocol attribute must initially return the empty string.\n\n    // Each WebSocket object has an associated binary type, which is a\n    // BinaryType. Initially it must be \"blob\".\n    this[kBinaryType] = 'blob'\n  }\n\n  /**\n   * @see https://websockets.spec.whatwg.org/#dom-websocket-close\n   * @param {number|undefined} code\n   * @param {string|undefined} reason\n   */\n  close (code = undefined, reason = undefined) {\n    webidl.brandCheck(this, WebSocket)\n\n    const prefix = 'WebSocket.close'\n\n    if (code !== undefined) {\n      code = webidl.converters['unsigned short'](code, prefix, 'code', { clamp: true })\n    }\n\n    if (reason !== undefined) {\n      reason = webidl.converters.USVString(reason, prefix, 'reason')\n    }\n\n    // 1. If code is present, but is neither an integer equal to 1000 nor an\n    //    integer in the range 3000 to 4999, inclusive, throw an\n    //    \"InvalidAccessError\" DOMException.\n    if (code !== undefined) {\n      if (code !== 1000 && (code < 3000 || code > 4999)) {\n        throw new DOMException('invalid code', 'InvalidAccessError')\n      }\n    }\n\n    let reasonByteLength = 0\n\n    // 2. If reason is present, then run these substeps:\n    if (reason !== undefined) {\n      // 1. Let reasonBytes be the result of encoding reason.\n      // 2. If reasonBytes is longer than 123 bytes, then throw a\n      //    \"SyntaxError\" DOMException.\n      reasonByteLength = Buffer.byteLength(reason)\n\n      if (reasonByteLength > 123) {\n        throw new DOMException(\n          `Reason must be less than 123 bytes; received ${reasonByteLength}`,\n          'SyntaxError'\n        )\n      }\n    }\n\n    // 3. Run the first matching steps from the following list:\n    closeWebSocketConnection(this, code, reason, reasonByteLength)\n  }\n\n  /**\n   * @see https://websockets.spec.whatwg.org/#dom-websocket-send\n   * @param {NodeJS.TypedArray|ArrayBuffer|Blob|string} data\n   */\n  send (data) {\n    webidl.brandCheck(this, WebSocket)\n\n    const prefix = 'WebSocket.send'\n    webidl.argumentLengthCheck(arguments, 1, prefix)\n\n    data = webidl.converters.WebSocketSendData(data, prefix, 'data')\n\n    // 1. If this's ready state is CONNECTING, then throw an\n    //    \"InvalidStateError\" DOMException.\n    if (isConnecting(this)) {\n      throw new DOMException('Sent before connected.', 'InvalidStateError')\n    }\n\n    // 2. Run the appropriate set of steps from the following list:\n    // https://datatracker.ietf.org/doc/html/rfc6455#section-6.1\n    // https://datatracker.ietf.org/doc/html/rfc6455#section-5.2\n\n    if (!isEstablished(this) || isClosing(this)) {\n      return\n    }\n\n    // If data is a string\n    if (typeof data === 'string') {\n      // If the WebSocket connection is established and the WebSocket\n      // closing handshake has not yet started, then the user agent\n      // must send a WebSocket Message comprised of the data argument\n      // using a text frame opcode; if the data cannot be sent, e.g.\n      // because it would need to be buffered but the buffer is full,\n      // the user agent must flag the WebSocket as full and then close\n      // the WebSocket connection. Any invocation of this method with a\n      // string argument that does not throw an exception must increase\n      // the bufferedAmount attribute by the number of bytes needed to\n      // express the argument as UTF-8.\n\n      const length = Buffer.byteLength(data)\n\n      this.#bufferedAmount += length\n      this.#sendQueue.add(data, () => {\n        this.#bufferedAmount -= length\n      }, sendHints.string)\n    } else if (types.isArrayBuffer(data)) {\n      // If the WebSocket connection is established, and the WebSocket\n      // closing handshake has not yet started, then the user agent must\n      // send a WebSocket Message comprised of data using a binary frame\n      // opcode; if the data cannot be sent, e.g. because it would need\n      // to be buffered but the buffer is full, the user agent must flag\n      // the WebSocket as full and then close the WebSocket connection.\n      // The data to be sent is the data stored in the buffer described\n      // by the ArrayBuffer object. Any invocation of this method with an\n      // ArrayBuffer argument that does not throw an exception must\n      // increase the bufferedAmount attribute by the length of the\n      // ArrayBuffer in bytes.\n\n      this.#bufferedAmount += data.byteLength\n      this.#sendQueue.add(data, () => {\n        this.#bufferedAmount -= data.byteLength\n      }, sendHints.arrayBuffer)\n    } else if (ArrayBuffer.isView(data)) {\n      // If the WebSocket connection is established, and the WebSocket\n      // closing handshake has not yet started, then the user agent must\n      // send a WebSocket Message comprised of data using a binary frame\n      // opcode; if the data cannot be sent, e.g. because it would need to\n      // be buffered but the buffer is full, the user agent must flag the\n      // WebSocket as full and then close the WebSocket connection. The\n      // data to be sent is the data stored in the section of the buffer\n      // described by the ArrayBuffer object that data references. Any\n      // invocation of this method with this kind of argument that does\n      // not throw an exception must increase the bufferedAmount attribute\n      // by the length of data’s buffer in bytes.\n\n      this.#bufferedAmount += data.byteLength\n      this.#sendQueue.add(data, () => {\n        this.#bufferedAmount -= data.byteLength\n      }, sendHints.typedArray)\n    } else if (isBlobLike(data)) {\n      // If the WebSocket connection is established, and the WebSocket\n      // closing handshake has not yet started, then the user agent must\n      // send a WebSocket Message comprised of data using a binary frame\n      // opcode; if the data cannot be sent, e.g. because it would need to\n      // be buffered but the buffer is full, the user agent must flag the\n      // WebSocket as full and then close the WebSocket connection. The data\n      // to be sent is the raw data represented by the Blob object. Any\n      // invocation of this method with a Blob argument that does not throw\n      // an exception must increase the bufferedAmount attribute by the size\n      // of the Blob object’s raw data, in bytes.\n\n      this.#bufferedAmount += data.size\n      this.#sendQueue.add(data, () => {\n        this.#bufferedAmount -= data.size\n      }, sendHints.blob)\n    }\n  }\n\n  get readyState () {\n    webidl.brandCheck(this, WebSocket)\n\n    // The readyState getter steps are to return this's ready state.\n    return this[kReadyState]\n  }\n\n  get bufferedAmount () {\n    webidl.brandCheck(this, WebSocket)\n\n    return this.#bufferedAmount\n  }\n\n  get url () {\n    webidl.brandCheck(this, WebSocket)\n\n    // The url getter steps are to return this's url, serialized.\n    return URLSerializer(this[kWebSocketURL])\n  }\n\n  get extensions () {\n    webidl.brandCheck(this, WebSocket)\n\n    return this.#extensions\n  }\n\n  get protocol () {\n    webidl.brandCheck(this, WebSocket)\n\n    return this.#protocol\n  }\n\n  get onopen () {\n    webidl.brandCheck(this, WebSocket)\n\n    return this.#events.open\n  }\n\n  set onopen (fn) {\n    webidl.brandCheck(this, WebSocket)\n\n    if (this.#events.open) {\n      this.removeEventListener('open', this.#events.open)\n    }\n\n    if (typeof fn === 'function') {\n      this.#events.open = fn\n      this.addEventListener('open', fn)\n    } else {\n      this.#events.open = null\n    }\n  }\n\n  get onerror () {\n    webidl.brandCheck(this, WebSocket)\n\n    return this.#events.error\n  }\n\n  set onerror (fn) {\n    webidl.brandCheck(this, WebSocket)\n\n    if (this.#events.error) {\n      this.removeEventListener('error', this.#events.error)\n    }\n\n    if (typeof fn === 'function') {\n      this.#events.error = fn\n      this.addEventListener('error', fn)\n    } else {\n      this.#events.error = null\n    }\n  }\n\n  get onclose () {\n    webidl.brandCheck(this, WebSocket)\n\n    return this.#events.close\n  }\n\n  set onclose (fn) {\n    webidl.brandCheck(this, WebSocket)\n\n    if (this.#events.close) {\n      this.removeEventListener('close', this.#events.close)\n    }\n\n    if (typeof fn === 'function') {\n      this.#events.close = fn\n      this.addEventListener('close', fn)\n    } else {\n      this.#events.close = null\n    }\n  }\n\n  get onmessage () {\n    webidl.brandCheck(this, WebSocket)\n\n    return this.#events.message\n  }\n\n  set onmessage (fn) {\n    webidl.brandCheck(this, WebSocket)\n\n    if (this.#events.message) {\n      this.removeEventListener('message', this.#events.message)\n    }\n\n    if (typeof fn === 'function') {\n      this.#events.message = fn\n      this.addEventListener('message', fn)\n    } else {\n      this.#events.message = null\n    }\n  }\n\n  get binaryType () {\n    webidl.brandCheck(this, WebSocket)\n\n    return this[kBinaryType]\n  }\n\n  set binaryType (type) {\n    webidl.brandCheck(this, WebSocket)\n\n    if (type !== 'blob' && type !== 'arraybuffer') {\n      this[kBinaryType] = 'blob'\n    } else {\n      this[kBinaryType] = type\n    }\n  }\n\n  /**\n   * @see https://websockets.spec.whatwg.org/#feedback-from-the-protocol\n   */\n  #onConnectionEstablished (response, parsedExtensions) {\n    // processResponse is called when the \"response’s header list has been received and initialized.\"\n    // once this happens, the connection is open\n    this[kResponse] = response\n\n    const parser = new ByteParser(this, parsedExtensions)\n    parser.on('drain', onParserDrain)\n    parser.on('error', onParserError.bind(this))\n\n    response.socket.ws = this\n    this[kByteParser] = parser\n\n    this.#sendQueue = new SendQueue(response.socket)\n\n    // 1. Change the ready state to OPEN (1).\n    this[kReadyState] = states.OPEN\n\n    // 2. Change the extensions attribute’s value to the extensions in use, if\n    //    it is not the null value.\n    // https://datatracker.ietf.org/doc/html/rfc6455#section-9.1\n    const extensions = response.headersList.get('sec-websocket-extensions')\n\n    if (extensions !== null) {\n      this.#extensions = extensions\n    }\n\n    // 3. Change the protocol attribute’s value to the subprotocol in use, if\n    //    it is not the null value.\n    // https://datatracker.ietf.org/doc/html/rfc6455#section-1.9\n    const protocol = response.headersList.get('sec-websocket-protocol')\n\n    if (protocol !== null) {\n      this.#protocol = protocol\n    }\n\n    // 4. Fire an event named open at the WebSocket object.\n    fireEvent('open', this)\n  }\n}\n\n// https://websockets.spec.whatwg.org/#dom-websocket-connecting\nWebSocket.CONNECTING = WebSocket.prototype.CONNECTING = states.CONNECTING\n// https://websockets.spec.whatwg.org/#dom-websocket-open\nWebSocket.OPEN = WebSocket.prototype.OPEN = states.OPEN\n// https://websockets.spec.whatwg.org/#dom-websocket-closing\nWebSocket.CLOSING = WebSocket.prototype.CLOSING = states.CLOSING\n// https://websockets.spec.whatwg.org/#dom-websocket-closed\nWebSocket.CLOSED = WebSocket.prototype.CLOSED = states.CLOSED\n\nObject.defineProperties(WebSocket.prototype, {\n  CONNECTING: staticPropertyDescriptors,\n  OPEN: staticPropertyDescriptors,\n  CLOSING: staticPropertyDescriptors,\n  CLOSED: staticPropertyDescriptors,\n  url: kEnumerableProperty,\n  readyState: kEnumerableProperty,\n  bufferedAmount: kEnumerableProperty,\n  onopen: kEnumerableProperty,\n  onerror: kEnumerableProperty,\n  onclose: kEnumerableProperty,\n  close: kEnumerableProperty,\n  onmessage: kEnumerableProperty,\n  binaryType: kEnumerableProperty,\n  send: kEnumerableProperty,\n  extensions: kEnumerableProperty,\n  protocol: kEnumerableProperty,\n  [Symbol.toStringTag]: {\n    value: 'WebSocket',\n    writable: false,\n    enumerable: false,\n    configurable: true\n  }\n})\n\nObject.defineProperties(WebSocket, {\n  CONNECTING: staticPropertyDescriptors,\n  OPEN: staticPropertyDescriptors,\n  CLOSING: staticPropertyDescriptors,\n  CLOSED: staticPropertyDescriptors\n})\n\nwebidl.converters['sequence<DOMString>'] = webidl.sequenceConverter(\n  webidl.converters.DOMString\n)\n\nwebidl.converters['DOMString or sequence<DOMString>'] = function (V, prefix, argument) {\n  if (webidl.util.Type(V) === 'Object' && Symbol.iterator in V) {\n    return webidl.converters['sequence<DOMString>'](V)\n  }\n\n  return webidl.converters.DOMString(V, prefix, argument)\n}\n\n// This implements the proposal made in https://github.com/whatwg/websockets/issues/42\nwebidl.converters.WebSocketInit = webidl.dictionaryConverter([\n  {\n    key: 'protocols',\n    converter: webidl.converters['DOMString or sequence<DOMString>'],\n    defaultValue: () => new Array(0)\n  },\n  {\n    key: 'dispatcher',\n    converter: webidl.converters.any,\n    defaultValue: () => getGlobalDispatcher()\n  },\n  {\n    key: 'headers',\n    converter: webidl.nullableConverter(webidl.converters.HeadersInit)\n  }\n])\n\nwebidl.converters['DOMString or sequence<DOMString> or WebSocketInit'] = function (V) {\n  if (webidl.util.Type(V) === 'Object' && !(Symbol.iterator in V)) {\n    return webidl.converters.WebSocketInit(V)\n  }\n\n  return { protocols: webidl.converters['DOMString or sequence<DOMString>'](V) }\n}\n\nwebidl.converters.WebSocketSendData = function (V) {\n  if (webidl.util.Type(V) === 'Object') {\n    if (isBlobLike(V)) {\n      return webidl.converters.Blob(V, { strict: false })\n    }\n\n    if (ArrayBuffer.isView(V) || types.isArrayBuffer(V)) {\n      return webidl.converters.BufferSource(V)\n    }\n  }\n\n  return webidl.converters.USVString(V)\n}\n\nfunction onParserDrain () {\n  this.ws[kResponse].socket.resume()\n}\n\nfunction onParserError (err) {\n  let message\n  let code\n\n  if (err instanceof CloseEvent) {\n    message = err.reason\n    code = err.code\n  } else {\n    message = err.message\n  }\n\n  fireEvent('error', this, () => new ErrorEvent('error', { error: err, message }))\n\n  closeWebSocketConnection(this, code)\n}\n\nmodule.exports = {\n  WebSocket\n}\n", "'use strict'\n\n/**\n * Checks if the given value is a valid LastEventId.\n * @param {string} value\n * @returns {boolean}\n */\nfunction isValidLastEventId (value) {\n  // LastEventId should not contain U+0000 NULL\n  return value.indexOf('\\u0000') === -1\n}\n\n/**\n * Checks if the given value is a base 10 digit.\n * @param {string} value\n * @returns {boolean}\n */\nfunction isASCIINumber (value) {\n  if (value.length === 0) return false\n  for (let i = 0; i < value.length; i++) {\n    if (value.charCodeAt(i) < 0x30 || value.charCodeAt(i) > 0x39) return false\n  }\n  return true\n}\n\n// https://github.com/nodejs/undici/issues/2664\nfunction delay (ms) {\n  return new Promise((resolve) => {\n    setTimeout(resolve, ms).unref()\n  })\n}\n\nmodule.exports = {\n  isValidLastEventId,\n  isASCIINumber,\n  delay\n}\n", "'use strict'\nconst { Transform } = require('node:stream')\nconst { isASCIINumber, isValidLastEventId } = require('./util')\n\n/**\n * @type {number[]} BOM\n */\nconst BOM = [0xEF, 0xBB, 0xBF]\n/**\n * @type {10} LF\n */\nconst LF = 0x0A\n/**\n * @type {13} CR\n */\nconst CR = 0x0D\n/**\n * @type {58} COLON\n */\nconst COLON = 0x3A\n/**\n * @type {32} SPACE\n */\nconst SPACE = 0x20\n\n/**\n * @typedef {object} EventSourceStreamEvent\n * @type {object}\n * @property {string} [event] The event type.\n * @property {string} [data] The data of the message.\n * @property {string} [id] A unique ID for the event.\n * @property {string} [retry] The reconnection time, in milliseconds.\n */\n\n/**\n * @typedef eventSourceSettings\n * @type {object}\n * @property {string} lastEventId The last event ID received from the server.\n * @property {string} origin The origin of the event source.\n * @property {number} reconnectionTime The reconnection time, in milliseconds.\n */\n\nclass EventSourceStream extends Transform {\n  /**\n   * @type {eventSourceSettings}\n   */\n  state = null\n\n  /**\n   * Leading byte-order-mark check.\n   * @type {boolean}\n   */\n  checkBOM = true\n\n  /**\n   * @type {boolean}\n   */\n  crlfCheck = false\n\n  /**\n   * @type {boolean}\n   */\n  eventEndCheck = false\n\n  /**\n   * @type {Buffer}\n   */\n  buffer = null\n\n  pos = 0\n\n  event = {\n    data: undefined,\n    event: undefined,\n    id: undefined,\n    retry: undefined\n  }\n\n  /**\n   * @param {object} options\n   * @param {eventSourceSettings} options.eventSourceSettings\n   * @param {Function} [options.push]\n   */\n  constructor (options = {}) {\n    // Enable object mode as EventSourceStream emits objects of shape\n    // EventSourceStreamEvent\n    options.readableObjectMode = true\n\n    super(options)\n\n    this.state = options.eventSourceSettings || {}\n    if (options.push) {\n      this.push = options.push\n    }\n  }\n\n  /**\n   * @param {Buffer} chunk\n   * @param {string} _encoding\n   * @param {Function} callback\n   * @returns {void}\n   */\n  _transform (chunk, _encoding, callback) {\n    if (chunk.length === 0) {\n      callback()\n      return\n    }\n\n    // Cache the chunk in the buffer, as the data might not be complete while\n    // processing it\n    // TODO: Investigate if there is a more performant way to handle\n    // incoming chunks\n    // see: https://github.com/nodejs/undici/issues/2630\n    if (this.buffer) {\n      this.buffer = Buffer.concat([this.buffer, chunk])\n    } else {\n      this.buffer = chunk\n    }\n\n    // Strip leading byte-order-mark if we opened the stream and started\n    // the processing of the incoming data\n    if (this.checkBOM) {\n      switch (this.buffer.length) {\n        case 1:\n          // Check if the first byte is the same as the first byte of the BOM\n          if (this.buffer[0] === BOM[0]) {\n            // If it is, we need to wait for more data\n            callback()\n            return\n          }\n          // Set the checkBOM flag to false as we don't need to check for the\n          // BOM anymore\n          this.checkBOM = false\n\n          // The buffer only contains one byte so we need to wait for more data\n          callback()\n          return\n        case 2:\n          // Check if the first two bytes are the same as the first two bytes\n          // of the BOM\n          if (\n            this.buffer[0] === BOM[0] &&\n            this.buffer[1] === BOM[1]\n          ) {\n            // If it is, we need to wait for more data, because the third byte\n            // is needed to determine if it is the BOM or not\n            callback()\n            return\n          }\n\n          // Set the checkBOM flag to false as we don't need to check for the\n          // BOM anymore\n          this.checkBOM = false\n          break\n        case 3:\n          // Check if the first three bytes are the same as the first three\n          // bytes of the BOM\n          if (\n            this.buffer[0] === BOM[0] &&\n            this.buffer[1] === BOM[1] &&\n            this.buffer[2] === BOM[2]\n          ) {\n            // If it is, we can drop the buffered data, as it is only the BOM\n            this.buffer = Buffer.alloc(0)\n            // Set the checkBOM flag to false as we don't need to check for the\n            // BOM anymore\n            this.checkBOM = false\n\n            // Await more data\n            callback()\n            return\n          }\n          // If it is not the BOM, we can start processing the data\n          this.checkBOM = false\n          break\n        default:\n          // The buffer is longer than 3 bytes, so we can drop the BOM if it is\n          // present\n          if (\n            this.buffer[0] === BOM[0] &&\n            this.buffer[1] === BOM[1] &&\n            this.buffer[2] === BOM[2]\n          ) {\n            // Remove the BOM from the buffer\n            this.buffer = this.buffer.subarray(3)\n          }\n\n          // Set the checkBOM flag to false as we don't need to check for the\n          this.checkBOM = false\n          break\n      }\n    }\n\n    while (this.pos < this.buffer.length) {\n      // If the previous line ended with an end-of-line, we need to check\n      // if the next character is also an end-of-line.\n      if (this.eventEndCheck) {\n        // If the the current character is an end-of-line, then the event\n        // is finished and we can process it\n\n        // If the previous line ended with a carriage return, we need to\n        // check if the current character is a line feed and remove it\n        // from the buffer.\n        if (this.crlfCheck) {\n          // If the current character is a line feed, we can remove it\n          // from the buffer and reset the crlfCheck flag\n          if (this.buffer[this.pos] === LF) {\n            this.buffer = this.buffer.subarray(this.pos + 1)\n            this.pos = 0\n            this.crlfCheck = false\n\n            // It is possible that the line feed is not the end of the\n            // event. We need to check if the next character is an\n            // end-of-line character to determine if the event is\n            // finished. We simply continue the loop to check the next\n            // character.\n\n            // As we removed the line feed from the buffer and set the\n            // crlfCheck flag to false, we basically don't make any\n            // distinction between a line feed and a carriage return.\n            continue\n          }\n          this.crlfCheck = false\n        }\n\n        if (this.buffer[this.pos] === LF || this.buffer[this.pos] === CR) {\n          // If the current character is a carriage return, we need to\n          // set the crlfCheck flag to true, as we need to check if the\n          // next character is a line feed so we can remove it from the\n          // buffer\n          if (this.buffer[this.pos] === CR) {\n            this.crlfCheck = true\n          }\n\n          this.buffer = this.buffer.subarray(this.pos + 1)\n          this.pos = 0\n          if (\n            this.event.data !== undefined || this.event.event || this.event.id || this.event.retry) {\n            this.processEvent(this.event)\n          }\n          this.clearEvent()\n          continue\n        }\n        // If the current character is not an end-of-line, then the event\n        // is not finished and we have to reset the eventEndCheck flag\n        this.eventEndCheck = false\n        continue\n      }\n\n      // If the current character is an end-of-line, we can process the\n      // line\n      if (this.buffer[this.pos] === LF || this.buffer[this.pos] === CR) {\n        // If the current character is a carriage return, we need to\n        // set the crlfCheck flag to true, as we need to check if the\n        // next character is a line feed\n        if (this.buffer[this.pos] === CR) {\n          this.crlfCheck = true\n        }\n\n        // In any case, we can process the line as we reached an\n        // end-of-line character\n        this.parseLine(this.buffer.subarray(0, this.pos), this.event)\n\n        // Remove the processed line from the buffer\n        this.buffer = this.buffer.subarray(this.pos + 1)\n        // Reset the position as we removed the processed line from the buffer\n        this.pos = 0\n        // A line was processed and this could be the end of the event. We need\n        // to check if the next line is empty to determine if the event is\n        // finished.\n        this.eventEndCheck = true\n        continue\n      }\n\n      this.pos++\n    }\n\n    callback()\n  }\n\n  /**\n   * @param {Buffer} line\n   * @param {EventStreamEvent} event\n   */\n  parseLine (line, event) {\n    // If the line is empty (a blank line)\n    // Dispatch the event, as defined below.\n    // This will be handled in the _transform method\n    if (line.length === 0) {\n      return\n    }\n\n    // If the line starts with a U+003A COLON character (:)\n    // Ignore the line.\n    const colonPosition = line.indexOf(COLON)\n    if (colonPosition === 0) {\n      return\n    }\n\n    let field = ''\n    let value = ''\n\n    // If the line contains a U+003A COLON character (:)\n    if (colonPosition !== -1) {\n      // Collect the characters on the line before the first U+003A COLON\n      // character (:), and let field be that string.\n      // TODO: Investigate if there is a more performant way to extract the\n      // field\n      // see: https://github.com/nodejs/undici/issues/2630\n      field = line.subarray(0, colonPosition).toString('utf8')\n\n      // Collect the characters on the line after the first U+003A COLON\n      // character (:), and let value be that string.\n      // If value starts with a U+0020 SPACE character, remove it from value.\n      let valueStart = colonPosition + 1\n      if (line[valueStart] === SPACE) {\n        ++valueStart\n      }\n      // TODO: Investigate if there is a more performant way to extract the\n      // value\n      // see: https://github.com/nodejs/undici/issues/2630\n      value = line.subarray(valueStart).toString('utf8')\n\n      // Otherwise, the string is not empty but does not contain a U+003A COLON\n      // character (:)\n    } else {\n      // Process the field using the steps described below, using the whole\n      // line as the field name, and the empty string as the field value.\n      field = line.toString('utf8')\n      value = ''\n    }\n\n    // Modify the event with the field name and value. The value is also\n    // decoded as UTF-8\n    switch (field) {\n      case 'data':\n        if (event[field] === undefined) {\n          event[field] = value\n        } else {\n          event[field] += `\\n${value}`\n        }\n        break\n      case 'retry':\n        if (isASCIINumber(value)) {\n          event[field] = value\n        }\n        break\n      case 'id':\n        if (isValidLastEventId(value)) {\n          event[field] = value\n        }\n        break\n      case 'event':\n        if (value.length > 0) {\n          event[field] = value\n        }\n        break\n    }\n  }\n\n  /**\n   * @param {EventSourceStreamEvent} event\n   */\n  processEvent (event) {\n    if (event.retry && isASCIINumber(event.retry)) {\n      this.state.reconnectionTime = parseInt(event.retry, 10)\n    }\n\n    if (event.id && isValidLastEventId(event.id)) {\n      this.state.lastEventId = event.id\n    }\n\n    // only dispatch event, when data is provided\n    if (event.data !== undefined) {\n      this.push({\n        type: event.event || 'message',\n        options: {\n          data: event.data,\n          lastEventId: this.state.lastEventId,\n          origin: this.state.origin\n        }\n      })\n    }\n  }\n\n  clearEvent () {\n    this.event = {\n      data: undefined,\n      event: undefined,\n      id: undefined,\n      retry: undefined\n    }\n  }\n}\n\nmodule.exports = {\n  EventSourceStream\n}\n", "'use strict'\n\nconst { pipeline } = require('node:stream')\nconst { fetching } = require('../fetch')\nconst { makeRequest } = require('../fetch/request')\nconst { webidl } = require('../fetch/webidl')\nconst { EventSourceStream } = require('./eventsource-stream')\nconst { parseMIMEType } = require('../fetch/data-url')\nconst { createFastMessageEvent } = require('../websocket/events')\nconst { isNetworkError } = require('../fetch/response')\nconst { delay } = require('./util')\nconst { kEnumerableProperty } = require('../../core/util')\nconst { environmentSettingsObject } = require('../fetch/util')\n\nlet experimentalWarned = false\n\n/**\n * A reconnection time, in milliseconds. This must initially be an implementation-defined value,\n * probably in the region of a few seconds.\n *\n * In Comparison:\n * - Chrome uses 3000ms.\n * - Deno uses 5000ms.\n *\n * @type {3000}\n */\nconst defaultReconnectionTime = 3000\n\n/**\n * The readyState attribute represents the state of the connection.\n * @enum\n * @readonly\n * @see https://html.spec.whatwg.org/multipage/server-sent-events.html#dom-eventsource-readystate-dev\n */\n\n/**\n * The connection has not yet been established, or it was closed and the user\n * agent is reconnecting.\n * @type {0}\n */\nconst CONNECTING = 0\n\n/**\n * The user agent has an open connection and is dispatching events as it\n * receives them.\n * @type {1}\n */\nconst OPEN = 1\n\n/**\n * The connection is not open, and the user agent is not trying to reconnect.\n * @type {2}\n */\nconst CLOSED = 2\n\n/**\n * Requests for the element will have their mode set to \"cors\" and their credentials mode set to \"same-origin\".\n * @type {'anonymous'}\n */\nconst ANONYMOUS = 'anonymous'\n\n/**\n * Requests for the element will have their mode set to \"cors\" and their credentials mode set to \"include\".\n * @type {'use-credentials'}\n */\nconst USE_CREDENTIALS = 'use-credentials'\n\n/**\n * The EventSource interface is used to receive server-sent events. It\n * connects to a server over HTTP and receives events in text/event-stream\n * format without closing the connection.\n * @extends {EventTarget}\n * @see https://html.spec.whatwg.org/multipage/server-sent-events.html#server-sent-events\n * @api public\n */\nclass EventSource extends EventTarget {\n  #events = {\n    open: null,\n    error: null,\n    message: null\n  }\n\n  #url = null\n  #withCredentials = false\n\n  #readyState = CONNECTING\n\n  #request = null\n  #controller = null\n\n  #dispatcher\n\n  /**\n   * @type {import('./eventsource-stream').eventSourceSettings}\n   */\n  #state\n\n  /**\n   * Creates a new EventSource object.\n   * @param {string} url\n   * @param {EventSourceInit} [eventSourceInitDict]\n   * @see https://html.spec.whatwg.org/multipage/server-sent-events.html#the-eventsource-interface\n   */\n  constructor (url, eventSourceInitDict = {}) {\n    // 1. Let ev be a new EventSource object.\n    super()\n\n    const prefix = 'EventSource constructor'\n    webidl.argumentLengthCheck(arguments, 1, prefix)\n\n    if (!experimentalWarned) {\n      experimentalWarned = true\n      process.emitWarning('EventSource is experimental, expect them to change at any time.', {\n        code: 'UNDICI-ES'\n      })\n    }\n\n    url = webidl.converters.USVString(url, prefix, 'url')\n    eventSourceInitDict = webidl.converters.EventSourceInitDict(eventSourceInitDict, prefix, 'eventSourceInitDict')\n\n    this.#dispatcher = eventSourceInitDict.dispatcher\n    this.#state = {\n      lastEventId: '',\n      reconnectionTime: defaultReconnectionTime\n    }\n\n    // 2. Let settings be ev's relevant settings object.\n    // https://html.spec.whatwg.org/multipage/webappapis.html#environment-settings-object\n    const settings = environmentSettingsObject\n\n    let urlRecord\n\n    try {\n      // 3. Let urlRecord be the result of encoding-parsing a URL given url, relative to settings.\n      urlRecord = new URL(url, settings.settingsObject.baseUrl)\n      this.#state.origin = urlRecord.origin\n    } catch (e) {\n      // 4. If urlRecord is failure, then throw a \"SyntaxError\" DOMException.\n      throw new DOMException(e, 'SyntaxError')\n    }\n\n    // 5. Set ev's url to urlRecord.\n    this.#url = urlRecord.href\n\n    // 6. Let corsAttributeState be Anonymous.\n    let corsAttributeState = ANONYMOUS\n\n    // 7. If the value of eventSourceInitDict's withCredentials member is true,\n    // then set corsAttributeState to Use Credentials and set ev's\n    // withCredentials attribute to true.\n    if (eventSourceInitDict.withCredentials) {\n      corsAttributeState = USE_CREDENTIALS\n      this.#withCredentials = true\n    }\n\n    // 8. Let request be the result of creating a potential-CORS request given\n    // urlRecord, the empty string, and corsAttributeState.\n    const initRequest = {\n      redirect: 'follow',\n      keepalive: true,\n      // @see https://html.spec.whatwg.org/multipage/urls-and-fetching.html#cors-settings-attributes\n      mode: 'cors',\n      credentials: corsAttributeState === 'anonymous'\n        ? 'same-origin'\n        : 'omit',\n      referrer: 'no-referrer'\n    }\n\n    // 9. Set request's client to settings.\n    initRequest.client = environmentSettingsObject.settingsObject\n\n    // 10. User agents may set (`Accept`, `text/event-stream`) in request's header list.\n    initRequest.headersList = [['accept', { name: 'accept', value: 'text/event-stream' }]]\n\n    // 11. Set request's cache mode to \"no-store\".\n    initRequest.cache = 'no-store'\n\n    // 12. Set request's initiator type to \"other\".\n    initRequest.initiator = 'other'\n\n    initRequest.urlList = [new URL(this.#url)]\n\n    // 13. Set ev's request to request.\n    this.#request = makeRequest(initRequest)\n\n    this.#connect()\n  }\n\n  /**\n   * Returns the state of this EventSource object's connection. It can have the\n   * values described below.\n   * @returns {0|1|2}\n   * @readonly\n   */\n  get readyState () {\n    return this.#readyState\n  }\n\n  /**\n   * Returns the URL providing the event stream.\n   * @readonly\n   * @returns {string}\n   */\n  get url () {\n    return this.#url\n  }\n\n  /**\n   * Returns a boolean indicating whether the EventSource object was\n   * instantiated with CORS credentials set (true), or not (false, the default).\n   */\n  get withCredentials () {\n    return this.#withCredentials\n  }\n\n  #connect () {\n    if (this.#readyState === CLOSED) return\n\n    this.#readyState = CONNECTING\n\n    const fetchParams = {\n      request: this.#request,\n      dispatcher: this.#dispatcher\n    }\n\n    // 14. Let processEventSourceEndOfBody given response res be the following step: if res is not a network error, then reestablish the connection.\n    const processEventSourceEndOfBody = (response) => {\n      if (isNetworkError(response)) {\n        this.dispatchEvent(new Event('error'))\n        this.close()\n      }\n\n      this.#reconnect()\n    }\n\n    // 15. Fetch request, with processResponseEndOfBody set to processEventSourceEndOfBody...\n    fetchParams.processResponseEndOfBody = processEventSourceEndOfBody\n\n    // and processResponse set to the following steps given response res:\n    fetchParams.processResponse = (response) => {\n      // 1. If res is an aborted network error, then fail the connection.\n\n      if (isNetworkError(response)) {\n        // 1. When a user agent is to fail the connection, the user agent\n        // must queue a task which, if the readyState attribute is set to a\n        // value other than CLOSED, sets the readyState attribute to CLOSED\n        // and fires an event named error at the EventSource object. Once the\n        // user agent has failed the connection, it does not attempt to\n        // reconnect.\n        if (response.aborted) {\n          this.close()\n          this.dispatchEvent(new Event('error'))\n          return\n          // 2. Otherwise, if res is a network error, then reestablish the\n          // connection, unless the user agent knows that to be futile, in\n          // which case the user agent may fail the connection.\n        } else {\n          this.#reconnect()\n          return\n        }\n      }\n\n      // 3. Otherwise, if res's status is not 200, or if res's `Content-Type`\n      // is not `text/event-stream`, then fail the connection.\n      const contentType = response.headersList.get('content-type', true)\n      const mimeType = contentType !== null ? parseMIMEType(contentType) : 'failure'\n      const contentTypeValid = mimeType !== 'failure' && mimeType.essence === 'text/event-stream'\n      if (\n        response.status !== 200 ||\n        contentTypeValid === false\n      ) {\n        this.close()\n        this.dispatchEvent(new Event('error'))\n        return\n      }\n\n      // 4. Otherwise, announce the connection and interpret res's body\n      // line by line.\n\n      // When a user agent is to announce the connection, the user agent\n      // must queue a task which, if the readyState attribute is set to a\n      // value other than CLOSED, sets the readyState attribute to OPEN\n      // and fires an event named open at the EventSource object.\n      // @see https://html.spec.whatwg.org/multipage/server-sent-events.html#sse-processing-model\n      this.#readyState = OPEN\n      this.dispatchEvent(new Event('open'))\n\n      // If redirected to a different origin, set the origin to the new origin.\n      this.#state.origin = response.urlList[response.urlList.length - 1].origin\n\n      const eventSourceStream = new EventSourceStream({\n        eventSourceSettings: this.#state,\n        push: (event) => {\n          this.dispatchEvent(createFastMessageEvent(\n            event.type,\n            event.options\n          ))\n        }\n      })\n\n      pipeline(response.body.stream,\n        eventSourceStream,\n        (error) => {\n          if (\n            error?.aborted === false\n          ) {\n            this.close()\n            this.dispatchEvent(new Event('error'))\n          }\n        })\n    }\n\n    this.#controller = fetching(fetchParams)\n  }\n\n  /**\n   * @see https://html.spec.whatwg.org/multipage/server-sent-events.html#sse-processing-model\n   * @returns {Promise<void>}\n   */\n  async #reconnect () {\n    // When a user agent is to reestablish the connection, the user agent must\n    // run the following steps. These steps are run in parallel, not as part of\n    // a task. (The tasks that it queues, of course, are run like normal tasks\n    // and not themselves in parallel.)\n\n    // 1. Queue a task to run the following steps:\n\n    //   1. If the readyState attribute is set to CLOSED, abort the task.\n    if (this.#readyState === CLOSED) return\n\n    //   2. Set the readyState attribute to CONNECTING.\n    this.#readyState = CONNECTING\n\n    //   3. Fire an event named error at the EventSource object.\n    this.dispatchEvent(new Event('error'))\n\n    // 2. Wait a delay equal to the reconnection time of the event source.\n    await delay(this.#state.reconnectionTime)\n\n    // 5. Queue a task to run the following steps:\n\n    //   1. If the EventSource object's readyState attribute is not set to\n    //      CONNECTING, then return.\n    if (this.#readyState !== CONNECTING) return\n\n    //   2. Let request be the EventSource object's request.\n    //   3. If the EventSource object's last event ID string is not the empty\n    //      string, then:\n    //      1. Let lastEventIDValue be the EventSource object's last event ID\n    //         string, encoded as UTF-8.\n    //      2. Set (`Last-Event-ID`, lastEventIDValue) in request's header\n    //         list.\n    if (this.#state.lastEventId.length) {\n      this.#request.headersList.set('last-event-id', this.#state.lastEventId, true)\n    }\n\n    //   4. Fetch request and process the response obtained in this fashion, if any, as described earlier in this section.\n    this.#connect()\n  }\n\n  /**\n   * Closes the connection, if any, and sets the readyState attribute to\n   * CLOSED.\n   */\n  close () {\n    webidl.brandCheck(this, EventSource)\n\n    if (this.#readyState === CLOSED) return\n    this.#readyState = CLOSED\n    this.#controller.abort()\n    this.#request = null\n  }\n\n  get onopen () {\n    return this.#events.open\n  }\n\n  set onopen (fn) {\n    if (this.#events.open) {\n      this.removeEventListener('open', this.#events.open)\n    }\n\n    if (typeof fn === 'function') {\n      this.#events.open = fn\n      this.addEventListener('open', fn)\n    } else {\n      this.#events.open = null\n    }\n  }\n\n  get onmessage () {\n    return this.#events.message\n  }\n\n  set onmessage (fn) {\n    if (this.#events.message) {\n      this.removeEventListener('message', this.#events.message)\n    }\n\n    if (typeof fn === 'function') {\n      this.#events.message = fn\n      this.addEventListener('message', fn)\n    } else {\n      this.#events.message = null\n    }\n  }\n\n  get onerror () {\n    return this.#events.error\n  }\n\n  set onerror (fn) {\n    if (this.#events.error) {\n      this.removeEventListener('error', this.#events.error)\n    }\n\n    if (typeof fn === 'function') {\n      this.#events.error = fn\n      this.addEventListener('error', fn)\n    } else {\n      this.#events.error = null\n    }\n  }\n}\n\nconst constantsPropertyDescriptors = {\n  CONNECTING: {\n    __proto__: null,\n    configurable: false,\n    enumerable: true,\n    value: CONNECTING,\n    writable: false\n  },\n  OPEN: {\n    __proto__: null,\n    configurable: false,\n    enumerable: true,\n    value: OPEN,\n    writable: false\n  },\n  CLOSED: {\n    __proto__: null,\n    configurable: false,\n    enumerable: true,\n    value: CLOSED,\n    writable: false\n  }\n}\n\nObject.defineProperties(EventSource, constantsPropertyDescriptors)\nObject.defineProperties(EventSource.prototype, constantsPropertyDescriptors)\n\nObject.defineProperties(EventSource.prototype, {\n  close: kEnumerableProperty,\n  onerror: kEnumerableProperty,\n  onmessage: kEnumerableProperty,\n  onopen: kEnumerableProperty,\n  readyState: kEnumerableProperty,\n  url: kEnumerableProperty,\n  withCredentials: kEnumerableProperty\n})\n\nwebidl.converters.EventSourceInitDict = webidl.dictionaryConverter([\n  {\n    key: 'withCredentials',\n    converter: webidl.converters.boolean,\n    defaultValue: () => false\n  },\n  {\n    key: 'dispatcher', // undici only\n    converter: webidl.converters.any\n  }\n])\n\nmodule.exports = {\n  EventSource,\n  defaultReconnectionTime\n}\n", "'use strict'\n\nconst Client = require('./lib/dispatcher/client')\nconst Dispatcher = require('./lib/dispatcher/dispatcher')\nconst Pool = require('./lib/dispatcher/pool')\nconst BalancedPool = require('./lib/dispatcher/balanced-pool')\nconst Agent = require('./lib/dispatcher/agent')\nconst ProxyAgent = require('./lib/dispatcher/proxy-agent')\nconst EnvHttpProxyAgent = require('./lib/dispatcher/env-http-proxy-agent')\nconst RetryAgent = require('./lib/dispatcher/retry-agent')\nconst errors = require('./lib/core/errors')\nconst util = require('./lib/core/util')\nconst { InvalidArgumentError } = errors\nconst api = require('./lib/api')\nconst buildConnector = require('./lib/core/connect')\nconst MockClient = require('./lib/mock/mock-client')\nconst MockAgent = require('./lib/mock/mock-agent')\nconst MockPool = require('./lib/mock/mock-pool')\nconst mockErrors = require('./lib/mock/mock-errors')\nconst RetryHandler = require('./lib/handler/retry-handler')\nconst { getGlobalDispatcher, setGlobalDispatcher } = require('./lib/global')\nconst DecoratorHandler = require('./lib/handler/decorator-handler')\nconst RedirectHandler = require('./lib/handler/redirect-handler')\nconst createRedirectInterceptor = require('./lib/interceptor/redirect-interceptor')\n\nObject.assign(Dispatcher.prototype, api)\n\nmodule.exports.Dispatcher = Dispatcher\nmodule.exports.Client = Client\nmodule.exports.Pool = Pool\nmodule.exports.BalancedPool = BalancedPool\nmodule.exports.Agent = Agent\nmodule.exports.ProxyAgent = ProxyAgent\nmodule.exports.EnvHttpProxyAgent = EnvHttpProxyAgent\nmodule.exports.RetryAgent = RetryAgent\nmodule.exports.RetryHandler = RetryHandler\n\nmodule.exports.DecoratorHandler = DecoratorHandler\nmodule.exports.RedirectHandler = RedirectHandler\nmodule.exports.createRedirectInterceptor = createRedirectInterceptor\nmodule.exports.interceptors = {\n  redirect: require('./lib/interceptor/redirect'),\n  retry: require('./lib/interceptor/retry'),\n  dump: require('./lib/interceptor/dump')\n}\n\nmodule.exports.buildConnector = buildConnector\nmodule.exports.errors = errors\nmodule.exports.util = {\n  parseHeaders: util.parseHeaders,\n  headerNameToString: util.headerNameToString\n}\n\nfunction makeDispatcher (fn) {\n  return (url, opts, handler) => {\n    if (typeof opts === 'function') {\n      handler = opts\n      opts = null\n    }\n\n    if (!url || (typeof url !== 'string' && typeof url !== 'object' && !(url instanceof URL))) {\n      throw new InvalidArgumentError('invalid url')\n    }\n\n    if (opts != null && typeof opts !== 'object') {\n      throw new InvalidArgumentError('invalid opts')\n    }\n\n    if (opts && opts.path != null) {\n      if (typeof opts.path !== 'string') {\n        throw new InvalidArgumentError('invalid opts.path')\n      }\n\n      let path = opts.path\n      if (!opts.path.startsWith('/')) {\n        path = `/${path}`\n      }\n\n      url = new URL(util.parseOrigin(url).origin + path)\n    } else {\n      if (!opts) {\n        opts = typeof url === 'object' ? url : {}\n      }\n\n      url = util.parseURL(url)\n    }\n\n    const { agent, dispatcher = getGlobalDispatcher() } = opts\n\n    if (agent) {\n      throw new InvalidArgumentError('unsupported opts.agent. Did you mean opts.client?')\n    }\n\n    return fn.call(dispatcher, {\n      ...opts,\n      origin: url.origin,\n      path: url.search ? `${url.pathname}${url.search}` : url.pathname,\n      method: opts.method || (opts.body ? 'PUT' : 'GET')\n    }, handler)\n  }\n}\n\nmodule.exports.setGlobalDispatcher = setGlobalDispatcher\nmodule.exports.getGlobalDispatcher = getGlobalDispatcher\n\nconst fetchImpl = require('./lib/web/fetch').fetch\nmodule.exports.fetch = async function fetch (init, options = undefined) {\n  try {\n    return await fetchImpl(init, options)\n  } catch (err) {\n    if (err && typeof err === 'object') {\n      Error.captureStackTrace(err)\n    }\n\n    throw err\n  }\n}\nmodule.exports.Headers = require('./lib/web/fetch/headers').Headers\nmodule.exports.Response = require('./lib/web/fetch/response').Response\nmodule.exports.Request = require('./lib/web/fetch/request').Request\nmodule.exports.FormData = require('./lib/web/fetch/formdata').FormData\nmodule.exports.File = globalThis.File ?? require('node:buffer').File\nmodule.exports.FileReader = require('./lib/web/fileapi/filereader').FileReader\n\nconst { setGlobalOrigin, getGlobalOrigin } = require('./lib/web/fetch/global')\n\nmodule.exports.setGlobalOrigin = setGlobalOrigin\nmodule.exports.getGlobalOrigin = getGlobalOrigin\n\nconst { CacheStorage } = require('./lib/web/cache/cachestorage')\nconst { kConstruct } = require('./lib/web/cache/symbols')\n\n// Cache & CacheStorage are tightly coupled with fetch. Even if it may run\n// in an older version of Node, it doesn't have any use without fetch.\nmodule.exports.caches = new CacheStorage(kConstruct)\n\nconst { deleteCookie, getCookies, getSetCookies, setCookie } = require('./lib/web/cookies')\n\nmodule.exports.deleteCookie = deleteCookie\nmodule.exports.getCookies = getCookies\nmodule.exports.getSetCookies = getSetCookies\nmodule.exports.setCookie = setCookie\n\nconst { parseMIMEType, serializeAMimeType } = require('./lib/web/fetch/data-url')\n\nmodule.exports.parseMIMEType = parseMIMEType\nmodule.exports.serializeAMimeType = serializeAMimeType\n\nconst { CloseEvent, ErrorEvent, MessageEvent } = require('./lib/web/websocket/events')\nmodule.exports.WebSocket = require('./lib/web/websocket/websocket').WebSocket\nmodule.exports.CloseEvent = CloseEvent\nmodule.exports.ErrorEvent = ErrorEvent\nmodule.exports.MessageEvent = MessageEvent\n\nmodule.exports.request = makeDispatcher(api.request)\nmodule.exports.stream = makeDispatcher(api.stream)\nmodule.exports.pipeline = makeDispatcher(api.pipeline)\nmodule.exports.connect = makeDispatcher(api.connect)\nmodule.exports.upgrade = makeDispatcher(api.upgrade)\n\nmodule.exports.MockClient = MockClient\nmodule.exports.MockPool = MockPool\nmodule.exports.MockAgent = MockAgent\nmodule.exports.mockErrors = mockErrors\n\nconst { EventSource } = require('./lib/web/eventsource/eventsource')\n\nmodule.exports.EventSource = EventSource\n", "'use strict';\n\n/**\n * @typedef {Object} Colors\n * @property {number} Default 0x000000 | rgb(0,0,0)\n * @property {number} White 0xFFFFFF | rgb(255,255,255)\n * @property {number} Aqua 0x1ABC9C | rgb(26,188,156)\n * @property {number} Green 0x57F287 | rgb(87,242,135)\n * @property {number} Blue 0x3498DB | rgb(52,152,219)\n * @property {number} Yellow 0xFEE75C | rgb(254,231,92)\n * @property {number} Purple 0x9B59B6 | rgb(155,89,182)\n * @property {number} LuminousVividPink 0xE91E63 | rgb(233,30,99)\n * @property {number} Fuchsia 0xEB459E | rgb(235,69,158)\n * @property {number} Gold 0xF1C40F | rgb(241,196,15)\n * @property {number} Orange 0xE67E22 | rgb(230,126,34)\n * @property {number} Red 0xED4245 | rgb(237,66,69)\n * @property {number} Grey 0x95A5A6 | rgb(149,165,166)\n * @property {number} Navy 0x34495E | rgb(52,73,94)\n * @property {number} DarkAqua 0x11806A | rgb(17,128,106)\n * @property {number} DarkGreen 0x1F8B4C | rgb(31,139,76)\n * @property {number} DarkBlue 0x206694 | rgb(32,102,148)\n * @property {number} DarkPurple 0x71368A | rgb(113,54,138)\n * @property {number} DarkVividPink 0xAD1457 | rgb(173,20,87)\n * @property {number} DarkGold 0xC27C0E | rgb(194,124,14)\n * @property {number} DarkOrange 0xA84300 | rgb(168,67,0)\n * @property {number} DarkRed 0x992D22 | rgb(153,45,34)\n * @property {number} DarkGrey 0x979C9F | rgb(151,156,159)\n * @property {number} DarkerGrey 0x7F8C8D | rgb(127,140,141)\n * @property {number} LightGrey 0xBCC0C0 | rgb(188,192,192)\n * @property {number} DarkNavy 0x2C3E50 | rgb(44,62,80)\n * @property {number} Blurple 0x5865F2 | rgb(88,101,242)\n * @property {number} Greyple 0x99AAb5 | rgb(153,170,181)\n * @property {number} DarkButNotBlack 0x2C2F33 | rgb(44,47,51)\n * @property {number} NotQuiteBlack 0x23272A | rgb(35,39,42)\n */\n\n// JSDoc for IntelliSense purposes\n/**\n * @type {Colors}\n * @ignore\n */\nmodule.exports = {\n  Default: 0x000000,\n  White: 0xffffff,\n  Aqua: 0x1abc9c,\n  Green: 0x57f287,\n  Blue: 0x3498db,\n  Yellow: 0xfee75c,\n  Purple: 0x9b59b6,\n  LuminousVividPink: 0xe91e63,\n  Fuchsia: 0xeb459e,\n  Gold: 0xf1c40f,\n  Orange: 0xe67e22,\n  Red: 0xed4245,\n  Grey: 0x95a5a6,\n  Navy: 0x34495e,\n  DarkAqua: 0x11806a,\n  DarkGreen: 0x1f8b4c,\n  DarkBlue: 0x206694,\n  DarkPurple: 0x71368a,\n  DarkVividPink: 0xad1457,\n  DarkGold: 0xc27c0e,\n  DarkOrange: 0xa84300,\n  DarkRed: 0x992d22,\n  DarkGrey: 0x979c9f,\n  DarkerGrey: 0x7f8c8d,\n  LightGrey: 0xbcc0c0,\n  DarkNavy: 0x2c3e50,\n  Blurple: 0x5865f2,\n  Greyple: 0x99aab5,\n  DarkButNotBlack: 0x2c2f33,\n  NotQuiteBlack: 0x23272a,\n};\n", "'use strict';\n\nconst { DiscordjsRangeError, ErrorCodes } = require('../errors');\n\n/**\n * Data structure that makes it easy to interact with a bitfield.\n */\nclass BitField {\n  /**\n   * Numeric bitfield flags.\n   * <info>Defined in extension classes</info>\n   * @type {Object}\n   * @memberof BitField\n   * @abstract\n   */\n  static Flags = {};\n\n  /**\n   * @type {number|bigint}\n   * @memberof BitField\n   * @private\n   */\n  static DefaultBit = 0;\n\n  /**\n   * @param {BitFieldResolvable} [bits=this.constructor.DefaultBit] Bit(s) to read from\n   */\n  constructor(bits = this.constructor.DefaultBit) {\n    /**\n     * Bitfield of the packed bits\n     * @type {number|bigint}\n     */\n    this.bitfield = this.constructor.resolve(bits);\n  }\n\n  /**\n   * Checks whether the bitfield has a bit, or any of multiple bits.\n   * @param {BitFieldResolvable} bit Bit(s) to check for\n   * @returns {boolean}\n   */\n  any(bit) {\n    return (this.bitfield & this.constructor.resolve(bit)) !== this.constructor.DefaultBit;\n  }\n\n  /**\n   * Checks if this bitfield equals another\n   * @param {BitFieldResolvable} bit Bit(s) to check for\n   * @returns {boolean}\n   */\n  equals(bit) {\n    return this.bitfield === this.constructor.resolve(bit);\n  }\n\n  /**\n   * Checks whether the bitfield has a bit, or multiple bits.\n   * @param {BitFieldResolvable} bit Bit(s) to check for\n   * @returns {boolean}\n   */\n  has(bit) {\n    bit = this.constructor.resolve(bit);\n    return (this.bitfield & bit) === bit;\n  }\n\n  /**\n   * Gets all given bits that are missing from the bitfield.\n   * @param {BitFieldResolvable} bits Bit(s) to check for\n   * @param {...*} hasParams Additional parameters for the has method, if any\n   * @returns {string[]}\n   */\n  missing(bits, ...hasParams) {\n    return new this.constructor(bits).remove(this).toArray(...hasParams);\n  }\n\n  /**\n   * Freezes these bits, making them immutable.\n   * @returns {Readonly<BitField>}\n   */\n  freeze() {\n    return Object.freeze(this);\n  }\n\n  /**\n   * Adds bits to these ones.\n   * @param {...BitFieldResolvable} [bits] Bits to add\n   * @returns {BitField} These bits or new BitField if the instance is frozen.\n   */\n  add(...bits) {\n    let total = this.constructor.DefaultBit;\n    for (const bit of bits) {\n      total |= this.constructor.resolve(bit);\n    }\n    if (Object.isFrozen(this)) return new this.constructor(this.bitfield | total);\n    this.bitfield |= total;\n    return this;\n  }\n\n  /**\n   * Removes bits from these.\n   * @param {...BitFieldResolvable} [bits] Bits to remove\n   * @returns {BitField} These bits or new BitField if the instance is frozen.\n   */\n  remove(...bits) {\n    let total = this.constructor.DefaultBit;\n    for (const bit of bits) {\n      total |= this.constructor.resolve(bit);\n    }\n    if (Object.isFrozen(this)) return new this.constructor(this.bitfield & ~total);\n    this.bitfield &= ~total;\n    return this;\n  }\n\n  /**\n   * Gets an object mapping field names to a {@link boolean} indicating whether the\n   * bit is available.\n   * @param {...*} hasParams Additional parameters for the has method, if any\n   * @returns {Object}\n   */\n  serialize(...hasParams) {\n    const serialized = {};\n    for (const [flag, bit] of Object.entries(this.constructor.Flags)) {\n      if (isNaN(flag)) serialized[flag] = this.has(bit, ...hasParams);\n    }\n    return serialized;\n  }\n\n  /**\n   * Gets an {@link Array} of bitfield names based on the bits available.\n   * @param {...*} hasParams Additional parameters for the has method, if any\n   * @returns {string[]}\n   */\n  toArray(...hasParams) {\n    return [...this[Symbol.iterator](...hasParams)];\n  }\n\n  toJSON() {\n    return typeof this.bitfield === 'number' ? this.bitfield : this.bitfield.toString();\n  }\n\n  valueOf() {\n    return this.bitfield;\n  }\n\n  *[Symbol.iterator](...hasParams) {\n    for (const bitName of Object.keys(this.constructor.Flags)) {\n      if (isNaN(bitName) && this.has(bitName, ...hasParams)) yield bitName;\n    }\n  }\n\n  /**\n   * Data that can be resolved to give a bitfield. This can be:\n   * * A bit number (this can be a number literal or a value taken from {@link BitField.Flags})\n   * * A string bit number\n   * * An instance of BitField\n   * * An Array of BitFieldResolvable\n   * @typedef {number|string|bigint|BitField|BitFieldResolvable[]} BitFieldResolvable\n   */\n\n  /**\n   * Resolves bitfields to their numeric form.\n   * @param {BitFieldResolvable} [bit] bit(s) to resolve\n   * @returns {number|bigint}\n   */\n  static resolve(bit) {\n    const { DefaultBit } = this;\n    if (typeof DefaultBit === typeof bit && bit >= DefaultBit) return bit;\n    if (bit instanceof BitField) return bit.bitfield;\n    if (Array.isArray(bit)) {\n      return bit.map(bit_ => this.resolve(bit_)).reduce((prev, bit_) => prev | bit_, DefaultBit);\n    }\n    if (typeof bit === 'string') {\n      if (!isNaN(bit)) return typeof DefaultBit === 'bigint' ? BigInt(bit) : Number(bit);\n      if (this.Flags[bit] !== undefined) return this.Flags[bit];\n    }\n    throw new DiscordjsRangeError(ErrorCodes.BitFieldInvalid, bit);\n  }\n}\n\nmodule.exports = BitField;\n", "'use strict';\n\nconst { AttachmentFlags } = require('discord-api-types/v10');\nconst BitField = require('./BitField');\n\n/**\n * Data structure that makes it easy to interact with an {@link Attachment#flags} bitfield.\n * @extends {BitField}\n */\nclass AttachmentFlagsBitField extends BitField {\n  /**\n   * Numeric attachment flags.\n   * @type {AttachmentFlags}\n   * @memberof AttachmentFlagsBitField\n   */\n  static Flags = AttachmentFlags;\n}\n\n/**\n * @name AttachmentFlagsBitField\n * @kind constructor\n * @memberof AttachmentFlagsBitField\n * @param {BitFieldResolvable} [bits=0] Bit(s) to read from\n */\n\nmodule.exports = AttachmentFlagsBitField;\n", "'use strict';\n\nconst AttachmentFlagsBitField = require('../util/AttachmentFlagsBitField.js');\nconst { basename, flatten } = require('../util/Util');\n\n/**\n * @typedef {Object} AttachmentPayload\n * @property {?string} name The name of the attachment\n * @property {Stream|BufferResolvable} attachment The attachment in this payload\n * @property {?string} description The description of the attachment\n */\n\n/**\n * Represents an attachment\n */\nclass Attachment {\n  constructor(data) {\n    this.attachment = data.url;\n    /**\n     * The name of this attachment\n     * @type {string}\n     */\n    this.name = data.filename;\n    this._patch(data);\n  }\n\n  _patch(data) {\n    /**\n     * The attachment's id\n     * @type {Snowflake}\n     */\n    this.id = data.id;\n\n    if ('size' in data) {\n      /**\n       * The size of this attachment in bytes\n       * @type {number}\n       */\n      this.size = data.size;\n    }\n\n    if ('url' in data) {\n      /**\n       * The URL to this attachment\n       * @type {string}\n       */\n      this.url = data.url;\n    }\n\n    if ('proxy_url' in data) {\n      /**\n       * The Proxy URL to this attachment\n       * @type {string}\n       */\n      this.proxyURL = data.proxy_url;\n    }\n\n    if ('height' in data) {\n      /**\n       * The height of this attachment (if an image or video)\n       * @type {?number}\n       */\n      this.height = data.height;\n    } else {\n      this.height ??= null;\n    }\n\n    if ('width' in data) {\n      /**\n       * The width of this attachment (if an image or video)\n       * @type {?number}\n       */\n      this.width = data.width;\n    } else {\n      this.width ??= null;\n    }\n\n    if ('content_type' in data) {\n      /**\n       * The media (MIME) type of this attachment\n       * @type {?string}\n       * @see {@link https://developer.mozilla.org/docs/Web/HTTP/Basics_of_HTTP/MIME_types/Common_types}\n       */\n      this.contentType = data.content_type;\n    } else {\n      this.contentType ??= null;\n    }\n\n    if ('description' in data) {\n      /**\n       * The description (alt text) of this attachment\n       * @type {?string}\n       */\n      this.description = data.description;\n    } else {\n      this.description ??= null;\n    }\n\n    /**\n     * Whether this attachment is ephemeral\n     * @type {boolean}\n     */\n    this.ephemeral = data.ephemeral ?? false;\n\n    if ('duration_secs' in data) {\n      /**\n       * The duration of this attachment in seconds\n       * <info>This will only be available if the attachment is an audio file.</info>\n       * @type {?number}\n       */\n      this.duration = data.duration_secs;\n    } else {\n      this.duration ??= null;\n    }\n\n    if ('waveform' in data) {\n      /**\n       * The base64 encoded byte array representing a sampled waveform\n       * <info>This will only be available if the attachment is an audio file.</info>\n       * @type {?string}\n       */\n      this.waveform = data.waveform;\n    } else {\n      this.waveform ??= null;\n    }\n\n    if ('flags' in data) {\n      /**\n       * The flags of this attachment\n       * @type {Readonly<AttachmentFlagsBitField>}\n       */\n      this.flags = new AttachmentFlagsBitField(data.flags).freeze();\n    } else {\n      this.flags ??= new AttachmentFlagsBitField().freeze();\n    }\n\n    if ('title' in data) {\n      /**\n       * The title of this attachment\n       * <info>This will only be available if the attachment name contains special characters.</info>\n       * @type {?string}\n       */\n      this.title = data.title;\n    } else {\n      this.title ??= null;\n    }\n  }\n\n  /**\n   * Whether or not this attachment has been marked as a spoiler\n   * @type {boolean}\n   * @readonly\n   */\n  get spoiler() {\n    return basename(this.url ?? this.name).startsWith('SPOILER_');\n  }\n\n  toJSON() {\n    return flatten(this);\n  }\n}\n\nmodule.exports = Attachment;\n", "'use strict';\n\nconst { flatten } = require('../util/Util');\n\n/**\n * Represents a data model that is identifiable by a Snowflake (i.e. Discord API data models).\n * @abstract\n */\nclass Base {\n  constructor(client) {\n    /**\n     * The client that instantiated this\n     * @name Base#client\n     * @type {Client}\n     * @readonly\n     */\n    Object.defineProperty(this, 'client', { value: client });\n  }\n\n  _clone() {\n    return Object.assign(Object.create(this), this);\n  }\n\n  _patch(data) {\n    return data;\n  }\n\n  _update(data) {\n    const clone = this._clone();\n    this._patch(data);\n    return clone;\n  }\n\n  toJSON(...props) {\n    return flatten(this, ...props);\n  }\n\n  valueOf() {\n    return this.id;\n  }\n}\n\nmodule.exports = Base;\n", "'use strict';\n\nconst { ChannelFlags } = require('discord-api-types/v10');\nconst BitField = require('./BitField');\n\n/**\n * Data structure that makes it easy to interact with a {@link BaseChannel#flags} bitfield.\n * @extends {BitField}\n */\nclass ChannelFlagsBitField extends BitField {\n  /**\n   * Numeric guild channel flags.\n   * @type {ChannelFlags}\n   * @memberof ChannelFlagsBitField\n   */\n  static Flags = ChannelFlags;\n}\n\n/**\n * @name ChannelFlagsBitField\n * @kind constructor\n * @memberof ChannelFlagsBitField\n * @param {BitFieldResolvable} [bits=0] Bit(s) to read from\n */\n\n/**\n * Bitfield of the packed bits\n * @type {number}\n * @name ChannelFlagsBitField#bitfield\n */\n\n/**\n * Data that can be resolved to give a channel flag bitfield. This can be:\n * * A string (see {@link ChannelFlagsBitField.Flags})\n * * A channel flag\n * * An instance of ChannelFlagsBitField\n * * An Array of ChannelFlagsResolvable\n * @typedef {string|number|ChannelFlagsBitField|ChannelFlagsResolvable[]} ChannelFlagsResolvable\n */\n\nmodule.exports = ChannelFlagsBitField;\n", "'use strict';\n\nconst { ChannelType, MessageType, ComponentType, ImageFormat, StickerFormatType } = require('discord-api-types/v10');\n\n/**\n * Max bulk deletable message age\n * @typedef {number} MaxBulkDeletableMessageAge\n */\nexports.MaxBulkDeletableMessageAge = 1_209_600_000;\n\n/**\n * The name of an item to be swept in Sweepers\n * * `autoModerationRules`\n * * `applicationCommands` - both global and guild commands\n * * `bans`\n * * `emojis`\n * * `entitlements`\n * * `invites` - accepts the `lifetime` property, using it will sweep based on expires timestamp\n * * `guildMembers`\n * * `messages` - accepts the `lifetime` property, using it will sweep based on edited or created timestamp\n * * `presences`\n * * `reactions`\n * * `stageInstances`\n * * `stickers`\n * * `threadMembers`\n * * `threads` - accepts the `lifetime` property, using it will sweep archived threads based on archived timestamp\n * * `users`\n * * `voiceStates`\n * @typedef {string} SweeperKey\n */\nexports.SweeperKeys = [\n  'autoModerationRules',\n  'applicationCommands',\n  'bans',\n  'emojis',\n  'entitlements',\n  'invites',\n  'guildMembers',\n  'messages',\n  'presences',\n  'reactions',\n  'stageInstances',\n  'stickers',\n  'threadMembers',\n  'threads',\n  'users',\n  'voiceStates',\n];\n\n/**\n * The types of messages that are not `System`. The available types are:\n * * {@link MessageType.Default}\n * * {@link MessageType.Reply}\n * * {@link MessageType.ChatInputCommand}\n * * {@link MessageType.ContextMenuCommand}\n * @typedef {MessageType[]} NonSystemMessageTypes\n */\nexports.NonSystemMessageTypes = [\n  MessageType.Default,\n  MessageType.Reply,\n  MessageType.ChatInputCommand,\n  MessageType.ContextMenuCommand,\n];\n\n/**\n * The guild channels that are text-based.\n * * TextChannel\n * * NewsChannel\n * * ThreadChannel\n * * VoiceChannel\n * * StageChannel\n * @typedef {TextChannel|NewsChannel|ThreadChannel|VoiceChannel|StageChannel} GuildTextBasedChannel\n */\n\n/**\n * The types of guild channels that are text-based. The available types are:\n * * {@link ChannelType.GuildText}\n * * {@link ChannelType.GuildAnnouncement}\n * * {@link ChannelType.AnnouncementThread}\n * * {@link ChannelType.PublicThread}\n * * {@link ChannelType.PrivateThread}\n * * {@link ChannelType.GuildVoice}\n * * {@link ChannelType.GuildStageVoice}\n * @typedef {ChannelType[]} GuildTextBasedChannelTypes\n */\nexports.GuildTextBasedChannelTypes = [\n  ChannelType.GuildText,\n  ChannelType.GuildAnnouncement,\n  ChannelType.AnnouncementThread,\n  ChannelType.PublicThread,\n  ChannelType.PrivateThread,\n  ChannelType.GuildVoice,\n  ChannelType.GuildStageVoice,\n];\n\n/**\n * The channels that are text-based.\n * * {@link DMChannel}\n * * {@link GuildTextBasedChannel}\n * @typedef {DMChannel|GuildTextBasedChannel} TextBasedChannels\n */\n\n/**\n * Data that resolves to give a text-based channel. This can be:\n * * A {@link TextBasedChannel}\n * * A {@link Snowflake}\n * @typedef {TextBasedChannels|Snowflake} TextBasedChannelsResolvable\n */\n\n/**\n * The types of channels that are text-based. The available types are:\n * * {@link ChannelType.DM}\n * * {@link ChannelType.GuildText}\n * * {@link ChannelType.GuildAnnouncement}\n * * {@link ChannelType.AnnouncementThread}\n * * {@link ChannelType.PublicThread}\n * * {@link ChannelType.PrivateThread}\n * * {@link ChannelType.GuildVoice}\n * * {@link ChannelType.GuildStageVoice}\n * * {@link ChannelType.GroupDM}\n * @typedef {ChannelType[]} TextBasedChannelTypes\n */\nexports.TextBasedChannelTypes = [...exports.GuildTextBasedChannelTypes, ChannelType.DM, ChannelType.GroupDM];\n\n/**\n * The types of channels that are text-based and can have messages sent into. The available types are:\n * * {@link ChannelType.DM}\n * * {@link ChannelType.GuildText}\n * * {@link ChannelType.GuildAnnouncement}\n * * {@link ChannelType.AnnouncementThread}\n * * {@link ChannelType.PublicThread}\n * * {@link ChannelType.PrivateThread}\n * * {@link ChannelType.GuildVoice}\n * * {@link ChannelType.GuildStageVoice}\n * @typedef {ChannelType[]} SendableChannels\n */\nexports.SendableChannels = [...exports.GuildTextBasedChannelTypes, ChannelType.DM];\n\n/**\n * The types of channels that are threads. The available types are:\n * * {@link ChannelType.AnnouncementThread}\n * * {@link ChannelType.PublicThread}\n * * {@link ChannelType.PrivateThread}\n * @typedef {ChannelType[]} ThreadChannelTypes\n */\nexports.ThreadChannelTypes = [ChannelType.AnnouncementThread, ChannelType.PublicThread, ChannelType.PrivateThread];\n\n/**\n * The types of channels that are voice-based. The available types are:\n * * {@link ChannelType.GuildVoice}\n * * {@link ChannelType.GuildStageVoice}\n * @typedef {ChannelType[]} VoiceBasedChannelTypes\n */\nexports.VoiceBasedChannelTypes = [ChannelType.GuildVoice, ChannelType.GuildStageVoice];\n\n/**\n * The types of select menus. The available types are:\n * * {@link ComponentType.StringSelect}\n * * {@link ComponentType.UserSelect}\n * * {@link ComponentType.RoleSelect}\n * * {@link ComponentType.MentionableSelect}\n * * {@link ComponentType.ChannelSelect}\n * @typedef {ComponentType[]} SelectMenuTypes\n */\nexports.SelectMenuTypes = [\n  ComponentType.StringSelect,\n  ComponentType.UserSelect,\n  ComponentType.RoleSelect,\n  ComponentType.MentionableSelect,\n  ComponentType.ChannelSelect,\n];\n\n/**\n * The types of messages that cannot be deleted. The available types are:\n * * {@link MessageType.RecipientAdd}\n * * {@link MessageType.RecipientRemove}\n * * {@link MessageType.Call}\n * * {@link MessageType.ChannelNameChange}\n * * {@link MessageType.ChannelIconChange}\n * * {@link MessageType.ThreadStarterMessage}\n * @typedef {MessageType[]} UndeletableMessageTypes\n */\nexports.UndeletableMessageTypes = [\n  MessageType.RecipientAdd,\n  MessageType.RecipientRemove,\n  MessageType.Call,\n  MessageType.ChannelNameChange,\n  MessageType.ChannelIconChange,\n  MessageType.ThreadStarterMessage,\n];\n\n/**\n * The types of messages that can be deleted. The available types are:\n * * {@link MessageType.AutoModerationAction}\n * * {@link MessageType.ChannelFollowAdd}\n * * {@link MessageType.ChannelPinnedMessage}\n * * {@link MessageType.ChatInputCommand}\n * * {@link MessageType.ContextMenuCommand}\n * * {@link MessageType.Default}\n * * {@link MessageType.GuildBoost}\n * * {@link MessageType.GuildBoostTier1}\n * * {@link MessageType.GuildBoostTier2}\n * * {@link MessageType.GuildBoostTier3}\n * * {@link MessageType.GuildInviteReminder}\n * * {@link MessageType.InteractionPremiumUpsell}\n * * {@link MessageType.Reply}\n * * {@link MessageType.RoleSubscriptionPurchase}\n * * {@link MessageType.StageEnd}\n * * {@link MessageType.StageRaiseHand}\n * * {@link MessageType.StageSpeaker}\n * * {@link MessageType.StageStart}\n * * {@link MessageType.StageTopic}\n * * {@link MessageType.ThreadCreated}\n * * {@link MessageType.UserJoin}\n * @typedef {MessageType[]} DeletableMessageTypes\n * @deprecated This list will no longer be updated. Use {@link UndeletableMessageTypes} instead.\n */\nexports.DeletableMessageTypes = [\n  MessageType.AutoModerationAction,\n  MessageType.ChannelFollowAdd,\n  MessageType.ChannelPinnedMessage,\n  MessageType.ChatInputCommand,\n  MessageType.ContextMenuCommand,\n  MessageType.Default,\n  MessageType.GuildBoost,\n  MessageType.GuildBoostTier1,\n  MessageType.GuildBoostTier2,\n  MessageType.GuildBoostTier3,\n  MessageType.GuildInviteReminder,\n  MessageType.InteractionPremiumUpsell,\n  MessageType.Reply,\n  MessageType.RoleSubscriptionPurchase,\n  MessageType.StageEnd,\n  MessageType.StageRaiseHand,\n  MessageType.StageSpeaker,\n  MessageType.StageStart,\n  MessageType.StageTopic,\n  MessageType.ThreadCreated,\n  MessageType.UserJoin,\n];\n\n/**\n * A mapping between sticker formats and their respective image formats.\n * * {@link StickerFormatType.PNG} -> {@link ImageFormat.PNG}\n * * {@link StickerFormatType.APNG} -> {@link ImageFormat.PNG}\n * * {@link StickerFormatType.Lottie} -> {@link ImageFormat.Lottie}\n * * {@link StickerFormatType.GIF} -> {@link ImageFormat.GIF}\n * @typedef {Object} StickerFormatExtensionMap\n */\nexports.StickerFormatExtensionMap = {\n  [StickerFormatType.PNG]: ImageFormat.PNG,\n  [StickerFormatType.APNG]: ImageFormat.PNG,\n  [StickerFormatType.Lottie]: ImageFormat.Lottie,\n  [StickerFormatType.GIF]: ImageFormat.GIF,\n};\n\n/**\n * @typedef {Object} Constants Constants that can be used in an enum or object-like way.\n * @property {number} MaxBulkDeletableMessageAge Max bulk deletable message age\n * @property {SweeperKey[]} SweeperKeys The possible names of items that can be swept in sweepers\n * @property {NonSystemMessageTypes} NonSystemMessageTypes The types of messages that are not deemed a system type\n * @property {TextBasedChannelTypes} TextBasedChannelTypes The types of channels that are text-based\n * @property {ThreadChannelTypes} ThreadChannelTypes The types of channels that are threads\n * @property {VoiceBasedChannelTypes} VoiceBasedChannelTypes The types of channels that are voice-based\n * @property {SelectMenuTypes} SelectMenuTypes The types of components that are select menus.\n * @property {Object} StickerFormatExtensionMap A mapping between sticker formats and their respective image formats.\n */\n", "'use strict';\n\nconst { channelLink, channelMention } = require('@discordjs/formatters');\nconst { DiscordSnowflake } = require('@sapphire/snowflake');\nconst { ChannelType, Routes } = require('discord-api-types/v10');\nconst Base = require('./Base');\nconst ChannelFlagsBitField = require('../util/ChannelFlagsBitField');\nconst { ThreadChannelTypes } = require('../util/Constants');\n\n/**\n * Represents any channel on Discord.\n * @extends {Base}\n * @abstract\n */\nclass BaseChannel extends Base {\n  constructor(client, data, immediatePatch = true) {\n    super(client);\n\n    /**\n     * The type of the channel\n     * @type {ChannelType}\n     */\n    this.type = data.type;\n\n    if (data && immediatePatch) this._patch(data);\n  }\n\n  _patch(data) {\n    if ('flags' in data) {\n      /**\n       * The flags that are applied to the channel.\n       * <info>This is only `null` in a {@link PartialGroupDMChannel}. In all other cases, it is not `null`.</info>\n       * @type {?Readonly<ChannelFlagsBitField>}\n       */\n      this.flags = new ChannelFlagsBitField(data.flags).freeze();\n    } else {\n      this.flags ??= new ChannelFlagsBitField().freeze();\n    }\n\n    /**\n     * The channel's id\n     * @type {Snowflake}\n     */\n    this.id = data.id;\n  }\n\n  /**\n   * The timestamp the channel was created at\n   * @type {number}\n   * @readonly\n   */\n  get createdTimestamp() {\n    return DiscordSnowflake.timestampFrom(this.id);\n  }\n\n  /**\n   * The time the channel was created at\n   * @type {Date}\n   * @readonly\n   */\n  get createdAt() {\n    return new Date(this.createdTimestamp);\n  }\n\n  /**\n   * The URL to the channel\n   * @type {string}\n   * @readonly\n   */\n  get url() {\n    return this.isDMBased() ? channelLink(this.id) : channelLink(this.id, this.guildId);\n  }\n\n  /**\n   * Whether this Channel is a partial\n   * <info>This is always false outside of DM channels.</info>\n   * @type {boolean}\n   * @readonly\n   */\n  get partial() {\n    return false;\n  }\n\n  /**\n   * When concatenated with a string, this automatically returns the channel's mention instead of the Channel object.\n   * @returns {string}\n   * @example\n   * // Logs: Hello from <#123456789012345678>!\n   * console.log(`Hello from ${channel}!`);\n   */\n  toString() {\n    return channelMention(this.id);\n  }\n\n  /**\n   * Deletes this channel.\n   * @returns {Promise<BaseChannel>}\n   * @example\n   * // Delete the channel\n   * channel.delete()\n   *   .then(console.log)\n   *   .catch(console.error);\n   */\n  async delete() {\n    await this.client.rest.delete(Routes.channel(this.id));\n    return this;\n  }\n\n  /**\n   * Fetches this channel.\n   * @param {boolean} [force=true] Whether to skip the cache check and request the API\n   * @returns {Promise<BaseChannel>}\n   */\n  fetch(force = true) {\n    return this.client.channels.fetch(this.id, { force });\n  }\n\n  /**\n   * Indicates whether this channel is a {@link ThreadChannel}.\n   * @returns {boolean}\n   */\n  isThread() {\n    return ThreadChannelTypes.includes(this.type);\n  }\n\n  /**\n   * Indicates whether this channel is {@link TextBasedChannels text-based}.\n   * @returns {boolean}\n   */\n  isTextBased() {\n    return 'messages' in this;\n  }\n\n  /**\n   * Indicates whether this channel is DM-based (either a {@link DMChannel} or a {@link PartialGroupDMChannel}).\n   * @returns {boolean}\n   */\n  isDMBased() {\n    return [ChannelType.DM, ChannelType.GroupDM].includes(this.type);\n  }\n\n  /**\n   * Indicates whether this channel is {@link BaseGuildVoiceChannel voice-based}.\n   * @returns {boolean}\n   */\n  isVoiceBased() {\n    return 'bitrate' in this;\n  }\n\n  /**\n   * Indicates whether this channel is {@link ThreadOnlyChannel thread-only}.\n   * @returns {boolean}\n   */\n  isThreadOnly() {\n    return 'availableTags' in this;\n  }\n\n  /**\n   * Indicates whether this channel is sendable.\n   * @returns {boolean}\n   */\n  isSendable() {\n    return 'send' in this;\n  }\n\n  toJSON(...props) {\n    return super.toJSON({ createdTimestamp: true }, ...props);\n  }\n}\n\nexports.BaseChannel = BaseChannel;\n", "'use strict';\n\n/**\n * Manages the API methods of a data model.\n * @abstract\n */\nclass BaseManager {\n  constructor(client) {\n    /**\n     * The client that instantiated this Manager\n     * @name BaseManager#client\n     * @type {Client}\n     * @readonly\n     */\n    Object.defineProperty(this, 'client', { value: client });\n  }\n}\n\nmodule.exports = BaseManager;\n", "'use strict';\n\nconst BaseManager = require('./BaseManager');\nconst { DiscordjsError, ErrorCodes } = require('../errors');\n\n/**\n * Manages the API methods of a data model along with a collection of instances.\n * @extends {BaseManager}\n * @abstract\n */\nclass DataManager extends BaseManager {\n  constructor(client, holds) {\n    super(client);\n\n    /**\n     * The data structure belonging to this manager.\n     * @name DataManager#holds\n     * @type {Function}\n     * @private\n     * @readonly\n     */\n    Object.defineProperty(this, 'holds', { value: holds });\n  }\n\n  /**\n   * The cache of items for this manager.\n   * @type {Collection}\n   * @abstract\n   */\n  get cache() {\n    throw new DiscordjsError(ErrorCodes.NotImplemented, 'get cache', this.constructor.name);\n  }\n\n  /**\n   * Resolves a data entry to a data Object.\n   * @param {string|Object} idOrInstance The id or instance of something in this Manager\n   * @returns {?Object} An instance from this Manager\n   */\n  resolve(idOrInstance) {\n    if (idOrInstance instanceof this.holds) return idOrInstance;\n    if (typeof idOrInstance === 'string') return this.cache.get(idOrInstance) ?? null;\n    return null;\n  }\n\n  /**\n   * Resolves a data entry to an instance id.\n   * @param {string|Object} idOrInstance The id or instance of something in this Manager\n   * @returns {?Snowflake}\n   */\n  resolveId(idOrInstance) {\n    if (idOrInstance instanceof this.holds) return idOrInstance.id;\n    if (typeof idOrInstance === 'string') return idOrInstance;\n    return null;\n  }\n\n  valueOf() {\n    return this.cache;\n  }\n}\n\nmodule.exports = DataManager;\n", "'use strict';\n\nexports.MakeCacheOverrideSymbol = Symbol('djs.managers.makeCacheOverride');\n", "'use strict';\n\nconst DataManager = require('./DataManager');\nconst { MakeCacheOverrideSymbol } = require('../util/Symbols');\n\n/**\n * Manages the API methods of a data model with a mutable cache of instances.\n * @extends {DataManager}\n * @abstract\n */\nclass CachedManager extends DataManager {\n  constructor(client, holds, iterable) {\n    super(client, holds);\n\n    /**\n     * The private cache of items for this manager.\n     * @type {Collection}\n     * @private\n     * @readonly\n     * @name CachedManager#_cache\n     */\n    Object.defineProperty(this, '_cache', {\n      value: this.client.options.makeCache(\n        this.constructor[MakeCacheOverrideSymbol] ?? this.constructor,\n        this.holds,\n        this.constructor,\n      ),\n    });\n\n    if (iterable) {\n      for (const item of iterable) {\n        this._add(item);\n      }\n    }\n  }\n\n  /**\n   * The cache of items for this manager.\n   * @type {Collection}\n   * @abstract\n   */\n  get cache() {\n    return this._cache;\n  }\n\n  _add(data, cache = true, { id, extras = [] } = {}) {\n    const existing = this.cache.get(id ?? data.id);\n    if (existing) {\n      if (cache) {\n        existing._patch(data);\n        return existing;\n      }\n      const clone = existing._clone();\n      clone._patch(data);\n      return clone;\n    }\n\n    const entry = this.holds ? new this.holds(this.client, data, ...extras) : data;\n    if (cache) this.cache.set(id ?? entry.id, entry);\n    return entry;\n  }\n}\n\nmodule.exports = CachedManager;\n", "'use strict';\n\nconst { PermissionFlagsBits } = require('discord-api-types/v10');\nconst BitField = require('./BitField');\n\n/**\n * Data structure that makes it easy to interact with a permission bitfield. All {@link GuildMember}s have a set of\n * permissions in their guild, and each channel in the guild may also have {@link PermissionOverwrites} for the member\n * that override their default permissions.\n * @extends {BitField}\n */\nclass PermissionsBitField extends BitField {\n  /**\n   * Numeric permission flags.\n   * @type {PermissionFlagsBits}\n   * @memberof PermissionsBitField\n   * @see {@link https://discord.com/developers/docs/topics/permissions#permissions-bitwise-permission-flags}\n   */\n  static Flags = PermissionFlagsBits;\n\n  /**\n   * Bitfield representing every permission combined\n   * @type {bigint}\n   * @memberof PermissionsBitField\n   */\n  static All = Object.values(PermissionFlagsBits).reduce((all, p) => all | p, 0n);\n\n  /**\n   * Bitfield representing the default permissions for users\n   * @type {bigint}\n   * @memberof PermissionsBitField\n   */\n  static Default = BigInt(104324673);\n\n  /**\n   * Bitfield representing the permissions required for moderators of stage channels\n   * @type {bigint}\n   * @memberof PermissionsBitField\n   */\n  static StageModerator =\n    PermissionFlagsBits.ManageChannels | PermissionFlagsBits.MuteMembers | PermissionFlagsBits.MoveMembers;\n\n  /**\n   * @type {bigint}\n   * @memberof PermissionsBitField\n   * @private\n   */\n  static DefaultBit = BigInt(0);\n\n  /**\n   * Bitfield of the packed bits\n   * @type {bigint}\n   * @name PermissionsBitField#bitfield\n   */\n\n  /**\n   * Data that can be resolved to give a permission number. This can be:\n   * * A string (see {@link PermissionsBitField.Flags})\n   * * A permission number\n   * * An instance of {@link PermissionsBitField}\n   * * An Array of PermissionResolvable\n   * @typedef {string|bigint|PermissionsBitField|PermissionResolvable[]} PermissionResolvable\n   */\n\n  /**\n   * Gets all given bits that are missing from the bitfield.\n   * @param {BitFieldResolvable} bits Bit(s) to check for\n   * @param {boolean} [checkAdmin=true] Whether to allow the administrator permission to override\n   * @returns {string[]}\n   */\n  missing(bits, checkAdmin = true) {\n    return checkAdmin && this.has(PermissionFlagsBits.Administrator) ? [] : super.missing(bits);\n  }\n\n  /**\n   * Checks whether the bitfield has a permission, or any of multiple permissions.\n   * @param {PermissionResolvable} permission Permission(s) to check for\n   * @param {boolean} [checkAdmin=true] Whether to allow the administrator permission to override\n   * @returns {boolean}\n   */\n  any(permission, checkAdmin = true) {\n    return (checkAdmin && super.has(PermissionFlagsBits.Administrator)) || super.any(permission);\n  }\n\n  /**\n   * Checks whether the bitfield has a permission, or multiple permissions.\n   * @param {PermissionResolvable} permission Permission(s) to check for\n   * @param {boolean} [checkAdmin=true] Whether to allow the administrator permission to override\n   * @returns {boolean}\n   */\n  has(permission, checkAdmin = true) {\n    return (checkAdmin && super.has(PermissionFlagsBits.Administrator)) || super.has(permission);\n  }\n\n  /**\n   * Gets an {@link Array} of bitfield names based on the permissions available.\n   * @returns {string[]}\n   */\n  toArray() {\n    return super.toArray(false);\n  }\n}\n\nmodule.exports = PermissionsBitField;\n", "'use strict';\n\nconst { RoleFlags } = require('discord-api-types/v10');\nconst BitField = require('./BitField');\n\n/**\n * Data structure that makes it easy to interact with a {@link Role#flags} bitfield.\n * @extends {BitField}\n */\nclass RoleFlagsBitField extends BitField {\n  /**\n   * Numeric role flags.\n   * @type {RoleFlags}\n   * @memberof RoleFlagsBitField\n   */\n  static Flags = RoleFlags;\n}\n\n/**\n * @name RoleFlagsBitField\n * @kind constructor\n * @memberof RoleFlagsBitField\n * @param {BitFieldResolvable} [bits=0] Bit(s) to read from\n */\n\nmodule.exports = RoleFlagsBitField;\n", "'use strict';\n\nconst { roleMention } = require('@discordjs/formatters');\nconst { DiscordSnowflake } = require('@sapphire/snowflake');\nconst { PermissionFlagsBits } = require('discord-api-types/v10');\nconst Base = require('./Base');\nconst { DiscordjsError, ErrorCodes } = require('../errors');\nconst PermissionsBitField = require('../util/PermissionsBitField');\nconst RoleFlagsBitField = require('../util/RoleFlagsBitField');\n\n/**\n * Represents a role on Discord.\n * @extends {Base}\n */\nclass Role extends Base {\n  constructor(client, data, guild) {\n    super(client);\n\n    /**\n     * The guild that the role belongs to\n     * @type {Guild}\n     */\n    this.guild = guild;\n\n    /**\n     * The icon hash of the role\n     * @type {?string}\n     */\n    this.icon = null;\n\n    /**\n     * The unicode emoji for the role\n     * @type {?string}\n     */\n    this.unicodeEmoji = null;\n\n    if (data) this._patch(data);\n  }\n\n  _patch(data) {\n    /**\n     * The role's id (unique to the guild it is part of)\n     * @type {Snowflake}\n     */\n    this.id = data.id;\n    if ('name' in data) {\n      /**\n       * The name of the role\n       * @type {string}\n       */\n      this.name = data.name;\n    }\n\n    if ('color' in data) {\n      /**\n       * The base 10 color of the role\n       * @type {number}\n       */\n      this.color = data.color;\n    }\n\n    if ('hoist' in data) {\n      /**\n       * If true, users that are part of this role will appear in a separate category in the users list\n       * @type {boolean}\n       */\n      this.hoist = data.hoist;\n    }\n\n    if ('position' in data) {\n      /**\n       * The raw position of the role from the API\n       * @type {number}\n       */\n      this.rawPosition = data.position;\n    }\n\n    if ('permissions' in data) {\n      /**\n       * The permissions of the role\n       * @type {Readonly<PermissionsBitField>}\n       */\n      this.permissions = new PermissionsBitField(BigInt(data.permissions)).freeze();\n    }\n\n    if ('managed' in data) {\n      /**\n       * Whether or not the role is managed by an external service\n       * @type {boolean}\n       */\n      this.managed = data.managed;\n    }\n\n    if ('mentionable' in data) {\n      /**\n       * Whether or not the role can be mentioned by anyone\n       * @type {boolean}\n       */\n      this.mentionable = data.mentionable;\n    }\n\n    if ('icon' in data) this.icon = data.icon;\n\n    if ('unicode_emoji' in data) this.unicodeEmoji = data.unicode_emoji;\n\n    if ('flags' in data) {\n      /**\n       * The flags of this role\n       * @type {Readonly<RoleFlagsBitField>}\n       */\n      this.flags = new RoleFlagsBitField(data.flags).freeze();\n    } else {\n      this.flags ??= new RoleFlagsBitField().freeze();\n    }\n\n    /**\n     * The tags this role has\n     * @type {?Object}\n     * @property {Snowflake} [botId] The id of the bot this role belongs to\n     * @property {Snowflake|string} [integrationId] The id of the integration this role belongs to\n     * @property {true} [premiumSubscriberRole] Whether this is the guild's premium subscription role\n     * @property {Snowflake} [subscriptionListingId] The id of this role's subscription SKU and listing\n     * @property {true} [availableForPurchase] Whether this role is available for purchase\n     * @property {true} [guildConnections] Whether this role is a guild's linked role\n     */\n    this.tags = data.tags ? {} : null;\n    if (data.tags) {\n      if ('bot_id' in data.tags) {\n        this.tags.botId = data.tags.bot_id;\n      }\n      if ('integration_id' in data.tags) {\n        this.tags.integrationId = data.tags.integration_id;\n      }\n      if ('premium_subscriber' in data.tags) {\n        this.tags.premiumSubscriberRole = true;\n      }\n      if ('subscription_listing_id' in data.tags) {\n        this.tags.subscriptionListingId = data.tags.subscription_listing_id;\n      }\n      if ('available_for_purchase' in data.tags) {\n        this.tags.availableForPurchase = true;\n      }\n      if ('guild_connections' in data.tags) {\n        this.tags.guildConnections = true;\n      }\n    }\n  }\n\n  /**\n   * The timestamp the role was created at\n   * @type {number}\n   * @readonly\n   */\n  get createdTimestamp() {\n    return DiscordSnowflake.timestampFrom(this.id);\n  }\n\n  /**\n   * The time the role was created at\n   * @type {Date}\n   * @readonly\n   */\n  get createdAt() {\n    return new Date(this.createdTimestamp);\n  }\n\n  /**\n   * The hexadecimal version of the role color, with a leading hashtag\n   * @type {string}\n   * @readonly\n   */\n  get hexColor() {\n    return `#${this.color.toString(16).padStart(6, '0')}`;\n  }\n\n  /**\n   * The cached guild members that have this role\n   * @type {Collection<Snowflake, GuildMember>}\n   * @readonly\n   */\n  get members() {\n    return this.id === this.guild.id\n      ? this.guild.members.cache.clone()\n      : this.guild.members.cache.filter(member => member._roles.includes(this.id));\n  }\n\n  /**\n   * Whether the role is editable by the client user\n   * @type {boolean}\n   * @readonly\n   */\n  get editable() {\n    if (this.managed) return false;\n    const clientMember = this.guild.members.resolve(this.client.user);\n    if (!clientMember.permissions.has(PermissionFlagsBits.ManageRoles)) return false;\n    return clientMember.roles.highest.comparePositionTo(this) > 0;\n  }\n\n  /**\n   * The position of the role in the role manager\n   * @type {number}\n   * @readonly\n   */\n  get position() {\n    return this.guild.roles.cache.reduce(\n      (acc, role) =>\n        acc +\n        (this.rawPosition === role.rawPosition\n          ? BigInt(this.id) < BigInt(role.id)\n          : this.rawPosition > role.rawPosition),\n      0,\n    );\n  }\n\n  /**\n   * Compares this role's position to another role's.\n   * @param {RoleResolvable} role Role to compare to this one\n   * @returns {number} Negative number if this role's position is lower (other role's is higher),\n   * positive number if this one is higher (other's is lower), 0 if equal\n   * @example\n   * // Compare the position of a role to another\n   * const roleCompare = role.comparePositionTo(otherRole);\n   * if (roleCompare >= 1) console.log(`${role.name} is higher than ${otherRole.name}`);\n   */\n  comparePositionTo(role) {\n    return this.guild.roles.comparePositions(this, role);\n  }\n\n  /**\n   * The data for a role.\n   * @typedef {Object} RoleData\n   * @property {string} [name] The name of the role\n   * @property {ColorResolvable} [color] The color of the role, either a hex string or a base 10 number\n   * @property {boolean} [hoist] Whether or not the role should be hoisted\n   * @property {number} [position] The position of the role\n   * @property {PermissionResolvable} [permissions] The permissions of the role\n   * @property {boolean} [mentionable] Whether or not the role should be mentionable\n   * @property {?(BufferResolvable|Base64Resolvable|EmojiResolvable)} [icon] The icon for the role\n   * <warn>The `EmojiResolvable` should belong to the same guild as the role.\n   * If not, pass the emoji's URL directly</warn>\n   * @property {?string} [unicodeEmoji] The unicode emoji for the role\n   */\n\n  /**\n   * Edits the role.\n   * @param {RoleEditOptions} options The options to provide\n   * @returns {Promise<Role>}\n   * @example\n   * // Edit a role\n   * role.edit({ name: 'new role' })\n   *   .then(updated => console.log(`Edited role name to ${updated.name}`))\n   *   .catch(console.error);\n   */\n  edit(options) {\n    return this.guild.roles.edit(this, options);\n  }\n\n  /**\n   * Returns `channel.permissionsFor(role)`. Returns permissions for a role in a guild channel,\n   * taking into account permission overwrites.\n   * @param {GuildChannel|Snowflake} channel The guild channel to use as context\n   * @param {boolean} [checkAdmin=true] Whether having the {@link PermissionFlagsBits.Administrator} permission\n   * will return all permissions\n   * @returns {Readonly<PermissionsBitField>}\n   */\n  permissionsIn(channel, checkAdmin = true) {\n    channel = this.guild.channels.resolve(channel);\n    if (!channel) throw new DiscordjsError(ErrorCodes.GuildChannelResolve);\n    return channel.rolePermissions(this, checkAdmin);\n  }\n\n  /**\n   * Sets a new name for the role.\n   * @param {string} name The new name of the role\n   * @param {string} [reason] Reason for changing the role's name\n   * @returns {Promise<Role>}\n   * @example\n   * // Set the name of the role\n   * role.setName('new role')\n   *   .then(updated => console.log(`Updated role name to ${updated.name}`))\n   *   .catch(console.error);\n   */\n  setName(name, reason) {\n    return this.edit({ name, reason });\n  }\n\n  /**\n   * Sets a new color for the role.\n   * @param {ColorResolvable} color The color of the role\n   * @param {string} [reason] Reason for changing the role's color\n   * @returns {Promise<Role>}\n   * @example\n   * // Set the color of a role\n   * role.setColor('#FF0000')\n   *   .then(updated => console.log(`Set color of role to ${updated.color}`))\n   *   .catch(console.error);\n   */\n  setColor(color, reason) {\n    return this.edit({ color, reason });\n  }\n\n  /**\n   * Sets whether or not the role should be hoisted.\n   * @param {boolean} [hoist=true] Whether or not to hoist the role\n   * @param {string} [reason] Reason for setting whether or not the role should be hoisted\n   * @returns {Promise<Role>}\n   * @example\n   * // Set the hoist of the role\n   * role.setHoist(true)\n   *   .then(updated => console.log(`Role hoisted: ${updated.hoist}`))\n   *   .catch(console.error);\n   */\n  setHoist(hoist = true, reason) {\n    return this.edit({ hoist, reason });\n  }\n\n  /**\n   * Sets the permissions of the role.\n   * @param {PermissionResolvable} permissions The permissions of the role\n   * @param {string} [reason] Reason for changing the role's permissions\n   * @returns {Promise<Role>}\n   * @example\n   * // Set the permissions of the role\n   * role.setPermissions([PermissionFlagsBits.KickMembers, PermissionFlagsBits.BanMembers])\n   *   .then(updated => console.log(`Updated permissions to ${updated.permissions.bitfield}`))\n   *   .catch(console.error);\n   * @example\n   * // Remove all permissions from a role\n   * role.setPermissions(0n)\n   *   .then(updated => console.log(`Updated permissions to ${updated.permissions.bitfield}`))\n   *   .catch(console.error);\n   */\n  setPermissions(permissions, reason) {\n    return this.edit({ permissions, reason });\n  }\n\n  /**\n   * Sets whether this role is mentionable.\n   * @param {boolean} [mentionable=true] Whether this role should be mentionable\n   * @param {string} [reason] Reason for setting whether or not this role should be mentionable\n   * @returns {Promise<Role>}\n   * @example\n   * // Make the role mentionable\n   * role.setMentionable(true)\n   *   .then(updated => console.log(`Role updated ${updated.name}`))\n   *   .catch(console.error);\n   */\n  setMentionable(mentionable = true, reason) {\n    return this.edit({ mentionable, reason });\n  }\n\n  /**\n   * Sets a new icon for the role.\n   * @param {?(BufferResolvable|Base64Resolvable|EmojiResolvable)} icon The icon for the role\n   * <warn>The `EmojiResolvable` should belong to the same guild as the role.\n   * If not, pass the emoji's URL directly</warn>\n   * @param {string} [reason] Reason for changing the role's icon\n   * @returns {Promise<Role>}\n   */\n  setIcon(icon, reason) {\n    return this.edit({ icon, reason });\n  }\n\n  /**\n   * Sets a new unicode emoji for the role.\n   * @param {?string} unicodeEmoji The new unicode emoji for the role\n   * @param {string} [reason] Reason for changing the role's unicode emoji\n   * @returns {Promise<Role>}\n   * @example\n   * // Set a new unicode emoji for the role\n   * role.setUnicodeEmoji('🤖')\n   *   .then(updated => console.log(`Set unicode emoji for the role to ${updated.unicodeEmoji}`))\n   *   .catch(console.error);\n   */\n  setUnicodeEmoji(unicodeEmoji, reason) {\n    return this.edit({ unicodeEmoji, reason });\n  }\n\n  /**\n   * Options used to set the position of a role.\n   * @typedef {Object} SetRolePositionOptions\n   * @property {boolean} [relative=false] Whether to change the position relative to its current value or not\n   * @property {string} [reason] The reason for changing the position\n   */\n\n  /**\n   * Sets the new position of the role.\n   * @param {number} position The new position for the role\n   * @param {SetRolePositionOptions} [options] Options for setting the position\n   * @returns {Promise<Role>}\n   * @example\n   * // Set the position of the role\n   * role.setPosition(1)\n   *   .then(updated => console.log(`Role position: ${updated.position}`))\n   *   .catch(console.error);\n   */\n  setPosition(position, options = {}) {\n    return this.guild.roles.setPosition(this, position, options);\n  }\n\n  /**\n   * Deletes the role.\n   * @param {string} [reason] Reason for deleting this role\n   * @returns {Promise<Role>}\n   * @example\n   * // Delete a role\n   * role.delete('The role needed to go')\n   *   .then(deleted => console.log(`Deleted role ${deleted.name}`))\n   *   .catch(console.error);\n   */\n  async delete(reason) {\n    await this.guild.roles.delete(this.id, reason);\n    return this;\n  }\n\n  /**\n   * A link to the role's icon\n   * @param {ImageURLOptions} [options={}] Options for the image URL\n   * @returns {?string}\n   */\n  iconURL(options = {}) {\n    return this.icon && this.client.rest.cdn.roleIcon(this.id, this.icon, options);\n  }\n\n  /**\n   * Whether this role equals another role. It compares all properties, so for most operations\n   * it is advisable to just compare `role.id === role2.id` as it is much faster and is often\n   * what most users need.\n   * @param {Role} role Role to compare with\n   * @returns {boolean}\n   */\n  equals(role) {\n    return (\n      role &&\n      this.id === role.id &&\n      this.name === role.name &&\n      this.color === role.color &&\n      this.hoist === role.hoist &&\n      this.position === role.position &&\n      this.permissions.bitfield === role.permissions.bitfield &&\n      this.managed === role.managed &&\n      this.icon === role.icon &&\n      this.unicodeEmoji === role.unicodeEmoji\n    );\n  }\n\n  /**\n   * When concatenated with a string, this automatically returns the role's mention instead of the Role object.\n   * @returns {string}\n   * @example\n   * // Logs: Role: <@&123456789012345678>\n   * console.log(`Role: ${role}`);\n   */\n  toString() {\n    if (this.id === this.guild.id) return '@everyone';\n    return roleMention(this.id);\n  }\n\n  toJSON() {\n    return {\n      ...super.toJSON({ createdTimestamp: true }),\n      permissions: this.permissions.toJSON(),\n    };\n  }\n}\n\nexports.Role = Role;\n", "'use strict';\n\nconst { OverwriteType } = require('discord-api-types/v10');\nconst Base = require('./Base');\nconst { Role } = require('./Role');\nconst { DiscordjsTypeError, ErrorCodes } = require('../errors');\nconst PermissionsBitField = require('../util/PermissionsBitField');\n\n/**\n * Represents a permission overwrite for a role or member in a guild channel.\n * @extends {Base}\n */\nclass PermissionOverwrites extends Base {\n  constructor(client, data, channel) {\n    super(client);\n\n    /**\n     * The GuildChannel this overwrite is for\n     * @name PermissionOverwrites#channel\n     * @type {GuildChannel}\n     * @readonly\n     */\n    Object.defineProperty(this, 'channel', { value: channel });\n\n    if (data) this._patch(data);\n  }\n\n  _patch(data) {\n    /**\n     * The overwrite's id, either a {@link User} or a {@link Role} id\n     * @type {Snowflake}\n     */\n    this.id = data.id;\n\n    if ('type' in data) {\n      /**\n       * The type of this overwrite\n       * @type {OverwriteType}\n       */\n      this.type = data.type;\n    }\n\n    if ('deny' in data) {\n      /**\n       * The permissions that are denied for the user or role.\n       * @type {Readonly<PermissionsBitField>}\n       */\n      this.deny = new PermissionsBitField(BigInt(data.deny)).freeze();\n    }\n\n    if ('allow' in data) {\n      /**\n       * The permissions that are allowed for the user or role.\n       * @type {Readonly<PermissionsBitField>}\n       */\n      this.allow = new PermissionsBitField(BigInt(data.allow)).freeze();\n    }\n  }\n\n  /**\n   * Edits this Permission Overwrite.\n   * @param {PermissionOverwriteOptions} options The options for the update\n   * @param {string} [reason] Reason for creating/editing this overwrite\n   * @returns {Promise<PermissionOverwrites>}\n   * @example\n   * // Update permission overwrites\n   * permissionOverwrites.edit({\n   *   SendMessages: false\n   * })\n   *   .then(channel => console.log(channel.permissionOverwrites.get(message.author.id)))\n   *   .catch(console.error);\n   */\n  async edit(options, reason) {\n    await this.channel.permissionOverwrites.upsert(this.id, options, { type: this.type, reason }, this);\n    return this;\n  }\n\n  /**\n   * Deletes this Permission Overwrite.\n   * @param {string} [reason] Reason for deleting this overwrite\n   * @returns {Promise<PermissionOverwrites>}\n   */\n  async delete(reason) {\n    await this.channel.permissionOverwrites.delete(this.id, reason);\n    return this;\n  }\n\n  toJSON() {\n    return {\n      id: this.id,\n      type: this.type,\n      allow: this.allow,\n      deny: this.deny,\n    };\n  }\n\n  /**\n   * An object mapping permission flags to `true` (enabled), `null` (unset) or `false` (disabled).\n   * ```js\n   * {\n   *  'SendMessages': true,\n   *  'EmbedLinks': null,\n   *  'AttachFiles': false,\n   * }\n   * ```\n   * @typedef {Object} PermissionOverwriteOptions\n   */\n\n  /**\n   * @typedef {Object} ResolvedOverwriteOptions\n   * @property {PermissionsBitField} allow The allowed permissions\n   * @property {PermissionsBitField} deny The denied permissions\n   */\n\n  /**\n   * Resolves bitfield permissions overwrites from an object.\n   * @param {PermissionOverwriteOptions} options The options for the update\n   * @param {ResolvedOverwriteOptions} initialPermissions The initial permissions\n   * @returns {ResolvedOverwriteOptions}\n   */\n  static resolveOverwriteOptions(options, { allow, deny } = {}) {\n    allow = new PermissionsBitField(allow);\n    deny = new PermissionsBitField(deny);\n\n    for (const [perm, value] of Object.entries(options)) {\n      if (value === true) {\n        allow.add(perm);\n        deny.remove(perm);\n      } else if (value === false) {\n        allow.remove(perm);\n        deny.add(perm);\n      } else if (value === null) {\n        allow.remove(perm);\n        deny.remove(perm);\n      }\n    }\n\n    return { allow, deny };\n  }\n\n  /**\n   * The raw data for a permission overwrite\n   * @typedef {Object} RawOverwriteData\n   * @property {Snowflake} id The id of the {@link Role} or {@link User} this overwrite belongs to\n   * @property {string} allow The permissions to allow\n   * @property {string} deny The permissions to deny\n   * @property {number} type The type of this OverwriteData\n   */\n\n  /**\n   * Data that can be resolved into {@link APIOverwrite}. This can be:\n   * * PermissionOverwrites\n   * * OverwriteData\n   * @typedef {PermissionOverwrites|OverwriteData} OverwriteResolvable\n   */\n\n  /**\n   * Data that can be used for a permission overwrite\n   * @typedef {Object} OverwriteData\n   * @property {GuildMemberResolvable|RoleResolvable} id Member or role this overwrite is for\n   * @property {PermissionResolvable} [allow] The permissions to allow\n   * @property {PermissionResolvable} [deny] The permissions to deny\n   * @property {OverwriteType} [type] The type of this OverwriteData\n   */\n\n  /**\n   * Resolves an overwrite into {@link APIOverwrite}.\n   * @param {OverwriteResolvable} overwrite The overwrite-like data to resolve\n   * @param {Guild} [guild] The guild to resolve from\n   * @returns {RawOverwriteData}\n   */\n  static resolve(overwrite, guild) {\n    if (overwrite instanceof this) return overwrite.toJSON();\n    if (typeof overwrite.id === 'string' && overwrite.type in OverwriteType) {\n      return {\n        id: overwrite.id,\n        type: overwrite.type,\n        allow: PermissionsBitField.resolve(overwrite.allow ?? PermissionsBitField.DefaultBit).toString(),\n        deny: PermissionsBitField.resolve(overwrite.deny ?? PermissionsBitField.DefaultBit).toString(),\n      };\n    }\n\n    const userOrRole = guild.roles.resolve(overwrite.id) ?? guild.client.users.resolve(overwrite.id);\n    if (!userOrRole) throw new DiscordjsTypeError(ErrorCodes.InvalidType, 'parameter', 'User nor a Role');\n    const type = userOrRole instanceof Role ? OverwriteType.Role : OverwriteType.Member;\n\n    return {\n      id: userOrRole.id,\n      type,\n      allow: PermissionsBitField.resolve(overwrite.allow ?? PermissionsBitField.DefaultBit).toString(),\n      deny: PermissionsBitField.resolve(overwrite.deny ?? PermissionsBitField.DefaultBit).toString(),\n    };\n  }\n}\n\nmodule.exports = PermissionOverwrites;\n", "'use strict';\n\nconst process = require('node:process');\nconst { Collection } = require('@discordjs/collection');\nconst { OverwriteType, Routes } = require('discord-api-types/v10');\nconst CachedManager = require('./CachedManager');\nconst { DiscordjsTypeError, ErrorCodes } = require('../errors');\nconst PermissionOverwrites = require('../structures/PermissionOverwrites');\nconst { Role } = require('../structures/Role');\n\nlet cacheWarningEmitted = false;\n\n/**\n * Manages API methods for guild channel permission overwrites and stores their cache.\n * @extends {CachedManager}\n */\nclass PermissionOverwriteManager extends CachedManager {\n  constructor(channel, iterable) {\n    super(channel.client, PermissionOverwrites);\n    if (!cacheWarningEmitted && this._cache.constructor.name !== 'Collection') {\n      cacheWarningEmitted = true;\n      process.emitWarning(\n        `Overriding the cache handling for ${this.constructor.name} is unsupported and breaks functionality.`,\n        'UnsupportedCacheOverwriteWarning',\n      );\n    }\n\n    /**\n     * The channel of the permission overwrite this manager belongs to\n     * @type {GuildChannel}\n     */\n    this.channel = channel;\n\n    if (iterable) {\n      for (const item of iterable) {\n        this._add(item);\n      }\n    }\n  }\n\n  /**\n   * The cache of this Manager\n   * @type {Collection<Snowflake, PermissionOverwrites>}\n   * @name PermissionOverwriteManager#cache\n   */\n\n  _add(data, cache) {\n    return super._add(data, cache, { extras: [this.channel] });\n  }\n\n  /**\n   * Replaces the permission overwrites in this channel.\n   * @param {OverwriteResolvable[]|Collection<Snowflake, OverwriteResolvable>} overwrites\n   * Permission overwrites the channel gets updated with\n   * @param {string} [reason] Reason for updating the channel overwrites\n   * @returns {Promise<GuildChannel>}\n   * @example\n   * message.channel.permissionOverwrites.set([\n   *   {\n   *      id: message.author.id,\n   *      deny: [PermissionFlagsBits.ViewChannel],\n   *   },\n   * ], 'Needed to change permissions');\n   */\n  set(overwrites, reason) {\n    if (!Array.isArray(overwrites) && !(overwrites instanceof Collection)) {\n      return Promise.reject(\n        new DiscordjsTypeError(\n          ErrorCodes.InvalidType,\n          'overwrites',\n          'Array or Collection of Permission Overwrites',\n          true,\n        ),\n      );\n    }\n    return this.channel.edit({ permissionOverwrites: overwrites, reason });\n  }\n\n  /**\n   * Extra information about the overwrite.\n   * @typedef {Object} GuildChannelOverwriteOptions\n   * @property {string} [reason] The reason for creating/editing this overwrite\n   * @property {OverwriteType} [type] The type of overwrite. Use this to bypass automatic resolution of `type`\n   * that results in an error for an uncached structure\n   */\n\n  /**\n   * Creates or edits permission overwrites for a user or role in this channel.\n   * @param {RoleResolvable|UserResolvable} userOrRole The user or role to update\n   * @param {PermissionOverwriteOptions} options The options for the update\n   * @param {GuildChannelOverwriteOptions} [overwriteOptions] The extra information for the update\n   * @param {PermissionOverwrites} [existing] The existing overwrites to merge with this update\n   * @returns {Promise<GuildChannel>}\n   * @private\n   */\n  async upsert(userOrRole, options, overwriteOptions = {}, existing) {\n    let userOrRoleId = this.channel.guild.roles.resolveId(userOrRole) ?? this.client.users.resolveId(userOrRole);\n    let { type, reason } = overwriteOptions;\n    if (typeof type !== 'number') {\n      userOrRole = this.channel.guild.roles.resolve(userOrRole) ?? this.client.users.resolve(userOrRole);\n      if (!userOrRole) throw new DiscordjsTypeError(ErrorCodes.InvalidType, 'parameter', 'User nor a Role');\n      type = userOrRole instanceof Role ? OverwriteType.Role : OverwriteType.Member;\n    }\n\n    const { allow, deny } = PermissionOverwrites.resolveOverwriteOptions(options, existing);\n\n    await this.client.rest.put(Routes.channelPermission(this.channel.id, userOrRoleId), {\n      body: { id: userOrRoleId, type, allow, deny },\n      reason,\n    });\n    return this.channel;\n  }\n\n  /**\n   * Creates permission overwrites for a user or role in this channel, or replaces them if already present.\n   * @param {RoleResolvable|UserResolvable} userOrRole The user or role to update\n   * @param {PermissionOverwriteOptions} options The options for the update\n   * @param {GuildChannelOverwriteOptions} [overwriteOptions] The extra information for the update\n   * @returns {Promise<GuildChannel>}\n   * @example\n   * // Create or Replace permission overwrites for a message author\n   * message.channel.permissionOverwrites.create(message.author, {\n   *   SendMessages: false\n   * })\n   *   .then(channel => console.log(channel.permissionOverwrites.cache.get(message.author.id)))\n   *   .catch(console.error);\n   */\n  create(userOrRole, options, overwriteOptions) {\n    return this.upsert(userOrRole, options, overwriteOptions);\n  }\n\n  /**\n   * Edits permission overwrites for a user or role in this channel, or creates an entry if not already present.\n   * @param {RoleResolvable|UserResolvable} userOrRole The user or role to update\n   * @param {PermissionOverwriteOptions} options The options for the update\n   * @param {GuildChannelOverwriteOptions} [overwriteOptions] The extra information for the update\n   * @returns {Promise<GuildChannel>}\n   * @example\n   * // Edit or Create permission overwrites for a message author\n   * message.channel.permissionOverwrites.edit(message.author, {\n   *   SendMessages: false\n   * })\n   *   .then(channel => console.log(channel.permissionOverwrites.cache.get(message.author.id)))\n   *   .catch(console.error);\n   */\n  edit(userOrRole, options, overwriteOptions) {\n    const existing = this.cache.get(\n      this.channel.guild.roles.resolveId(userOrRole) ?? this.client.users.resolveId(userOrRole),\n    );\n    return this.upsert(userOrRole, options, overwriteOptions, existing);\n  }\n\n  /**\n   * Deletes permission overwrites for a user or role in this channel.\n   * @param {UserResolvable|RoleResolvable} userOrRole The user or role to delete\n   * @param {string} [reason] The reason for deleting the overwrite\n   * @returns {Promise<GuildChannel>}\n   */\n  async delete(userOrRole, reason) {\n    const userOrRoleId = this.channel.guild.roles.resolveId(userOrRole) ?? this.client.users.resolveId(userOrRole);\n    if (!userOrRoleId) throw new DiscordjsTypeError(ErrorCodes.InvalidType, 'parameter', 'User nor a Role');\n\n    await this.client.rest.delete(Routes.channelPermission(this.channel.id, userOrRoleId), { reason });\n    return this.channel;\n  }\n}\n\nmodule.exports = PermissionOverwriteManager;\n", "'use strict';\n\nconst { Snowflake } = require('@sapphire/snowflake');\nconst { PermissionFlagsBits, ChannelType } = require('discord-api-types/v10');\nconst { BaseChannel } = require('./BaseChannel');\nconst { DiscordjsError, ErrorCodes } = require('../errors');\nconst PermissionOverwriteManager = require('../managers/PermissionOverwriteManager');\nconst { VoiceBasedChannelTypes } = require('../util/Constants');\nconst PermissionsBitField = require('../util/PermissionsBitField');\nconst { getSortableGroupTypes } = require('../util/Util');\n\n/**\n * Represents a guild channel from any of the following:\n * - {@link TextChannel}\n * - {@link VoiceChannel}\n * - {@link CategoryChannel}\n * - {@link NewsChannel}\n * - {@link StageChannel}\n * - {@link ForumChannel}\n * - {@link MediaChannel}\n * @extends {BaseChannel}\n * @abstract\n */\nclass GuildChannel extends BaseChannel {\n  constructor(guild, data, client, immediatePatch = true) {\n    super(client, data, false);\n\n    /**\n     * The guild the channel is in\n     * @type {Guild}\n     */\n    this.guild = guild;\n\n    /**\n     * The id of the guild the channel is in\n     * @type {Snowflake}\n     */\n    this.guildId = guild?.id ?? data.guild_id;\n    /**\n     * A manager of permission overwrites that belong to this channel\n     * @type {PermissionOverwriteManager}\n     */\n    this.permissionOverwrites = new PermissionOverwriteManager(this);\n\n    if (data && immediatePatch) this._patch(data);\n  }\n\n  _patch(data) {\n    super._patch(data);\n\n    if ('name' in data) {\n      /**\n       * The name of the guild channel\n       * @type {string}\n       */\n      this.name = data.name;\n    }\n\n    if ('position' in data) {\n      /**\n       * The raw position of the channel from Discord\n       * @type {number}\n       */\n      this.rawPosition = data.position;\n    }\n\n    if ('guild_id' in data) {\n      this.guildId = data.guild_id;\n    }\n\n    if ('parent_id' in data) {\n      /**\n       * The id of the category parent of this channel\n       * @type {?Snowflake}\n       */\n      this.parentId = data.parent_id;\n    } else {\n      this.parentId ??= null;\n    }\n\n    if ('permission_overwrites' in data) {\n      this.permissionOverwrites.cache.clear();\n      for (const overwrite of data.permission_overwrites) {\n        this.permissionOverwrites._add(overwrite);\n      }\n    }\n  }\n\n  _clone() {\n    const clone = super._clone();\n    clone.permissionOverwrites = new PermissionOverwriteManager(clone, this.permissionOverwrites.cache.values());\n    return clone;\n  }\n\n  /**\n   * The category parent of this channel\n   * @type {?CategoryChannel}\n   * @readonly\n   */\n  get parent() {\n    return this.guild.channels.resolve(this.parentId);\n  }\n\n  /**\n   * If the permissionOverwrites match the parent channel, null if no parent\n   * @type {?boolean}\n   * @readonly\n   */\n  get permissionsLocked() {\n    if (!this.parent) return null;\n\n    // Get all overwrites\n    const overwriteIds = new Set([\n      ...this.permissionOverwrites.cache.keys(),\n      ...this.parent.permissionOverwrites.cache.keys(),\n    ]);\n\n    // Compare all overwrites\n    return [...overwriteIds].every(key => {\n      const channelVal = this.permissionOverwrites.cache.get(key);\n      const parentVal = this.parent.permissionOverwrites.cache.get(key);\n\n      // Handle empty overwrite\n      if (\n        (!channelVal &&\n          parentVal.deny.bitfield === PermissionsBitField.DefaultBit &&\n          parentVal.allow.bitfield === PermissionsBitField.DefaultBit) ||\n        (!parentVal &&\n          channelVal.deny.bitfield === PermissionsBitField.DefaultBit &&\n          channelVal.allow.bitfield === PermissionsBitField.DefaultBit)\n      ) {\n        return true;\n      }\n\n      // Compare overwrites\n      return (\n        channelVal !== undefined &&\n        parentVal !== undefined &&\n        channelVal.deny.bitfield === parentVal.deny.bitfield &&\n        channelVal.allow.bitfield === parentVal.allow.bitfield\n      );\n    });\n  }\n\n  /**\n   * The position of the channel\n   * @type {number}\n   * @readonly\n   */\n  get position() {\n    const selfIsCategory = this.type === ChannelType.GuildCategory;\n    const types = getSortableGroupTypes(this.type);\n\n    let count = 0;\n    for (const channel of this.guild.channels.cache.values()) {\n      if (!types.includes(channel.type)) continue;\n      if (!selfIsCategory && channel.parentId !== this.parentId) continue;\n      if (this.rawPosition === channel.rawPosition) {\n        if (Snowflake.compare(channel.id, this.id) === -1) count++;\n      } else if (this.rawPosition > channel.rawPosition) {\n        count++;\n      }\n    }\n\n    return count;\n  }\n\n  /**\n   * Gets the overall set of permissions for a member or role in this channel, taking into account channel overwrites.\n   * @param {GuildMemberResolvable|RoleResolvable} memberOrRole The member or role to obtain the overall permissions for\n   * @param {boolean} [checkAdmin=true] Whether having the {@link PermissionFlagsBits.Administrator} permission\n   * will return all permissions\n   * @returns {?Readonly<PermissionsBitField>}\n   */\n  permissionsFor(memberOrRole, checkAdmin = true) {\n    const member = this.guild.members.resolve(memberOrRole);\n    if (member) return this.memberPermissions(member, checkAdmin);\n    const role = this.guild.roles.resolve(memberOrRole);\n    return role && this.rolePermissions(role, checkAdmin);\n  }\n\n  overwritesFor(member, verified = false, roles = null) {\n    if (!verified) member = this.guild.members.resolve(member);\n    if (!member) return [];\n\n    roles ??= member.roles.cache;\n    const roleOverwrites = [];\n    let memberOverwrites;\n    let everyoneOverwrites;\n\n    for (const overwrite of this.permissionOverwrites.cache.values()) {\n      if (overwrite.id === this.guild.id) {\n        everyoneOverwrites = overwrite;\n      } else if (roles.has(overwrite.id)) {\n        roleOverwrites.push(overwrite);\n      } else if (overwrite.id === member.id) {\n        memberOverwrites = overwrite;\n      }\n    }\n\n    return {\n      everyone: everyoneOverwrites,\n      roles: roleOverwrites,\n      member: memberOverwrites,\n    };\n  }\n\n  /**\n   * Gets the overall set of permissions for a member in this channel, taking into account channel overwrites.\n   * @param {GuildMember} member The member to obtain the overall permissions for\n   * @param {boolean} checkAdmin Whether having the {@link PermissionFlagsBits.Administrator} permission\n   * will return all permissions\n   * @returns {Readonly<PermissionsBitField>}\n   * @private\n   */\n  memberPermissions(member, checkAdmin) {\n    if (checkAdmin && member.id === this.guild.ownerId) {\n      return new PermissionsBitField(PermissionsBitField.All).freeze();\n    }\n\n    const roles = member.roles.cache;\n    const permissions = new PermissionsBitField(roles.map(role => role.permissions));\n\n    if (checkAdmin && permissions.has(PermissionFlagsBits.Administrator)) {\n      return new PermissionsBitField(PermissionsBitField.All).freeze();\n    }\n\n    const overwrites = this.overwritesFor(member, true, roles);\n\n    return permissions\n      .remove(overwrites.everyone?.deny ?? PermissionsBitField.DefaultBit)\n      .add(overwrites.everyone?.allow ?? PermissionsBitField.DefaultBit)\n      .remove(overwrites.roles.length > 0 ? overwrites.roles.map(role => role.deny) : PermissionsBitField.DefaultBit)\n      .add(overwrites.roles.length > 0 ? overwrites.roles.map(role => role.allow) : PermissionsBitField.DefaultBit)\n      .remove(overwrites.member?.deny ?? PermissionsBitField.DefaultBit)\n      .add(overwrites.member?.allow ?? PermissionsBitField.DefaultBit)\n      .freeze();\n  }\n\n  /**\n   * Gets the overall set of permissions for a role in this channel, taking into account channel overwrites.\n   * @param {Role} role The role to obtain the overall permissions for\n   * @param {boolean} checkAdmin Whether having the {@link PermissionFlagsBits.Administrator} permission\n   * will return all permissions\n   * @returns {Readonly<PermissionsBitField>}\n   * @private\n   */\n  rolePermissions(role, checkAdmin) {\n    if (checkAdmin && role.permissions.has(PermissionFlagsBits.Administrator)) {\n      return new PermissionsBitField(PermissionsBitField.All).freeze();\n    }\n\n    const everyoneOverwrites = this.permissionOverwrites.cache.get(this.guild.id);\n    const roleOverwrites = this.permissionOverwrites.cache.get(role.id);\n\n    return role.permissions\n      .remove(everyoneOverwrites?.deny ?? PermissionsBitField.DefaultBit)\n      .add(everyoneOverwrites?.allow ?? PermissionsBitField.DefaultBit)\n      .remove(roleOverwrites?.deny ?? PermissionsBitField.DefaultBit)\n      .add(roleOverwrites?.allow ?? PermissionsBitField.DefaultBit)\n      .freeze();\n  }\n\n  /**\n   * Locks in the permission overwrites from the parent channel.\n   * @returns {Promise<GuildChannel>}\n   */\n  lockPermissions() {\n    if (!this.parent) return Promise.reject(new DiscordjsError(ErrorCodes.GuildChannelOrphan));\n    const permissionOverwrites = this.parent.permissionOverwrites.cache.map(overwrite => overwrite.toJSON());\n    return this.edit({ permissionOverwrites });\n  }\n\n  /**\n   * A collection of cached members of this channel, mapped by their ids.\n   * Members that can view this channel, if the channel is text-based.\n   * Members in the channel, if the channel is voice-based.\n   * @type {Collection<Snowflake, GuildMember>}\n   * @readonly\n   */\n  get members() {\n    return this.guild.members.cache.filter(member =>\n      this.permissionsFor(member).has(PermissionFlagsBits.ViewChannel, false),\n    );\n  }\n\n  /**\n   * Edits the channel.\n   * @param {GuildChannelEditOptions} options The options to provide\n   * @returns {Promise<GuildChannel>}\n   * @example\n   * // Edit a channel\n   * channel.edit({ name: 'new-channel' })\n   *   .then(console.log)\n   *   .catch(console.error);\n   */\n  edit(options) {\n    return this.guild.channels.edit(this, options);\n  }\n\n  /**\n   * Sets a new name for the guild channel.\n   * @param {string} name The new name for the guild channel\n   * @param {string} [reason] Reason for changing the guild channel's name\n   * @returns {Promise<GuildChannel>}\n   * @example\n   * // Set a new channel name\n   * channel.setName('not_general')\n   *   .then(newChannel => console.log(`Channel's new name is ${newChannel.name}`))\n   *   .catch(console.error);\n   */\n  setName(name, reason) {\n    return this.edit({ name, reason });\n  }\n\n  /**\n   * Options used to set the parent of a channel.\n   * @typedef {Object} SetParentOptions\n   * @property {boolean} [lockPermissions=true] Whether to lock the permissions to what the parent's permissions are\n   * @property {string} [reason] The reason for modifying the parent of the channel\n   */\n\n  /**\n   * Sets the parent of this channel.\n   * @param {?CategoryChannelResolvable} channel The category channel to set as the parent\n   * @param {SetParentOptions} [options={}] The options for setting the parent\n   * @returns {Promise<GuildChannel>}\n   * @example\n   * // Add a parent to a channel\n   * message.channel.setParent('355908108431917066', { lockPermissions: false })\n   *   .then(channel => console.log(`New parent of ${message.channel.name}: ${channel.name}`))\n   *   .catch(console.error);\n   */\n  setParent(channel, { lockPermissions = true, reason } = {}) {\n    return this.edit({\n      parent: channel ?? null,\n      lockPermissions,\n      reason,\n    });\n  }\n\n  /**\n   * Options used to set the position of a channel.\n   * @typedef {Object} SetChannelPositionOptions\n   * @property {boolean} [relative=false] Whether or not to change the position relative to its current value\n   * @property {string} [reason] The reason for changing the position\n   */\n\n  /**\n   * Sets a new position for the guild channel.\n   * @param {number} position The new position for the guild channel\n   * @param {SetChannelPositionOptions} [options] Options for setting position\n   * @returns {Promise<GuildChannel>}\n   * @example\n   * // Set a new channel position\n   * channel.setPosition(2)\n   *   .then(newChannel => console.log(`Channel's new position is ${newChannel.position}`))\n   *   .catch(console.error);\n   */\n  setPosition(position, options = {}) {\n    return this.guild.channels.setPosition(this, position, options);\n  }\n\n  /**\n   * Options used to clone a guild channel.\n   * @typedef {GuildChannelCreateOptions} GuildChannelCloneOptions\n   * @property {string} [name=this.name] Name of the new channel\n   */\n\n  /**\n   * Clones this channel.\n   * @param {GuildChannelCloneOptions} [options] The options for cloning this channel\n   * @returns {Promise<GuildChannel>}\n   */\n  clone(options = {}) {\n    return this.guild.channels.create({\n      name: options.name ?? this.name,\n      permissionOverwrites: this.permissionOverwrites.cache,\n      topic: this.topic,\n      type: this.type,\n      nsfw: this.nsfw,\n      parent: this.parent,\n      bitrate: this.bitrate,\n      userLimit: this.userLimit,\n      rateLimitPerUser: this.rateLimitPerUser,\n      position: this.rawPosition,\n      reason: null,\n      ...options,\n    });\n  }\n\n  /**\n   * Checks if this channel has the same type, topic, position, name, overwrites, and id as another channel.\n   * In most cases, a simple `channel.id === channel2.id` will do, and is much faster too.\n   * @param {GuildChannel} channel Channel to compare with\n   * @returns {boolean}\n   */\n  equals(channel) {\n    let equal =\n      channel &&\n      this.id === channel.id &&\n      this.type === channel.type &&\n      this.topic === channel.topic &&\n      this.position === channel.position &&\n      this.name === channel.name;\n\n    if (equal) {\n      if (this.permissionOverwrites && channel.permissionOverwrites) {\n        equal = this.permissionOverwrites.cache.equals(channel.permissionOverwrites.cache);\n      } else {\n        equal = !this.permissionOverwrites && !channel.permissionOverwrites;\n      }\n    }\n\n    return equal;\n  }\n\n  /**\n   * Whether the channel is deletable by the client user\n   * @type {boolean}\n   * @readonly\n   */\n  get deletable() {\n    return this.manageable && this.guild.rulesChannelId !== this.id && this.guild.publicUpdatesChannelId !== this.id;\n  }\n\n  /**\n   * Whether the channel is manageable by the client user\n   * @type {boolean}\n   * @readonly\n   */\n  get manageable() {\n    if (this.client.user.id === this.guild.ownerId) return true;\n    const permissions = this.permissionsFor(this.client.user);\n    if (!permissions) return false;\n\n    // This flag allows managing even if timed out\n    if (permissions.has(PermissionFlagsBits.Administrator, false)) return true;\n    if (this.guild.members.me.communicationDisabledUntilTimestamp > Date.now()) return false;\n\n    const bitfield = VoiceBasedChannelTypes.includes(this.type)\n      ? PermissionFlagsBits.ManageChannels | PermissionFlagsBits.Connect\n      : PermissionFlagsBits.ViewChannel | PermissionFlagsBits.ManageChannels;\n    return permissions.has(bitfield, false);\n  }\n\n  /**\n   * Whether the channel is viewable by the client user\n   * @type {boolean}\n   * @readonly\n   */\n  get viewable() {\n    if (this.client.user.id === this.guild.ownerId) return true;\n    const permissions = this.permissionsFor(this.client.user);\n    if (!permissions) return false;\n    return permissions.has(PermissionFlagsBits.ViewChannel, false);\n  }\n\n  /**\n   * Deletes this channel.\n   * @param {string} [reason] Reason for deleting this channel\n   * @returns {Promise<GuildChannel>}\n   * @example\n   * // Delete the channel\n   * channel.delete('making room for new channels')\n   *   .then(console.log)\n   *   .catch(console.error);\n   */\n  async delete(reason) {\n    await this.guild.channels.delete(this.id, reason);\n    return this;\n  }\n}\n\nmodule.exports = GuildChannel;\n", "'use strict';\n\nconst { SKUFlags } = require('discord-api-types/v10');\nconst BitField = require('./BitField');\n\n/**\n * Data structure that makes it easy to interact with an {@link SKU#flags} bitfield.\n * @extends {BitField}\n */\nclass SKUFlagsBitField extends BitField {\n  /**\n   * Numeric SKU flags.\n   * @type {SKUFlags}\n   * @memberof SKUFlagsBitField\n   */\n  static Flags = SKUFlags;\n}\n\n/**\n * @name SKUFlagsBitField\n * @kind constructor\n * @memberof SKUFlagsBitField\n * @param {BitFieldResolvable} [bits=0] Bit(s) to read from\n */\n\nexports.SKUFlagsBitField = SKUFlagsBitField;\n", "'use strict';\n\nconst Base = require('./Base');\nconst { SKUFlagsBitField } = require('../util/SKUFlagsBitField');\n\n/**\n * Represents a premium application SKU.\n * @extends {Base}\n */\nclass SKU extends Base {\n  constructor(client, data) {\n    super(client);\n\n    /**\n     * The id of the SKU\n     * @type {Snowflake}\n     */\n    this.id = data.id;\n\n    /**\n     * The type of the SKU\n     * @type {SKUType}\n     */\n    this.type = data.type;\n\n    /**\n     * The id of the parent application\n     * @type {Snowflake}\n     */\n    this.applicationId = data.application_id;\n\n    /**\n     * The customer-facing name of the premium offering\n     * @type {string}\n     */\n    this.name = data.name;\n\n    /**\n     * The system-generated URL slug based on this SKU's name\n     * @type {string}\n     */\n    this.slug = data.slug;\n\n    /**\n     * Flags that describe the SKU\n     * @type {Readonly<SKUFlagsBitField>}\n     */\n    this.flags = new SKUFlagsBitField(data.flags).freeze();\n  }\n}\n\nexports.SKU = SKU;\n", "'use strict';\n\nconst { parse } = require('node:path');\nconst { Collection } = require('@discordjs/collection');\nconst { ChannelType, RouteBases, Routes } = require('discord-api-types/v10');\nconst { fetch } = require('undici');\nconst Colors = require('./Colors');\nconst { DiscordjsError, DiscordjsRangeError, DiscordjsTypeError, ErrorCodes } = require('../errors');\nconst isObject = d => typeof d === 'object' && d !== null;\n\n/**\n * Flatten an object. Any properties that are collections will get converted to an array of keys.\n * @param {Object} obj The object to flatten.\n * @param {...Object<string, boolean|string>} [props] Specific properties to include/exclude.\n * @returns {Object}\n */\nfunction flatten(obj, ...props) {\n  if (!isObject(obj)) return obj;\n\n  const objProps = Object.keys(obj)\n    .filter(key => !key.startsWith('_'))\n    .map(key => ({ [key]: true }));\n\n  props = objProps.length ? Object.assign(...objProps, ...props) : Object.assign({}, ...props);\n\n  const out = {};\n\n  for (let [prop, newProp] of Object.entries(props)) {\n    if (!newProp) continue;\n    newProp = newProp === true ? prop : newProp;\n\n    const element = obj[prop];\n    const elemIsObj = isObject(element);\n    const valueOf = elemIsObj && typeof element.valueOf === 'function' ? element.valueOf() : null;\n    const hasToJSON = elemIsObj && typeof element.toJSON === 'function';\n\n    // If it's a Collection, make the array of keys\n    if (element instanceof Collection) out[newProp] = Array.from(element.keys());\n    // If the valueOf is a Collection, use its array of keys\n    else if (valueOf instanceof Collection) out[newProp] = Array.from(valueOf.keys());\n    // If it's an array, call toJSON function on each element if present, otherwise flatten each element\n    else if (Array.isArray(element)) out[newProp] = element.map(elm => elm.toJSON?.() ?? flatten(elm));\n    // If it's an object with a primitive `valueOf`, use that value\n    else if (typeof valueOf !== 'object') out[newProp] = valueOf;\n    // If it's an object with a toJSON function, use the return value of it\n    else if (hasToJSON) out[newProp] = element.toJSON();\n    // If element is an object, use the flattened version of it\n    else if (typeof element === 'object') out[newProp] = flatten(element);\n    // If it's a primitive\n    else if (!elemIsObj) out[newProp] = element;\n  }\n\n  return out;\n}\n\n/**\n * @typedef {Object} FetchRecommendedShardCountOptions\n * @property {number} [guildsPerShard=1000] Number of guilds assigned per shard\n * @property {number} [multipleOf=1] The multiple the shard count should round up to. (16 for large bot sharding)\n */\n\n/**\n * Gets the recommended shard count from Discord.\n * @param {string} token Discord auth token\n * @param {FetchRecommendedShardCountOptions} [options] Options for fetching the recommended shard count\n * @returns {Promise<number>} The recommended number of shards\n */\nasync function fetchRecommendedShardCount(token, { guildsPerShard = 1_000, multipleOf = 1 } = {}) {\n  if (!token) throw new DiscordjsError(ErrorCodes.TokenMissing);\n  const response = await fetch(RouteBases.api + Routes.gatewayBot(), {\n    method: 'GET',\n    headers: { Authorization: `Bot ${token.replace(/^Bot\\s*/i, '')}` },\n  });\n  if (!response.ok) {\n    if (response.status === 401) throw new DiscordjsError(ErrorCodes.TokenInvalid);\n    throw response;\n  }\n  const { shards } = await response.json();\n  return Math.ceil((shards * (1_000 / guildsPerShard)) / multipleOf) * multipleOf;\n}\n\n/**\n * A partial emoji object.\n * @typedef {Object} PartialEmoji\n * @property {boolean} animated Whether the emoji is animated\n * @property {Snowflake|undefined} id The id of the emoji\n * @property {string} name The name of the emoji\n */\n\n/**\n * Parses emoji info out of a string. The string must be one of:\n * * A UTF-8 emoji (no id)\n * * A URL-encoded UTF-8 emoji (no id)\n * * A Discord custom emoji (`<:name:id>` or `<a:name:id>`)\n * @param {string} text Emoji string to parse\n * @returns {?PartialEmoji}\n */\nfunction parseEmoji(text) {\n  if (text.includes('%')) text = decodeURIComponent(text);\n  if (!text.includes(':')) return { animated: false, name: text, id: undefined };\n  const match = text.match(/<?(?:(a):)?(\\w{2,32}):(\\d{17,19})?>?/);\n  return match && { animated: Boolean(match[1]), name: match[2], id: match[3] };\n}\n\n/**\n * A partial emoji object with only an id.\n * @typedef {Object} PartialEmojiOnlyId\n * @property {Snowflake} id The id of the emoji\n */\n\n/**\n * Resolves a partial emoji object from an {@link EmojiIdentifierResolvable}, without checking a Client.\n * @param {Emoji|EmojiIdentifierResolvable} emoji Emoji identifier to resolve\n * @returns {?(PartialEmoji|PartialEmojiOnlyId)} Supplying a snowflake yields `PartialEmojiOnlyId`.\n * @private\n */\nfunction resolvePartialEmoji(emoji) {\n  if (!emoji) return null;\n  if (typeof emoji === 'string') return /^\\d{17,19}$/.test(emoji) ? { id: emoji } : parseEmoji(emoji);\n  const { id, name, animated } = emoji;\n  if (!id && !name) return null;\n  return { id, name, animated: Boolean(animated) };\n}\n\n/**\n * Options used to make an error object.\n * @typedef {Object} MakeErrorOptions\n * @property {string} name Error type\n * @property {string} message Message for the error\n * @property {string} stack Stack for the error\n * @private\n */\n\n/**\n * Makes an Error from a plain info object.\n * @param {MakeErrorOptions} obj Error info\n * @returns {Error}\n * @private\n */\nfunction makeError(obj) {\n  const err = new Error(obj.message);\n  err.name = obj.name;\n  err.stack = obj.stack;\n  return err;\n}\n\n/**\n * Makes a plain error info object from an Error.\n * @param {Error} err Error to get info from\n * @returns {MakeErrorOptions}\n * @private\n */\nfunction makePlainError(err) {\n  return {\n    name: err.name,\n    message: err.message,\n    stack: err.stack,\n  };\n}\n\nconst TextSortableGroupTypes = [\n  ChannelType.GuildText,\n  ChannelType.GuildAnnouncement,\n  ChannelType.GuildForum,\n  ChannelType.GuildMedia,\n];\n\nconst VoiceSortableGroupTypes = [ChannelType.GuildVoice, ChannelType.GuildStageVoice];\nconst CategorySortableGroupTypes = [ChannelType.GuildCategory];\n\n/**\n * Gets an array of the channel types that can be moved in the channel group. For example, a GuildText channel would\n * return an array containing the types that can be ordered within the text channels (always at the top), and a voice\n * channel would return an array containing the types that can be ordered within the voice channels (always at the\n * bottom).\n * @param {ChannelType} type The type of the channel\n * @returns {ChannelType[]}\n * @private\n */\nfunction getSortableGroupTypes(type) {\n  switch (type) {\n    case ChannelType.GuildText:\n    case ChannelType.GuildAnnouncement:\n    case ChannelType.GuildForum:\n    case ChannelType.GuildMedia:\n      return TextSortableGroupTypes;\n    case ChannelType.GuildVoice:\n    case ChannelType.GuildStageVoice:\n      return VoiceSortableGroupTypes;\n    case ChannelType.GuildCategory:\n      return CategorySortableGroupTypes;\n    default:\n      return [type];\n  }\n}\n\n/**\n * Moves an element in an array *in place*.\n * @param {Array<*>} array Array to modify\n * @param {*} element Element to move\n * @param {number} newIndex Index or offset to move the element to\n * @param {boolean} [offset=false] Move the element by an offset amount rather than to a set index\n * @returns {number}\n * @private\n */\nfunction moveElementInArray(array, element, newIndex, offset = false) {\n  const index = array.indexOf(element);\n  newIndex = (offset ? index : 0) + newIndex;\n  if (newIndex > -1 && newIndex < array.length) {\n    const removedElement = array.splice(index, 1)[0];\n    array.splice(newIndex, 0, removedElement);\n  }\n  return array.indexOf(element);\n}\n\n/**\n * Verifies the provided data is a string, otherwise throws provided error.\n * @param {string} data The string resolvable to resolve\n * @param {Function} [error] The Error constructor to instantiate. Defaults to Error\n * @param {string} [errorMessage] The error message to throw with. Defaults to \"Expected string, got <data> instead.\"\n * @param {boolean} [allowEmpty=true] Whether an empty string should be allowed\n * @returns {string}\n */\nfunction verifyString(\n  data,\n  error = Error,\n  errorMessage = `Expected a string, got ${data} instead.`,\n  allowEmpty = true,\n) {\n  if (typeof data !== 'string') throw new error(errorMessage);\n  if (!allowEmpty && data.length === 0) throw new error(errorMessage);\n  return data;\n}\n\n/**\n * Can be a number, hex string, an RGB array like:\n * ```js\n * [255, 0, 255] // purple\n * ```\n * or one of the following strings:\n * - `Default`\n * - `White`\n * - `Aqua`\n * - `Green`\n * - `Blue`\n * - `Yellow`\n * - `Purple`\n * - `LuminousVividPink`\n * - `Fuchsia`\n * - `Gold`\n * - `Orange`\n * - `Red`\n * - `Grey`\n * - `Navy`\n * - `DarkAqua`\n * - `DarkGreen`\n * - `DarkBlue`\n * - `DarkPurple`\n * - `DarkVividPink`\n * - `DarkGold`\n * - `DarkOrange`\n * - `DarkRed`\n * - `DarkGrey`\n * - `DarkerGrey`\n * - `LightGrey`\n * - `DarkNavy`\n * - `Blurple`\n * - `Greyple`\n * - `DarkButNotBlack`\n * - `NotQuiteBlack`\n * - `Random`\n * @typedef {string|number|number[]} ColorResolvable\n */\n\n/**\n * Resolves a ColorResolvable into a color number.\n * @param {ColorResolvable} color Color to resolve\n * @returns {number} A color\n */\nfunction resolveColor(color) {\n  let resolvedColor;\n\n  if (typeof color === 'string') {\n    if (color === 'Random') return Math.floor(Math.random() * (0xffffff + 1));\n    if (color === 'Default') return 0;\n    if (/^#?[\\da-f]{6}$/i.test(color)) return parseInt(color.replace('#', ''), 16);\n    resolvedColor = Colors[color];\n  } else if (Array.isArray(color)) {\n    resolvedColor = (color[0] << 16) + (color[1] << 8) + color[2];\n  } else {\n    resolvedColor = color;\n  }\n\n  if (!Number.isInteger(resolvedColor)) {\n    throw new DiscordjsTypeError(ErrorCodes.ColorConvert, color);\n  }\n\n  if (resolvedColor < 0 || resolvedColor > 0xffffff) {\n    throw new DiscordjsRangeError(ErrorCodes.ColorRange);\n  }\n\n  return resolvedColor;\n}\n\n/**\n * Sorts by Discord's position and id.\n * @param {Collection} collection Collection of objects to sort\n * @returns {Collection}\n */\nfunction discordSort(collection) {\n  const isGuildChannel = collection.first() instanceof GuildChannel;\n  return collection.sorted(\n    isGuildChannel\n      ? (a, b) => a.rawPosition - b.rawPosition || Number(BigInt(a.id) - BigInt(b.id))\n      : (a, b) => a.rawPosition - b.rawPosition || Number(BigInt(b.id) - BigInt(a.id)),\n  );\n}\n\n/**\n * Sets the position of a Channel or Role.\n * @param {BaseChannel|Role} item Object to set the position of\n * @param {number} position New position for the object\n * @param {boolean} relative Whether `position` is relative to its current position\n * @param {Collection<string, BaseChannel|Role>} sorted A collection of the objects sorted properly\n * @param {Client} client The client to use to patch the data\n * @param {string} route Route to call PATCH on\n * @param {string} [reason] Reason for the change\n * @returns {Promise<BaseChannel[]|Role[]>} Updated item list, with `id` and `position` properties\n * @private\n */\nasync function setPosition(item, position, relative, sorted, client, route, reason) {\n  let updatedItems = [...sorted.values()];\n  moveElementInArray(updatedItems, item, position, relative);\n  updatedItems = updatedItems.map((r, i) => ({ id: r.id, position: i }));\n  await client.rest.patch(route, { body: updatedItems, reason });\n  return updatedItems;\n}\n\n/**\n * Alternative to Node's `path.basename`, removing query string after the extension if it exists.\n * @param {string} path Path to get the basename of\n * @param {string} [ext] File extension to remove\n * @returns {string} Basename of the path\n * @private\n */\nfunction basename(path, ext) {\n  const res = parse(path);\n  return ext && res.ext.startsWith(ext) ? res.name : res.base.split('?')[0];\n}\n\n/**\n * The content to have all mentions replaced by the equivalent text.\n * @param {string} str The string to be converted\n * @param {TextBasedChannels} channel The channel the string was sent in\n * @returns {string}\n */\nfunction cleanContent(str, channel) {\n  return str.replaceAll(\n    /* eslint-disable max-len */\n    /<(?:(?<type>@[!&]?|#)|(?:\\/(?<commandName>[-_\\p{L}\\p{N}\\p{sc=Deva}\\p{sc=Thai} ]+):)|(?:a?:(?<emojiName>[\\w]+):))(?<id>\\d{17,19})>/gu,\n    (match, type, commandName, emojiName, id) => {\n      if (commandName) return `/${commandName}`;\n\n      if (emojiName) return `:${emojiName}:`;\n\n      switch (type) {\n        case '@':\n        case '@!': {\n          const member = channel.guild?.members.cache.get(id);\n          if (member) {\n            return `@${member.displayName}`;\n          }\n\n          const user = channel.client.users.cache.get(id);\n          return user ? `@${user.displayName}` : match;\n        }\n        case '@&': {\n          if (channel.type === ChannelType.DM) return match;\n          const role = channel.guild.roles.cache.get(id);\n          return role ? `@${role.name}` : match;\n        }\n        case '#': {\n          const mentionedChannel = channel.client.channels.cache.get(id);\n          return mentionedChannel ? `#${mentionedChannel.name}` : match;\n        }\n        default: {\n          return match;\n        }\n      }\n    },\n  );\n}\n\n/**\n * The content to put in a code block with all code block fences replaced by the equivalent backticks.\n * @param {string} text The string to be converted\n * @returns {string}\n */\nfunction cleanCodeBlockContent(text) {\n  return text.replaceAll('```', '`\\u200b``');\n}\n\n/**\n * Parses a webhook URL for the id and token.\n * @param {string} url The URL to parse\n * @returns {?WebhookClientDataIdWithToken} `null` if the URL is invalid, otherwise the id and the token\n */\nfunction parseWebhookURL(url) {\n  const matches = url.match(\n    /https?:\\/\\/(?:ptb\\.|canary\\.)?discord\\.com\\/api(?:\\/v\\d{1,2})?\\/webhooks\\/(\\d{17,19})\\/([\\w-]{68})/i,\n  );\n\n  if (!matches || matches.length <= 2) return null;\n\n  const [, id, token] = matches;\n  return {\n    id,\n    token,\n  };\n}\n\n/**\n * Supportive data for interaction resolved data.\n * @typedef {Object} SupportingInteractionResolvedData\n * @property {Client} client The client\n * @property {Guild} [guild] A guild\n * @property {GuildTextBasedChannel} [channel] A channel\n * @private\n */\n\n/**\n * Transforms the resolved data received from the API.\n * @param {SupportingInteractionResolvedData} supportingData Data to support the transformation\n * @param {APIInteractionDataResolved} [data] The received resolved objects\n * @returns {CommandInteractionResolvedData}\n * @private\n */\nfunction transformResolved(\n  { client, guild, channel },\n  { members, users, channels, roles, messages, attachments } = {},\n) {\n  const result = {};\n\n  if (members) {\n    result.members = new Collection();\n    for (const [id, member] of Object.entries(members)) {\n      const user = users[id];\n      result.members.set(id, guild?.members._add({ user, ...member }) ?? member);\n    }\n  }\n\n  if (users) {\n    result.users = new Collection();\n    for (const user of Object.values(users)) {\n      result.users.set(user.id, client.users._add(user));\n    }\n  }\n\n  if (roles) {\n    result.roles = new Collection();\n    for (const role of Object.values(roles)) {\n      result.roles.set(role.id, guild?.roles._add(role) ?? role);\n    }\n  }\n\n  if (channels) {\n    result.channels = new Collection();\n    for (const apiChannel of Object.values(channels)) {\n      result.channels.set(apiChannel.id, client.channels._add(apiChannel, guild) ?? apiChannel);\n    }\n  }\n\n  if (messages) {\n    result.messages = new Collection();\n    for (const message of Object.values(messages)) {\n      result.messages.set(message.id, channel?.messages?._add(message) ?? message);\n    }\n  }\n\n  if (attachments) {\n    result.attachments = new Collection();\n    for (const attachment of Object.values(attachments)) {\n      const patched = new Attachment(attachment);\n      result.attachments.set(attachment.id, patched);\n    }\n  }\n\n  return result;\n}\n\n/**\n * Resolves a SKU id from a SKU resolvable.\n * @param {SKUResolvable} resolvable The SKU resolvable to resolve\n * @returns {?Snowflake} The resolved SKU id, or `null` if the resolvable was invalid\n */\nfunction resolveSKUId(resolvable) {\n  if (typeof resolvable === 'string') return resolvable;\n  if (resolvable instanceof SKU) return resolvable.id;\n  return null;\n}\n\nmodule.exports = {\n  flatten,\n  fetchRecommendedShardCount,\n  parseEmoji,\n  resolvePartialEmoji,\n  makeError,\n  makePlainError,\n  getSortableGroupTypes,\n  moveElementInArray,\n  verifyString,\n  resolveColor,\n  discordSort,\n  setPosition,\n  basename,\n  cleanContent,\n  cleanCodeBlockContent,\n  parseWebhookURL,\n  transformResolved,\n  resolveSKUId,\n};\n\n// Fixes Circular\nconst Attachment = require('../structures/Attachment');\nconst GuildChannel = require('../structures/GuildChannel');\nconst { SKU } = require('../structures/SKU.js');\n", "'use strict';\n\nconst EventEmitter = require('node:events');\nconst { REST } = require('@discordjs/rest');\nconst { Routes } = require('discord-api-types/v10');\nconst { DiscordjsTypeError, ErrorCodes } = require('../errors');\nconst Options = require('../util/Options');\nconst { flatten } = require('../util/Util');\n\n/**\n * The base class for all clients.\n * @extends {EventEmitter}\n */\nclass BaseClient extends EventEmitter {\n  constructor(options = {}) {\n    super({ captureRejections: true });\n\n    if (typeof options !== 'object' || options === null) {\n      throw new DiscordjsTypeError(ErrorCodes.InvalidType, 'options', 'object', true);\n    }\n\n    const defaultOptions = Options.createDefault();\n    /**\n     * The options the client was instantiated with\n     * @type {ClientOptions}\n     */\n    this.options = {\n      ...defaultOptions,\n      ...options,\n      presence: {\n        ...defaultOptions.presence,\n        ...options.presence,\n      },\n      sweepers: {\n        ...defaultOptions.sweepers,\n        ...options.sweepers,\n      },\n      ws: {\n        ...defaultOptions.ws,\n        ...options.ws,\n      },\n      rest: {\n        ...defaultOptions.rest,\n        ...options.rest,\n        userAgentAppendix: options.rest?.userAgentAppendix\n          ? `${Options.userAgentAppendix} ${options.rest.userAgentAppendix}`\n          : Options.userAgentAppendix,\n      },\n    };\n\n    /**\n     * The REST manager of the client\n     * @type {REST}\n     */\n    this.rest = new REST(this.options.rest);\n  }\n\n  /**\n   * Destroys all assets used by the base client.\n   * @returns {void}\n   */\n  destroy() {\n    this.rest.clearHashSweeper();\n    this.rest.clearHandlerSweeper();\n  }\n\n  /**\n   * Options used for deleting a webhook.\n   * @typedef {Object} WebhookDeleteOptions\n   * @property {string} [token] Token of the webhook\n   * @property {string} [reason] The reason for deleting the webhook\n   */\n\n  /**\n   * Deletes a webhook.\n   * @param {Snowflake} id The webhook's id\n   * @param {WebhookDeleteOptions} [options] Options for deleting the webhook\n   * @returns {Promise<void>}\n   */\n  async deleteWebhook(id, { token, reason } = {}) {\n    await this.rest.delete(Routes.webhook(id, token), { auth: !token, reason });\n  }\n\n  /**\n   * Increments max listeners by one, if they are not zero.\n   * @private\n   */\n  incrementMaxListeners() {\n    const maxListeners = this.getMaxListeners();\n    if (maxListeners !== 0) {\n      this.setMaxListeners(maxListeners + 1);\n    }\n  }\n\n  /**\n   * Decrements max listeners by one, if they are not zero.\n   * @private\n   */\n  decrementMaxListeners() {\n    const maxListeners = this.getMaxListeners();\n    if (maxListeners !== 0) {\n      this.setMaxListeners(maxListeners - 1);\n    }\n  }\n\n  toJSON(...props) {\n    return flatten(this, ...props);\n  }\n\n  async [Symbol.asyncDispose]() {\n    await this.destroy();\n  }\n}\n\nmodule.exports = BaseClient;\n\n/**\n * @external REST\n * @see {@link https://discord.js.org/docs/packages/rest/stable/REST:Class}\n */\n", "'use strict';\n\nfunction createEnum(keys) {\n  const obj = {};\n  for (const [index, key] of keys.entries()) {\n    if (key === null) continue;\n    obj[key] = index;\n    obj[index] = key;\n  }\n  return obj;\n}\n\nmodule.exports = { createEnum };\n", "'use strict';\n\nconst { createEnum } = require('./Enums');\n\n/**\n * The enumeration for partials.\n * ```js\n * import { Client, Partials } from 'discord.js';\n *\n * const client = new Client({\n *   intents: [\n *     // Intents...\n *   ],\n *   partials: [\n *     Partials.User, // We want to receive uncached users!\n *     Partials.Message // We want to receive uncached messages!\n *   ]\n * });\n * ```\n * @typedef {Object} Partials\n * @property {number} User The partial to receive uncached users.\n * @property {number} Channel The partial to receive uncached channels.\n * <info>This is required to receive direct messages!</info>\n * @property {number} GuildMember The partial to receive uncached guild members.\n * @property {number} Message The partial to receive uncached messages.\n * @property {number} Reaction The partial to receive uncached reactions.\n * @property {number} GuildScheduledEvent The partial to receive uncached guild scheduled events.\n * @property {number} ThreadMember The partial to receive uncached thread members.\n */\n\n// JSDoc for IntelliSense purposes\n/**\n * @type {Partials}\n * @ignore\n */\nmodule.exports = createEnum([\n  'User',\n  'Channel',\n  'GuildMember',\n  'Message',\n  'Reaction',\n  'GuildScheduledEvent',\n  'ThreadMember',\n]);\n", "'use strict';\n\nconst Partials = require('../../util/Partials');\n\n/*\n\nABOUT ACTIONS\n\nActions are similar to WebSocket Packet Handlers, but since introducing\nthe REST API methods, in order to prevent rewriting code to handle data,\n\"actions\" have been introduced. They're basically what Packet Handlers\nused to be but they're strictly for manipulating data and making sure\nthat WebSocket events don't clash with REST methods.\n\n*/\n\nclass GenericAction {\n  constructor(client) {\n    this.client = client;\n  }\n\n  handle(data) {\n    return data;\n  }\n\n  getPayload(data, manager, id, partialType, cache) {\n    return this.client.options.partials.includes(partialType) ? manager._add(data, cache) : manager.cache.get(id);\n  }\n\n  getChannel(data) {\n    const payloadData = {};\n    const id = data.channel_id ?? data.id;\n\n    if (!('recipients' in data)) {\n      // Try to resolve the recipient, but do not add the client user.\n      const recipient = data.author ?? data.user ?? { id: data.user_id };\n      if (recipient.id !== this.client.user.id) payloadData.recipients = [recipient];\n    }\n\n    if (id !== undefined) payloadData.id = id;\n\n    return (\n      data[this.client.actions.injectedChannel] ??\n      this.getPayload({ ...data, ...payloadData }, this.client.channels, id, Partials.Channel)\n    );\n  }\n\n  getMessage(data, channel, cache) {\n    const id = data.message_id ?? data.id;\n    return (\n      data[this.client.actions.injectedMessage] ??\n      this.getPayload(\n        {\n          id,\n          channel_id: channel.id,\n          guild_id: data.guild_id ?? channel.guild?.id,\n        },\n        channel.messages,\n        id,\n        Partials.Message,\n        cache,\n      )\n    );\n  }\n\n  getReaction(data, message, user) {\n    const id = data.emoji.id ?? decodeURIComponent(data.emoji.name);\n    return this.getPayload(\n      {\n        emoji: data.emoji,\n        count: message.partial ? null : 0,\n        me: user?.id === this.client.user.id,\n      },\n      message.reactions,\n      id,\n      Partials.Reaction,\n    );\n  }\n\n  getMember(data, guild) {\n    return this.getPayload(data, guild.members, data.user.id, Partials.GuildMember);\n  }\n\n  getUser(data) {\n    const id = data.user_id;\n    return data[this.client.actions.injectedUser] ?? this.getPayload({ id }, this.client.users, id, Partials.User);\n  }\n\n  getUserFromMember(data) {\n    if (data.guild_id && data.member?.user) {\n      const guild = this.client.guilds.cache.get(data.guild_id);\n      if (guild) {\n        return guild.members._add(data.member).user;\n      } else {\n        return this.client.users._add(data.member.user);\n      }\n    }\n    return this.getUser(data);\n  }\n\n  getScheduledEvent(data, guild) {\n    const id = data.guild_scheduled_event_id ?? data.id;\n    return this.getPayload(\n      { id, guild_id: data.guild_id ?? guild.id },\n      guild.scheduledEvents,\n      id,\n      Partials.GuildScheduledEvent,\n    );\n  }\n\n  getThreadMember(id, manager) {\n    return this.getPayload({ user_id: id }, manager, id, Partials.ThreadMember, false);\n  }\n\n  spreadInjectedData(data) {\n    return Object.fromEntries(Object.getOwnPropertySymbols(data).map(symbol => [symbol, data[symbol]]));\n  }\n}\n\nmodule.exports = GenericAction;\n", "'use strict';\n\n/**\n * @typedef {Object} Events\n * @property {string} ApplicationCommandPermissionsUpdate applicationCommandPermissionsUpdate\n * @property {string} AutoModerationActionExecution autoModerationActionExecution\n * @property {string} AutoModerationRuleCreate autoModerationRuleCreate\n * @property {string} AutoModerationRuleDelete autoModerationRuleDelete\n * @property {string} AutoModerationRuleUpdate autoModerationRuleUpdate\n * @property {string} CacheSweep cacheSweep\n * @property {string} ChannelCreate channelCreate\n * @property {string} ChannelDelete channelDelete\n * @property {string} ChannelPinsUpdate channelPinsUpdate\n * @property {string} ChannelUpdate channelUpdate\n * @property {string} ClientReady ready\n * @property {string} Debug debug\n * @property {string} EntitlementCreate entitlementCreate\n * @property {string} EntitlementUpdate entitlementUpdate\n * @property {string} EntitlementDelete entitlementDelete\n * @property {string} Error error\n * @property {string} GuildAuditLogEntryCreate guildAuditLogEntryCreate\n * @property {string} GuildAvailable guildAvailable\n * @property {string} GuildBanAdd guildBanAdd\n * @property {string} GuildBanRemove guildBanRemove\n * @property {string} GuildCreate guildCreate\n * @property {string} GuildDelete guildDelete\n * @property {string} GuildEmojiCreate emojiCreate\n * @property {string} GuildEmojiDelete emojiDelete\n * @property {string} GuildEmojiUpdate emojiUpdate\n * @property {string} GuildIntegrationsUpdate guildIntegrationsUpdate\n * @property {string} GuildMemberAdd guildMemberAdd\n * @property {string} GuildMemberAvailable guildMemberAvailable\n * @property {string} GuildMemberRemove guildMemberRemove\n * @property {string} GuildMembersChunk guildMembersChunk\n * @property {string} GuildMemberUpdate guildMemberUpdate\n * @property {string} GuildRoleCreate roleCreate\n * @property {string} GuildRoleDelete roleDelete\n * @property {string} GuildRoleUpdate roleUpdate\n * @property {string} GuildScheduledEventCreate guildScheduledEventCreate\n * @property {string} GuildScheduledEventDelete guildScheduledEventDelete\n * @property {string} GuildScheduledEventUpdate guildScheduledEventUpdate\n * @property {string} GuildScheduledEventUserAdd guildScheduledEventUserAdd\n * @property {string} GuildScheduledEventUserRemove guildScheduledEventUserRemove\n * @property {string} GuildStickerCreate stickerCreate\n * @property {string} GuildStickerDelete stickerDelete\n * @property {string} GuildStickerUpdate stickerUpdate\n * @property {string} GuildUnavailable guildUnavailable\n * @property {string} GuildUpdate guildUpdate\n * @property {string} InteractionCreate interactionCreate\n * @property {string} Invalidated invalidated\n * @property {string} InviteCreate inviteCreate\n * @property {string} InviteDelete inviteDelete\n * @property {string} MessageBulkDelete messageDeleteBulk\n * @property {string} MessageCreate messageCreate\n * @property {string} MessageDelete messageDelete\n * @property {string} MessagePollVoteAdd messagePollVoteAdd\n * @property {string} MessagePollVoteRemove messagePollVoteRemove\n * @property {string} MessageReactionAdd messageReactionAdd\n * @property {string} MessageReactionRemove messageReactionRemove\n * @property {string} MessageReactionRemoveAll messageReactionRemoveAll\n * @property {string} MessageReactionRemoveEmoji messageReactionRemoveEmoji\n * @property {string} MessageUpdate messageUpdate\n * @property {string} PresenceUpdate presenceUpdate\n * @property {string} ShardDisconnect shardDisconnect\n * @property {string} ShardError shardError\n * @property {string} ShardReady shardReady\n * @property {string} ShardReconnecting shardReconnecting\n * @property {string} ShardResume shardResume\n * @property {string} StageInstanceCreate stageInstanceCreate\n * @property {string} StageInstanceDelete stageInstanceDelete\n * @property {string} StageInstanceUpdate stageInstanceUpdate\n * @property {string} ThreadCreate threadCreate\n * @property {string} ThreadDelete threadDelete\n * @property {string} ThreadListSync threadListSync\n * @property {string} ThreadMembersUpdate threadMembersUpdate\n * @property {string} ThreadMemberUpdate threadMemberUpdate\n * @property {string} ThreadUpdate threadUpdate\n * @property {string} TypingStart typingStart\n * @property {string} UserUpdate userUpdate\n * @property {string} VoiceServerUpdate voiceServerUpdate\n * @property {string} VoiceStateUpdate voiceStateUpdate\n * @property {string} Warn warn\n * @property {string} WebhooksUpdate webhookUpdate\n */\n\n// JSDoc for IntelliSense purposes\n/**\n * @type {Events}\n * @ignore\n */\nmodule.exports = {\n  ApplicationCommandPermissionsUpdate: 'applicationCommandPermissionsUpdate',\n  AutoModerationActionExecution: 'autoModerationActionExecution',\n  AutoModerationRuleCreate: 'autoModerationRuleCreate',\n  AutoModerationRuleDelete: 'autoModerationRuleDelete',\n  AutoModerationRuleUpdate: 'autoModerationRuleUpdate',\n  CacheSweep: 'cacheSweep',\n  ChannelCreate: 'channelCreate',\n  ChannelDelete: 'channelDelete',\n  ChannelPinsUpdate: 'channelPinsUpdate',\n  ChannelUpdate: 'channelUpdate',\n  ClientReady: 'ready',\n  Debug: 'debug',\n  EntitlementCreate: 'entitlementCreate',\n  EntitlementUpdate: 'entitlementUpdate',\n  EntitlementDelete: 'entitlementDelete',\n  Error: 'error',\n  GuildAuditLogEntryCreate: 'guildAuditLogEntryCreate',\n  GuildAvailable: 'guildAvailable',\n  GuildBanAdd: 'guildBanAdd',\n  GuildBanRemove: 'guildBanRemove',\n  GuildCreate: 'guildCreate',\n  GuildDelete: 'guildDelete',\n  GuildEmojiCreate: 'emojiCreate',\n  GuildEmojiDelete: 'emojiDelete',\n  GuildEmojiUpdate: 'emojiUpdate',\n  GuildIntegrationsUpdate: 'guildIntegrationsUpdate',\n  GuildMemberAdd: 'guildMemberAdd',\n  GuildMemberAvailable: 'guildMemberAvailable',\n  GuildMemberRemove: 'guildMemberRemove',\n  GuildMembersChunk: 'guildMembersChunk',\n  GuildMemberUpdate: 'guildMemberUpdate',\n  GuildRoleCreate: 'roleCreate',\n  GuildRoleDelete: 'roleDelete',\n  GuildRoleUpdate: 'roleUpdate',\n  GuildScheduledEventCreate: 'guildScheduledEventCreate',\n  GuildScheduledEventDelete: 'guildScheduledEventDelete',\n  GuildScheduledEventUpdate: 'guildScheduledEventUpdate',\n  GuildScheduledEventUserAdd: 'guildScheduledEventUserAdd',\n  GuildScheduledEventUserRemove: 'guildScheduledEventUserRemove',\n  GuildStickerCreate: 'stickerCreate',\n  GuildStickerDelete: 'stickerDelete',\n  GuildStickerUpdate: 'stickerUpdate',\n  GuildUnavailable: 'guildUnavailable',\n  GuildUpdate: 'guildUpdate',\n  InteractionCreate: 'interactionCreate',\n  Invalidated: 'invalidated',\n  InviteCreate: 'inviteCreate',\n  InviteDelete: 'inviteDelete',\n  MessageBulkDelete: 'messageDeleteBulk',\n  MessageCreate: 'messageCreate',\n  MessageDelete: 'messageDelete',\n  MessagePollVoteAdd: 'messagePollVoteAdd',\n  MessagePollVoteRemove: 'messagePollVoteRemove',\n  MessageReactionAdd: 'messageReactionAdd',\n  MessageReactionRemove: 'messageReactionRemove',\n  MessageReactionRemoveAll: 'messageReactionRemoveAll',\n  MessageReactionRemoveEmoji: 'messageReactionRemoveEmoji',\n  MessageUpdate: 'messageUpdate',\n  PresenceUpdate: 'presenceUpdate',\n  Raw: 'raw',\n  ShardDisconnect: 'shardDisconnect',\n  ShardError: 'shardError',\n  ShardReady: 'shardReady',\n  ShardReconnecting: 'shardReconnecting',\n  ShardResume: 'shardResume',\n  StageInstanceCreate: 'stageInstanceCreate',\n  StageInstanceDelete: 'stageInstanceDelete',\n  StageInstanceUpdate: 'stageInstanceUpdate',\n  ThreadCreate: 'threadCreate',\n  ThreadDelete: 'threadDelete',\n  ThreadListSync: 'threadListSync',\n  ThreadMembersUpdate: 'threadMembersUpdate',\n  ThreadMemberUpdate: 'threadMemberUpdate',\n  ThreadUpdate: 'threadUpdate',\n  TypingStart: 'typingStart',\n  UserUpdate: 'userUpdate',\n  VoiceServerUpdate: 'voiceServerUpdate',\n  VoiceStateUpdate: 'voiceStateUpdate',\n  Warn: 'warn',\n  WebhooksUpdate: 'webhookUpdate',\n};\n", "'use strict';\n\nconst Action = require('./Action');\nconst Events = require('../../util/Events');\n\n/**\n * The data received in the {@link Client#event:applicationCommandPermissionsUpdate} event\n * @typedef {Object} ApplicationCommandPermissionsUpdateData\n * @property {Snowflake} id The id of the command or global entity that was updated\n * @property {Snowflake} guildId The id of the guild in which permissions were updated\n * @property {Snowflake} applicationId The id of the application that owns the command or entity being updated\n * @property {ApplicationCommandPermissions[]} permissions The updated permissions\n */\n\nclass ApplicationCommandPermissionsUpdateAction extends Action {\n  handle(data) {\n    const client = this.client;\n    /**\n     * Emitted whenever permissions for an application command in a guild were updated.\n     * <warn>This includes permission updates for other applications in addition to the logged in client,\n     * check `data.applicationId` to verify which application the update is for</warn>\n     * @event Client#applicationCommandPermissionsUpdate\n     * @param {ApplicationCommandPermissionsUpdateData} data The updated permissions\n     */\n    client.emit(Events.ApplicationCommandPermissionsUpdate, {\n      permissions: data.permissions,\n      id: data.id,\n      guildId: data.guild_id,\n      applicationId: data.application_id,\n    });\n  }\n}\n\nmodule.exports = ApplicationCommandPermissionsUpdateAction;\n", "'use strict';\n\nconst { _transformAPIAutoModerationAction } = require('../util/Transformers');\n\n/**\n * Represents the structure of an executed action when an {@link AutoModerationRule} is triggered.\n */\nclass AutoModerationActionExecution {\n  constructor(data, guild) {\n    /**\n     * The guild where this action was executed from.\n     * @type {Guild}\n     */\n    this.guild = guild;\n\n    /**\n     * The action that was executed.\n     * @type {AutoModerationAction}\n     */\n    this.action = _transformAPIAutoModerationAction(data.action);\n\n    /**\n     * The id of the auto moderation rule this action belongs to.\n     * @type {Snowflake}\n     */\n    this.ruleId = data.rule_id;\n\n    /**\n     * The trigger type of the auto moderation rule which was triggered.\n     * @type {AutoModerationRuleTriggerType}\n     */\n    this.ruleTriggerType = data.rule_trigger_type;\n\n    /**\n     * The id of the user that triggered this action.\n     * @type {Snowflake}\n     */\n    this.userId = data.user_id;\n\n    /**\n     * The id of the channel where this action was triggered from.\n     * @type {?Snowflake}\n     */\n    this.channelId = data.channel_id ?? null;\n\n    /**\n     * The id of the message that triggered this action.\n     * <info>This will not be present if the message was blocked or the content was not part of any message.</info>\n     * @type {?Snowflake}\n     */\n    this.messageId = data.message_id ?? null;\n\n    /**\n     * The id of any system auto moderation messages posted as a result of this action.\n     * @type {?Snowflake}\n     */\n    this.alertSystemMessageId = data.alert_system_message_id ?? null;\n\n    /**\n     * The content that triggered this action.\n     * <info>This property requires the {@link GatewayIntentBits.MessageContent} privileged gateway intent.</info>\n     * @type {string}\n     */\n    this.content = data.content;\n\n    /**\n     * The word or phrase configured in the rule that triggered this action.\n     * @type {?string}\n     */\n    this.matchedKeyword = data.matched_keyword ?? null;\n\n    /**\n     * The substring in content that triggered this action.\n     * @type {?string}\n     */\n    this.matchedContent = data.matched_content ?? null;\n  }\n\n  /**\n   * The auto moderation rule this action belongs to.\n   * @type {?AutoModerationRule}\n   * @readonly\n   */\n  get autoModerationRule() {\n    return this.guild.autoModerationRules.cache.get(this.ruleId) ?? null;\n  }\n\n  /**\n   * The channel where this action was triggered from.\n   * @type {?(GuildTextBasedChannel|ForumChannel|MediaChannel)}\n   * @readonly\n   */\n  get channel() {\n    return this.guild.channels.cache.get(this.channelId) ?? null;\n  }\n\n  /**\n   * The user that triggered this action.\n   * @type {?User}\n   * @readonly\n   */\n  get user() {\n    return this.guild.client.users.cache.get(this.userId) ?? null;\n  }\n\n  /**\n   * The guild member that triggered this action.\n   * @type {?GuildMember}\n   * @readonly\n   */\n  get member() {\n    return this.guild.members.cache.get(this.userId) ?? null;\n  }\n}\n\nmodule.exports = AutoModerationActionExecution;\n", "'use strict';\n\nconst Action = require('./Action');\nconst AutoModerationActionExecution = require('../../structures/AutoModerationActionExecution');\nconst Events = require('../../util/Events');\n\nclass AutoModerationActionExecutionAction extends Action {\n  handle(data) {\n    const { client } = this;\n    const guild = client.guilds.cache.get(data.guild_id);\n\n    if (guild) {\n      /**\n       * Emitted whenever an auto moderation rule is triggered.\n       * <info>This event requires the {@link PermissionFlagsBits.ManageGuild} permission.</info>\n       * @event Client#autoModerationActionExecution\n       * @param {AutoModerationActionExecution} autoModerationActionExecution The data of the execution\n       */\n      client.emit(Events.AutoModerationActionExecution, new AutoModerationActionExecution(data, guild));\n    }\n\n    return {};\n  }\n}\n\nmodule.exports = AutoModerationActionExecutionAction;\n", "'use strict';\n\nconst Action = require('./Action');\nconst Events = require('../../util/Events');\n\nclass AutoModerationRuleCreateAction extends Action {\n  handle(data) {\n    const { client } = this;\n    const guild = client.guilds.cache.get(data.guild_id);\n\n    if (guild) {\n      const autoModerationRule = guild.autoModerationRules._add(data);\n\n      /**\n       * Emitted whenever an auto moderation rule is created.\n       * <info>This event requires the {@link PermissionFlagsBits.ManageGuild} permission.</info>\n       * @event Client#autoModerationRuleCreate\n       * @param {AutoModerationRule} autoModerationRule The created auto moderation rule\n       */\n      client.emit(Events.AutoModerationRuleCreate, autoModerationRule);\n    }\n\n    return {};\n  }\n}\n\nmodule.exports = AutoModerationRuleCreateAction;\n", "'use strict';\n\nconst Action = require('./Action');\nconst Events = require('../../util/Events');\n\nclass AutoModerationRuleDeleteAction extends Action {\n  handle(data) {\n    const { client } = this;\n    const guild = client.guilds.cache.get(data.guild_id);\n\n    if (guild) {\n      const autoModerationRule = guild.autoModerationRules.cache.get(data.id);\n\n      if (autoModerationRule) {\n        guild.autoModerationRules.cache.delete(autoModerationRule.id);\n\n        /**\n         * Emitted whenever an auto moderation rule is deleted.\n         * <info>This event requires the {@link PermissionFlagsBits.ManageGuild} permission.</info>\n         * @event Client#autoModerationRuleDelete\n         * @param {AutoModerationRule} autoModerationRule The deleted auto moderation rule\n         */\n        client.emit(Events.AutoModerationRuleDelete, autoModerationRule);\n      }\n    }\n\n    return {};\n  }\n}\n\nmodule.exports = AutoModerationRuleDeleteAction;\n", "'use strict';\n\nconst Action = require('./Action');\nconst Events = require('../../util/Events');\n\nclass AutoModerationRuleUpdateAction extends Action {\n  handle(data) {\n    const { client } = this;\n    const guild = client.guilds.cache.get(data.guild_id);\n\n    if (guild) {\n      const oldAutoModerationRule = guild.autoModerationRules.cache.get(data.id)?._clone() ?? null;\n      const newAutoModerationRule = guild.autoModerationRules._add(data);\n\n      /**\n       * Emitted whenever an auto moderation rule gets updated.\n       * <info>This event requires the {@link PermissionFlagsBits.ManageGuild} permission.</info>\n       * @event Client#autoModerationRuleUpdate\n       * @param {?AutoModerationRule} oldAutoModerationRule The auto moderation rule before the update\n       * @param {AutoModerationRule} newAutoModerationRule The auto moderation rule after the update\n       */\n      client.emit(Events.AutoModerationRuleUpdate, oldAutoModerationRule, newAutoModerationRule);\n    }\n\n    return {};\n  }\n}\n\nmodule.exports = AutoModerationRuleUpdateAction;\n", "'use strict';\n\nconst Action = require('./Action');\nconst Events = require('../../util/Events');\n\nclass ChannelCreateAction extends Action {\n  handle(data) {\n    const client = this.client;\n    const existing = client.channels.cache.has(data.id);\n    const channel = client.channels._add(data);\n    if (!existing && channel) {\n      /**\n       * Emitted whenever a guild channel is created.\n       * @event Client#channelCreate\n       * @param {GuildChannel} channel The channel that was created\n       */\n      client.emit(Events.ChannelCreate, channel);\n    }\n    return { channel };\n  }\n}\n\nmodule.exports = ChannelCreateAction;\n", "'use strict';\n\nconst Action = require('./Action');\nconst Events = require('../../util/Events');\n\nclass ChannelDeleteAction extends Action {\n  handle(data) {\n    const client = this.client;\n    const channel = client.channels.cache.get(data.id);\n\n    if (channel) {\n      client.channels._remove(channel.id);\n      /**\n       * Emitted whenever a channel is deleted.\n       * @event Client#channelDelete\n       * @param {DMChannel|GuildChannel} channel The channel that was deleted\n       */\n      client.emit(Events.ChannelDelete, channel);\n    }\n  }\n}\n\nmodule.exports = ChannelDeleteAction;\n", "'use strict';\n\nconst DataManager = require('./DataManager');\nconst GuildChannel = require('../structures/GuildChannel');\n\n/**\n * Manages API methods for CategoryChannels' children.\n * @extends {DataManager}\n */\nclass CategoryChannelChildManager extends DataManager {\n  constructor(channel) {\n    super(channel.client, GuildChannel);\n    /**\n     * The category channel this manager belongs to\n     * @type {CategoryChannel}\n     */\n    this.channel = channel;\n  }\n\n  /**\n   * The channels that are a part of this category\n   * @type {Collection<Snowflake, GuildChannel>}\n   * @readonly\n   */\n  get cache() {\n    return this.guild.channels.cache.filter(channel => channel.parentId === this.channel.id);\n  }\n\n  /**\n   * The guild this manager belongs to\n   * @type {Guild}\n   * @readonly\n   */\n  get guild() {\n    return this.channel.guild;\n  }\n\n  /**\n   * Options for creating a channel using {@link CategoryChannelChildManager#create}.\n   * @typedef {Object} CategoryCreateChannelOptions\n   * @property {string} name The name for the new channel\n   * @property {ChannelType} [type=ChannelType.GuildText] The type of the new channel.\n   * @property {string} [topic] The topic for the new channel\n   * @property {boolean} [nsfw] Whether the new channel is NSFW\n   * @property {number} [bitrate] Bitrate of the new channel in bits (only voice)\n   * @property {number} [userLimit] Maximum amount of users allowed in the new channel (only voice)\n   * @property {OverwriteResolvable[]|Collection<Snowflake, OverwriteResolvable>} [permissionOverwrites]\n   * Permission overwrites of the new channel\n   * @property {number} [position] Position of the new channel\n   * @property {number} [rateLimitPerUser] The rate limit per user (slowmode) for the new channel in seconds\n   * @property {string} [rtcRegion] The specific region of the new channel.\n   * @property {VideoQualityMode} [videoQualityMode] The camera video quality mode of the voice channel\n   * @property {number} [defaultThreadRateLimitPerUser] The initial rate limit per user (slowmode)\n   * to set on newly created threads in a channel.\n   * @property {GuildForumTagData[]} [availableTags] The tags that can be used in this channel (forum only).\n   * @property {DefaultReactionEmoji} [defaultReactionEmoji]\n   * The emoji to show in the add reaction button on a thread in a guild forum channel.\n   * @property {ThreadAutoArchiveDuration} [defaultAutoArchiveDuration]\n   * The default auto archive duration for all new threads in this channel\n   * @property {SortOrderType} [defaultSortOrder] The default sort order mode used to order posts (forum only).\n   * @property {ForumLayoutType} [defaultForumLayout] The default layout used to display posts (forum only).\n   * @property {string} [reason] Reason for creating the new channel\n   */\n\n  /**\n   * Creates a new channel within this category.\n   * <info>You cannot create a channel of type {@link ChannelType.GuildCategory} inside a CategoryChannel.</info>\n   * @param {CategoryCreateChannelOptions} options Options for creating the new channel\n   * @returns {Promise<GuildChannel>}\n   */\n  create(options) {\n    return this.guild.channels.create({\n      ...options,\n      parent: this.channel.id,\n    });\n  }\n}\n\nmodule.exports = CategoryChannelChildManager;\n", "'use strict';\n\nconst GuildChannel = require('./GuildChannel');\nconst CategoryChannelChildManager = require('../managers/CategoryChannelChildManager');\n\n/**\n * Represents a guild category channel on Discord.\n * @extends {GuildChannel}\n */\nclass CategoryChannel extends GuildChannel {\n  /**\n   * The id of the parent of this channel.\n   * @name CategoryChannel#parentId\n   * @type {null}\n   */\n\n  /**\n   * The parent of this channel.\n   * @name CategoryChannel#parent\n   * @type {null}\n   * @readonly\n   */\n\n  /**\n   * Sets the category parent of this channel.\n   * <warn>It is not possible to set the parent of a CategoryChannel.</warn>\n   * @method setParent\n   * @memberof CategoryChannel\n   * @instance\n   * @param {?CategoryChannelResolvable} channel The channel to set as parent\n   * @param {SetParentOptions} [options={}] The options for setting the parent\n   * @returns {Promise<GuildChannel>}\n   */\n\n  /**\n   * A manager of the channels belonging to this category\n   * @type {CategoryChannelChildManager}\n   * @readonly\n   */\n  get children() {\n    return new CategoryChannelChildManager(this);\n  }\n}\n\nmodule.exports = CategoryChannel;\n", "'use strict';\n\nconst EventEmitter = require('node:events');\nconst { setTimeout, clearTimeout } = require('node:timers');\nconst { Collection } = require('@discordjs/collection');\nconst { DiscordjsTypeError, ErrorCodes } = require('../../errors');\nconst { flatten } = require('../../util/Util');\n\n/**\n * Filter to be applied to the collector.\n * @typedef {Function} CollectorFilter\n * @param {...*} args Any arguments received by the listener\n * @param {Collection} collection The items collected by this collector\n * @returns {boolean|Promise<boolean>}\n */\n\n/**\n * Options to be applied to the collector.\n * @typedef {Object} CollectorOptions\n * @property {CollectorFilter} [filter] The filter applied to this collector\n * @property {number} [time] How long to run the collector for in milliseconds\n * @property {number} [idle] How long to stop the collector after inactivity in milliseconds\n * @property {boolean} [dispose=false] Whether to dispose data when it's deleted\n */\n\n/**\n * Abstract class for defining a new Collector.\n * @extends {EventEmitter}\n * @abstract\n */\nclass Collector extends EventEmitter {\n  constructor(client, options = {}) {\n    super();\n\n    /**\n     * The client that instantiated this Collector\n     * @name Collector#client\n     * @type {Client}\n     * @readonly\n     */\n    Object.defineProperty(this, 'client', { value: client });\n\n    /**\n     * The filter applied to this collector\n     * @type {CollectorFilter}\n     * @returns {boolean|Promise<boolean>}\n     */\n    this.filter = options.filter ?? (() => true);\n\n    /**\n     * The options of this collector\n     * @type {CollectorOptions}\n     */\n    this.options = options;\n\n    /**\n     * The items collected by this collector\n     * @type {Collection}\n     */\n    this.collected = new Collection();\n\n    /**\n     * Whether this collector has finished collecting\n     * @type {boolean}\n     */\n    this.ended = false;\n\n    /**\n     * Timeout for cleanup\n     * @type {?Timeout}\n     * @private\n     */\n    this._timeout = null;\n\n    /**\n     * Timeout for cleanup due to inactivity\n     * @type {?Timeout}\n     * @private\n     */\n    this._idletimeout = null;\n\n    /**\n     * The reason the collector ended\n     * @type {?string}\n     * @private\n     */\n    this._endReason = null;\n\n    if (typeof this.filter !== 'function') {\n      throw new DiscordjsTypeError(ErrorCodes.InvalidType, 'options.filter', 'function');\n    }\n\n    this.handleCollect = this.handleCollect.bind(this);\n    this.handleDispose = this.handleDispose.bind(this);\n\n    if (options.time) this._timeout = setTimeout(() => this.stop('time'), options.time).unref();\n    if (options.idle) this._idletimeout = setTimeout(() => this.stop('idle'), options.idle).unref();\n\n    /**\n     * The timestamp at which this collector last collected an item\n     * @type {?number}\n     */\n    this.lastCollectedTimestamp = null;\n  }\n\n  /**\n   * The Date at which this collector last collected an item\n   * @type {?Date}\n   */\n  get lastCollectedAt() {\n    return this.lastCollectedTimestamp && new Date(this.lastCollectedTimestamp);\n  }\n\n  /**\n   * Call this to handle an event as a collectable element. Accepts any event data as parameters.\n   * @param {...*} args The arguments emitted by the listener\n   * @returns {Promise<void>}\n   * @emits Collector#collect\n   */\n  async handleCollect(...args) {\n    const collectedId = await this.collect(...args);\n\n    if (collectedId) {\n      const filterResult = await this.filter(...args, this.collected);\n      if (filterResult) {\n        this.collected.set(collectedId, args[0]);\n\n        /**\n         * Emitted whenever an element is collected.\n         * @event Collector#collect\n         * @param {...*} args The arguments emitted by the listener\n         */\n        this.emit('collect', ...args);\n\n        this.lastCollectedTimestamp = Date.now();\n        if (this._idletimeout) {\n          clearTimeout(this._idletimeout);\n          this._idletimeout = setTimeout(() => this.stop('idle'), this.options.idle).unref();\n        }\n      } else {\n        /**\n         * Emitted whenever an element is not collected by the collector.\n         * @event Collector#ignore\n         * @param {...*} args The arguments emitted by the listener\n         */\n        this.emit('ignore', ...args);\n      }\n    }\n    this.checkEnd();\n  }\n\n  /**\n   * Call this to remove an element from the collection. Accepts any event data as parameters.\n   * @param {...*} args The arguments emitted by the listener\n   * @returns {Promise<void>}\n   * @emits Collector#dispose\n   */\n  async handleDispose(...args) {\n    if (!this.options.dispose) return;\n\n    const dispose = this.dispose(...args);\n    if (!dispose || !(await this.filter(...args)) || !this.collected.has(dispose)) return;\n    this.collected.delete(dispose);\n\n    /**\n     * Emitted whenever an element is disposed of.\n     * @event Collector#dispose\n     * @param {...*} args The arguments emitted by the listener\n     */\n    this.emit('dispose', ...args);\n    this.checkEnd();\n  }\n\n  /**\n   * Returns a promise that resolves with the next collected element;\n   * rejects with collected elements if the collector finishes without receiving a next element\n   * @type {Promise}\n   * @readonly\n   */\n  get next() {\n    return new Promise((resolve, reject) => {\n      if (this.ended) {\n        reject(this.collected);\n        return;\n      }\n\n      const cleanup = () => {\n        this.removeListener('collect', onCollect);\n        this.removeListener('end', onEnd);\n      };\n\n      const onCollect = item => {\n        cleanup();\n        resolve(item);\n      };\n\n      const onEnd = () => {\n        cleanup();\n        reject(this.collected);\n      };\n\n      this.on('collect', onCollect);\n      this.on('end', onEnd);\n    });\n  }\n\n  /**\n   * Stops this collector and emits the `end` event.\n   * @param {string} [reason='user'] The reason this collector is ending\n   * @emits Collector#end\n   */\n  stop(reason = 'user') {\n    if (this.ended) return;\n\n    if (this._timeout) {\n      clearTimeout(this._timeout);\n      this._timeout = null;\n    }\n    if (this._idletimeout) {\n      clearTimeout(this._idletimeout);\n      this._idletimeout = null;\n    }\n\n    this._endReason = reason;\n    this.ended = true;\n\n    /**\n     * Emitted when the collector is finished collecting.\n     * @event Collector#end\n     * @param {Collection} collected The elements collected by the collector\n     * @param {string} reason The reason the collector ended\n     */\n    this.emit('end', this.collected, reason);\n  }\n\n  /**\n   * Options used to reset the timeout and idle timer of a {@link Collector}.\n   * @typedef {Object} CollectorResetTimerOptions\n   * @property {number} [time] How long to run the collector for (in milliseconds)\n   * @property {number} [idle] How long to wait to stop the collector after inactivity (in milliseconds)\n   */\n\n  /**\n   * Resets the collector's timeout and idle timer.\n   * @param {CollectorResetTimerOptions} [options] Options for resetting\n   */\n  resetTimer({ time, idle } = {}) {\n    if (this._timeout) {\n      clearTimeout(this._timeout);\n      this._timeout = setTimeout(() => this.stop('time'), time ?? this.options.time).unref();\n    }\n    if (this._idletimeout) {\n      clearTimeout(this._idletimeout);\n      this._idletimeout = setTimeout(() => this.stop('idle'), idle ?? this.options.idle).unref();\n    }\n  }\n\n  /**\n   * Checks whether the collector should end, and if so, ends it.\n   * @returns {boolean} Whether the collector ended or not\n   */\n  checkEnd() {\n    const reason = this.endReason;\n    if (reason) this.stop(reason);\n    return Boolean(reason);\n  }\n\n  /**\n   * Allows collectors to be consumed with for-await-of loops\n   * @see {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/for-await...of}\n   */\n  async *[Symbol.asyncIterator]() {\n    const queue = [];\n    const onCollect = (...item) => queue.push(item);\n    this.on('collect', onCollect);\n\n    try {\n      while (queue.length || !this.ended) {\n        if (queue.length) {\n          yield queue.shift();\n        } else {\n          // eslint-disable-next-line no-await-in-loop\n          await new Promise(resolve => {\n            const tick = () => {\n              this.removeListener('collect', tick);\n              this.removeListener('end', tick);\n              return resolve();\n            };\n            this.on('collect', tick);\n            this.on('end', tick);\n          });\n        }\n      }\n    } finally {\n      this.removeListener('collect', onCollect);\n    }\n  }\n\n  toJSON() {\n    return flatten(this);\n  }\n\n  /* eslint-disable no-empty-function */\n  /**\n   * The reason this collector has ended with, or null if it hasn't ended yet\n   * @type {?string}\n   * @readonly\n   */\n  get endReason() {\n    return this._endReason;\n  }\n\n  /**\n   * Handles incoming events from the `handleCollect` function. Returns null if the event should not\n   * be collected, or returns an object describing the data that should be stored.\n   * @see Collector#handleCollect\n   * @param {...*} args Any args the event listener emits\n   * @returns {?(*|Promise<?*>)} Data to insert into collection, if any\n   * @abstract\n   */\n  collect() {}\n\n  /**\n   * Handles incoming events from the `handleDispose`. Returns null if the event should not\n   * be disposed, or returns the key that should be removed.\n   * @see Collector#handleDispose\n   * @param {...*} args Any args the event listener emits\n   * @returns {?*} Key to remove from the collection, if any\n   * @abstract\n   */\n  dispose() {}\n  /* eslint-enable no-empty-function */\n}\n\nmodule.exports = Collector;\n", "'use strict';\n\nconst { Collection } = require('@discordjs/collection');\nconst Collector = require('./interfaces/Collector');\nconst Events = require('../util/Events');\n\n/**\n * @typedef {CollectorOptions} InteractionCollectorOptions\n * @property {TextBasedChannelsResolvable} [channel] The channel to listen to interactions from\n * @property {ComponentType} [componentType] The type of component to listen for\n * @property {GuildResolvable} [guild] The guild to listen to interactions from\n * @property {InteractionType} [interactionType] The type of interaction to listen for\n * @property {number} [max] The maximum total amount of interactions to collect\n * @property {number} [maxComponents] The maximum number of components to collect\n * @property {number} [maxUsers] The maximum number of users to interact\n * @property {Message|APIMessage} [message] The message to listen to interactions from\n * @property {InteractionResponse} [interactionResponse] The interaction response to listen\n * to message component interactions from\n */\n\n/**\n * Collects interactions.\n * Will automatically stop if the message ({@link Client#event:messageDelete messageDelete} or\n * {@link Client#event:messageDeleteBulk messageDeleteBulk}),\n * channel ({@link Client#event:channelDelete channelDelete}), or\n * guild ({@link Client#event:guildDelete guildDelete}) is deleted.\n * <info>Interaction collectors that do not specify `time` or `idle` may be prone to always running.\n * Ensure your interaction collectors end via either of these options or manual cancellation.</info>\n * @extends {Collector}\n */\nclass InteractionCollector extends Collector {\n  /**\n   * @param {Client} client The client on which to collect interactions\n   * @param {InteractionCollectorOptions} [options={}] The options to apply to this collector\n   */\n  constructor(client, options = {}) {\n    super(client, options);\n\n    /**\n     * The message from which to collect interactions, if provided\n     * @type {?Snowflake}\n     */\n    this.messageId = options.message?.id ?? options.interactionResponse?.interaction.message?.id ?? null;\n\n    /**\n     * The message interaction id from which to collect interactions, if provided\n     * @type {?Snowflake}\n     */\n    this.messageInteractionId = options.interactionResponse?.id ?? null;\n\n    /**\n     * The channel from which to collect interactions, if provided\n     * @type {?Snowflake}\n     */\n    this.channelId =\n      options.interactionResponse?.interaction.channelId ??\n      options.message?.channelId ??\n      options.message?.channel_id ??\n      this.client.channels.resolveId(options.channel);\n\n    /**\n     * The guild from which to collect interactions, if provided\n     * @type {?Snowflake}\n     */\n    this.guildId =\n      options.interactionResponse?.interaction.guildId ??\n      options.message?.guildId ??\n      options.message?.guild_id ??\n      this.client.guilds.resolveId(options.channel?.guild) ??\n      this.client.guilds.resolveId(options.guild);\n\n    /**\n     * The type of interaction to collect\n     * @type {?InteractionType}\n     */\n    this.interactionType = options.interactionType ?? null;\n\n    /**\n     * The type of component to collect\n     * @type {?ComponentType}\n     */\n    this.componentType = options.componentType ?? null;\n\n    /**\n     * The users that have interacted with this collector\n     * @type {Collection<Snowflake, User>}\n     */\n    this.users = new Collection();\n\n    /**\n     * The total number of interactions collected\n     * @type {number}\n     */\n    this.total = 0;\n\n    this.client.incrementMaxListeners();\n\n    const bulkDeleteListener = messages => {\n      if (messages.has(this.messageId)) this.stop('messageDelete');\n    };\n\n    if (this.messageId || this.messageInteractionId) {\n      this._handleMessageDeletion = this._handleMessageDeletion.bind(this);\n      this.client.on(Events.MessageDelete, this._handleMessageDeletion);\n      this.client.on(Events.MessageBulkDelete, bulkDeleteListener);\n    }\n\n    if (this.channelId) {\n      this._handleChannelDeletion = this._handleChannelDeletion.bind(this);\n      this._handleThreadDeletion = this._handleThreadDeletion.bind(this);\n      this.client.on(Events.ChannelDelete, this._handleChannelDeletion);\n      this.client.on(Events.ThreadDelete, this._handleThreadDeletion);\n    }\n\n    if (this.guildId) {\n      this._handleGuildDeletion = this._handleGuildDeletion.bind(this);\n      this.client.on(Events.GuildDelete, this._handleGuildDeletion);\n    }\n\n    this.client.on(Events.InteractionCreate, this.handleCollect);\n\n    this.once('end', () => {\n      this.client.removeListener(Events.InteractionCreate, this.handleCollect);\n      this.client.removeListener(Events.MessageDelete, this._handleMessageDeletion);\n      this.client.removeListener(Events.MessageBulkDelete, bulkDeleteListener);\n      this.client.removeListener(Events.ChannelDelete, this._handleChannelDeletion);\n      this.client.removeListener(Events.ThreadDelete, this._handleThreadDeletion);\n      this.client.removeListener(Events.GuildDelete, this._handleGuildDeletion);\n      this.client.decrementMaxListeners();\n    });\n\n    this.on('collect', interaction => {\n      this.total++;\n      this.users.set(interaction.user.id, interaction.user);\n    });\n  }\n\n  /**\n   * Handles an incoming interaction for possible collection.\n   * @param {BaseInteraction} interaction The interaction to possibly collect\n   * @returns {?Snowflake}\n   * @private\n   */\n  collect(interaction) {\n    /**\n     * Emitted whenever an interaction is collected.\n     * @event InteractionCollector#collect\n     * @param {BaseInteraction} interaction The interaction that was collected\n     */\n\n    if (this.interactionType && interaction.type !== this.interactionType) return null;\n    if (this.componentType && interaction.componentType !== this.componentType) return null;\n    if (this.messageId && interaction.message?.id !== this.messageId) return null;\n    if (\n      this.messageInteractionId &&\n      interaction.message?.interaction?.id &&\n      interaction.message.interaction.id !== this.messageInteractionId\n    ) {\n      return null;\n    }\n    if (this.channelId && interaction.channelId !== this.channelId) return null;\n    if (this.guildId && interaction.guildId !== this.guildId) return null;\n\n    return interaction.id;\n  }\n\n  /**\n   * Handles an interaction for possible disposal.\n   * @param {BaseInteraction} interaction The interaction that could be disposed of\n   * @returns {?Snowflake}\n   */\n  dispose(interaction) {\n    /**\n     * Emitted whenever an interaction is disposed of.\n     * @event InteractionCollector#dispose\n     * @param {BaseInteraction} interaction The interaction that was disposed of\n     */\n    if (this.type && interaction.type !== this.type) return null;\n    if (this.componentType && interaction.componentType !== this.componentType) return null;\n    if (this.messageId && interaction.message?.id !== this.messageId) return null;\n    if (\n      this.messageInteractionId &&\n      interaction.message?.interaction?.id &&\n      interaction.message.interaction.id !== this.messageInteractionId\n    ) {\n      return null;\n    }\n    if (this.channelId && interaction.channelId !== this.channelId) return null;\n    if (this.guildId && interaction.guildId !== this.guildId) return null;\n\n    return interaction.id;\n  }\n\n  /**\n   * Empties this interaction collector.\n   */\n  empty() {\n    this.total = 0;\n    this.collected.clear();\n    this.users.clear();\n    this.checkEnd();\n  }\n\n  /**\n   * The reason this collector has ended with, or null if it hasn't ended yet\n   * @type {?string}\n   * @readonly\n   */\n  get endReason() {\n    if (this.options.max && this.total >= this.options.max) return 'limit';\n    if (this.options.maxComponents && this.collected.size >= this.options.maxComponents) return 'componentLimit';\n    if (this.options.maxUsers && this.users.size >= this.options.maxUsers) return 'userLimit';\n    return super.endReason;\n  }\n\n  /**\n   * Handles checking if the message has been deleted, and if so, stops the collector with the reason 'messageDelete'.\n   * @private\n   * @param {Message} message The message that was deleted\n   * @returns {void}\n   */\n  _handleMessageDeletion(message) {\n    if (message.id === this.messageId) {\n      this.stop('messageDelete');\n    }\n\n    if (message.interaction?.id === this.messageInteractionId) {\n      this.stop('messageDelete');\n    }\n  }\n\n  /**\n   * Handles checking if the channel has been deleted, and if so, stops the collector with the reason 'channelDelete'.\n   * @private\n   * @param {GuildChannel} channel The channel that was deleted\n   * @returns {void}\n   */\n  _handleChannelDeletion(channel) {\n    if (channel.id === this.channelId || channel.threads?.cache.has(this.channelId)) {\n      this.stop('channelDelete');\n    }\n  }\n\n  /**\n   * Handles checking if the thread has been deleted, and if so, stops the collector with the reason 'threadDelete'.\n   * @private\n   * @param {ThreadChannel} thread The thread that was deleted\n   * @returns {void}\n   */\n  _handleThreadDeletion(thread) {\n    if (thread.id === this.channelId) {\n      this.stop('threadDelete');\n    }\n  }\n\n  /**\n   * Handles checking if the guild has been deleted, and if so, stops the collector with the reason 'guildDelete'.\n   * @private\n   * @param {Guild} guild The guild that was deleted\n   * @returns {void}\n   */\n  _handleGuildDeletion(guild) {\n    if (guild.id === this.guildId) {\n      this.stop('guildDelete');\n    }\n  }\n}\n\nmodule.exports = InteractionCollector;\n", "'use strict';\n\nconst Collector = require('./interfaces/Collector');\nconst Events = require('../util/Events');\n\n/**\n * @typedef {CollectorOptions} MessageCollectorOptions\n * @property {number} max The maximum amount of messages to collect\n * @property {number} maxProcessed The maximum amount of messages to process\n */\n\n/**\n * Collects messages on a channel.\n * Will automatically stop if the channel ({@link Client#event:channelDelete channelDelete}),\n * thread ({@link Client#event:threadDelete threadDelete}), or\n * guild ({@link Client#event:guildDelete guildDelete}) is deleted.\n * @extends {Collector}\n */\nclass MessageCollector extends Collector {\n  /**\n   * @param {TextBasedChannels} channel The channel\n   * @param {MessageCollectorOptions} options The options to be applied to this collector\n   * @emits MessageCollector#message\n   */\n  constructor(channel, options = {}) {\n    super(channel.client, options);\n\n    /**\n     * The channel\n     * @type {TextBasedChannels}\n     */\n    this.channel = channel;\n\n    /**\n     * Total number of messages that were received in the channel during message collection\n     * @type {number}\n     */\n    this.received = 0;\n\n    const bulkDeleteListener = messages => {\n      for (const message of messages.values()) this.handleDispose(message);\n    };\n\n    this._handleChannelDeletion = this._handleChannelDeletion.bind(this);\n    this._handleThreadDeletion = this._handleThreadDeletion.bind(this);\n    this._handleGuildDeletion = this._handleGuildDeletion.bind(this);\n\n    this.client.incrementMaxListeners();\n    this.client.on(Events.MessageCreate, this.handleCollect);\n    this.client.on(Events.MessageDelete, this.handleDispose);\n    this.client.on(Events.MessageBulkDelete, bulkDeleteListener);\n    this.client.on(Events.ChannelDelete, this._handleChannelDeletion);\n    this.client.on(Events.ThreadDelete, this._handleThreadDeletion);\n    this.client.on(Events.GuildDelete, this._handleGuildDeletion);\n\n    this.once('end', () => {\n      this.client.removeListener(Events.MessageCreate, this.handleCollect);\n      this.client.removeListener(Events.MessageDelete, this.handleDispose);\n      this.client.removeListener(Events.MessageBulkDelete, bulkDeleteListener);\n      this.client.removeListener(Events.ChannelDelete, this._handleChannelDeletion);\n      this.client.removeListener(Events.ThreadDelete, this._handleThreadDeletion);\n      this.client.removeListener(Events.GuildDelete, this._handleGuildDeletion);\n      this.client.decrementMaxListeners();\n    });\n  }\n\n  /**\n   * Handles a message for possible collection.\n   * @param {Message} message The message that could be collected\n   * @returns {?Snowflake}\n   * @private\n   */\n  collect(message) {\n    /**\n     * Emitted whenever a message is collected.\n     * @event MessageCollector#collect\n     * @param {Message} message The message that was collected\n     */\n    if (message.channelId !== this.channel.id) return null;\n    this.received++;\n    return message.id;\n  }\n\n  /**\n   * Handles a message for possible disposal.\n   * @param {Message} message The message that could be disposed of\n   * @returns {?Snowflake}\n   */\n  dispose(message) {\n    /**\n     * Emitted whenever a message is disposed of.\n     * @event MessageCollector#dispose\n     * @param {Message} message The message that was disposed of\n     */\n    return message.channelId === this.channel.id ? message.id : null;\n  }\n\n  /**\n   * The reason this collector has ended with, or null if it hasn't ended yet\n   * @type {?string}\n   * @readonly\n   */\n  get endReason() {\n    if (this.options.max && this.collected.size >= this.options.max) return 'limit';\n    if (this.options.maxProcessed && this.received === this.options.maxProcessed) return 'processedLimit';\n    return super.endReason;\n  }\n\n  /**\n   * Handles checking if the channel has been deleted, and if so, stops the collector with the reason 'channelDelete'.\n   * @private\n   * @param {GuildChannel} channel The channel that was deleted\n   * @returns {void}\n   */\n  _handleChannelDeletion(channel) {\n    if (channel.id === this.channel.id || channel.id === this.channel.parentId) {\n      this.stop('channelDelete');\n    }\n  }\n\n  /**\n   * Handles checking if the thread has been deleted, and if so, stops the collector with the reason 'threadDelete'.\n   * @private\n   * @param {ThreadChannel} thread The thread that was deleted\n   * @returns {void}\n   */\n  _handleThreadDeletion(thread) {\n    if (thread.id === this.channel.id) {\n      this.stop('threadDelete');\n    }\n  }\n\n  /**\n   * Handles checking if the guild has been deleted, and if so, stops the collector with the reason 'guildDelete'.\n   * @private\n   * @param {Guild} guild The guild that was deleted\n   * @returns {void}\n   */\n  _handleGuildDeletion(guild) {\n    if (guild.id === this.channel.guild?.id) {\n      this.stop('guildDelete');\n    }\n  }\n}\n\nmodule.exports = MessageCollector;\n", "'use strict';\n\nconst isEqual = require('fast-deep-equal');\n\n/**\n * Represents a component\n */\nclass Component {\n  constructor(data) {\n    /**\n     * The API data associated with this component\n     * @type {APIMessageComponent}\n     */\n    this.data = data;\n  }\n\n  /**\n   * The type of the component\n   * @type {ComponentType}\n   * @readonly\n   */\n  get type() {\n    return this.data.type;\n  }\n\n  /**\n   * Whether or not the given components are equal\n   * @param {Component|APIMessageComponent} other The component to compare against\n   * @returns {boolean}\n   */\n  equals(other) {\n    if (other instanceof Component) {\n      return isEqual(other.data, this.data);\n    }\n    return isEqual(other, this.data);\n  }\n\n  /**\n   * Returns the API-compatible JSON for this component\n   * @returns {APIMessageComponent}\n   */\n  toJSON() {\n    return { ...this.data };\n  }\n}\n\nmodule.exports = Component;\n", "'use strict';\n\nconst { deprecate } = require('node:util');\nconst { isJSONEncodable } = require('@discordjs/util');\nconst Component = require('./Component');\nconst { createComponent } = require('../util/Components');\n\n/**\n * Represents an action row\n * @extends {Component}\n */\nclass ActionRow extends Component {\n  constructor({ components, ...data }) {\n    super(data);\n\n    /**\n     * The components in this action row\n     * @type {Component[]}\n     * @readonly\n     */\n    this.components = components.map(component => createComponent(component));\n  }\n\n  /**\n   * Creates a new action row builder from JSON data\n   * @method from\n   * @memberof ActionRow\n   * @param {ActionRowBuilder|ActionRow|APIActionRowComponent} other The other data\n   * @returns {ActionRowBuilder}\n   * @deprecated Use {@link ActionRowBuilder.from | ActionRowBuilder#from} instead.\n   */\n  static from = deprecate(\n    other => new this(isJSONEncodable(other) ? other.toJSON() : other),\n    'ActionRow.from() is deprecated. Use ActionRowBuilder.from() instead.',\n  );\n\n  /**\n   * Returns the API-compatible JSON for this component\n   * @returns {APIActionRowComponent}\n   */\n  toJSON() {\n    return { ...this.data, components: this.components.map(component => component.toJSON()) };\n  }\n}\n\nmodule.exports = ActionRow;\n", "'use strict';\n\nconst { ButtonBuilder: BuildersButton } = require('@discordjs/builders');\nconst { isJSONEncodable } = require('@discordjs/util');\nconst { toSnakeCase } = require('../util/Transformers');\nconst { resolvePartialEmoji } = require('../util/Util');\n\n/**\n * Represents a button builder.\n * @extends {BuildersButton}\n */\nclass ButtonBuilder extends BuildersButton {\n  constructor({ emoji, ...data } = {}) {\n    super(toSnakeCase({ ...data, emoji: emoji && typeof emoji === 'string' ? resolvePartialEmoji(emoji) : emoji }));\n  }\n\n  /**\n   * Sets the emoji to display on this button\n   * @param {string|APIMessageComponentEmoji} emoji The emoji to display on this button\n   * @returns {ButtonBuilder}\n   */\n  setEmoji(emoji) {\n    if (typeof emoji === 'string') {\n      return super.setEmoji(resolvePartialEmoji(emoji));\n    }\n    return super.setEmoji(emoji);\n  }\n\n  /**\n   * Creates a new button builder from JSON data\n   * @param {ButtonBuilder|ButtonComponent|APIButtonComponent} other The other data\n   * @returns {ButtonBuilder}\n   */\n  static from(other) {\n    return new this(isJSONEncodable(other) ? other.toJSON() : other);\n  }\n}\n\nmodule.exports = ButtonBuilder;\n\n/**\n * @external BuildersButton\n * @see {@link https://discord.js.org/docs/packages/builders/stable/ButtonBuilder:Class}\n */\n", "'use strict';\n\nconst Component = require('./Component');\n\n/**\n * Represents a button component\n * @extends {Component}\n */\nclass ButtonComponent extends Component {\n  /**\n   * The style of this button\n   * @type {ButtonStyle}\n   * @readonly\n   */\n  get style() {\n    return this.data.style;\n  }\n\n  /**\n   * The label of this button\n   * @type {?string}\n   * @readonly\n   */\n  get label() {\n    return this.data.label ?? null;\n  }\n\n  /**\n   * The emoji used in this button\n   * @type {?APIMessageComponentEmoji}\n   * @readonly\n   */\n  get emoji() {\n    return this.data.emoji ?? null;\n  }\n\n  /**\n   * Whether this button is disabled\n   * @type {boolean}\n   * @readonly\n   */\n  get disabled() {\n    return this.data.disabled ?? false;\n  }\n\n  /**\n   * The custom id of this button (only defined on non-link buttons)\n   * @type {?string}\n   * @readonly\n   */\n  get customId() {\n    return this.data.custom_id ?? null;\n  }\n\n  /**\n   * The URL of this button (only defined on link buttons)\n   * @type {?string}\n   * @readonly\n   */\n  get url() {\n    return this.data.url ?? null;\n  }\n}\n\nmodule.exports = ButtonComponent;\n", "'use strict';\n\nconst { ChannelSelectMenuBuilder: BuildersChannelSelectMenu } = require('@discordjs/builders');\nconst { isJSONEncodable } = require('@discordjs/util');\nconst { toSnakeCase } = require('../util/Transformers');\n\n/**\n * Class used to build select menu components to be sent through the API\n * @extends {BuildersChannelSelectMenu}\n */\nclass ChannelSelectMenuBuilder extends BuildersChannelSelectMenu {\n  constructor(data = {}) {\n    super(toSnakeCase(data));\n  }\n\n  /**\n   * Creates a new select menu builder from JSON data\n   * @param {ChannelSelectMenuBuilder|ChannelSelectMenuComponent|APIChannelSelectComponent} other The other data\n   * @returns {ChannelSelectMenuBuilder}\n   */\n  static from(other) {\n    return new this(isJSONEncodable(other) ? other.toJSON() : other);\n  }\n}\n\nmodule.exports = ChannelSelectMenuBuilder;\n\n/**\n * @external BuildersChannelSelectMenu\n * @see {@link https://discord.js.org/docs/packages/builders/stable/ChannelSelectMenuBuilder:Class}\n */\n", "'use strict';\n\nconst Component = require('./Component');\n\n/**\n * Represents a select menu component\n * @extends {Component}\n */\nclass BaseSelectMenuComponent extends Component {\n  /**\n   * The placeholder for this select menu\n   * @type {?string}\n   * @readonly\n   */\n  get placeholder() {\n    return this.data.placeholder ?? null;\n  }\n\n  /**\n   * The maximum amount of options that can be selected\n   * @type {?number}\n   * @readonly\n   */\n  get maxValues() {\n    return this.data.max_values ?? null;\n  }\n\n  /**\n   * The minimum amount of options that must be selected\n   * @type {?number}\n   * @readonly\n   */\n  get minValues() {\n    return this.data.min_values ?? null;\n  }\n\n  /**\n   * The custom id of this select menu\n   * @type {string}\n   * @readonly\n   */\n  get customId() {\n    return this.data.custom_id;\n  }\n\n  /**\n   * Whether this select menu is disabled\n   * @type {boolean}\n   * @readonly\n   */\n  get disabled() {\n    return this.data.disabled ?? false;\n  }\n}\n\nmodule.exports = BaseSelectMenuComponent;\n", "'use strict';\n\nconst BaseSelectMenuComponent = require('./BaseSelectMenuComponent');\n\n/**\n * Represents a channel select menu component\n * @extends {BaseSelectMenuComponent}\n */\nclass ChannelSelectMenuComponent extends BaseSelectMenuComponent {\n  /**\n   * The options in this select menu\n   * @type {?(ChannelType[])}\n   * @readonly\n   */\n  get channelTypes() {\n    return this.data.channel_types ?? null;\n  }\n}\n\nmodule.exports = ChannelSelectMenuComponent;\n", "'use strict';\n\nconst { MentionableSelectMenuBuilder: BuildersMentionableSelectMenu } = require('@discordjs/builders');\nconst { isJSONEncodable } = require('@discordjs/util');\nconst { toSnakeCase } = require('../util/Transformers');\n\n/**\n * Class used to build select menu components to be sent through the API\n * @extends {BuildersMentionableSelectMenu}\n */\nclass MentionableSelectMenuBuilder extends BuildersMentionableSelectMenu {\n  constructor(data = {}) {\n    super(toSnakeCase(data));\n  }\n\n  /**\n   * Creates a new select menu builder from JSON data\n   * @param {MentionableSelectMenuBuilder|MentionableSelectMenuComponent|APIMentionableSelectComponent} other\n   * The other data\n   * @returns {MentionableSelectMenuBuilder}\n   */\n  static from(other) {\n    return new this(isJSONEncodable(other) ? other.toJSON() : other);\n  }\n}\n\nmodule.exports = MentionableSelectMenuBuilder;\n\n/**\n * @external BuildersMentionableSelectMenu\n * @see {@link https://discord.js.org/docs/packages/builders/stable/MentionableSelectMenuBuilder:Class}\n */\n", "'use strict';\n\nconst BaseSelectMenuComponent = require('./BaseSelectMenuComponent');\n\n/**\n * Represents a mentionable select menu component\n * @extends {BaseSelectMenuComponent}\n */\nclass MentionableSelectMenuComponent extends BaseSelectMenuComponent {}\n\nmodule.exports = MentionableSelectMenuComponent;\n", "'use strict';\n\nconst { RoleSelectMenuBuilder: BuildersRoleSelectMenu } = require('@discordjs/builders');\nconst { isJSONEncodable } = require('@discordjs/util');\nconst { toSnakeCase } = require('../util/Transformers');\n\n/**\n * Class used to build select menu components to be sent through the API\n * @extends {BuildersRoleSelectMenu}\n */\nclass RoleSelectMenuBuilder extends BuildersRoleSelectMenu {\n  constructor(data = {}) {\n    super(toSnakeCase(data));\n  }\n\n  /**\n   * Creates a new select menu builder from JSON data\n   * @param {RoleSelectMenuBuilder|RoleSelectMenuComponent|APIRoleSelectComponent} other The other data\n   * @returns {RoleSelectMenuBuilder}\n   */\n  static from(other) {\n    return new this(isJSONEncodable(other) ? other.toJSON() : other);\n  }\n}\n\nmodule.exports = RoleSelectMenuBuilder;\n\n/**\n * @external BuildersRoleSelectMenu\n * @see {@link https://discord.js.org/docs/packages/builders/stable/RoleSelectMenuBuilder:Class}\n */\n", "'use strict';\n\nconst BaseSelectMenuComponent = require('./BaseSelectMenuComponent');\n\n/**\n * Represents a role select menu component\n * @extends {BaseSelectMenuComponent}\n */\nclass RoleSelectMenuComponent extends BaseSelectMenuComponent {}\n\nmodule.exports = RoleSelectMenuComponent;\n", "'use strict';\n\nconst { SelectMenuBuilder: BuildersSelectMenu, normalizeArray } = require('@discordjs/builders');\nconst { isJSONEncodable } = require('@discordjs/util');\nconst { toSnakeCase } = require('../util/Transformers');\nconst { resolvePartialEmoji } = require('../util/Util');\n\n/**\n * Class used to build select menu components to be sent through the API\n * @extends {BuildersSelectMenu}\n */\nclass StringSelectMenuBuilder extends BuildersSelectMenu {\n  constructor({ options, ...data } = {}) {\n    super(\n      toSnakeCase({\n        ...data,\n        options: options?.map(({ emoji, ...option }) => ({\n          ...option,\n          emoji: emoji && typeof emoji === 'string' ? resolvePartialEmoji(emoji) : emoji,\n        })),\n      }),\n    );\n  }\n\n  /**\n   * Normalizes a select menu option emoji\n   * @param {SelectMenuOptionData|APISelectMenuOption} selectMenuOption The option to normalize\n   * @returns {SelectMenuOptionBuilder|APISelectMenuOption}\n   * @private\n   */\n  static normalizeEmoji(selectMenuOption) {\n    if (isJSONEncodable(selectMenuOption)) {\n      return selectMenuOption;\n    }\n\n    const { emoji, ...option } = selectMenuOption;\n    return {\n      ...option,\n      emoji: typeof emoji === 'string' ? resolvePartialEmoji(emoji) : emoji,\n    };\n  }\n\n  /**\n   * Adds options to this select menu\n   * @param {RestOrArray<APISelectMenuOption>} options The options to add to this select menu\n   * @returns {StringSelectMenuBuilder}\n   */\n  addOptions(...options) {\n    return super.addOptions(normalizeArray(options).map(option => StringSelectMenuBuilder.normalizeEmoji(option)));\n  }\n\n  /**\n   * Sets the options on this select menu\n   * @param {RestOrArray<APISelectMenuOption>} options The options to set on this select menu\n   * @returns {StringSelectMenuBuilder}\n   */\n  setOptions(...options) {\n    return super.setOptions(normalizeArray(options).map(option => StringSelectMenuBuilder.normalizeEmoji(option)));\n  }\n\n  /**\n   * Creates a new select menu builder from json data\n   * @param {StringSelectMenuBuilder|StringSelectMenuComponent|APIStringSelectComponent} other The other data\n   * @returns {StringSelectMenuBuilder}\n   */\n  static from(other) {\n    if (isJSONEncodable(other)) {\n      return new this(other.toJSON());\n    }\n    return new this(other);\n  }\n}\n\nmodule.exports = StringSelectMenuBuilder;\n\n/**\n * @external BuildersSelectMenu\n * @see {@link https://discord.js.org/docs/packages/builders/stable/StringSelectMenuBuilder:Class}\n */\n", "'use strict';\n\nconst BaseSelectMenuComponent = require('./BaseSelectMenuComponent');\n\n/**\n * Represents a string select menu component\n * @extends {BaseSelectMenuComponent}\n */\nclass StringSelectMenuComponent extends BaseSelectMenuComponent {\n  /**\n   * The options in this select menu\n   * @type {APISelectMenuOption[]}\n   * @readonly\n   */\n  get options() {\n    return this.data.options;\n  }\n}\n\nmodule.exports = StringSelectMenuComponent;\n", "'use strict';\n\nconst { TextInputBuilder: BuildersTextInput } = require('@discordjs/builders');\nconst { isJSONEncodable } = require('@discordjs/util');\nconst { toSnakeCase } = require('../util/Transformers');\n\n/**\n * Represents a text input builder.\n * @extends {BuildersTextInput}\n */\nclass TextInputBuilder extends BuildersTextInput {\n  constructor(data) {\n    super(toSnakeCase(data));\n  }\n\n  /**\n   * Creates a new text input builder from JSON data\n   * @param {TextInputBuilder|TextInputComponent|APITextInputComponent} other The other data\n   * @returns {TextInputBuilder}\n   */\n  static from(other) {\n    return new this(isJSONEncodable(other) ? other.toJSON() : other);\n  }\n}\n\nmodule.exports = TextInputBuilder;\n\n/**\n * @external BuildersTextInput\n * @see {@link https://discord.js.org/docs/packages/builders/stable/TextInputBuilder:Class}\n */\n", "'use strict';\n\nconst Component = require('./Component');\n\n/**\n * Represents a text input component.\n * @extends {Component}\n */\nclass TextInputComponent extends Component {\n  /**\n   * The custom id of this text input\n   * @type {string}\n   * @readonly\n   */\n  get customId() {\n    return this.data.custom_id;\n  }\n\n  /**\n   * The value for this text input\n   * @type {string}\n   * @readonly\n   */\n  get value() {\n    return this.data.value;\n  }\n}\n\nmodule.exports = TextInputComponent;\n", "'use strict';\n\nconst { UserSelectMenuBuilder: BuildersUserSelectMenu } = require('@discordjs/builders');\nconst { isJSONEncodable } = require('@discordjs/util');\nconst { toSnakeCase } = require('../util/Transformers');\n\n/**\n * Class used to build select menu components to be sent through the API\n * @extends {BuildersUserSelectMenu}\n */\nclass UserSelectMenuBuilder extends BuildersUserSelectMenu {\n  constructor(data = {}) {\n    super(toSnakeCase(data));\n  }\n\n  /**\n   * Creates a new select menu builder from JSON data\n   * @param {UserSelectMenuBuilder|UserSelectMenuComponent|APIUserSelectComponent} other The other data\n   * @returns {UserSelectMenuBuilder}\n   */\n  static from(other) {\n    return new this(isJSONEncodable(other) ? other.toJSON() : other);\n  }\n}\n\nmodule.exports = UserSelectMenuBuilder;\n\n/**\n * @external BuildersUserSelectMenu\n * @see {@link https://discord.js.org/docs/packages/builders/stable/UserSelectMenuBuilder:Class}\n */\n", "'use strict';\n\nconst BaseSelectMenuComponent = require('./BaseSelectMenuComponent');\n\n/**\n * Represents a user select menu component\n * @extends {BaseSelectMenuComponent}\n */\nclass UserSelectMenuComponent extends BaseSelectMenuComponent {}\n\nmodule.exports = UserSelectMenuComponent;\n", "'use strict';\n\n// This file contains the typedefs for camel-cased JSON data\nconst { ComponentBuilder } = require('@discordjs/builders');\nconst { ComponentType } = require('discord-api-types/v10');\n/**\n * @typedef {Object} BaseComponentData\n * @property {ComponentType} type The type of component\n */\n\n/**\n * @typedef {BaseComponentData} ActionRowData\n * @property {ComponentData[]} components The components in this action row\n */\n\n/**\n * @typedef {BaseComponentData} ButtonComponentData\n * @property {ButtonStyle} style The style of the button\n * @property {?boolean} disabled Whether this button is disabled\n * @property {string} label The label of this button\n * @property {?APIMessageComponentEmoji} emoji The emoji on this button\n * @property {?string} customId The custom id of the button\n * @property {?string} url The URL of the button\n */\n\n/**\n * @typedef {object} SelectMenuComponentOptionData\n * @property {string} label The label of the option\n * @property {string} value The value of the option\n * @property {?string} description The description of the option\n * @property {?APIMessageComponentEmoji} emoji The emoji on the option\n * @property {?boolean} default Whether this option is selected by default\n */\n\n/**\n * @typedef {BaseComponentData} SelectMenuComponentData\n * @property {string} customId The custom id of the select menu\n * @property {?boolean} disabled Whether the select menu is disabled or not\n * @property {?number} maxValues The maximum amount of options that can be selected\n * @property {?number} minValues The minimum amount of options that can be selected\n * @property {?SelectMenuComponentOptionData[]} options The options in this select menu\n * @property {?string} placeholder The placeholder of the select menu\n */\n\n/**\n * @typedef {ActionRowData|ButtonComponentData|SelectMenuComponentData} MessageComponentData\n */\n\n/**\n * @typedef {BaseComponentData} TextInputComponentData\n * @property {string} customId The custom id of the text input\n * @property {TextInputStyle} style The style of the text input\n * @property {string} label The text that appears on top of the text input field\n * @property {?number} minLength The minimum number of characters that can be entered in the text input\n * @property {?number} maxLength The maximum number of characters that can be entered in the text input\n * @property {?boolean} required Whether or not the text input is required or not\n * @property {?string} value The pre-filled text in the text input\n * @property {?string} placeholder Placeholder for the text input\n */\n\n/**\n * @typedef {ActionRowData|ButtonComponentData|SelectMenuComponentData|TextInputComponentData} ComponentData\n */\n\n/**\n * Any emoji data that can be used within a button\n * @typedef {APIMessageComponentEmoji|string} ComponentEmojiResolvable\n */\n\n/**\n * Transforms API data into a component\n * @param {APIMessageComponent|Component} data The data to create the component from\n * @returns {Component}\n */\nfunction createComponent(data) {\n  if (data instanceof Component) {\n    return data;\n  }\n\n  switch (data.type) {\n    case ComponentType.ActionRow:\n      return new ActionRow(data);\n    case ComponentType.Button:\n      return new ButtonComponent(data);\n    case ComponentType.StringSelect:\n      return new StringSelectMenuComponent(data);\n    case ComponentType.TextInput:\n      return new TextInputComponent(data);\n    case ComponentType.UserSelect:\n      return new UserSelectMenuComponent(data);\n    case ComponentType.RoleSelect:\n      return new RoleSelectMenuComponent(data);\n    case ComponentType.MentionableSelect:\n      return new MentionableSelectMenuComponent(data);\n    case ComponentType.ChannelSelect:\n      return new ChannelSelectMenuComponent(data);\n    default:\n      return new Component(data);\n  }\n}\n\n/**\n * Transforms API data into a component builder\n * @param {APIMessageComponent|ComponentBuilder} data The data to create the component from\n * @returns {ComponentBuilder}\n */\nfunction createComponentBuilder(data) {\n  if (data instanceof ComponentBuilder) {\n    return data;\n  }\n\n  switch (data.type) {\n    case ComponentType.ActionRow:\n      return new ActionRowBuilder(data);\n    case ComponentType.Button:\n      return new ButtonBuilder(data);\n    case ComponentType.StringSelect:\n      return new StringSelectMenuBuilder(data);\n    case ComponentType.TextInput:\n      return new TextInputBuilder(data);\n    case ComponentType.UserSelect:\n      return new UserSelectMenuBuilder(data);\n    case ComponentType.RoleSelect:\n      return new RoleSelectMenuBuilder(data);\n    case ComponentType.MentionableSelect:\n      return new MentionableSelectMenuBuilder(data);\n    case ComponentType.ChannelSelect:\n      return new ChannelSelectMenuBuilder(data);\n    default:\n      return new ComponentBuilder(data);\n  }\n}\n\nmodule.exports = { createComponent, createComponentBuilder };\n\nconst ActionRow = require('../structures/ActionRow');\nconst ActionRowBuilder = require('../structures/ActionRowBuilder');\nconst ButtonBuilder = require('../structures/ButtonBuilder');\nconst ButtonComponent = require('../structures/ButtonComponent');\nconst ChannelSelectMenuBuilder = require('../structures/ChannelSelectMenuBuilder');\nconst ChannelSelectMenuComponent = require('../structures/ChannelSelectMenuComponent');\nconst Component = require('../structures/Component');\nconst MentionableSelectMenuBuilder = require('../structures/MentionableSelectMenuBuilder');\nconst MentionableSelectMenuComponent = require('../structures/MentionableSelectMenuComponent');\nconst RoleSelectMenuBuilder = require('../structures/RoleSelectMenuBuilder');\nconst RoleSelectMenuComponent = require('../structures/RoleSelectMenuComponent');\nconst StringSelectMenuBuilder = require('../structures/StringSelectMenuBuilder');\nconst StringSelectMenuComponent = require('../structures/StringSelectMenuComponent');\nconst TextInputBuilder = require('../structures/TextInputBuilder');\nconst TextInputComponent = require('../structures/TextInputComponent');\nconst UserSelectMenuBuilder = require('../structures/UserSelectMenuBuilder');\nconst UserSelectMenuComponent = require('../structures/UserSelectMenuComponent');\n", "'use strict';\n\nconst { ActionRowBuilder: BuildersActionRow } = require('@discordjs/builders');\nconst { isJSONEncodable } = require('@discordjs/util');\nconst { createComponentBuilder } = require('../util/Components');\nconst { toSnakeCase } = require('../util/Transformers');\n\n/**\n * Represents an action row builder.\n * @extends {BuildersActionRow}\n */\nclass ActionRowBuilder extends BuildersActionRow {\n  constructor({ components, ...data } = {}) {\n    super({\n      ...toSnakeCase(data),\n      components: components?.map(component => createComponentBuilder(component)),\n    });\n  }\n\n  /**\n   * Creates a new action row builder from JSON data\n   * @param {ActionRow|ActionRowBuilder|APIActionRowComponent} other The other data\n   * @returns {ActionRowBuilder}\n   */\n  static from(other) {\n    return new this(isJSONEncodable(other) ? other.toJSON() : other);\n  }\n}\n\nmodule.exports = ActionRowBuilder;\n\n/**\n * @external BuildersActionRow\n * @see {@link https://discord.js.org/docs/packages/builders/stable/ActionRowBuilder:Class}\n */\n", "'use strict';\n\nconst { DiscordSnowflake } = require('@sapphire/snowflake');\nconst { GuildScheduledEventStatus, GuildScheduledEventEntityType, RouteBases } = require('discord-api-types/v10');\nconst Base = require('./Base');\nconst { DiscordjsError, ErrorCodes } = require('../errors');\n\n/**\n * Represents a scheduled event in a {@link Guild}.\n * @extends {Base}\n */\nclass GuildScheduledEvent extends Base {\n  constructor(client, data) {\n    super(client);\n\n    /**\n     * The id of the guild scheduled event\n     * @type {Snowflake}\n     */\n    this.id = data.id;\n\n    /**\n     * The id of the guild this guild scheduled event belongs to\n     * @type {Snowflake}\n     */\n    this.guildId = data.guild_id;\n\n    this._patch(data);\n  }\n\n  _patch(data) {\n    if ('channel_id' in data) {\n      /**\n       * The channel id in which the scheduled event will be hosted,\n       * or `null` if entity type is {@link GuildScheduledEventEntityType.External}\n       * @type {?Snowflake}\n       */\n      this.channelId = data.channel_id;\n    } else {\n      this.channelId ??= null;\n    }\n\n    if ('creator_id' in data) {\n      /**\n       * The id of the user that created this guild scheduled event\n       * @type {?Snowflake}\n       */\n      this.creatorId = data.creator_id;\n    } else {\n      this.creatorId ??= null;\n    }\n\n    if ('name' in data) {\n      /**\n       * The name of the guild scheduled event\n       * @type {?string}\n       */\n      this.name = data.name;\n    } else {\n      // Only if partial.\n      this.name ??= null;\n    }\n\n    if ('description' in data) {\n      /**\n       * The description of the guild scheduled event\n       * @type {?string}\n       */\n      this.description = data.description;\n    } else {\n      this.description ??= null;\n    }\n\n    if ('scheduled_start_time' in data) {\n      /**\n       * The timestamp the guild scheduled event will start at\n       * @type {?number}\n       */\n      this.scheduledStartTimestamp = Date.parse(data.scheduled_start_time);\n    } else {\n      this.scheduledStartTimestamp ??= null;\n    }\n\n    if ('scheduled_end_time' in data) {\n      /**\n       * The timestamp the guild scheduled event will end at\n       * or `null` if the event does not have a scheduled time to end\n       * @type {?number}\n       */\n      this.scheduledEndTimestamp = data.scheduled_end_time ? Date.parse(data.scheduled_end_time) : null;\n    } else {\n      this.scheduledEndTimestamp ??= null;\n    }\n\n    if ('privacy_level' in data) {\n      /**\n       * The privacy level of the guild scheduled event\n       * @type {?GuildScheduledEventPrivacyLevel}\n       */\n      this.privacyLevel = data.privacy_level;\n    } else {\n      // Only if partial.\n      this.privacyLevel ??= null;\n    }\n\n    if ('status' in data) {\n      /**\n       * The status of the guild scheduled event\n       * @type {?GuildScheduledEventStatus}\n       */\n      this.status = data.status;\n    } else {\n      // Only if partial.\n      this.status ??= null;\n    }\n\n    if ('entity_type' in data) {\n      /**\n       * The type of hosting entity associated with the scheduled event\n       * @type {?GuildScheduledEventEntityType}\n       */\n      this.entityType = data.entity_type;\n    } else {\n      // Only if partial.\n      this.entityType ??= null;\n    }\n\n    if ('entity_id' in data) {\n      /**\n       * The id of the hosting entity associated with the scheduled event\n       * @type {?Snowflake}\n       */\n      this.entityId = data.entity_id;\n    } else {\n      this.entityId ??= null;\n    }\n\n    if ('user_count' in data) {\n      /**\n       * The number of users who are subscribed to this guild scheduled event\n       * @type {?number}\n       */\n      this.userCount = data.user_count;\n    } else {\n      this.userCount ??= null;\n    }\n\n    if ('creator' in data) {\n      /**\n       * The user that created this guild scheduled event\n       * @type {?User}\n       */\n      this.creator = this.client.users._add(data.creator);\n    } else {\n      this.creator ??= this.client.users.resolve(this.creatorId);\n    }\n\n    /* eslint-disable max-len */\n    /**\n     * Represents the additional metadata for a {@link GuildScheduledEvent}\n     * @see {@link https://discord.com/developers/docs/resources/guild-scheduled-event#guild-scheduled-event-object-guild-scheduled-event-entity-metadata}\n     * @typedef {Object} GuildScheduledEventEntityMetadata\n     * @property {?string} location The location of the guild scheduled event\n     */\n    /* eslint-enable max-len */\n\n    if ('entity_metadata' in data) {\n      if (data.entity_metadata) {\n        /**\n         * Additional metadata\n         * @type {?GuildScheduledEventEntityMetadata}\n         */\n        this.entityMetadata = {\n          location: data.entity_metadata.location ?? this.entityMetadata?.location ?? null,\n        };\n      } else {\n        this.entityMetadata = null;\n      }\n    } else {\n      this.entityMetadata ??= null;\n    }\n\n    if ('image' in data) {\n      /**\n       * The cover image hash for this scheduled event\n       * @type {?string}\n       */\n      this.image = data.image;\n    } else {\n      this.image ??= null;\n    }\n  }\n\n  /**\n   * Whether this guild scheduled event is partial.\n   * @type {boolean}\n   * @readonly\n   */\n  get partial() {\n    return this.name === null;\n  }\n\n  /**\n   * The URL of this scheduled event's cover image\n   * @param {BaseImageURLOptions} [options={}] Options for image URL\n   * @returns {?string}\n   */\n  coverImageURL(options = {}) {\n    return this.image && this.client.rest.cdn.guildScheduledEventCover(this.id, this.image, options);\n  }\n\n  /**\n   * The timestamp the guild scheduled event was created at\n   * @type {number}\n   * @readonly\n   */\n  get createdTimestamp() {\n    return DiscordSnowflake.timestampFrom(this.id);\n  }\n\n  /**\n   * The time the guild scheduled event was created at\n   * @type {Date}\n   * @readonly\n   */\n  get createdAt() {\n    return new Date(this.createdTimestamp);\n  }\n\n  /**\n   * The time the guild scheduled event will start at\n   * <info>This can be potentially `null` only when it's an {@link GuildAuditLogsEntry#target}</info>\n   * @type {?Date}\n   * @readonly\n   */\n  get scheduledStartAt() {\n    return this.scheduledStartTimestamp && new Date(this.scheduledStartTimestamp);\n  }\n\n  /**\n   * The time the guild scheduled event will end at,\n   * or `null` if the event does not have a scheduled time to end\n   * @type {?Date}\n   * @readonly\n   */\n  get scheduledEndAt() {\n    return this.scheduledEndTimestamp && new Date(this.scheduledEndTimestamp);\n  }\n\n  /**\n   * The channel associated with this scheduled event\n   * @type {?(VoiceChannel|StageChannel)}\n   * @readonly\n   */\n  get channel() {\n    return this.client.channels.resolve(this.channelId);\n  }\n\n  /**\n   * The guild this scheduled event belongs to\n   * @type {?Guild}\n   * @readonly\n   */\n  get guild() {\n    return this.client.guilds.resolve(this.guildId);\n  }\n\n  /**\n   * The URL to the guild scheduled event\n   * @type {string}\n   * @readonly\n   */\n  get url() {\n    return `${RouteBases.scheduledEvent}/${this.guildId}/${this.id}`;\n  }\n\n  /**\n   * Options used to create an invite URL to a {@link GuildScheduledEvent}\n   * @typedef {InviteCreateOptions} GuildScheduledEventInviteURLCreateOptions\n   * @property {GuildInvitableChannelResolvable} [channel] The channel to create the invite in.\n   * <warn>This is required when the `entityType` of `GuildScheduledEvent` is\n   * {@link GuildScheduledEventEntityType.External}, gets ignored otherwise</warn>\n   */\n\n  /**\n   * Creates an invite URL to this guild scheduled event.\n   * @param {GuildScheduledEventInviteURLCreateOptions} [options] The options to create the invite\n   * @returns {Promise<string>}\n   */\n  async createInviteURL(options) {\n    let channelId = this.channelId;\n    if (this.entityType === GuildScheduledEventEntityType.External) {\n      if (!options?.channel) throw new DiscordjsError(ErrorCodes.InviteOptionsMissingChannel);\n      channelId = this.guild.channels.resolveId(options.channel);\n      if (!channelId) throw new DiscordjsError(ErrorCodes.GuildChannelResolve);\n    }\n    const invite = await this.guild.invites.create(channelId, options);\n    return `${RouteBases.invite}/${invite.code}?event=${this.id}`;\n  }\n\n  /**\n   * Edits this guild scheduled event.\n   * @param {GuildScheduledEventEditOptions} options The options to edit the guild scheduled event\n   * @returns {Promise<GuildScheduledEvent>}\n   * @example\n   * // Edit a guild scheduled event\n   * guildScheduledEvent.edit({ name: 'Party' })\n   *  .then(guildScheduledEvent => console.log(guildScheduledEvent))\n   *  .catch(console.error);\n   */\n  edit(options) {\n    return this.guild.scheduledEvents.edit(this.id, options);\n  }\n\n  /**\n   * Fetches this guild scheduled event.\n   * @param {boolean} [force=true] Whether to skip the cache check and request the API\n   * @returns {Promise<GuildScheduledEvent>}\n   */\n  fetch(force = true) {\n    return this.guild.scheduledEvents.fetch({ guildScheduledEvent: this.id, force });\n  }\n\n  /**\n   * Deletes this guild scheduled event.\n   * @returns {Promise<GuildScheduledEvent>}\n   * @example\n   * // Delete a guild scheduled event\n   * guildScheduledEvent.delete()\n   *  .then(guildScheduledEvent => console.log(guildScheduledEvent))\n   *  .catch(console.error);\n   */\n  async delete() {\n    await this.guild.scheduledEvents.delete(this.id);\n    return this;\n  }\n\n  /**\n   * Sets a new name for the guild scheduled event.\n   * @param {string} name The new name of the guild scheduled event\n   * @param {string} [reason] The reason for changing the name\n   * @returns {Promise<GuildScheduledEvent>}\n   * @example\n   * // Set name of a guild scheduled event\n   * guildScheduledEvent.setName('Birthday Party')\n   *  .then(guildScheduledEvent => console.log(`Set the name to: ${guildScheduledEvent.name}`))\n   *  .catch(console.error);\n   */\n  setName(name, reason) {\n    return this.edit({ name, reason });\n  }\n\n  /**\n   * Sets a new time to schedule the event at.\n   * @param {DateResolvable} scheduledStartTime The time to schedule the event at\n   * @param {string} [reason] The reason for changing the scheduled start time\n   * @returns {Promise<GuildScheduledEvent>}\n   * @example\n   * // Set start time of a guild scheduled event\n   * guildScheduledEvent.setScheduledStartTime('2022-09-24T00:00:00+05:30')\n   *  .then(guildScheduledEvent => console.log(`Set the start time to: ${guildScheduledEvent.scheduledStartTime}`))\n   *  .catch(console.error);\n   */\n  setScheduledStartTime(scheduledStartTime, reason) {\n    return this.edit({ scheduledStartTime, reason });\n  }\n\n  // TODO: scheduledEndTime gets reset on passing null but it hasn't been documented\n  /**\n   * Sets a new time to end the event at.\n   * @param {DateResolvable} scheduledEndTime The time to end the event at\n   * @param {string} [reason] The reason for changing the scheduled end time\n   * @returns {Promise<GuildScheduledEvent>}\n   * @example\n   * // Set end time of a guild scheduled event\n   * guildScheduledEvent.setScheduledEndTime('2022-09-25T00:00:00+05:30')\n   *  .then(guildScheduledEvent => console.log(`Set the end time to: ${guildScheduledEvent.scheduledEndTime}`))\n   *  .catch(console.error);\n   */\n  setScheduledEndTime(scheduledEndTime, reason) {\n    return this.edit({ scheduledEndTime, reason });\n  }\n\n  /**\n   * Sets the new description of the guild scheduled event.\n   * @param {string} description The description of the guild scheduled event\n   * @param {string} [reason] The reason for changing the description\n   * @returns {Promise<GuildScheduledEvent>}\n   * @example\n   * // Set description of a guild scheduled event\n   * guildScheduledEvent.setDescription('A virtual birthday party')\n   *  .then(guildScheduledEvent => console.log(`Set the description to: ${guildScheduledEvent.description}`))\n   *  .catch(console.error);\n   */\n  setDescription(description, reason) {\n    return this.edit({ description, reason });\n  }\n\n  /**\n   * Sets the new status of the guild scheduled event.\n   * <info>If you're working with TypeScript, use this method in conjunction with status type-guards\n   * like {@link GuildScheduledEvent#isScheduled} to get only valid status as suggestion</info>\n   * @param {GuildScheduledEventStatus} status The status of the guild scheduled event\n   * @param {string} [reason] The reason for changing the status\n   * @returns {Promise<GuildScheduledEvent>}\n   * @example\n   * // Set status of a guild scheduled event\n   * guildScheduledEvent.setStatus(GuildScheduledEventStatus.Active)\n   *  .then(guildScheduledEvent => console.log(`Set the status to: ${guildScheduledEvent.status}`))\n   *  .catch(console.error);\n   */\n  setStatus(status, reason) {\n    return this.edit({ status, reason });\n  }\n\n  /**\n   * Sets the new location of the guild scheduled event.\n   * @param {string} location The location of the guild scheduled event\n   * @param {string} [reason] The reason for changing the location\n   * @returns {Promise<GuildScheduledEvent>}\n   * @example\n   * // Set location of a guild scheduled event\n   * guildScheduledEvent.setLocation('Earth')\n   *  .then(guildScheduledEvent => console.log(`Set the location to: ${guildScheduledEvent.entityMetadata.location}`))\n   *  .catch(console.error);\n   */\n  setLocation(location, reason) {\n    return this.edit({ entityMetadata: { location }, reason });\n  }\n\n  /**\n   * Fetches subscribers of this guild scheduled event.\n   * @param {FetchGuildScheduledEventSubscribersOptions} [options] Options for fetching the subscribers\n   * @returns {Promise<Collection<Snowflake, GuildScheduledEventUser>>}\n   */\n  fetchSubscribers(options) {\n    return this.guild.scheduledEvents.fetchSubscribers(this.id, options);\n  }\n\n  /**\n   * When concatenated with a string, this automatically concatenates the event's URL instead of the object.\n   * @returns {string}\n   * @example\n   * // Logs: Event: https://discord.com/events/412345678901234567/499876543211234567\n   * console.log(`Event: ${guildScheduledEvent}`);\n   */\n  toString() {\n    return this.url;\n  }\n\n  /**\n   * Indicates whether this guild scheduled event has an {@link GuildScheduledEventStatus.Active} status.\n   * @returns {boolean}\n   */\n  isActive() {\n    return this.status === GuildScheduledEventStatus.Active;\n  }\n\n  /**\n   * Indicates whether this guild scheduled event has a {@link GuildScheduledEventStatus.Canceled} status.\n   * @returns {boolean}\n   */\n  isCanceled() {\n    return this.status === GuildScheduledEventStatus.Canceled;\n  }\n\n  /**\n   * Indicates whether this guild scheduled event has a {@link GuildScheduledEventStatus.Completed} status.\n   * @returns {boolean}\n   */\n  isCompleted() {\n    return this.status === GuildScheduledEventStatus.Completed;\n  }\n\n  /**\n   * Indicates whether this guild scheduled event has a {@link GuildScheduledEventStatus.Scheduled} status.\n   * @returns {boolean}\n   */\n  isScheduled() {\n    return this.status === GuildScheduledEventStatus.Scheduled;\n  }\n}\n\nexports.GuildScheduledEvent = GuildScheduledEvent;\n", "'use strict';\n\nconst { DiscordSnowflake } = require('@sapphire/snowflake');\nconst Base = require('../Base');\n\n/**\n * Represents an OAuth2 Application.\n * @extends {Base}\n * @abstract\n */\nclass Application extends Base {\n  constructor(client, data) {\n    super(client);\n    this._patch(data);\n  }\n\n  _patch(data) {\n    /**\n     * The application's id\n     * @type {Snowflake}\n     */\n    this.id = data.id;\n\n    if ('name' in data) {\n      /**\n       * The name of the application\n       * @type {?string}\n       */\n      this.name = data.name;\n    } else {\n      this.name ??= null;\n    }\n\n    if ('description' in data) {\n      /**\n       * The application's description\n       * @type {?string}\n       */\n      this.description = data.description;\n    } else {\n      this.description ??= null;\n    }\n\n    if ('icon' in data) {\n      /**\n       * The application's icon hash\n       * @type {?string}\n       */\n      this.icon = data.icon;\n    } else {\n      this.icon ??= null;\n    }\n  }\n\n  /**\n   * The timestamp the application was created at\n   * @type {number}\n   * @readonly\n   */\n  get createdTimestamp() {\n    return DiscordSnowflake.timestampFrom(this.id);\n  }\n\n  /**\n   * The time the application was created at\n   * @type {Date}\n   * @readonly\n   */\n  get createdAt() {\n    return new Date(this.createdTimestamp);\n  }\n\n  /**\n   * A link to the application's icon.\n   * @param {ImageURLOptions} [options={}] Options for the image URL\n   * @returns {?string}\n   */\n  iconURL(options = {}) {\n    return this.icon && this.client.rest.cdn.appIcon(this.id, this.icon, options);\n  }\n\n  /**\n   * A link to this application's cover image.\n   * @param {ImageURLOptions} [options={}] Options for the image URL\n   * @returns {?string}\n   */\n  coverURL(options = {}) {\n    return this.cover && this.client.rest.cdn.appIcon(this.id, this.cover, options);\n  }\n\n  /**\n   * When concatenated with a string, this automatically returns the application's name instead of the\n   * Application object.\n   * @returns {?string}\n   * @example\n   * // Logs: Application name: My App\n   * console.log(`Application name: ${application}`);\n   */\n  toString() {\n    return this.name;\n  }\n\n  toJSON() {\n    return super.toJSON({ createdTimestamp: true });\n  }\n}\n\nmodule.exports = Application;\n", "'use strict';\n\nconst Application = require('./interfaces/Application');\n\n/**\n * Represents an Integration's OAuth2 Application.\n * @extends {Application}\n */\nclass IntegrationApplication extends Application {\n  _patch(data) {\n    super._patch(data);\n\n    if ('bot' in data) {\n      /**\n       * The bot user for this application\n       * @type {?User}\n       */\n      this.bot = this.client.users._add(data.bot);\n    } else {\n      this.bot ??= null;\n    }\n\n    if ('terms_of_service_url' in data) {\n      /**\n       * The URL of the application's terms of service\n       * @type {?string}\n       */\n      this.termsOfServiceURL = data.terms_of_service_url;\n    } else {\n      this.termsOfServiceURL ??= null;\n    }\n\n    if ('privacy_policy_url' in data) {\n      /**\n       * The URL of the application's privacy policy\n       * @type {?string}\n       */\n      this.privacyPolicyURL = data.privacy_policy_url;\n    } else {\n      this.privacyPolicyURL ??= null;\n    }\n\n    if ('rpc_origins' in data) {\n      /**\n       * The Array of RPC origin URLs\n       * @type {string[]}\n       */\n      this.rpcOrigins = data.rpc_origins;\n    } else {\n      this.rpcOrigins ??= [];\n    }\n\n    if ('hook' in data) {\n      /**\n       * Whether the application can be default hooked by the client\n       * @type {?boolean}\n       */\n      this.hook = data.hook;\n    } else {\n      this.hook ??= null;\n    }\n\n    if ('cover_image' in data) {\n      /**\n       * The hash of the application's cover image\n       * @type {?string}\n       */\n      this.cover = data.cover_image;\n    } else {\n      this.cover ??= null;\n    }\n\n    if ('verify_key' in data) {\n      /**\n       * The hex-encoded key for verification in interactions and the GameSDK's GetTicket\n       * @type {?string}\n       */\n      this.verifyKey = data.verify_key;\n    } else {\n      this.verifyKey ??= null;\n    }\n  }\n}\n\nmodule.exports = IntegrationApplication;\n", "'use strict';\n\nconst { Collection } = require('@discordjs/collection');\nconst Base = require('./Base');\n\n/**\n * Represents the data about a public {@link StageInstance} in an {@link Invite}.\n * @extends {Base}\n * @deprecated\n */\nclass InviteStageInstance extends Base {\n  constructor(client, data, channelId, guildId) {\n    super(client);\n\n    /**\n     * The id of the stage channel this invite is for\n     * @type {Snowflake}\n     */\n    this.channelId = channelId;\n\n    /**\n     * The stage channel's guild id\n     * @type {Snowflake}\n     */\n    this.guildId = guildId;\n\n    /**\n     * The members speaking in the stage channel\n     * @type {Collection<Snowflake, GuildMember>}\n     */\n    this.members = new Collection();\n\n    this._patch(data);\n  }\n\n  _patch(data) {\n    if ('topic' in data) {\n      /**\n       * The topic of the stage instance\n       * @type {string}\n       */\n      this.topic = data.topic;\n    }\n\n    if ('participant_count' in data) {\n      /**\n       * The number of users in the stage channel\n       * @type {number}\n       */\n      this.participantCount = data.participant_count;\n    }\n\n    if ('speaker_count' in data) {\n      /**\n       * The number of users speaking in the stage channel\n       * @type {number}\n       */\n      this.speakerCount = data.speaker_count;\n    }\n\n    this.members.clear();\n    for (const rawMember of data.members) {\n      const member = this.guild.members._add(rawMember);\n      this.members.set(member.id, member);\n    }\n  }\n\n  /**\n   * The stage channel this invite is for\n   * @type {?StageChannel}\n   * @readonly\n   */\n  get channel() {\n    return this.client.channels.resolve(this.channelId);\n  }\n\n  /**\n   * The guild of the stage channel this invite is for\n   * @type {?Guild}\n   * @readonly\n   */\n  get guild() {\n    return this.client.guilds.resolve(this.guildId);\n  }\n}\n\nmodule.exports = InviteStageInstance;\n", "'use strict';\n\nconst { makeURLSearchParams } = require('@discordjs/rest');\nconst { DiscordSnowflake } = require('@sapphire/snowflake');\nconst { Routes, GuildFeature } = require('discord-api-types/v10');\nconst Base = require('./Base');\n\n/**\n * The base class for {@link Guild}, {@link OAuth2Guild} and {@link InviteGuild}.\n * @extends {Base}\n * @abstract\n */\nclass BaseGuild extends Base {\n  constructor(client, data) {\n    super(client);\n\n    /**\n     * The guild's id\n     * @type {Snowflake}\n     */\n    this.id = data.id;\n\n    /**\n     * The name of this guild\n     * @type {string}\n     */\n    this.name = data.name;\n\n    /**\n     * The icon hash of this guild\n     * @type {?string}\n     */\n    this.icon = data.icon;\n\n    /**\n     * An array of features available to this guild\n     * @type {GuildFeature[]}\n     */\n    this.features = data.features;\n  }\n\n  /**\n   * The timestamp this guild was created at\n   * @type {number}\n   * @readonly\n   */\n  get createdTimestamp() {\n    return DiscordSnowflake.timestampFrom(this.id);\n  }\n\n  /**\n   * The time this guild was created at\n   * @type {Date}\n   * @readonly\n   */\n  get createdAt() {\n    return new Date(this.createdTimestamp);\n  }\n\n  /**\n   * The acronym that shows up in place of a guild icon\n   * @type {string}\n   * @readonly\n   */\n  get nameAcronym() {\n    return this.name\n      .replace(/'s /g, ' ')\n      .replace(/\\w+/g, e => e[0])\n      .replace(/\\s/g, '');\n  }\n\n  /**\n   * Whether this guild is partnered\n   * @type {boolean}\n   * @readonly\n   */\n  get partnered() {\n    return this.features.includes(GuildFeature.Partnered);\n  }\n\n  /**\n   * Whether this guild is verified\n   * @type {boolean}\n   * @readonly\n   */\n  get verified() {\n    return this.features.includes(GuildFeature.Verified);\n  }\n\n  /**\n   * The URL to this guild's icon.\n   * @param {ImageURLOptions} [options={}] Options for the image URL\n   * @returns {?string}\n   */\n  iconURL(options = {}) {\n    return this.icon && this.client.rest.cdn.icon(this.id, this.icon, options);\n  }\n\n  /**\n   * Fetches this guild.\n   * @returns {Promise<Guild>}\n   */\n  async fetch() {\n    const data = await this.client.rest.get(Routes.guild(this.id), {\n      query: makeURLSearchParams({ with_counts: true }),\n    });\n    return this.client.guilds._add(data);\n  }\n\n  /**\n   * When concatenated with a string, this automatically returns the guild's name instead of the Guild object.\n   * @returns {string}\n   */\n  toString() {\n    return this.name;\n  }\n}\n\nmodule.exports = BaseGuild;\n", "'use strict';\n\nconst BaseGuild = require('./BaseGuild');\n\n/**\n * Bundles common attributes and methods between {@link Guild} and {@link InviteGuild}\n * @extends {BaseGuild}\n * @abstract\n */\nclass AnonymousGuild extends BaseGuild {\n  constructor(client, data, immediatePatch = true) {\n    super(client, data);\n    if (immediatePatch) this._patch(data);\n  }\n\n  _patch(data) {\n    if ('features' in data) this.features = data.features;\n\n    if ('splash' in data) {\n      /**\n       * The hash of the guild invite splash image\n       * @type {?string}\n       */\n      this.splash = data.splash;\n    }\n\n    if ('banner' in data) {\n      /**\n       * The hash of the guild banner\n       * @type {?string}\n       */\n      this.banner = data.banner;\n    }\n\n    if ('description' in data) {\n      /**\n       * The description of the guild, if any\n       * @type {?string}\n       */\n      this.description = data.description;\n    }\n\n    if ('verification_level' in data) {\n      /**\n       * The verification level of the guild\n       * @type {GuildVerificationLevel}\n       */\n      this.verificationLevel = data.verification_level;\n    }\n\n    if ('vanity_url_code' in data) {\n      /**\n       * The vanity invite code of the guild, if any\n       * @type {?string}\n       */\n      this.vanityURLCode = data.vanity_url_code;\n    }\n\n    if ('nsfw_level' in data) {\n      /**\n       * The NSFW level of this guild\n       * @type {GuildNSFWLevel}\n       */\n      this.nsfwLevel = data.nsfw_level;\n    }\n\n    if ('premium_subscription_count' in data) {\n      /**\n       * The total number of boosts for this server\n       * @type {?number}\n       */\n      this.premiumSubscriptionCount = data.premium_subscription_count;\n    } else {\n      this.premiumSubscriptionCount ??= null;\n    }\n  }\n\n  /**\n   * The URL to this guild's banner.\n   * @param {ImageURLOptions} [options={}] Options for the image URL\n   * @returns {?string}\n   */\n  bannerURL(options = {}) {\n    return this.banner && this.client.rest.cdn.banner(this.id, this.banner, options);\n  }\n\n  /**\n   * The URL to this guild's invite splash image.\n   * @param {ImageURLOptions} [options={}] Options for the image URL\n   * @returns {?string}\n   */\n  splashURL(options = {}) {\n    return this.splash && this.client.rest.cdn.splash(this.id, this.splash, options);\n  }\n}\n\nmodule.exports = AnonymousGuild;\n", "'use strict';\n\nconst process = require('node:process');\nconst { formatEmoji } = require('@discordjs/formatters');\nconst { DiscordSnowflake } = require('@sapphire/snowflake');\nconst Base = require('./Base');\n\nlet deprecationEmittedForURL = false;\n\n/**\n * Represents an emoji, see {@link ApplicationEmoji}, {@link GuildEmoji} and {@link ReactionEmoji}.\n * @extends {Base}\n */\nclass Emoji extends Base {\n  constructor(client, emoji) {\n    super(client);\n    /**\n     * Whether or not the emoji is animated\n     * @type {?boolean}\n     */\n    this.animated = emoji.animated ?? null;\n\n    /**\n     * The emoji's name\n     * @type {?string}\n     */\n    this.name = emoji.name ?? null;\n\n    /**\n     * The emoji's id\n     * @type {?Snowflake}\n     */\n    this.id = emoji.id ?? null;\n  }\n\n  /**\n   * The identifier of this emoji, used for message reactions\n   * @type {string}\n   * @readonly\n   */\n  get identifier() {\n    if (this.id) return `${this.animated ? 'a:' : ''}${this.name}:${this.id}`;\n    return encodeURIComponent(this.name);\n  }\n\n  /**\n   * Returns a URL for the emoji or `null` if this is not a custom emoji.\n   * @param {BaseImageURLOptions} [options] Options for the image URL\n   * @returns {?string}\n   */\n  imageURL(options) {\n    return this.id && this.client.rest.cdn.emoji(this.id, options);\n  }\n\n  /**\n   * Returns a URL for the emoji or `null` if this is not a custom emoji.\n   * @type {?string}\n   * @readonly\n   * @deprecated Use {@link Emoji#imageURL} instead.\n   */\n  get url() {\n    if (!deprecationEmittedForURL) {\n      process.emitWarning('The Emoji#url getter is deprecated. Use Emoji#imageURL() instead.', 'DeprecationWarning');\n      deprecationEmittedForURL = true;\n    }\n\n    return this.imageURL({ extension: this.animated ? 'gif' : 'png' });\n  }\n\n  /**\n   * The timestamp the emoji was created at, or null if unicode\n   * @type {?number}\n   * @readonly\n   */\n  get createdTimestamp() {\n    return this.id && DiscordSnowflake.timestampFrom(this.id);\n  }\n\n  /**\n   * The time the emoji was created at, or null if unicode\n   * @type {?Date}\n   * @readonly\n   */\n  get createdAt() {\n    return this.id && new Date(this.createdTimestamp);\n  }\n\n  /**\n   * When concatenated with a string, this automatically returns the text required to form a graphical emoji on Discord\n   * instead of the Emoji object.\n   * @returns {string}\n   * @example\n   * // Send a custom emoji from a guild:\n   * const emoji = guild.emojis.cache.first();\n   * msg.channel.send(`Hello! ${emoji}`);\n   * @example\n   * // Send the emoji used in a reaction to the channel the reaction is part of\n   * reaction.message.channel.send(`The emoji used was: ${reaction.emoji}`);\n   */\n  toString() {\n    return this.id ? formatEmoji({ animated: this.animated, id: this.id, name: this.name }) : this.name;\n  }\n\n  toJSON() {\n    const json = super.toJSON({\n      guild: 'guildId',\n      createdTimestamp: true,\n      identifier: true,\n    });\n    json.imageURL = this.imageURL();\n    return json;\n  }\n}\n\nexports.Emoji = Emoji;\n", "'use strict';\n\nconst Base = require('./Base');\nconst { Emoji } = require('./Emoji');\n\n/**\n * Represents a channel link in a guild's welcome screen.\n * @extends {Base}\n */\nclass WelcomeChannel extends Base {\n  constructor(guild, data) {\n    super(guild.client);\n\n    /**\n     * The guild for this welcome channel\n     * @type {Guild|InviteGuild}\n     */\n    this.guild = guild;\n\n    /**\n     * The description of this welcome channel\n     * @type {string}\n     */\n    this.description = data.description;\n\n    /**\n     * The raw emoji data\n     * @type {Object}\n     * @private\n     */\n    this._emoji = {\n      name: data.emoji_name,\n      id: data.emoji_id,\n    };\n\n    /**\n     * The id of this welcome channel\n     * @type {Snowflake}\n     */\n    this.channelId = data.channel_id;\n  }\n\n  /**\n   * The channel of this welcome channel\n   * @type {?(TextChannel|NewsChannel|ForumChannel|MediaChannel)}\n   */\n  get channel() {\n    return this.client.channels.resolve(this.channelId);\n  }\n\n  /**\n   * The emoji of this welcome channel\n   * @type {GuildEmoji|Emoji}\n   */\n  get emoji() {\n    return this.client.emojis.resolve(this._emoji.id) ?? new Emoji(this.client, this._emoji);\n  }\n}\n\nmodule.exports = WelcomeChannel;\n", "'use strict';\n\nconst { Collection } = require('@discordjs/collection');\nconst { GuildFeature } = require('discord-api-types/v10');\nconst Base = require('./Base');\nconst WelcomeChannel = require('./WelcomeChannel');\n\n/**\n * Represents a welcome screen.\n * @extends {Base}\n */\nclass WelcomeScreen extends Base {\n  constructor(guild, data) {\n    super(guild.client);\n\n    /**\n     * The guild for this welcome screen\n     * @type {Guild}\n     */\n    this.guild = guild;\n\n    /**\n     * The description of this welcome screen\n     * @type {?string}\n     */\n    this.description = data.description ?? null;\n\n    /**\n     * Collection of welcome channels belonging to this welcome screen\n     * @type {Collection<Snowflake, WelcomeChannel>}\n     */\n    this.welcomeChannels = new Collection();\n\n    for (const channel of data.welcome_channels) {\n      const welcomeChannel = new WelcomeChannel(this.guild, channel);\n      this.welcomeChannels.set(welcomeChannel.channelId, welcomeChannel);\n    }\n  }\n\n  /**\n   * Whether the welcome screen is enabled on the guild\n   * @type {boolean}\n   */\n  get enabled() {\n    return this.guild.features.includes(GuildFeature.WelcomeScreenEnabled);\n  }\n}\n\nmodule.exports = WelcomeScreen;\n", "'use strict';\n\nconst AnonymousGuild = require('./AnonymousGuild');\nconst WelcomeScreen = require('./WelcomeScreen');\n\n/**\n * Represents a guild received from an invite, includes welcome screen data if available.\n * @extends {AnonymousGuild}\n */\nclass InviteGuild extends AnonymousGuild {\n  constructor(client, data) {\n    super(client, data);\n\n    /**\n     * The welcome screen for this invite guild\n     * @type {?WelcomeScreen}\n     */\n    this.welcomeScreen = data.welcome_screen !== undefined ? new WelcomeScreen(this, data.welcome_screen) : null;\n  }\n}\n\nmodule.exports = InviteGuild;\n", "'use strict';\n\nconst { RouteBases, Routes, PermissionFlagsBits } = require('discord-api-types/v10');\nconst Base = require('./Base');\nconst { GuildScheduledEvent } = require('./GuildScheduledEvent');\nconst IntegrationApplication = require('./IntegrationApplication');\nconst InviteStageInstance = require('./InviteStageInstance');\nconst { DiscordjsError, ErrorCodes } = require('../errors');\n\n/**\n * Represents an invitation to a guild channel.\n * @extends {Base}\n */\nclass Invite extends Base {\n  /**\n   * A regular expression that matches Discord invite links.\n   * The `code` group property is present on the `exec()` result of this expression.\n   * @type {RegExp}\n   * @memberof Invite\n   */\n  static InvitesPattern = /discord(?:(?:app)?\\.com\\/invite|\\.gg(?:\\/invite)?)\\/(?<code>[\\w-]{2,255})/i;\n\n  constructor(client, data) {\n    super(client);\n\n    /**\n     * The type of this invite\n     * @type {InviteType}\n     */\n    this.type = data.type;\n\n    this._patch(data);\n  }\n\n  _patch(data) {\n    const InviteGuild = require('./InviteGuild');\n    /**\n     * The guild the invite is for including welcome screen data if present\n     * @type {?(Guild|InviteGuild)}\n     */\n    this.guild ??= null;\n    if (data.guild) {\n      this.guild = this.client.guilds.resolve(data.guild.id) ?? new InviteGuild(this.client, data.guild);\n    }\n\n    if ('code' in data) {\n      /**\n       * The code for this invite\n       * @type {string}\n       */\n      this.code = data.code;\n    }\n\n    if ('approximate_presence_count' in data) {\n      /**\n       * The approximate number of online members of the guild this invite is for\n       * <info>This is only available when the invite was fetched through {@link Client#fetchInvite}.</info>\n       * @type {?number}\n       */\n      this.presenceCount = data.approximate_presence_count;\n    } else {\n      this.presenceCount ??= null;\n    }\n\n    if ('approximate_member_count' in data) {\n      /**\n       * The approximate total number of members of the guild this invite is for\n       * <info>This is only available when the invite was fetched through {@link Client#fetchInvite}.</info>\n       * @type {?number}\n       */\n      this.memberCount = data.approximate_member_count;\n    } else {\n      this.memberCount ??= null;\n    }\n\n    if ('temporary' in data) {\n      /**\n       * Whether or not this invite only grants temporary membership\n       * <info>This is only available when the invite was fetched through {@link GuildInviteManager#fetch}\n       * or created through {@link GuildInviteManager#create}.</info>\n       * @type {?boolean}\n       */\n      this.temporary = data.temporary ?? null;\n    } else {\n      this.temporary ??= null;\n    }\n\n    if ('max_age' in data) {\n      /**\n       * The maximum age of the invite, in seconds, 0 if never expires\n       * <info>This is only available when the invite was fetched through {@link GuildInviteManager#fetch}\n       * or created through {@link GuildInviteManager#create}.</info>\n       * @type {?number}\n       */\n      this.maxAge = data.max_age;\n    } else {\n      this.maxAge ??= null;\n    }\n\n    if ('uses' in data) {\n      /**\n       * How many times this invite has been used\n       * <info>This is only available when the invite was fetched through {@link GuildInviteManager#fetch}\n       * or created through {@link GuildInviteManager#create}.</info>\n       * @type {?number}\n       */\n      this.uses = data.uses;\n    } else {\n      this.uses ??= null;\n    }\n\n    if ('max_uses' in data) {\n      /**\n       * The maximum uses of this invite\n       * <info>This is only available when the invite was fetched through {@link GuildInviteManager#fetch}\n       * or created through {@link GuildInviteManager#create}.</info>\n       * @type {?number}\n       */\n      this.maxUses = data.max_uses;\n    } else {\n      this.maxUses ??= null;\n    }\n\n    if ('inviter_id' in data) {\n      /**\n       * The user's id who created this invite\n       * @type {?Snowflake}\n       */\n      this.inviterId = data.inviter_id;\n    } else {\n      this.inviterId ??= null;\n    }\n\n    if ('inviter' in data) {\n      this.client.users._add(data.inviter);\n      this.inviterId = data.inviter.id;\n    }\n\n    if ('target_user' in data) {\n      /**\n       * The user whose stream to display for this voice channel stream invite\n       * @type {?User}\n       */\n      this.targetUser = this.client.users._add(data.target_user);\n    } else {\n      this.targetUser ??= null;\n    }\n\n    if ('target_application' in data) {\n      /**\n       * The embedded application to open for this voice channel embedded application invite\n       * @type {?IntegrationApplication}\n       */\n      this.targetApplication = new IntegrationApplication(this.client, data.target_application);\n    } else {\n      this.targetApplication ??= null;\n    }\n\n    if ('target_type' in data) {\n      /**\n       * The target type\n       * @type {?InviteTargetType}\n       */\n      this.targetType = data.target_type;\n    } else {\n      this.targetType ??= null;\n    }\n\n    if ('channel_id' in data) {\n      /**\n       * The id of the channel this invite is for\n       * @type {?Snowflake}\n       */\n      this.channelId = data.channel_id;\n    }\n\n    if ('channel' in data) {\n      /**\n       * The channel this invite is for\n       * @type {?BaseChannel}\n       */\n      this.channel =\n        this.client.channels._add(data.channel, this.guild, { cache: false }) ??\n        this.client.channels.resolve(this.channelId);\n\n      this.channelId ??= data.channel.id;\n    }\n\n    if ('created_at' in data) {\n      /**\n       * The timestamp this invite was created at\n       * @type {?number}\n       */\n      this.createdTimestamp = Date.parse(data.created_at);\n    } else {\n      this.createdTimestamp ??= null;\n    }\n\n    if ('expires_at' in data) {\n      this._expiresTimestamp = data.expires_at && Date.parse(data.expires_at);\n    } else {\n      this._expiresTimestamp ??= null;\n    }\n\n    if ('stage_instance' in data) {\n      /**\n       * The stage instance data if there is a public {@link StageInstance} in the stage channel this invite is for\n       * @type {?InviteStageInstance}\n       * @deprecated\n       */\n      this.stageInstance = new InviteStageInstance(this.client, data.stage_instance, this.channel.id, this.guild.id);\n    } else {\n      this.stageInstance ??= null;\n    }\n\n    if ('guild_scheduled_event' in data) {\n      /**\n       * The guild scheduled event data if there is a {@link GuildScheduledEvent} in the channel this invite is for\n       * @type {?GuildScheduledEvent}\n       */\n      this.guildScheduledEvent = new GuildScheduledEvent(this.client, data.guild_scheduled_event);\n    } else {\n      this.guildScheduledEvent ??= null;\n    }\n  }\n\n  /**\n   * The time the invite was created at\n   * @type {?Date}\n   * @readonly\n   */\n  get createdAt() {\n    return this.createdTimestamp && new Date(this.createdTimestamp);\n  }\n\n  /**\n   * Whether the invite is deletable by the client user\n   * @type {boolean}\n   * @readonly\n   */\n  get deletable() {\n    const guild = this.guild;\n    if (!guild || !this.client.guilds.cache.has(guild.id)) return false;\n    if (!guild.members.me) throw new DiscordjsError(ErrorCodes.GuildUncachedMe);\n    return Boolean(\n      this.channel?.permissionsFor(this.client.user).has(PermissionFlagsBits.ManageChannels, false) ||\n        guild.members.me.permissions.has(PermissionFlagsBits.ManageGuild),\n    );\n  }\n\n  /**\n   * The timestamp the invite will expire at\n   * @type {?number}\n   * @readonly\n   */\n  get expiresTimestamp() {\n    return (\n      this._expiresTimestamp ??\n      (this.createdTimestamp && this.maxAge ? this.createdTimestamp + this.maxAge * 1_000 : null)\n    );\n  }\n\n  /**\n   * The time the invite will expire at\n   * @type {?Date}\n   * @readonly\n   */\n  get expiresAt() {\n    return this.expiresTimestamp && new Date(this.expiresTimestamp);\n  }\n\n  /**\n   * The user who created this invite\n   * @type {?User}\n   * @readonly\n   */\n  get inviter() {\n    return this.inviterId && this.client.users.resolve(this.inviterId);\n  }\n\n  /**\n   * The URL to the invite\n   * @type {string}\n   * @readonly\n   */\n  get url() {\n    return `${RouteBases.invite}/${this.code}`;\n  }\n\n  /**\n   * Deletes this invite.\n   * @param {string} [reason] Reason for deleting this invite\n   * @returns {Promise<Invite>}\n   */\n  async delete(reason) {\n    await this.client.rest.delete(Routes.invite(this.code), { reason });\n    return this;\n  }\n\n  /**\n   * When concatenated with a string, this automatically concatenates the invite's URL instead of the object.\n   * @returns {string}\n   * @example\n   * // Logs: Invite: https://discord.gg/A1b2C3\n   * console.log(`Invite: ${invite}`);\n   */\n  toString() {\n    return this.url;\n  }\n\n  toJSON() {\n    return super.toJSON({\n      url: true,\n      expiresTimestamp: true,\n      presenceCount: false,\n      memberCount: false,\n      uses: false,\n      channel: 'channelId',\n      inviter: 'inviterId',\n      guild: 'guildId',\n    });\n  }\n\n  valueOf() {\n    return this.code;\n  }\n}\n\nmodule.exports = Invite;\n", "'use strict';\n\nconst { setTimeout, clearTimeout } = require('node:timers');\nconst { RouteBases, Routes } = require('discord-api-types/v10');\nconst Base = require('./Base');\nconst { resolveImage } = require('../util/DataResolver');\nconst Events = require('../util/Events');\n\n/**\n * Represents the template for a guild.\n * @extends {Base}\n */\nclass GuildTemplate extends Base {\n  /**\n   * A regular expression that matches guild template links.\n   * The `code` group property is present on the `exec()` result of this expression.\n   * @type {RegExp}\n   * @memberof GuildTemplate\n   */\n  static GuildTemplatesPattern = /discord(?:app)?\\.(?:com\\/template|new)\\/(?<code>[\\w-]{2,255})/i;\n\n  constructor(client, data) {\n    super(client);\n    this._patch(data);\n  }\n\n  _patch(data) {\n    if ('code' in data) {\n      /**\n       * The unique code of this template\n       * @type {string}\n       */\n      this.code = data.code;\n    }\n\n    if ('name' in data) {\n      /**\n       * The name of this template\n       * @type {string}\n       */\n      this.name = data.name;\n    }\n\n    if ('description' in data) {\n      /**\n       * The description of this template\n       * @type {?string}\n       */\n      this.description = data.description;\n    }\n\n    if ('usage_count' in data) {\n      /**\n       * The amount of times this template has been used\n       * @type {number}\n       */\n      this.usageCount = data.usage_count;\n    }\n\n    if ('creator_id' in data) {\n      /**\n       * The id of the user that created this template\n       * @type {Snowflake}\n       */\n      this.creatorId = data.creator_id;\n    }\n\n    if ('creator' in data) {\n      /**\n       * The user that created this template\n       * @type {User}\n       */\n      this.creator = this.client.users._add(data.creator);\n    }\n\n    if ('created_at' in data) {\n      /**\n       * The timestamp of when this template was created at\n       * @type {number}\n       */\n      this.createdTimestamp = Date.parse(data.created_at);\n    }\n\n    if ('updated_at' in data) {\n      /**\n       * The timestamp of when this template was last synced to the guild\n       * @type {number}\n       */\n      this.updatedTimestamp = Date.parse(data.updated_at);\n    }\n\n    if ('source_guild_id' in data) {\n      /**\n       * The id of the guild that this template belongs to\n       * @type {Snowflake}\n       */\n      this.guildId = data.source_guild_id;\n    }\n\n    if ('serialized_source_guild' in data) {\n      /**\n       * The data of the guild that this template would create\n       * @type {APIGuild}\n       */\n      this.serializedGuild = data.serialized_source_guild;\n    }\n\n    /**\n     * Whether this template has unsynced changes\n     * @type {?boolean}\n     */\n    this.unSynced = 'is_dirty' in data ? Boolean(data.is_dirty) : null;\n\n    return this;\n  }\n\n  /**\n   * Creates a guild based on this template.\n   * <warn>This is only available to bots in fewer than 10 guilds.</warn>\n   * @param {string} name The name of the guild\n   * @param {BufferResolvable|Base64Resolvable} [icon] The icon for the guild\n   * @returns {Promise<Guild>}\n   */\n  async createGuild(name, icon) {\n    const { client } = this;\n    const data = await client.rest.post(Routes.template(this.code), {\n      body: {\n        name,\n        icon: await resolveImage(icon),\n      },\n    });\n\n    if (client.guilds.cache.has(data.id)) return client.guilds.cache.get(data.id);\n\n    return new Promise(resolve => {\n      const resolveGuild = guild => {\n        client.off(Events.GuildCreate, handleGuild);\n        client.decrementMaxListeners();\n        resolve(guild);\n      };\n\n      const handleGuild = guild => {\n        if (guild.id === data.id) {\n          clearTimeout(timeout);\n          resolveGuild(guild);\n        }\n      };\n\n      client.incrementMaxListeners();\n      client.on(Events.GuildCreate, handleGuild);\n\n      const timeout = setTimeout(() => resolveGuild(client.guilds._add(data)), 10_000).unref();\n    });\n  }\n\n  /**\n   * Options used to edit a guild template.\n   * @typedef {Object} GuildTemplateEditOptions\n   * @property {string} [name] The name of this template\n   * @property {string} [description] The description of this template\n   */\n\n  /**\n   * Updates the metadata of this template.\n   * @param {GuildTemplateEditOptions} [options] Options for editing the template\n   * @returns {Promise<GuildTemplate>}\n   */\n  async edit({ name, description } = {}) {\n    const data = await this.client.rest.patch(Routes.guildTemplate(this.guildId, this.code), {\n      body: { name, description },\n    });\n    return this._patch(data);\n  }\n\n  /**\n   * Deletes this template.\n   * @returns {Promise<GuildTemplate>}\n   */\n  async delete() {\n    await this.client.rest.delete(Routes.guildTemplate(this.guildId, this.code));\n    return this;\n  }\n\n  /**\n   * Syncs this template to the current state of the guild.\n   * @returns {Promise<GuildTemplate>}\n   */\n  async sync() {\n    const data = await this.client.rest.put(Routes.guildTemplate(this.guildId, this.code));\n    return this._patch(data);\n  }\n\n  /**\n   * The time when this template was created at\n   * @type {Date}\n   * @readonly\n   */\n  get createdAt() {\n    return new Date(this.createdTimestamp);\n  }\n\n  /**\n   * The time when this template was last synced to the guild\n   * @type {Date}\n   * @readonly\n   */\n  get updatedAt() {\n    return new Date(this.updatedTimestamp);\n  }\n\n  /**\n   * The guild that this template belongs to\n   * @type {?Guild}\n   * @readonly\n   */\n  get guild() {\n    return this.client.guilds.resolve(this.guildId);\n  }\n\n  /**\n   * The URL of this template\n   * @type {string}\n   * @readonly\n   */\n  get url() {\n    return `${RouteBases.template}/${this.code}`;\n  }\n\n  /**\n   * When concatenated with a string, this automatically returns the template's code instead of the template object.\n   * @returns {string}\n   * @example\n   * // Logs: Template: FKvmczH2HyUf\n   * console.log(`Template: ${guildTemplate}!`);\n   */\n  toString() {\n    return this.code;\n  }\n}\n\nmodule.exports = GuildTemplate;\n", "'use strict';\n\nconst { Buffer } = require('node:buffer');\nconst fs = require('node:fs/promises');\nconst path = require('node:path');\nconst { fetch } = require('undici');\nconst { DiscordjsError, DiscordjsTypeError, ErrorCodes } = require('../errors');\nconst Invite = require('../structures/Invite');\n\n/**\n * Data that can be resolved to give an invite code. This can be:\n * * An invite code\n * * An invite URL\n * @typedef {string} InviteResolvable\n */\n\n/**\n * Data that can be resolved to give a template code. This can be:\n * * A template code\n * * A template URL\n * @typedef {string} GuildTemplateResolvable\n */\n\n/**\n * Resolves the string to a code based on the passed regex.\n * @param {string} data The string to resolve\n * @param {RegExp} regex The RegExp used to extract the code\n * @returns {string}\n * @private\n */\nfunction resolveCode(data, regex) {\n  return regex.exec(data)?.[1] ?? data;\n}\n\n/**\n * Resolves InviteResolvable to an invite code.\n * @param {InviteResolvable} data The invite resolvable to resolve\n * @returns {string}\n * @private\n */\nfunction resolveInviteCode(data) {\n  return resolveCode(data, Invite.InvitesPattern);\n}\n\n/**\n * Resolves GuildTemplateResolvable to a template code.\n * @param {GuildTemplateResolvable} data The template resolvable to resolve\n * @returns {string}\n * @private\n */\nfunction resolveGuildTemplateCode(data) {\n  const GuildTemplate = require('../structures/GuildTemplate');\n  return resolveCode(data, GuildTemplate.GuildTemplatesPattern);\n}\n\n/**\n * Data that can be resolved to give a Buffer. This can be:\n * * A Buffer\n * * The path to a local file\n * * A URL <warn>When provided a URL, discord.js will fetch the URL internally in order to create a Buffer.\n * This can pose a security risk when the URL has not been sanitized</warn>\n * @typedef {string|Buffer} BufferResolvable\n */\n\n/**\n * @external Stream\n * @see {@link https://nodejs.org/api/stream.html}\n */\n\n/**\n * @typedef {Object} ResolvedFile\n * @property {Buffer} data Buffer containing the file data\n * @property {string} [contentType] Content-Type of the file\n * @private\n */\n\n/**\n * Resolves a BufferResolvable to a Buffer.\n * @param {BufferResolvable|Stream} resource The buffer or stream resolvable to resolve\n * @returns {Promise<ResolvedFile>}\n * @private\n */\nasync function resolveFile(resource) {\n  if (Buffer.isBuffer(resource)) return { data: resource };\n\n  if (typeof resource[Symbol.asyncIterator] === 'function') {\n    const buffers = [];\n    for await (const data of resource) buffers.push(Buffer.from(data));\n    return { data: Buffer.concat(buffers) };\n  }\n\n  if (typeof resource === 'string') {\n    if (/^https?:\\/\\//.test(resource)) {\n      const res = await fetch(resource);\n      return { data: Buffer.from(await res.arrayBuffer()), contentType: res.headers.get('content-type') };\n    }\n\n    const file = path.resolve(resource);\n\n    const stats = await fs.stat(file);\n    if (!stats.isFile()) throw new DiscordjsError(ErrorCodes.FileNotFound, file);\n    return { data: await fs.readFile(file) };\n  }\n\n  throw new DiscordjsTypeError(ErrorCodes.ReqResourceType);\n}\n\n/**\n * Data that resolves to give a Base64 string, typically for image uploading. This can be:\n * * A Buffer\n * * A base64 string\n * @typedef {Buffer|string} Base64Resolvable\n */\n\n/**\n * Resolves a Base64Resolvable to a Base 64 image.\n * @param {Base64Resolvable} data The base 64 resolvable you want to resolve\n * @returns {?string}\n * @private\n */\nfunction resolveBase64(data) {\n  if (Buffer.isBuffer(data)) return `data:image/jpg;base64,${data.toString('base64')}`;\n  return data;\n}\n\n/**\n * Resolves a Base64Resolvable, a string, or a BufferResolvable to a Base 64 image.\n * @param {BufferResolvable|Base64Resolvable} image The image to be resolved\n * @returns {Promise<?string>}\n * @private\n */\nasync function resolveImage(image) {\n  if (!image) return null;\n  if (typeof image === 'string' && image.startsWith('data:')) {\n    return image;\n  }\n  const file = await resolveFile(image);\n  return resolveBase64(file.data);\n}\n\nmodule.exports = { resolveCode, resolveInviteCode, resolveGuildTemplateCode, resolveImage, resolveBase64, resolveFile };\n", "'use strict';\n\nconst { MessageFlags } = require('discord-api-types/v10');\nconst BitField = require('./BitField');\n\n/**\n * Data structure that makes it easy to interact with a {@link Message#flags} bitfield.\n * @extends {BitField}\n */\nclass MessageFlagsBitField extends BitField {\n  /**\n   * Numeric message flags.\n   * @type {MessageFlags}\n   * @memberof MessageFlagsBitField\n   */\n  static Flags = MessageFlags;\n}\n\n/**\n * @name MessageFlagsBitField\n * @kind constructor\n * @memberof MessageFlagsBitField\n * @param {BitFieldResolvable} [bits=0] Bit(s) to read from\n */\n\n/**\n * Bitfield of the packed bits\n * @type {number}\n * @name MessageFlagsBitField#bitfield\n */\n\nmodule.exports = MessageFlagsBitField;\n", "'use strict';\n\nconst { deprecate } = require('node:util');\nconst { Collection } = require('@discordjs/collection');\nconst { DiscordSnowflake } = require('@sapphire/snowflake');\nconst { InteractionType, ApplicationCommandType, ComponentType } = require('discord-api-types/v10');\nconst Base = require('./Base');\nconst { SelectMenuTypes } = require('../util/Constants');\nconst PermissionsBitField = require('../util/PermissionsBitField');\n\n/**\n * Represents an interaction.\n * @extends {Base}\n * @abstract\n */\nclass BaseInteraction extends Base {\n  constructor(client, data) {\n    super(client);\n\n    /**\n     * The interaction's type\n     * @type {InteractionType}\n     */\n    this.type = data.type;\n\n    /**\n     * The interaction's id\n     * @type {Snowflake}\n     */\n    this.id = data.id;\n\n    /**\n     * The interaction's token\n     * @type {string}\n     * @name BaseInteraction#token\n     * @readonly\n     */\n    Object.defineProperty(this, 'token', { value: data.token });\n\n    /**\n     * The application's id\n     * @type {Snowflake}\n     */\n    this.applicationId = data.application_id;\n\n    /**\n     * The id of the channel this interaction was sent in\n     * @type {?Snowflake}\n     */\n    this.channelId = data.channel?.id ?? null;\n\n    /**\n     * The id of the guild this interaction was sent in\n     * @type {?Snowflake}\n     */\n    this.guildId = data.guild_id ?? null;\n\n    /**\n     * The user who created this interaction\n     * @type {User}\n     */\n    this.user = this.client.users._add(data.user ?? data.member.user);\n\n    /**\n     * If this interaction was sent in a guild, the member which sent it\n     * @type {?(GuildMember|APIInteractionGuildMember)}\n     */\n    this.member = data.member ? (this.guild?.members._add(data.member) ?? data.member) : null;\n\n    /**\n     * The version\n     * @type {number}\n     */\n    this.version = data.version;\n\n    /**\n     * Set of permissions the application or bot has within the channel the interaction was sent from\n     * @type {Readonly<PermissionsBitField>}\n     */\n    this.appPermissions = new PermissionsBitField(data.app_permissions).freeze();\n\n    /**\n     * The permissions of the member, if one exists, in the channel this interaction was executed in\n     * @type {?Readonly<PermissionsBitField>}\n     */\n    this.memberPermissions = data.member?.permissions\n      ? new PermissionsBitField(data.member.permissions).freeze()\n      : null;\n\n    /**\n     * The locale of the user who invoked this interaction\n     * @type {Locale}\n     */\n    this.locale = data.locale;\n\n    /**\n     * The preferred locale from the guild this interaction was sent in\n     * @type {?Locale}\n     */\n    this.guildLocale = data.guild_locale ?? null;\n\n    /**\n     * The entitlements for the invoking user, representing access to premium SKUs\n     * @type {Collection<Snowflake, Entitlement>}\n     */\n    this.entitlements = data.entitlements.reduce(\n      (coll, entitlement) => coll.set(entitlement.id, this.client.application.entitlements._add(entitlement)),\n      new Collection(),\n    );\n\n    /* eslint-disable max-len */\n    /**\n     * Mapping of installation contexts that the interaction was authorized for the related user or guild ids\n     * @type {APIAuthorizingIntegrationOwnersMap}\n     * @see {@link https://discord.com/developers/docs/interactions/receiving-and-responding#interaction-object-authorizing-integration-owners-object}\n     */\n    this.authorizingIntegrationOwners = data.authorizing_integration_owners;\n    /* eslint-enable max-len */\n\n    /**\n     * Context where the interaction was triggered from\n     * @type {?InteractionContextType}\n     */\n    this.context = data.context ?? null;\n  }\n\n  /**\n   * The timestamp the interaction was created at\n   * @type {number}\n   * @readonly\n   */\n  get createdTimestamp() {\n    return DiscordSnowflake.timestampFrom(this.id);\n  }\n\n  /**\n   * The time the interaction was created at\n   * @type {Date}\n   * @readonly\n   */\n  get createdAt() {\n    return new Date(this.createdTimestamp);\n  }\n\n  /**\n   * The channel this interaction was sent in\n   * @type {?TextBasedChannels}\n   * @readonly\n   */\n  get channel() {\n    return this.client.channels.cache.get(this.channelId) ?? null;\n  }\n\n  /**\n   * The guild this interaction was sent in\n   * @type {?Guild}\n   * @readonly\n   */\n  get guild() {\n    return this.client.guilds.cache.get(this.guildId) ?? null;\n  }\n\n  /**\n   * Indicates whether this interaction is received from a guild.\n   * @returns {boolean}\n   */\n  inGuild() {\n    return Boolean(this.guildId && this.member);\n  }\n\n  /**\n   * Indicates whether this interaction is received from a cached guild.\n   * @returns {boolean}\n   */\n  inCachedGuild() {\n    return Boolean(this.guild && this.member);\n  }\n\n  /**\n   * Indicates whether or not this interaction is received from an uncached guild.\n   * @returns {boolean}\n   */\n  inRawGuild() {\n    return Boolean(this.guildId && !this.guild && this.member);\n  }\n\n  /**\n   * Indicates whether this interaction is an {@link AutocompleteInteraction}\n   * @returns {boolean}\n   */\n  isAutocomplete() {\n    return this.type === InteractionType.ApplicationCommandAutocomplete;\n  }\n\n  /**\n   * Indicates whether this interaction is a {@link CommandInteraction}\n   * @returns {boolean}\n   */\n  isCommand() {\n    return this.type === InteractionType.ApplicationCommand;\n  }\n\n  /**\n   * Indicates whether this interaction is a {@link ChatInputCommandInteraction}.\n   * @returns {boolean}\n   */\n  isChatInputCommand() {\n    return this.type === InteractionType.ApplicationCommand && this.commandType === ApplicationCommandType.ChatInput;\n  }\n\n  /**\n   * Indicates whether this interaction is a {@link ContextMenuCommandInteraction}\n   * @returns {boolean}\n   */\n  isContextMenuCommand() {\n    return (\n      this.type === InteractionType.ApplicationCommand &&\n      [ApplicationCommandType.User, ApplicationCommandType.Message].includes(this.commandType)\n    );\n  }\n\n  /**\n   * Indicates whether this interaction is a {@link MessageComponentInteraction}\n   * @returns {boolean}\n   */\n  isMessageComponent() {\n    return this.type === InteractionType.MessageComponent;\n  }\n\n  /**\n   * Indicates whether this interaction is a {@link ModalSubmitInteraction}\n   * @returns {boolean}\n   */\n  isModalSubmit() {\n    return this.type === InteractionType.ModalSubmit;\n  }\n\n  /**\n   * Indicates whether this interaction is a {@link UserContextMenuCommandInteraction}\n   * @returns {boolean}\n   */\n  isUserContextMenuCommand() {\n    return this.isContextMenuCommand() && this.commandType === ApplicationCommandType.User;\n  }\n\n  /**\n   * Indicates whether this interaction is a {@link MessageContextMenuCommandInteraction}\n   * @returns {boolean}\n   */\n  isMessageContextMenuCommand() {\n    return this.isContextMenuCommand() && this.commandType === ApplicationCommandType.Message;\n  }\n\n  /**\n   * Indicates whether this interaction is a {@link ButtonInteraction}.\n   * @returns {boolean}\n   */\n  isButton() {\n    return this.type === InteractionType.MessageComponent && this.componentType === ComponentType.Button;\n  }\n\n  /**\n   * Indicates whether this interaction is a {@link StringSelectMenuInteraction}.\n   * @returns {boolean}\n   * @deprecated Use {@link BaseInteraction#isStringSelectMenu} instead.\n   */\n  isSelectMenu() {\n    return this.isStringSelectMenu();\n  }\n\n  /**\n   * Indicates whether this interaction is a select menu of any known type.\n   * @returns {boolean}\n   */\n  isAnySelectMenu() {\n    return this.type === InteractionType.MessageComponent && SelectMenuTypes.includes(this.componentType);\n  }\n\n  /**\n   * Indicates whether this interaction is a {@link StringSelectMenuInteraction}.\n   * @returns {boolean}\n   */\n  isStringSelectMenu() {\n    return this.type === InteractionType.MessageComponent && this.componentType === ComponentType.StringSelect;\n  }\n\n  /**\n   * Indicates whether this interaction is a {@link UserSelectMenuInteraction}\n   * @returns {boolean}\n   */\n  isUserSelectMenu() {\n    return this.type === InteractionType.MessageComponent && this.componentType === ComponentType.UserSelect;\n  }\n\n  /**\n   * Indicates whether this interaction is a {@link RoleSelectMenuInteraction}\n   * @returns {boolean}\n   */\n  isRoleSelectMenu() {\n    return this.type === InteractionType.MessageComponent && this.componentType === ComponentType.RoleSelect;\n  }\n\n  /**\n   * Indicates whether this interaction is a {@link ChannelSelectMenuInteraction}\n   * @returns {boolean}\n   */\n  isChannelSelectMenu() {\n    return this.type === InteractionType.MessageComponent && this.componentType === ComponentType.ChannelSelect;\n  }\n\n  /**\n   * Indicates whether this interaction is a {@link MentionableSelectMenuInteraction}\n   * @returns {boolean}\n   */\n  isMentionableSelectMenu() {\n    return this.type === InteractionType.MessageComponent && this.componentType === ComponentType.MentionableSelect;\n  }\n\n  /**\n   * Indicates whether this interaction can be replied to.\n   * @returns {boolean}\n   */\n  isRepliable() {\n    return ![InteractionType.Ping, InteractionType.ApplicationCommandAutocomplete].includes(this.type);\n  }\n}\n\nBaseInteraction.prototype.isSelectMenu = deprecate(\n  BaseInteraction.prototype.isSelectMenu,\n  'BaseInteraction#isSelectMenu() is deprecated. Use BaseInteraction#isStringSelectMenu() instead.',\n);\n\nmodule.exports = BaseInteraction;\n", "'use strict';\n\n/**\n * Role connection metadata object for an application.\n */\nclass ApplicationRoleConnectionMetadata {\n  constructor(data) {\n    /**\n     * The name of this metadata field\n     * @type {string}\n     */\n    this.name = data.name;\n\n    /**\n     * The name localizations for this metadata field\n     * @type {?Object<Locale, string>}\n     */\n    this.nameLocalizations = data.name_localizations ?? null;\n\n    /**\n     * The description of this metadata field\n     * @type {string}\n     */\n    this.description = data.description;\n\n    /**\n     * The description localizations for this metadata field\n     * @type {?Object<Locale, string>}\n     */\n    this.descriptionLocalizations = data.description_localizations ?? null;\n\n    /**\n     * The dictionary key for this metadata field\n     * @type {string}\n     */\n    this.key = data.key;\n\n    /**\n     * The type of this metadata field\n     * @type {ApplicationRoleConnectionMetadataType}\n     */\n    this.type = data.type;\n  }\n}\n\nexports.ApplicationRoleConnectionMetadata = ApplicationRoleConnectionMetadata;\n", "'use strict';\n\nconst Base = require('./Base');\n\n/**\n * Represents a Client OAuth2 Application Team Member.\n * @extends {Base}\n */\nclass TeamMember extends Base {\n  constructor(team, data) {\n    super(team.client);\n\n    /**\n     * The Team this member is part of\n     * @type {Team}\n     */\n    this.team = team;\n\n    this._patch(data);\n  }\n\n  _patch(data) {\n    if ('permissions' in data) {\n      /**\n       * The permissions this Team Member has with regard to the team\n       * @type {string[]}\n       * @deprecated Use {@link TeamMember#role} instead.\n       */\n      this.permissions = data.permissions;\n    }\n\n    if ('membership_state' in data) {\n      /**\n       * The permissions this Team Member has with regard to the team\n       * @type {TeamMemberMembershipState}\n       */\n      this.membershipState = data.membership_state;\n    }\n\n    if ('user' in data) {\n      /**\n       * The user for this Team Member\n       * @type {User}\n       */\n      this.user = this.client.users._add(data.user);\n    }\n\n    if ('role' in data) {\n      /**\n       * The role of this Team Member\n       * @type {TeamMemberRole}\n       */\n      this.role = data.role;\n    }\n  }\n\n  /**\n   * The Team Member's id\n   * @type {Snowflake}\n   * @readonly\n   */\n  get id() {\n    return this.user.id;\n  }\n\n  /**\n   * When concatenated with a string, this automatically returns the team member's mention instead of the\n   * TeamMember object.\n   * @returns {string}\n   * @example\n   * // Logs: Team Member's mention: <@123456789012345678>\n   * console.log(`Team Member's mention: ${teamMember}`);\n   */\n  toString() {\n    return this.user.toString();\n  }\n}\n\nmodule.exports = TeamMember;\n", "'use strict';\n\nconst { Collection } = require('@discordjs/collection');\nconst { DiscordSnowflake } = require('@sapphire/snowflake');\nconst Base = require('./Base');\nconst TeamMember = require('./TeamMember');\n\n/**\n * Represents a Client OAuth2 Application Team.\n * @extends {Base}\n */\nclass Team extends Base {\n  constructor(client, data) {\n    super(client);\n    this._patch(data);\n  }\n\n  _patch(data) {\n    /**\n     * The Team's id\n     * @type {Snowflake}\n     */\n    this.id = data.id;\n\n    if ('name' in data) {\n      /**\n       * The name of the Team\n       * @type {string}\n       */\n      this.name = data.name;\n    }\n\n    if ('icon' in data) {\n      /**\n       * The Team's icon hash\n       * @type {?string}\n       */\n      this.icon = data.icon;\n    } else {\n      this.icon ??= null;\n    }\n\n    if ('owner_user_id' in data) {\n      /**\n       * The Team's owner id\n       * @type {?Snowflake}\n       */\n      this.ownerId = data.owner_user_id;\n    } else {\n      this.ownerId ??= null;\n    }\n    /**\n     * The Team's members\n     * @type {Collection<Snowflake, TeamMember>}\n     */\n    this.members = new Collection();\n\n    for (const memberData of data.members) {\n      const member = new TeamMember(this, memberData);\n      this.members.set(member.id, member);\n    }\n  }\n\n  /**\n   * The owner of this team\n   * @type {?TeamMember}\n   * @readonly\n   */\n  get owner() {\n    return this.members.get(this.ownerId) ?? null;\n  }\n\n  /**\n   * The timestamp the team was created at\n   * @type {number}\n   * @readonly\n   */\n  get createdTimestamp() {\n    return DiscordSnowflake.timestampFrom(this.id);\n  }\n\n  /**\n   * The time the team was created at\n   * @type {Date}\n   * @readonly\n   */\n  get createdAt() {\n    return new Date(this.createdTimestamp);\n  }\n\n  /**\n   * A link to the team's icon.\n   * @param {ImageURLOptions} [options={}] Options for the image URL\n   * @returns {?string}\n   */\n  iconURL(options = {}) {\n    return this.icon && this.client.rest.cdn.teamIcon(this.id, this.icon, options);\n  }\n\n  /**\n   * When concatenated with a string, this automatically returns the Team's name instead of the\n   * Team object.\n   * @returns {string}\n   * @example\n   * // Logs: Team name: My Team\n   * console.log(`Team name: ${team}`);\n   */\n  toString() {\n    return this.name;\n  }\n\n  toJSON() {\n    return super.toJSON({ createdTimestamp: true });\n  }\n}\n\nmodule.exports = Team;\n", "'use strict';\n\nconst { Collection } = require('@discordjs/collection');\nconst { ApplicationCommandPermissionType, RESTJSONErrorCodes, Routes } = require('discord-api-types/v10');\nconst BaseManager = require('./BaseManager');\nconst { DiscordjsError, DiscordjsTypeError, ErrorCodes } = require('../errors');\n\n/**\n * Manages API methods for permissions of Application Commands.\n * @extends {BaseManager}\n */\nclass ApplicationCommandPermissionsManager extends BaseManager {\n  constructor(manager) {\n    super(manager.client);\n\n    /**\n     * The manager or command that this manager belongs to\n     * @type {ApplicationCommandManager|ApplicationCommand}\n     * @private\n     */\n    this.manager = manager;\n\n    /**\n     * The guild that this manager acts on\n     * @type {?Guild}\n     */\n    this.guild = manager.guild ?? null;\n\n    /**\n     * The id of the guild that this manager acts on\n     * @type {?Snowflake}\n     */\n    this.guildId = manager.guildId ?? manager.guild?.id ?? null;\n\n    /**\n     * The id of the command this manager acts on\n     * @type {?Snowflake}\n     */\n    this.commandId = manager.id ?? null;\n  }\n\n  /**\n   * The APIRouter path to the commands\n   * @param {Snowflake} guildId The guild's id to use in the path,\n   * @param {Snowflake} [commandId] The application command's id\n   * @returns {string}\n   * @private\n   */\n  permissionsPath(guildId, commandId) {\n    if (commandId) {\n      return Routes.applicationCommandPermissions(this.client.application.id, guildId, commandId);\n    }\n\n    return Routes.guildApplicationCommandsPermissions(this.client.application.id, guildId);\n  }\n\n  /* eslint-disable max-len */\n  /**\n   * The object returned when fetching permissions for an application command.\n   * @typedef {Object} ApplicationCommandPermissions\n   * @property {Snowflake} id The role, user, or channel's id. Can also be a\n   * {@link https://discord.com/developers/docs/interactions/application-commands#application-command-permissions-object-application-command-permissions-constants permission constant}.\n   * @property {ApplicationCommandPermissionType} type Whether this permission is for a role or a user\n   * @property {boolean} permission Whether the role or user has the permission to use this command\n   */\n  /* eslint-enable max-len */\n\n  /**\n   * Options for managing permissions for one or more Application Commands\n   * <warn>When passing these options to a manager where `guildId` is `null`,\n   * `guild` is a required parameter</warn>\n   * @typedef {Object} BaseApplicationCommandPermissionsOptions\n   * @property {GuildResolvable} [guild] The guild to modify / check permissions for\n   * <warn>Ignored when the manager has a non-null `guildId` property</warn>\n   * @property {ApplicationCommandResolvable} [command] The command to modify / check permissions for\n   * <warn>Ignored when the manager has a non-null `commandId` property</warn>\n   */\n\n  /**\n   * Fetches the permissions for one or multiple commands. Providing the client's id as the \"command id\" will fetch\n   * *only* the guild level permissions\n   * @param {BaseApplicationCommandPermissionsOptions} [options] Options used to fetch permissions\n   * @returns {Promise<ApplicationCommandPermissions[]|Collection<Snowflake, ApplicationCommandPermissions[]>>}\n   * @example\n   * // Fetch permissions for one command\n   * guild.commands.permissions.fetch({ command: '123456789012345678' })\n   *   .then(perms => console.log(`Fetched ${perms.length} overwrites`))\n   *   .catch(console.error);\n   * @example\n   * // Fetch permissions for all commands in a guild\n   * client.application.commands.permissions.fetch({ guild: '123456789012345678' })\n   *   .then(perms => console.log(`Fetched permissions for ${perms.size} commands`))\n   *   .catch(console.error);\n   * @example\n   * // Fetch guild level permissions\n   * guild.commands.permissions.fetch({ command: client.user.id })\n   *   .then(perms => console.log(`Fetched ${perms.length} guild level permissions`))\n   *   .catch(console.error);\n   */\n  async fetch({ guild, command } = {}) {\n    const { guildId, commandId } = this._validateOptions(guild, command);\n    if (commandId) {\n      const data = await this.client.rest.get(this.permissionsPath(guildId, commandId));\n      return data.permissions;\n    }\n\n    const data = await this.client.rest.get(this.permissionsPath(guildId));\n    return data.reduce((coll, perm) => coll.set(perm.id, perm.permissions), new Collection());\n  }\n\n  /**\n   * Options used to set permissions for one or more Application Commands in a guild\n   * <warn>Omitting the `command` parameter edits the guild wide permissions\n   * when the manager's `commandId` is `null`</warn>\n   * @typedef {BaseApplicationCommandPermissionsOptions} ApplicationCommandPermissionsEditOptions\n   * @property {ApplicationCommandPermissions[]} permissions The new permissions for the guild or overwrite\n   * @property {string} token The bearer token to use that authorizes the permission edit\n   */\n\n  /**\n   * Sets the permissions for the guild or a command overwrite.\n   * @param {ApplicationCommandPermissionsEditOptions} options Options used to set permissions\n   * @returns {Promise<ApplicationCommandPermissions[]|Collection<Snowflake, ApplicationCommandPermissions[]>>}\n   * @example\n   * // Set a permission overwrite for a command\n   * client.application.commands.permissions.set({\n   *  guild: '892455839386304532',\n   *  command: '123456789012345678',\n   *  token: 'TotallyRealToken',\n   *  permissions: [\n   *    {\n   *      id: '876543210987654321',\n   *      type: ApplicationCommandPermissionType.User,\n   *      permission: false,\n   *    },\n   * ]})\n   *   .then(console.log)\n   *   .catch(console.error);\n   * @example\n   * // Set the permissions used for the guild (commands without overwrites)\n   * guild.commands.permissions.set({ token: 'TotallyRealToken', permissions: [\n   *   {\n   *     id: '123456789012345678',\n   *     permissions: [{\n   *       id: '876543210987654321',\n   *       type: ApplicationCommandPermissionType.User,\n   *       permission: false,\n   *     }],\n   *   },\n   * ]})\n   *   .then(console.log)\n   *   .catch(console.error);\n   */\n  async set({ guild, command, permissions, token } = {}) {\n    if (!token) {\n      throw new DiscordjsError(ErrorCodes.ApplicationCommandPermissionsTokenMissing);\n    }\n    let { guildId, commandId } = this._validateOptions(guild, command);\n\n    if (!Array.isArray(permissions)) {\n      throw new DiscordjsTypeError(\n        ErrorCodes.InvalidType,\n        'permissions',\n        'Array of ApplicationCommandPermissions',\n        true,\n      );\n    }\n\n    if (!commandId) {\n      commandId = this.client.user.id;\n    }\n    const data = await this.client.rest.put(this.permissionsPath(guildId, commandId), {\n      body: { permissions },\n      auth: false,\n      headers: { Authorization: `Bearer ${token}` },\n    });\n    return data.permissions;\n  }\n\n  /**\n   * Add permissions to a command.\n   * @param {ApplicationCommandPermissionsEditOptions} options Options used to add permissions\n   * @returns {Promise<ApplicationCommandPermissions[]>}\n   * @example\n   * // Add a rule to block a role from using a command\n   * guild.commands.permissions.add({ command: '123456789012345678', token: 'TotallyRealToken', permissions: [\n   *   {\n   *     id: '876543211234567890',\n   *     type: ApplicationCommandPermissionType.Role,\n   *     permission: false\n   *   },\n   * ]})\n   *   .then(console.log)\n   *   .catch(console.error);\n   */\n  async add({ guild, command, permissions, token } = {}) {\n    if (!token) {\n      throw new DiscordjsError(ErrorCodes.ApplicationCommandPermissionsTokenMissing);\n    }\n    let { guildId, commandId } = this._validateOptions(guild, command);\n    if (!commandId) {\n      commandId = this.client.user.id;\n    }\n    if (!Array.isArray(permissions)) {\n      throw new DiscordjsTypeError(\n        ErrorCodes.InvalidType,\n        'permissions',\n        'Array of ApplicationCommandPermissions',\n        true,\n      );\n    }\n\n    let existingPermissions = [];\n    try {\n      existingPermissions = await this.fetch({ guild: guildId, command: commandId });\n    } catch (error) {\n      if (error.code !== RESTJSONErrorCodes.UnknownApplicationCommandPermissions) throw error;\n    }\n\n    const newPermissions = permissions.slice();\n    for (const existingPermission of existingPermissions) {\n      if (!newPermissions.some(newPermission => newPermission.id === existingPermission.id)) {\n        newPermissions.push(existingPermission);\n      }\n    }\n\n    return this.set({ guild: guildId, command: commandId, permissions: newPermissions, token });\n  }\n\n  /**\n   * A static snowflake that identifies the everyone role for application command permissions.\n   * It is the same as the guild id\n   * @typedef {Snowflake} RolePermissionConstant\n   */\n\n  /**\n   * A static snowflake that identifies the \"all channels\" entity for application command permissions.\n   * It will be the result of the calculation `guildId - 1`\n   * @typedef {Snowflake} ChannelPermissionConstant\n   */\n\n  /**\n   * Options used to remove permissions from a command\n   * <warn>Omitting the `command` parameter removes from the guild wide permissions\n   * when the managers `commandId` is `null`</warn>\n   * <warn>At least one of `users`, `roles`, and `channels` is required</warn>\n   * @typedef {BaseApplicationCommandPermissionsOptions} RemoveApplicationCommandPermissionsOptions\n   * @property {string} token The bearer token to use that authorizes the permission removal\n   * @property {UserResolvable[]} [users] The user(s) to remove\n   * @property {Array<RoleResolvable|RolePermissionConstant>} [roles] The role(s) to remove\n   * @property {Array<GuildChannelResolvable|ChannelPermissionConstant>} [channels] The channel(s) to remove\n   */\n\n  /**\n   * Remove permissions from a command.\n   * @param {RemoveApplicationCommandPermissionsOptions} options Options used to remove permissions\n   * @returns {Promise<ApplicationCommandPermissions[]>}\n   * @example\n   * // Remove a user permission from this command\n   * guild.commands.permissions.remove({\n   *  command: '123456789012345678', users: '876543210123456789', token: 'TotallyRealToken',\n   * })\n   *   .then(console.log)\n   *   .catch(console.error);\n   * @example\n   * // Remove multiple roles from this command\n   * guild.commands.permissions.remove({\n   *   command: '123456789012345678', roles: ['876543210123456789', '765432101234567890'], token: 'TotallyRealToken',\n   * })\n   *    .then(console.log)\n   *    .catch(console.error);\n   */\n  async remove({ guild, command, users, roles, channels, token } = {}) {\n    if (!token) {\n      throw new DiscordjsError(ErrorCodes.ApplicationCommandPermissionsTokenMissing);\n    }\n    let { guildId, commandId } = this._validateOptions(guild, command);\n    if (!commandId) {\n      commandId = this.client.user.id;\n    }\n\n    if (!users && !roles && !channels) {\n      throw new DiscordjsTypeError(ErrorCodes.InvalidType, 'users OR roles OR channels', 'Array or Resolvable', true);\n    }\n\n    let resolvedUserIds = [];\n    if (Array.isArray(users)) {\n      for (const user of users) {\n        const userId = this.client.users.resolveId(user);\n        if (!userId) throw new DiscordjsTypeError(ErrorCodes.InvalidElement, 'Array', 'users', user);\n        resolvedUserIds.push(userId);\n      }\n    }\n\n    let resolvedRoleIds = [];\n    if (Array.isArray(roles)) {\n      for (const role of roles) {\n        if (typeof role === 'string') {\n          resolvedRoleIds.push(role);\n          continue;\n        }\n        if (!this.guild) throw new DiscordjsError(ErrorCodes.GuildUncachedEntityResolve, 'roles');\n        const roleId = this.guild.roles.resolveId(role);\n        if (!roleId) throw new DiscordjsTypeError(ErrorCodes.InvalidElement, 'Array', 'users', role);\n        resolvedRoleIds.push(roleId);\n      }\n    }\n\n    let resolvedChannelIds = [];\n    if (Array.isArray(channels)) {\n      for (const channel of channels) {\n        if (typeof channel === 'string') {\n          resolvedChannelIds.push(channel);\n          continue;\n        }\n        if (!this.guild) throw new DiscordjsError(ErrorCodes.GuildUncachedEntityResolve, 'channels');\n        const channelId = this.guild.channels.resolveId(channel);\n        if (!channelId) throw new DiscordjsTypeError(ErrorCodes.InvalidElement, 'Array', 'channels', channel);\n        resolvedChannelIds.push(channelId);\n      }\n    }\n\n    let existing = [];\n    try {\n      existing = await this.fetch({ guild: guildId, command: commandId });\n    } catch (error) {\n      if (error.code !== RESTJSONErrorCodes.UnknownApplicationCommandPermissions) throw error;\n    }\n\n    const permissions = existing.filter(perm => {\n      switch (perm.type) {\n        case ApplicationCommandPermissionType.Role:\n          return !resolvedRoleIds.includes(perm.id);\n        case ApplicationCommandPermissionType.User:\n          return !resolvedUserIds.includes(perm.id);\n        case ApplicationCommandPermissionType.Channel:\n          return !resolvedChannelIds.includes(perm.id);\n      }\n      return true;\n    });\n\n    return this.set({ guild: guildId, command: commandId, permissions, token });\n  }\n\n  /**\n   * Options used to check the existence of permissions on a command\n   * <warn>The `command` parameter is not optional when the managers `commandId` is `null`</warn>\n   * @typedef {BaseApplicationCommandPermissionsOptions} HasApplicationCommandPermissionsOptions\n   * @property {ApplicationCommandPermissionIdResolvable} permissionId The entity to check if a permission exists for\n   * on this command.\n   * @property {ApplicationCommandPermissionType} [permissionType] Check for a specific type of permission\n   */\n\n  /**\n   * Check whether a permission exists for a user, role, or channel\n   * @param {HasApplicationCommandPermissionsOptions} options Options used to check permissions\n   * @returns {Promise<boolean>}\n   * @example\n   * guild.commands.permissions.has({ command: '123456789012345678', permissionId: '876543210123456789' })\n   *  .then(console.log)\n   *  .catch(console.error);\n   */\n  async has({ guild, command, permissionId, permissionType }) {\n    const { guildId, commandId } = this._validateOptions(guild, command);\n    if (!commandId) throw new DiscordjsTypeError(ErrorCodes.InvalidType, 'command', 'ApplicationCommandResolvable');\n\n    if (!permissionId) {\n      throw new DiscordjsTypeError(\n        ErrorCodes.InvalidType,\n        'permissionId',\n        'UserResolvable, RoleResolvable, ChannelResolvable, or Permission Constant',\n      );\n    }\n    let resolvedId = permissionId;\n    if (typeof permissionId !== 'string') {\n      resolvedId = this.client.users.resolveId(permissionId);\n      if (!resolvedId) {\n        if (!this.guild) throw new DiscordjsError(ErrorCodes.GuildUncachedEntityResolve, 'roles');\n        resolvedId = this.guild.roles.resolveId(permissionId);\n      }\n      if (!resolvedId) {\n        resolvedId = this.guild.channels.resolveId(permissionId);\n      }\n      if (!resolvedId) {\n        throw new DiscordjsTypeError(\n          ErrorCodes.InvalidType,\n          'permissionId',\n          'UserResolvable, RoleResolvable, ChannelResolvable, or Permission Constant',\n        );\n      }\n    }\n\n    let existing = [];\n    try {\n      existing = await this.fetch({ guild: guildId, command: commandId });\n    } catch (error) {\n      if (error.code !== RESTJSONErrorCodes.UnknownApplicationCommandPermissions) throw error;\n    }\n\n    // Check permission type if provided for the single edge case where a channel id is the same as the everyone role id\n    return existing.some(perm => perm.id === resolvedId && (permissionType ?? perm.type) === perm.type);\n  }\n\n  _validateOptions(guild, command) {\n    const guildId = this.guildId ?? this.client.guilds.resolveId(guild);\n    if (!guildId) throw new DiscordjsError(ErrorCodes.GlobalCommandPermissions);\n    let commandId = this.commandId;\n    if (command && !commandId) {\n      commandId = this.manager.resolveId?.(command);\n      if (!commandId && this.guild) {\n        commandId = this.guild.commands.resolveId(command);\n      }\n      commandId ??= this.client.application?.commands.resolveId(command);\n      if (!commandId) {\n        throw new DiscordjsTypeError(ErrorCodes.InvalidType, 'command', 'ApplicationCommandResolvable', true);\n      }\n    }\n    return { guildId, commandId };\n  }\n}\n\nmodule.exports = ApplicationCommandPermissionsManager;\n\n/* eslint-disable max-len */\n/**\n * Data that resolves to an id used for an application command permission\n * @typedef {UserResolvable|RoleResolvable|GuildChannelResolvable|RolePermissionConstant|ChannelPermissionConstant} ApplicationCommandPermissionIdResolvable\n */\n", "'use strict';\n\nconst { DiscordSnowflake } = require('@sapphire/snowflake');\nconst { ApplicationCommandOptionType } = require('discord-api-types/v10');\nconst isEqual = require('fast-deep-equal');\nconst Base = require('./Base');\nconst ApplicationCommandPermissionsManager = require('../managers/ApplicationCommandPermissionsManager');\nconst PermissionsBitField = require('../util/PermissionsBitField');\n\n/**\n * Represents an application command.\n * @extends {Base}\n */\nclass ApplicationCommand extends Base {\n  constructor(client, data, guild, guildId) {\n    super(client);\n\n    /**\n     * The command's id\n     * @type {Snowflake}\n     */\n    this.id = data.id;\n\n    /**\n     * The parent application's id\n     * @type {Snowflake}\n     */\n    this.applicationId = data.application_id;\n\n    /**\n     * The guild this command is part of\n     * @type {?Guild}\n     */\n    this.guild = guild ?? null;\n\n    /**\n     * The guild's id this command is part of, this may be non-null when `guild` is `null` if the command\n     * was fetched from the `ApplicationCommandManager`\n     * @type {?Snowflake}\n     */\n    this.guildId = guild?.id ?? guildId ?? null;\n\n    /**\n     * The manager for permissions of this command on its guild or arbitrary guilds when the command is global\n     * @type {ApplicationCommandPermissionsManager}\n     */\n    this.permissions = new ApplicationCommandPermissionsManager(this);\n\n    /**\n     * The type of this application command\n     * @type {ApplicationCommandType}\n     */\n    this.type = data.type;\n\n    /**\n     * Whether this command is age-restricted (18+)\n     * @type {boolean}\n     */\n    this.nsfw = data.nsfw ?? false;\n\n    this._patch(data);\n  }\n\n  _patch(data) {\n    if ('name' in data) {\n      /**\n       * The name of this command\n       * @type {string}\n       */\n      this.name = data.name;\n    }\n\n    if ('name_localizations' in data) {\n      /**\n       * The name localizations for this command\n       * @type {?Object<Locale, string>}\n       */\n      this.nameLocalizations = data.name_localizations;\n    } else {\n      this.nameLocalizations ??= null;\n    }\n\n    if ('name_localized' in data) {\n      /**\n       * The localized name for this command\n       * @type {?string}\n       */\n      this.nameLocalized = data.name_localized;\n    } else {\n      this.nameLocalized ??= null;\n    }\n\n    if ('description' in data) {\n      /**\n       * The description of this command\n       * @type {string}\n       */\n      this.description = data.description;\n    }\n\n    if ('description_localizations' in data) {\n      /**\n       * The description localizations for this command\n       * @type {?Object<Locale, string>}\n       */\n      this.descriptionLocalizations = data.description_localizations;\n    } else {\n      this.descriptionLocalizations ??= null;\n    }\n\n    if ('description_localized' in data) {\n      /**\n       * The localized description for this command\n       * @type {?string}\n       */\n      this.descriptionLocalized = data.description_localized;\n    } else {\n      this.descriptionLocalized ??= null;\n    }\n\n    if ('options' in data) {\n      /**\n       * The options of this command\n       * @type {ApplicationCommandOption[]}\n       */\n      this.options = data.options.map(option => this.constructor.transformOption(option, true));\n    } else {\n      this.options ??= [];\n    }\n\n    if ('default_member_permissions' in data) {\n      /**\n       * The default bitfield used to determine whether this command be used in a guild\n       * @type {?Readonly<PermissionsBitField>}\n       */\n      this.defaultMemberPermissions = data.default_member_permissions\n        ? new PermissionsBitField(BigInt(data.default_member_permissions)).freeze()\n        : null;\n    } else {\n      this.defaultMemberPermissions ??= null;\n    }\n\n    if ('dm_permission' in data) {\n      /**\n       * Whether the command can be used in DMs\n       * <info>This property is always `null` on guild commands</info>\n       * @type {?boolean}\n       * @deprecated Use {@link ApplicationCommand#contexts} instead.\n       */\n      this.dmPermission = data.dm_permission;\n    } else {\n      this.dmPermission ??= null;\n    }\n\n    if ('integration_types' in data) {\n      /**\n       * Installation context(s) where the command is available\n       * <info>Only for globally-scoped commands</info>\n       * @type {?ApplicationIntegrationType[]}\n       */\n      this.integrationTypes = data.integration_types;\n    } else {\n      this.integrationTypes ??= null;\n    }\n\n    if ('contexts' in data) {\n      /**\n       * Interaction context(s) where the command can be used\n       * <info>Only for globally-scoped commands</info>\n       * @type {?InteractionContextType[]}\n       */\n      this.contexts = data.contexts;\n    } else {\n      this.contexts ??= null;\n    }\n\n    if ('version' in data) {\n      /**\n       * Autoincrementing version identifier updated during substantial record changes\n       * @type {Snowflake}\n       */\n      this.version = data.version;\n    }\n  }\n\n  /**\n   * The timestamp the command was created at\n   * @type {number}\n   * @readonly\n   */\n  get createdTimestamp() {\n    return DiscordSnowflake.timestampFrom(this.id);\n  }\n\n  /**\n   * The time the command was created at\n   * @type {Date}\n   * @readonly\n   */\n  get createdAt() {\n    return new Date(this.createdTimestamp);\n  }\n\n  /**\n   * The manager that this command belongs to\n   * @type {ApplicationCommandManager}\n   * @readonly\n   */\n  get manager() {\n    return (this.guild ?? this.client.application).commands;\n  }\n\n  /**\n   * Data for creating or editing an application command.\n   * @typedef {Object} ApplicationCommandData\n   * @property {string} name The name of the command, must be in all lowercase if type is\n   * {@link ApplicationCommandType.ChatInput}\n   * @property {Object<Locale, string>} [nameLocalizations] The localizations for the command name\n   * @property {string} description The description of the command, if type is {@link ApplicationCommandType.ChatInput}\n   * @property {boolean} [nsfw] Whether the command is age-restricted\n   * @property {Object<Locale, string>} [descriptionLocalizations] The localizations for the command description,\n   * if type is {@link ApplicationCommandType.ChatInput}\n   * @property {ApplicationCommandType} [type=ApplicationCommandType.ChatInput] The type of the command\n   * @property {ApplicationCommandOptionData[]} [options] Options for the command\n   * @property {?PermissionResolvable} [defaultMemberPermissions] The bitfield used to determine the default permissions\n   * a member needs in order to run the command\n   * @property {boolean} [dmPermission] Whether the command is enabled in DMs\n   */\n\n  /**\n   * An option for an application command or subcommand.\n   * <info>In addition to the listed properties, when used as a parameter,\n   * API style `snake_case` properties can be used for compatibility with generators like `@discordjs/builders`.</info>\n   * <warn>Note that providing a value for the `camelCase` counterpart for any `snake_case` property\n   * will discard the provided `snake_case` property.</warn>\n   * @typedef {Object} ApplicationCommandOptionData\n   * @property {ApplicationCommandOptionType} type The type of the option\n   * @property {string} name The name of the option\n   * @property {Object<Locale, string>} [nameLocalizations] The name localizations for the option\n   * @property {string} description The description of the option\n   * @property {Object<Locale, string>} [descriptionLocalizations] The description localizations for the option\n   * @property {boolean} [autocomplete] Whether the autocomplete interaction is enabled for a\n   * {@link ApplicationCommandOptionType.String}, {@link ApplicationCommandOptionType.Integer} or\n   * {@link ApplicationCommandOptionType.Number} option\n   * @property {boolean} [required] Whether the option is required\n   * @property {ApplicationCommandOptionChoiceData[]} [choices] The choices of the option for the user to pick from\n   * @property {ApplicationCommandOptionData[]} [options] Additional options if this option is a subcommand (group)\n   * @property {ChannelType[]} [channelTypes] When the option type is channel,\n   * the allowed types of channels that can be selected\n   * @property {number} [minValue] The minimum value for an {@link ApplicationCommandOptionType.Integer} or\n   * {@link ApplicationCommandOptionType.Number} option\n   * @property {number} [maxValue] The maximum value for an {@link ApplicationCommandOptionType.Integer} or\n   * {@link ApplicationCommandOptionType.Number} option\n   * @property {number} [minLength] The minimum length for an {@link ApplicationCommandOptionType.String} option\n   * (maximum of `6000`)\n   * @property {number} [maxLength] The maximum length for an {@link ApplicationCommandOptionType.String} option\n   * (maximum of `6000`)\n   */\n\n  /**\n   * @typedef {Object} ApplicationCommandOptionChoiceData\n   * @property {string} name The name of the choice\n   * @property {Object<Locale, string>} [nameLocalizations] The localized names for this choice\n   * @property {string|number} value The value of the choice\n   */\n\n  /**\n   * Edits this application command.\n   * @param {Partial<ApplicationCommandData>} data The data to update the command with\n   * @returns {Promise<ApplicationCommand>}\n   * @example\n   * // Edit the description of this command\n   * command.edit({\n   *   description: 'New description',\n   * })\n   *   .then(console.log)\n   *   .catch(console.error);\n   */\n  edit(data) {\n    return this.manager.edit(this, data, this.guildId);\n  }\n\n  /**\n   * Edits the name of this ApplicationCommand\n   * @param {string} name The new name of the command\n   * @returns {Promise<ApplicationCommand>}\n   */\n  setName(name) {\n    return this.edit({ name });\n  }\n\n  /**\n   * Edits the localized names of this ApplicationCommand\n   * @param {Object<Locale, string>} nameLocalizations The new localized names for the command\n   * @returns {Promise<ApplicationCommand>}\n   * @example\n   * // Edit the name localizations of this command\n   * command.setLocalizedNames({\n   *   'en-GB': 'test',\n   *   'pt-BR': 'teste',\n   * })\n   *   .then(console.log)\n   *   .catch(console.error)\n   */\n  setNameLocalizations(nameLocalizations) {\n    return this.edit({ nameLocalizations });\n  }\n\n  /**\n   * Edits the description of this ApplicationCommand\n   * @param {string} description The new description of the command\n   * @returns {Promise<ApplicationCommand>}\n   */\n  setDescription(description) {\n    return this.edit({ description });\n  }\n\n  /**\n   * Edits the localized descriptions of this ApplicationCommand\n   * @param {Object<Locale, string>} descriptionLocalizations The new localized descriptions for the command\n   * @returns {Promise<ApplicationCommand>}\n   * @example\n   * // Edit the description localizations of this command\n   * command.setDescriptionLocalizations({\n   *   'en-GB': 'A test command',\n   *   'pt-BR': 'Um comando de teste',\n   * })\n   *   .then(console.log)\n   *   .catch(console.error)\n   */\n  setDescriptionLocalizations(descriptionLocalizations) {\n    return this.edit({ descriptionLocalizations });\n  }\n\n  /**\n   * Edits the default member permissions of this ApplicationCommand\n   * @param {?PermissionResolvable} defaultMemberPermissions The default member permissions required to run this command\n   * @returns {Promise<ApplicationCommand>}\n   */\n  setDefaultMemberPermissions(defaultMemberPermissions) {\n    return this.edit({ defaultMemberPermissions });\n  }\n\n  /**\n   * Edits the DM permission of this ApplicationCommand\n   * @param {boolean} [dmPermission=true] Whether the command can be used in DMs\n   * @returns {Promise<ApplicationCommand>}\n   */\n  setDMPermission(dmPermission = true) {\n    return this.edit({ dmPermission });\n  }\n\n  /**\n   * Edits the options of this ApplicationCommand\n   * @param {ApplicationCommandOptionData[]} options The options to set for this command\n   * @returns {Promise<ApplicationCommand>}\n   */\n  setOptions(options) {\n    return this.edit({ options });\n  }\n\n  /**\n   * Deletes this command.\n   * @returns {Promise<ApplicationCommand>}\n   * @example\n   * // Delete this command\n   * command.delete()\n   *   .then(console.log)\n   *   .catch(console.error);\n   */\n  delete() {\n    return this.manager.delete(this, this.guildId);\n  }\n\n  /**\n   * Whether this command equals another command. It compares all properties, so for most operations\n   * it is advisable to just compare `command.id === command2.id` as it is much faster and is often\n   * what most users need.\n   * @param {ApplicationCommand|ApplicationCommandData|APIApplicationCommand} command The command to compare with\n   * @param {boolean} [enforceOptionOrder=false] Whether to strictly check that options and choices are in the same\n   * order in the array <info>The client may not always respect this ordering!</info>\n   * @returns {boolean}\n   */\n  equals(command, enforceOptionOrder = false) {\n    // If given an id, check if the id matches\n    if (command.id && this.id !== command.id) return false;\n\n    let defaultMemberPermissions = null;\n    let dmPermission = command.dmPermission ?? command.dm_permission;\n\n    if ('default_member_permissions' in command) {\n      defaultMemberPermissions = command.default_member_permissions\n        ? new PermissionsBitField(BigInt(command.default_member_permissions)).bitfield\n        : null;\n    }\n\n    if ('defaultMemberPermissions' in command) {\n      defaultMemberPermissions =\n        command.defaultMemberPermissions !== null\n          ? new PermissionsBitField(command.defaultMemberPermissions).bitfield\n          : null;\n    }\n\n    // Check top level parameters\n    if (\n      command.name !== this.name ||\n      ('description' in command && command.description !== this.description) ||\n      ('version' in command && command.version !== this.version) ||\n      (command.type && command.type !== this.type) ||\n      ('nsfw' in command && command.nsfw !== this.nsfw) ||\n      // Future proof for options being nullable\n      // TODO: remove ?? 0 on each when nullable\n      (command.options?.length ?? 0) !== (this.options?.length ?? 0) ||\n      defaultMemberPermissions !== (this.defaultMemberPermissions?.bitfield ?? null) ||\n      (dmPermission !== undefined && dmPermission !== this.dmPermission) ||\n      !isEqual(command.nameLocalizations ?? command.name_localizations ?? {}, this.nameLocalizations ?? {}) ||\n      !isEqual(\n        command.descriptionLocalizations ?? command.description_localizations ?? {},\n        this.descriptionLocalizations ?? {},\n      ) ||\n      !isEqual(command.integrationTypes ?? command.integration_types ?? [], this.integrationTypes ?? []) ||\n      !isEqual(command.contexts ?? [], this.contexts ?? [])\n    ) {\n      return false;\n    }\n\n    if (command.options) {\n      return this.constructor.optionsEqual(this.options, command.options, enforceOptionOrder);\n    }\n    return true;\n  }\n\n  /**\n   * Recursively checks that all options for an {@link ApplicationCommand} are equal to the provided options.\n   * In most cases it is better to compare using {@link ApplicationCommand#equals}\n   * @param {ApplicationCommandOptionData[]} existing The options on the existing command,\n   * should be {@link ApplicationCommand#options}\n   * @param {ApplicationCommandOptionData[]|APIApplicationCommandOption[]} options The options to compare against\n   * @param {boolean} [enforceOptionOrder=false] Whether to strictly check that options and choices are in the same\n   * order in the array <info>The client may not always respect this ordering!</info>\n   * @returns {boolean}\n   */\n  static optionsEqual(existing, options, enforceOptionOrder = false) {\n    if (existing.length !== options.length) return false;\n    if (enforceOptionOrder) {\n      return existing.every((option, index) => this._optionEquals(option, options[index], enforceOptionOrder));\n    }\n    const newOptions = new Map(options.map(option => [option.name, option]));\n    for (const option of existing) {\n      const foundOption = newOptions.get(option.name);\n      if (!foundOption || !this._optionEquals(option, foundOption)) return false;\n    }\n    return true;\n  }\n\n  /**\n   * Checks that an option for an {@link ApplicationCommand} is equal to the provided option\n   * In most cases it is better to compare using {@link ApplicationCommand#equals}\n   * @param {ApplicationCommandOptionData} existing The option on the existing command,\n   * should be from {@link ApplicationCommand#options}\n   * @param {ApplicationCommandOptionData|APIApplicationCommandOption} option The option to compare against\n   * @param {boolean} [enforceOptionOrder=false] Whether to strictly check that options or choices are in the same\n   * order in their array <info>The client may not always respect this ordering!</info>\n   * @returns {boolean}\n   * @private\n   */\n  static _optionEquals(existing, option, enforceOptionOrder = false) {\n    if (\n      option.name !== existing.name ||\n      option.type !== existing.type ||\n      option.description !== existing.description ||\n      option.autocomplete !== existing.autocomplete ||\n      (option.required ??\n        ([ApplicationCommandOptionType.Subcommand, ApplicationCommandOptionType.SubcommandGroup].includes(option.type)\n          ? undefined\n          : false)) !== existing.required ||\n      option.choices?.length !== existing.choices?.length ||\n      option.options?.length !== existing.options?.length ||\n      (option.channelTypes ?? option.channel_types)?.length !== existing.channelTypes?.length ||\n      (option.minValue ?? option.min_value) !== existing.minValue ||\n      (option.maxValue ?? option.max_value) !== existing.maxValue ||\n      (option.minLength ?? option.min_length) !== existing.minLength ||\n      (option.maxLength ?? option.max_length) !== existing.maxLength ||\n      !isEqual(option.nameLocalizations ?? option.name_localizations ?? {}, existing.nameLocalizations ?? {}) ||\n      !isEqual(\n        option.descriptionLocalizations ?? option.description_localizations ?? {},\n        existing.descriptionLocalizations ?? {},\n      )\n    ) {\n      return false;\n    }\n\n    if (existing.choices) {\n      if (\n        enforceOptionOrder &&\n        !existing.choices.every(\n          (choice, index) =>\n            choice.name === option.choices[index].name &&\n            choice.value === option.choices[index].value &&\n            isEqual(\n              choice.nameLocalizations ?? {},\n              option.choices[index].nameLocalizations ?? option.choices[index].name_localizations ?? {},\n            ),\n        )\n      ) {\n        return false;\n      }\n      if (!enforceOptionOrder) {\n        const newChoices = new Map(option.choices.map(choice => [choice.name, choice]));\n        for (const choice of existing.choices) {\n          const foundChoice = newChoices.get(choice.name);\n          if (!foundChoice || foundChoice.value !== choice.value) return false;\n        }\n      }\n    }\n\n    if (existing.channelTypes) {\n      const newTypes = option.channelTypes ?? option.channel_types;\n      for (const type of existing.channelTypes) {\n        if (!newTypes.includes(type)) return false;\n      }\n    }\n\n    if (existing.options) {\n      return this.optionsEqual(existing.options, option.options, enforceOptionOrder);\n    }\n    return true;\n  }\n\n  /**\n   * An option for an application command or subcommand.\n   * @typedef {Object} ApplicationCommandOption\n   * @property {ApplicationCommandOptionType} type The type of the option\n   * @property {string} name The name of the option\n   * @property {Object<Locale, string>} [nameLocalizations] The localizations for the option name\n   * @property {string} [nameLocalized] The localized name for this option\n   * @property {string} description The description of the option\n   * @property {Object<Locale, string>} [descriptionLocalizations] The localizations for the option description\n   * @property {string} [descriptionLocalized] The localized description for this option\n   * @property {boolean} [required] Whether the option is required\n   * @property {boolean} [autocomplete] Whether the autocomplete interaction is enabled for a\n   * {@link ApplicationCommandOptionType.String}, {@link ApplicationCommandOptionType.Integer} or\n   * {@link ApplicationCommandOptionType.Number} option\n   * @property {ApplicationCommandOptionChoice[]} [choices] The choices of the option for the user to pick from\n   * @property {ApplicationCommandOption[]} [options] Additional options if this option is a subcommand (group)\n   * @property {ApplicationCommandOptionAllowedChannelTypes[]} [channelTypes] When the option type is channel,\n   * the allowed types of channels that can be selected\n   * @property {number} [minValue] The minimum value for an {@link ApplicationCommandOptionType.Integer} or\n   * {@link ApplicationCommandOptionType.Number} option\n   * @property {number} [maxValue] The maximum value for an {@link ApplicationCommandOptionType.Integer} or\n   * {@link ApplicationCommandOptionType.Number} option\n   * @property {number} [minLength] The minimum length for an {@link ApplicationCommandOptionType.String} option\n   * (maximum of `6000`)\n   * @property {number} [maxLength] The maximum length for an {@link ApplicationCommandOptionType.String} option\n   * (maximum of `6000`)\n   */\n\n  /**\n   * A choice for an application command option.\n   * @typedef {Object} ApplicationCommandOptionChoice\n   * @property {string} name The name of the choice\n   * @property {?string} nameLocalized The localized name of the choice in the provided locale, if any\n   * @property {?Object<string, string>} [nameLocalizations] The localized names for this choice\n   * @property {string|number} value The value of the choice\n   */\n\n  /**\n   * Transforms an {@link ApplicationCommandOptionData} object into something that can be used with the API.\n   * @param {ApplicationCommandOptionData|ApplicationCommandOption} option The option to transform\n   * @param {boolean} [received] Whether this option has been received from Discord\n   * @returns {APIApplicationCommandOption}\n   * @private\n   */\n  static transformOption(option, received) {\n    const channelTypesKey = received ? 'channelTypes' : 'channel_types';\n    const minValueKey = received ? 'minValue' : 'min_value';\n    const maxValueKey = received ? 'maxValue' : 'max_value';\n    const minLengthKey = received ? 'minLength' : 'min_length';\n    const maxLengthKey = received ? 'maxLength' : 'max_length';\n    const nameLocalizationsKey = received ? 'nameLocalizations' : 'name_localizations';\n    const nameLocalizedKey = received ? 'nameLocalized' : 'name_localized';\n    const descriptionLocalizationsKey = received ? 'descriptionLocalizations' : 'description_localizations';\n    const descriptionLocalizedKey = received ? 'descriptionLocalized' : 'description_localized';\n    return {\n      type: option.type,\n      name: option.name,\n      [nameLocalizationsKey]: option.nameLocalizations ?? option.name_localizations,\n      [nameLocalizedKey]: option.nameLocalized ?? option.name_localized,\n      description: option.description,\n      [descriptionLocalizationsKey]: option.descriptionLocalizations ?? option.description_localizations,\n      [descriptionLocalizedKey]: option.descriptionLocalized ?? option.description_localized,\n      required:\n        option.required ??\n        (option.type === ApplicationCommandOptionType.Subcommand ||\n        option.type === ApplicationCommandOptionType.SubcommandGroup\n          ? undefined\n          : false),\n      autocomplete: option.autocomplete,\n      choices: option.choices?.map(choice => ({\n        name: choice.name,\n        [nameLocalizedKey]: choice.nameLocalized ?? choice.name_localized,\n        [nameLocalizationsKey]: choice.nameLocalizations ?? choice.name_localizations,\n        value: choice.value,\n      })),\n      options: option.options?.map(opt => this.transformOption(opt, received)),\n      [channelTypesKey]: option.channelTypes ?? option.channel_types,\n      [minValueKey]: option.minValue ?? option.min_value,\n      [maxValueKey]: option.maxValue ?? option.max_value,\n      [minLengthKey]: option.minLength ?? option.min_length,\n      [maxLengthKey]: option.maxLength ?? option.max_length,\n    };\n  }\n}\n\nmodule.exports = ApplicationCommand;\n\n/* eslint-disable max-len */\n/**\n * @external ApplicationCommandOptionAllowedChannelTypes\n * @see {@link https://discord.js.org/docs/packages/builders/stable/ApplicationCommandOptionAllowedChannelTypes:TypeAlias}\n */\n", "'use strict';\n\nconst { Collection } = require('@discordjs/collection');\nconst { makeURLSearchParams } = require('@discordjs/rest');\nconst { isJSONEncodable } = require('@discordjs/util');\nconst { Routes } = require('discord-api-types/v10');\nconst ApplicationCommandPermissionsManager = require('./ApplicationCommandPermissionsManager');\nconst CachedManager = require('./CachedManager');\nconst { DiscordjsTypeError, ErrorCodes } = require('../errors');\nconst ApplicationCommand = require('../structures/ApplicationCommand');\nconst PermissionsBitField = require('../util/PermissionsBitField');\n\n/**\n * Manages API methods for application commands and stores their cache.\n * @extends {CachedManager}\n */\nclass ApplicationCommandManager extends CachedManager {\n  constructor(client, iterable) {\n    super(client, ApplicationCommand, iterable);\n\n    /**\n     * The manager for permissions of arbitrary commands on arbitrary guilds\n     * @type {ApplicationCommandPermissionsManager}\n     */\n    this.permissions = new ApplicationCommandPermissionsManager(this);\n  }\n\n  /**\n   * The cache of this manager\n   * @type {Collection<Snowflake, ApplicationCommand>}\n   * @name ApplicationCommandManager#cache\n   */\n\n  _add(data, cache, guildId) {\n    return super._add(data, cache, { extras: [this.guild, guildId] });\n  }\n\n  /**\n   * The APIRouter path to the commands\n   * @param {Snowflake} [options.id] The application command's id\n   * @param {Snowflake} [options.guildId] The guild's id to use in the path,\n   * ignored when using a {@link GuildApplicationCommandManager}\n   * @returns {string}\n   * @private\n   */\n  commandPath({ id, guildId } = {}) {\n    if (this.guild ?? guildId) {\n      if (id) {\n        return Routes.applicationGuildCommand(this.client.application.id, this.guild?.id ?? guildId, id);\n      }\n\n      return Routes.applicationGuildCommands(this.client.application.id, this.guild?.id ?? guildId);\n    }\n\n    if (id) {\n      return Routes.applicationCommand(this.client.application.id, id);\n    }\n\n    return Routes.applicationCommands(this.client.application.id);\n  }\n\n  /**\n   * Data that resolves to give an ApplicationCommand object. This can be:\n   * * An ApplicationCommand object\n   * * A Snowflake\n   * @typedef {ApplicationCommand|Snowflake} ApplicationCommandResolvable\n   */\n\n  /**\n   * Data that resolves to the data of an ApplicationCommand\n   * @typedef {ApplicationCommandData|APIApplicationCommand} ApplicationCommandDataResolvable\n   */\n\n  /**\n   * Options used to fetch data from Discord\n   * @typedef {Object} BaseFetchOptions\n   * @property {boolean} [cache=true] Whether to cache the fetched data if it wasn't already\n   * @property {boolean} [force=false] Whether to skip the cache check and request the API\n   */\n\n  /**\n   * Options used to fetch Application Commands from Discord\n   * @typedef {BaseFetchOptions} FetchApplicationCommandOptions\n   * @property {Snowflake} [guildId] The guild's id to fetch commands for, for when the guild is not cached\n   * @property {LocaleString} [locale] The locale to use when fetching this command\n   * @property {boolean} [withLocalizations] Whether to fetch all localization data\n   */\n\n  /**\n   * Obtains one or multiple application commands from Discord, or the cache if it's already available.\n   * @param {Snowflake|FetchApplicationCommandOptions} [id] Options for fetching application command(s)\n   * @param {FetchApplicationCommandOptions} [options] Additional options for this fetch\n   * @returns {Promise<ApplicationCommand|Collection<Snowflake, ApplicationCommand>>}\n   * @example\n   * // Fetch a single command\n   * client.application.commands.fetch('123456789012345678')\n   *   .then(command => console.log(`Fetched command ${command.name}`))\n   *   .catch(console.error);\n   * @example\n   * // Fetch all commands\n   * guild.commands.fetch()\n   *   .then(commands => console.log(`Fetched ${commands.size} commands`))\n   *   .catch(console.error);\n   */\n  async fetch(id, { guildId, cache = true, force = false, locale, withLocalizations } = {}) {\n    if (typeof id === 'object') {\n      ({ guildId, cache = true, locale, withLocalizations } = id);\n    } else if (id) {\n      if (!force) {\n        const existing = this.cache.get(id);\n        if (existing) return existing;\n      }\n      const command = await this.client.rest.get(this.commandPath({ id, guildId }));\n      return this._add(command, cache);\n    }\n\n    const data = await this.client.rest.get(this.commandPath({ guildId }), {\n      headers: {\n        'X-Discord-Locale': locale,\n      },\n      query: makeURLSearchParams({ with_localizations: withLocalizations }),\n    });\n    return data.reduce((coll, command) => coll.set(command.id, this._add(command, cache, guildId)), new Collection());\n  }\n\n  /**\n   * Creates an application command.\n   * @param {ApplicationCommandDataResolvable} command The command\n   * @param {Snowflake} [guildId] The guild's id to create this command in,\n   * ignored when using a {@link GuildApplicationCommandManager}\n   * @returns {Promise<ApplicationCommand>}\n   * @example\n   * // Create a new command\n   * client.application.commands.create({\n   *   name: 'test',\n   *   description: 'A test command',\n   * })\n   *   .then(console.log)\n   *   .catch(console.error);\n   */\n  async create(command, guildId) {\n    const data = await this.client.rest.post(this.commandPath({ guildId }), {\n      body: this.constructor.transformCommand(command),\n    });\n    return this._add(data, true, guildId);\n  }\n\n  /**\n   * Sets all the commands for this application or guild.\n   * @param {ApplicationCommandDataResolvable[]} commands The commands\n   * @param {Snowflake} [guildId] The guild's id to create the commands in,\n   * ignored when using a {@link GuildApplicationCommandManager}\n   * @returns {Promise<Collection<Snowflake, ApplicationCommand>>}\n   * @example\n   * // Set all commands to just this one\n   * client.application.commands.set([\n   *   {\n   *     name: 'test',\n   *     description: 'A test command',\n   *   },\n   * ])\n   *   .then(console.log)\n   *   .catch(console.error);\n   * @example\n   * // Remove all commands\n   * guild.commands.set([])\n   *   .then(console.log)\n   *   .catch(console.error);\n   */\n  async set(commands, guildId) {\n    const data = await this.client.rest.put(this.commandPath({ guildId }), {\n      body: commands.map(command => this.constructor.transformCommand(command)),\n    });\n    return data.reduce(\n      (collection, command) => collection.set(command.id, this._add(command, true, guildId)),\n      new Collection(),\n    );\n  }\n\n  /**\n   * Edits an application command.\n   * @param {ApplicationCommandResolvable} command The command to edit\n   * @param {Partial<ApplicationCommandDataResolvable>} data The data to update the command with\n   * @param {Snowflake} [guildId] The guild's id where the command registered,\n   * ignored when using a {@link GuildApplicationCommandManager}\n   * @returns {Promise<ApplicationCommand>}\n   * @example\n   * // Edit an existing command\n   * client.application.commands.edit('123456789012345678', {\n   *   description: 'New description',\n   * })\n   *   .then(console.log)\n   *   .catch(console.error);\n   */\n  async edit(command, data, guildId) {\n    const id = this.resolveId(command);\n    if (!id) throw new DiscordjsTypeError(ErrorCodes.InvalidType, 'command', 'ApplicationCommandResolvable');\n\n    const patched = await this.client.rest.patch(this.commandPath({ id, guildId }), {\n      body: this.constructor.transformCommand(data),\n    });\n    return this._add(patched, true, guildId);\n  }\n\n  /**\n   * Deletes an application command.\n   * @param {ApplicationCommandResolvable} command The command to delete\n   * @param {Snowflake} [guildId] The guild's id where the command is registered,\n   * ignored when using a {@link GuildApplicationCommandManager}\n   * @returns {Promise<?ApplicationCommand>}\n   * @example\n   * // Delete a command\n   * guild.commands.delete('123456789012345678')\n   *   .then(console.log)\n   *   .catch(console.error);\n   */\n  async delete(command, guildId) {\n    const id = this.resolveId(command);\n    if (!id) throw new DiscordjsTypeError(ErrorCodes.InvalidType, 'command', 'ApplicationCommandResolvable');\n\n    await this.client.rest.delete(this.commandPath({ id, guildId }));\n\n    const cached = this.cache.get(id);\n    this.cache.delete(id);\n    return cached ?? null;\n  }\n\n  /**\n   * Transforms an {@link ApplicationCommandData} object into something that can be used with the API.\n   * @param {ApplicationCommandDataResolvable} command The command to transform\n   * @returns {APIApplicationCommand}\n   * @private\n   */\n  static transformCommand(command) {\n    if (isJSONEncodable(command)) return command.toJSON();\n\n    let default_member_permissions;\n\n    if ('default_member_permissions' in command) {\n      default_member_permissions = command.default_member_permissions\n        ? new PermissionsBitField(BigInt(command.default_member_permissions)).bitfield.toString()\n        : command.default_member_permissions;\n    }\n\n    if ('defaultMemberPermissions' in command) {\n      default_member_permissions =\n        command.defaultMemberPermissions !== null\n          ? new PermissionsBitField(command.defaultMemberPermissions).bitfield.toString()\n          : command.defaultMemberPermissions;\n    }\n\n    return {\n      name: command.name,\n      name_localizations: command.nameLocalizations ?? command.name_localizations,\n      description: command.description,\n      nsfw: command.nsfw,\n      description_localizations: command.descriptionLocalizations ?? command.description_localizations,\n      type: command.type,\n      options: command.options?.map(option => ApplicationCommand.transformOption(option)),\n      default_member_permissions,\n      dm_permission: command.dmPermission ?? command.dm_permission,\n      integration_types: command.integrationTypes ?? command.integration_types,\n      contexts: command.contexts,\n    };\n  }\n}\n\nmodule.exports = ApplicationCommandManager;\n", "'use strict';\n\nconst { Emoji } = require('./Emoji');\n\n/**\n * Represents a custom emoji.\n * @extends {Emoji}\n */\nclass ApplicationEmoji extends Emoji {\n  constructor(client, data, application) {\n    super(client, data);\n\n    /**\n     * The application this emoji originates from\n     * @type {ClientApplication}\n     */\n    this.application = application;\n\n    /**\n     * The user who created this emoji\n     * @type {?User}\n     */\n    this.author = null;\n\n    this.managed = null;\n    this.requiresColons = null;\n\n    this._patch(data);\n  }\n\n  _patch(data) {\n    if ('name' in data) this.name = data.name;\n    if (data.user) this.author = this.client.users._add(data.user);\n\n    if ('managed' in data) {\n      /**\n       * Whether this emoji is managed by an external service\n       * @type {?boolean}\n       */\n      this.managed = data.managed;\n    }\n\n    if ('require_colons' in data) {\n      /**\n       * Whether or not this emoji requires colons surrounding it\n       * @type {?boolean}\n       */\n      this.requiresColons = data.require_colons;\n    }\n  }\n\n  /**\n   * Fetches the author for this emoji\n   * @returns {Promise<User>}\n   */\n  fetchAuthor() {\n    return this.application.emojis.fetchAuthor(this);\n  }\n\n  /**\n   * Data for editing an emoji.\n   * @typedef {Object} ApplicationEmojiEditOptions\n   * @property {string} [name] The name of the emoji\n   */\n\n  /**\n   * Edits the emoji.\n   * @param {ApplicationEmojiEditOptions} options The options to provide\n   * @returns {Promise<ApplicationEmoji>}\n   * @example\n   * // Edit an emoji\n   * emoji.edit({ name: 'newemoji' })\n   *   .then(emoji => console.log(`Edited emoji ${emoji}`))\n   *   .catch(console.error);\n   */\n  edit(options) {\n    return this.application.emojis.edit(this.id, options);\n  }\n\n  /**\n   * Sets the name of the emoji.\n   * @param {string} name The new name for the emoji\n   * @returns {Promise<ApplicationEmoji>}\n   */\n  setName(name) {\n    return this.edit({ name });\n  }\n\n  /**\n   * Deletes the emoji.\n   * @returns {Promise<ApplicationEmoji>}\n   */\n  async delete() {\n    await this.application.emojis.delete(this.id);\n    return this;\n  }\n\n  /**\n   * Whether this emoji is the same as another one.\n   * @param {ApplicationEmoji|APIEmoji} other The emoji to compare it to\n   * @returns {boolean}\n   */\n  equals(other) {\n    if (other instanceof ApplicationEmoji) {\n      return (\n        other.animated === this.animated &&\n        other.id === this.id &&\n        other.name === this.name &&\n        other.managed === this.managed &&\n        other.requiresColons === this.requiresColons\n      );\n    }\n\n    return other.id === this.id && other.name === this.name;\n  }\n}\n\nmodule.exports = ApplicationEmoji;\n", "'use strict';\n\nconst { Collection } = require('@discordjs/collection');\nconst { Routes } = require('discord-api-types/v10');\nconst CachedManager = require('./CachedManager');\nconst { DiscordjsTypeError, ErrorCodes } = require('../errors');\nconst ApplicationEmoji = require('../structures/ApplicationEmoji');\nconst { resolveImage } = require('../util/DataResolver');\n\n/**\n * Manages API methods for ApplicationEmojis and stores their cache.\n * @extends {CachedManager}\n */\nclass ApplicationEmojiManager extends CachedManager {\n  constructor(application, iterable) {\n    super(application.client, ApplicationEmoji, iterable);\n\n    /**\n     * The application this manager belongs to\n     * @type {ClientApplication}\n     */\n    this.application = application;\n  }\n\n  _add(data, cache) {\n    return super._add(data, cache, { extras: [this.application] });\n  }\n\n  /**\n   * Options used for creating an emoji of the application\n   * @typedef {Object} ApplicationEmojiCreateOptions\n   * @property {BufferResolvable|Base64Resolvable} attachment The image for the emoji\n   * @property {string} name The name for the emoji\n   */\n\n  /**\n   * Creates a new custom emoji of the application.\n   * @param {ApplicationEmojiCreateOptions} options Options for creating the emoji\n   * @returns {Promise<Emoji>} The created emoji\n   * @example\n   * // Create a new emoji from a URL\n   * application.emojis.create({ attachment: 'https://i.imgur.com/w3duR07.png', name: 'rip' })\n   *   .then(emoji => console.log(`Created new emoji with name ${emoji.name}!`))\n   *   .catch(console.error);\n   * @example\n   * // Create a new emoji from a file on your computer\n   * application.emojis.create({ attachment: './memes/banana.png', name: 'banana' })\n   *   .then(emoji => console.log(`Created new emoji with name ${emoji.name}!`))\n   *   .catch(console.error);\n   */\n  async create({ attachment, name }) {\n    attachment = await resolveImage(attachment);\n    if (!attachment) throw new DiscordjsTypeError(ErrorCodes.ReqResourceType);\n\n    const body = { image: attachment, name };\n\n    const emoji = await this.client.rest.post(Routes.applicationEmojis(this.application.id), { body });\n    return this._add(emoji);\n  }\n\n  /**\n   * Obtains one or more emojis from Discord, or the emoji cache if they're already available.\n   * @param {Snowflake} [id] The emoji's id\n   * @param {BaseFetchOptions} [options] Additional options for this fetch\n   * @returns {Promise<ApplicationEmoji|Collection<Snowflake, ApplicationEmoji>>}\n   * @example\n   * // Fetch all emojis from the application\n   * application.emojis.fetch()\n   *   .then(emojis => console.log(`There are ${emojis.size} emojis.`))\n   *   .catch(console.error);\n   * @example\n   * // Fetch a single emoji\n   * application.emojis.fetch('222078108977594368')\n   *   .then(emoji => console.log(`The emoji name is: ${emoji.name}`))\n   *   .catch(console.error);\n   */\n  async fetch(id, { cache = true, force = false } = {}) {\n    if (id) {\n      if (!force) {\n        const existing = this.cache.get(id);\n        if (existing) return existing;\n      }\n      const emoji = await this.client.rest.get(Routes.applicationEmoji(this.application.id, id));\n      return this._add(emoji, cache);\n    }\n\n    const { items: data } = await this.client.rest.get(Routes.applicationEmojis(this.application.id));\n    const emojis = new Collection();\n    for (const emoji of data) emojis.set(emoji.id, this._add(emoji, cache));\n    return emojis;\n  }\n\n  /**\n   * Deletes an emoji.\n   * @param {EmojiResolvable} emoji The Emoji resolvable to delete\n   * @returns {Promise<void>}\n   */\n  async delete(emoji) {\n    const id = this.resolveId(emoji);\n    if (!id) throw new DiscordjsTypeError(ErrorCodes.InvalidType, 'emoji', 'EmojiResolvable', true);\n    await this.client.rest.delete(Routes.applicationEmoji(this.application.id, id));\n  }\n\n  /**\n   * Edits an emoji.\n   * @param {EmojiResolvable} emoji The Emoji resolvable to edit\n   * @param {ApplicationEmojiEditOptions} options The options to provide\n   * @returns {Promise<ApplicationEmoji>}\n   */\n  async edit(emoji, options) {\n    const id = this.resolveId(emoji);\n    if (!id) throw new DiscordjsTypeError(ErrorCodes.InvalidType, 'emoji', 'EmojiResolvable', true);\n\n    const newData = await this.client.rest.patch(Routes.applicationEmoji(this.application.id, id), {\n      body: {\n        name: options.name,\n      },\n    });\n    const existing = this.cache.get(id);\n    if (existing) {\n      existing._patch(newData);\n      return existing;\n    }\n    return this._add(newData);\n  }\n\n  /**\n   * Fetches the author for this emoji\n   * @param {EmojiResolvable} emoji The emoji to fetch the author of\n   * @returns {Promise<User>}\n   */\n  async fetchAuthor(emoji) {\n    const id = this.resolveId(emoji);\n    if (!id) throw new DiscordjsTypeError(ErrorCodes.InvalidType, 'emoji', 'EmojiResolvable', true);\n\n    const data = await this.client.rest.get(Routes.applicationEmoji(this.application.id, id));\n\n    return this._add(data).author;\n  }\n}\n\nmodule.exports = ApplicationEmojiManager;\n", "'use strict';\n\nconst Base = require('./Base');\n\n/**\n * Represents an Entitlement\n * @extends {Base}\n */\nclass Entitlement extends Base {\n  constructor(client, data) {\n    super(client);\n\n    /**\n     * The id of the entitlement\n     * @type {Snowflake}\n     */\n    this.id = data.id;\n\n    this._patch(data);\n  }\n\n  _patch(data) {\n    if ('sku_id' in data) {\n      /**\n       * The id of the associated SKU\n       * @type {Snowflake}\n       */\n      this.skuId = data.sku_id;\n    }\n\n    if ('user_id' in data) {\n      /**\n       * The id of the user that is granted access to this entitlement's SKU\n       * @type {Snowflake}\n       */\n      this.userId = data.user_id;\n    }\n\n    if ('guild_id' in data) {\n      /**\n       * The id of the guild that is granted access to this entitlement's SKU\n       * @type {?Snowflake}\n       */\n      this.guildId = data.guild_id;\n    } else {\n      this.guildId ??= null;\n    }\n\n    if ('application_id' in data) {\n      /**\n       * The id of the parent application\n       * @type {Snowflake}\n       */\n      this.applicationId = data.application_id;\n    }\n\n    if ('type' in data) {\n      /**\n       * The type of this entitlement\n       * @type {EntitlementType}\n       */\n      this.type = data.type;\n    }\n\n    if ('deleted' in data) {\n      /**\n       * Whether this entitlement was deleted\n       * @type {boolean}\n       */\n      this.deleted = data.deleted;\n    }\n\n    if ('starts_at' in data) {\n      /**\n       * The timestamp at which this entitlement is valid\n       * <info>This is only `null` for test entitlements</info>\n       * @type {?number}\n       */\n      this.startsTimestamp = Date.parse(data.starts_at);\n    } else {\n      this.startsTimestamp ??= null;\n    }\n\n    if ('ends_at' in data) {\n      /**\n       * The timestamp at which this entitlement is no longer valid\n       * <info>This is only `null` for test entitlements</info>\n       * @type {?number}\n       */\n      this.endsTimestamp = Date.parse(data.ends_at);\n    } else {\n      this.endsTimestamp ??= null;\n    }\n\n    if ('consumed' in data) {\n      /**\n       * Whether this entitlement has been consumed\n       * @type {boolean}\n       */\n      this.consumed = data.consumed;\n    } else {\n      this.consumed ??= false;\n    }\n  }\n\n  /**\n   * The guild that is granted access to this entitlement's SKU\n   * @type {?Guild}\n   */\n  get guild() {\n    if (!this.guildId) return null;\n    return this.client.guilds.cache.get(this.guildId) ?? null;\n  }\n\n  /**\n   * The start date at which this entitlement is valid\n   * <info>This is only `null` for test entitlements</info>\n   * @type {?Date}\n   */\n  get startsAt() {\n    return this.startsTimestamp && new Date(this.startsTimestamp);\n  }\n\n  /**\n   * The end date at which this entitlement is no longer valid\n   * <info>This is only `null` for test entitlements</info>\n   * @type {?Date}\n   */\n  get endsAt() {\n    return this.endsTimestamp && new Date(this.endsTimestamp);\n  }\n\n  /**\n   * Indicates whether this entitlement is active\n   * @returns {boolean}\n   */\n  isActive() {\n    return !this.deleted && (!this.endsTimestamp || this.endsTimestamp > Date.now());\n  }\n\n  /**\n   * Indicates whether this entitlement is a test entitlement\n   * @returns {boolean}\n   */\n  isTest() {\n    return this.startsTimestamp === null;\n  }\n\n  /**\n   * Indicates whether this entitlement is a user subscription\n   * @returns {boolean}\n   */\n  isUserSubscription() {\n    return this.guildId === null;\n  }\n\n  /**\n   * Indicates whether this entitlement is a guild subscription\n   * @returns {boolean}\n   */\n  isGuildSubscription() {\n    return this.guildId !== null;\n  }\n\n  /**\n   * Fetches the user that is granted access to this entitlement's SKU\n   * @returns {Promise<User>}\n   */\n  fetchUser() {\n    return this.client.users.fetch(this.userId);\n  }\n\n  /**\n   * Marks this entitlement as consumed\n   * <info>Only available for One-Time Purchase consumable SKUs.</info>\n   * @returns {Promise<void>}\n   */\n  async consume() {\n    await this.client.application.entitlements.consume(this.id);\n  }\n}\n\nexports.Entitlement = Entitlement;\n", "'use strict';\n\nconst { Collection } = require('@discordjs/collection');\nconst { makeURLSearchParams } = require('@discordjs/rest');\nconst { Routes, EntitlementOwnerType } = require('discord-api-types/v10');\nconst CachedManager = require('./CachedManager');\nconst { ErrorCodes, DiscordjsTypeError } = require('../errors/index');\nconst { Entitlement } = require('../structures/Entitlement');\nconst { resolveSKUId } = require('../util/Util');\n\n/**\n * Manages API methods for entitlements and stores their cache.\n * @extends {CachedManager}\n */\nclass EntitlementManager extends CachedManager {\n  constructor(client, iterable) {\n    super(client, Entitlement, iterable);\n  }\n\n  /**\n   * The cache of this manager\n   * @type {Collection<Snowflake, Entitlement>}\n   * @name EntitlementManager#cache\n   */\n\n  /**\n   * Data that resolves to give an Entitlement object. This can be:\n   * * An Entitlement object\n   * * A Snowflake\n   * @typedef {Entitlement|Snowflake} EntitlementResolvable\n   */\n\n  /**\n   * Data that resolves to give a SKU object. This can be:\n   * * A SKU object\n   * * A Snowflake\n   * @typedef {SKU|Snowflake} SKUResolvable\n   */\n\n  /**\n   * Options used to fetch entitlements\n   * @typedef {Object} FetchEntitlementsOptions\n   * @property {number} [limit] The maximum number of entitlements to fetch\n   * @property {GuildResolvable} [guild] The guild to fetch entitlements for\n   * @property {UserResolvable} [user] The user to fetch entitlements for\n   * @property {SKUResolvable[]} [skus] The SKUs to fetch entitlements for\n   * @property {boolean} [excludeEnded] Whether to exclude ended entitlements\n   * @property {boolean} [cache=true] Whether to cache the fetched entitlements\n   * @property {Snowflake} [before] Consider only entitlements before this entitlement id\n   * @property {Snowflake} [after] Consider only entitlements after this entitlement id\n   * <warn>If both `before` and `after` are provided, only `before` is respected</warn>\n   */\n\n  /**\n   * Fetches entitlements for this application\n   * @param {FetchEntitlementsOptions} [options={}] Options for fetching the entitlements\n   * @returns {Promise<Collection<Snowflake, Entitlement>>}\n   */\n  async fetch({ limit, guild, user, skus, excludeEnded, cache = true, before, after } = {}) {\n    const query = makeURLSearchParams({\n      limit,\n      guild_id: guild && this.client.guilds.resolveId(guild),\n      user_id: user && this.client.users.resolveId(user),\n      sku_ids: skus?.map(sku => resolveSKUId(sku)).join(','),\n      exclude_ended: excludeEnded,\n      before,\n      after,\n    });\n\n    const entitlements = await this.client.rest.get(Routes.entitlements(this.client.application.id), { query });\n    return entitlements.reduce(\n      (coll, entitlement) => coll.set(entitlement.id, this._add(entitlement, cache)),\n      new Collection(),\n    );\n  }\n\n  /**\n   * Options used to create a test entitlement\n   * <info>Either `guild` or `user` must be provided, but not both</info>\n   * @typedef {Object} EntitlementCreateOptions\n   * @property {SKUResolvable} sku The id of the SKU to create the entitlement for\n   * @property {GuildResolvable} [guild] The guild to create the entitlement for\n   * @property {UserResolvable} [user] The user to create the entitlement for\n   */\n\n  /**\n   * Creates a test entitlement\n   * @param {EntitlementCreateOptions} options Options for creating the test entitlement\n   * @returns {Promise<Entitlement>}\n   */\n  async createTest({ sku, guild, user }) {\n    const skuId = resolveSKUId(sku);\n    if (!skuId) throw new DiscordjsTypeError(ErrorCodes.InvalidType, 'sku', 'SKUResolvable');\n\n    if ((guild && user) || (!guild && !user)) {\n      throw new DiscordjsTypeError(ErrorCodes.EntitlementCreateInvalidOwner);\n    }\n\n    const resolved = guild ? this.client.guilds.resolveId(guild) : this.client.users.resolveId(user);\n    if (!resolved) {\n      const name = guild ? 'guild' : 'user';\n      const type = guild ? 'GuildResolvable' : 'UserResolvable';\n      throw new DiscordjsTypeError(ErrorCodes.InvalidType, name, type);\n    }\n\n    const entitlement = await this.client.rest.post(Routes.entitlements(this.client.application.id), {\n      body: {\n        sku_id: skuId,\n        owner_id: resolved,\n        owner_type: guild ? EntitlementOwnerType.Guild : EntitlementOwnerType.User,\n      },\n    });\n    return new Entitlement(this.client, entitlement);\n  }\n\n  /**\n   * Deletes a test entitlement\n   * @param {EntitlementResolvable} entitlement The entitlement to delete\n   * @returns {Promise<void>}\n   */\n  async deleteTest(entitlement) {\n    const resolved = this.resolveId(entitlement);\n    if (!resolved) throw new DiscordjsTypeError(ErrorCodes.InvalidType, 'entitlement', 'EntitlementResolvable');\n\n    await this.client.rest.delete(Routes.entitlement(this.client.application.id, resolved));\n  }\n\n  /**\n   * Marks an entitlement as consumed\n   * <info>Only available for One-Time Purchase consumable SKUs.</info>\n   * @param {Snowflake} entitlementId The id of the entitlement to consume\n   * @returns {Promise<void>}\n   */\n  async consume(entitlementId) {\n    await this.client.rest.post(Routes.consumeEntitlement(this.client.application.id, entitlementId));\n  }\n}\n\nexports.EntitlementManager = EntitlementManager;\n", "'use strict';\n\nconst { ApplicationFlags } = require('discord-api-types/v10');\nconst BitField = require('./BitField');\n\n/**\n * Data structure that makes it easy to interact with a {@link ClientApplication#flags} bitfield.\n * @extends {BitField}\n */\nclass ApplicationFlagsBitField extends BitField {\n  /**\n   * Numeric application flags. All available properties:\n   * @type {ApplicationFlags}\n   * @memberof ApplicationFlagsBitField\n   */\n  static Flags = ApplicationFlags;\n}\n\n/**\n * @name ApplicationFlagsBitField\n * @kind constructor\n * @memberof ApplicationFlagsBitField\n * @param {BitFieldResolvable} [bits=0] Bit(s) to read from\n */\n\n/**\n * Bitfield of the packed bits\n * @type {number}\n * @name ApplicationFlagsBitField#bitfield\n */\n\n/**\n * Data that can be resolved to give an application flag bit field. This can be:\n * * A string (see {@link ApplicationFlagsBitField.Flags})\n * * An application flag\n * * An instance of ApplicationFlagsBitField\n * * An Array of ApplicationFlagsResolvable\n * @typedef {string|number|ApplicationFlagsBitField|ApplicationFlagsResolvable[]} ApplicationFlagsResolvable\n */\n\nmodule.exports = ApplicationFlagsBitField;\n", "'use strict';\n\nconst { Collection } = require('@discordjs/collection');\nconst { Routes } = require('discord-api-types/v10');\nconst { ApplicationRoleConnectionMetadata } = require('./ApplicationRoleConnectionMetadata');\nconst { SKU } = require('./SKU');\nconst Team = require('./Team');\nconst Application = require('./interfaces/Application');\nconst ApplicationCommandManager = require('../managers/ApplicationCommandManager');\nconst ApplicationEmojiManager = require('../managers/ApplicationEmojiManager');\nconst { EntitlementManager } = require('../managers/EntitlementManager');\nconst ApplicationFlagsBitField = require('../util/ApplicationFlagsBitField');\nconst { resolveImage } = require('../util/DataResolver');\nconst PermissionsBitField = require('../util/PermissionsBitField');\n\n/**\n * @typedef {Object} ClientApplicationInstallParams\n * @property {OAuth2Scopes[]} scopes Scopes that will be set upon adding this application\n * @property {Readonly<PermissionsBitField>} permissions Permissions that will be requested for the integrated role\n */\n\n/**\n * Represents a client application.\n * @extends {Application}\n */\nclass ClientApplication extends Application {\n  constructor(client, data) {\n    super(client, data);\n\n    /**\n     * The application command manager for this application\n     * @type {ApplicationCommandManager}\n     */\n    this.commands = new ApplicationCommandManager(this.client);\n\n    /**\n     * The application emoji manager for this application\n     * @type {ApplicationEmojiManager}\n     */\n    this.emojis = new ApplicationEmojiManager(this);\n\n    /**\n     * The entitlement manager for this application\n     * @type {EntitlementManager}\n     */\n    this.entitlements = new EntitlementManager(this.client);\n  }\n\n  _patch(data) {\n    super._patch(data);\n\n    /**\n     * The tags this application has (max of 5)\n     * @type {string[]}\n     */\n    this.tags = data.tags ?? [];\n\n    if ('install_params' in data) {\n      /**\n       * Settings for this application's default in-app authorization\n       * @type {?ClientApplicationInstallParams}\n       */\n      this.installParams = {\n        scopes: data.install_params.scopes,\n        permissions: new PermissionsBitField(data.install_params.permissions).freeze(),\n      };\n    } else {\n      this.installParams ??= null;\n    }\n\n    /**\n     * OAuth2 installation parameters.\n     * @typedef {Object} IntegrationTypesConfigurationParameters\n     * @property {OAuth2Scopes[]} scopes Scopes that will be set upon adding this application\n     * @property {Readonly<PermissionsBitField>} permissions Permissions that will be requested for the integrated role\n     */\n\n    /**\n     * The application's supported installation context data.\n     * @typedef {Object} IntegrationTypesConfigurationContext\n     * @property {?IntegrationTypesConfigurationParameters} oauth2InstallParams\n     * Scopes and permissions regarding the installation context\n     */\n\n    /**\n     * The application's supported installation context data.\n     * @typedef {Object} IntegrationTypesConfiguration\n     * @property {IntegrationTypesConfigurationContext} [0] Scopes and permissions\n     * regarding the guild-installation context\n     * @property {IntegrationTypesConfigurationContext} [1] Scopes and permissions\n     * regarding the user-installation context\n     */\n\n    if ('integration_types_config' in data) {\n      /**\n       * Default scopes and permissions for each supported installation context.\n       * The keys are stringified variants of {@link ApplicationIntegrationType}.\n       * @type {?IntegrationTypesConfiguration}\n       */\n      this.integrationTypesConfig = Object.fromEntries(\n        Object.entries(data.integration_types_config).map(([key, config]) => {\n          let oauth2InstallParams = null;\n          if (config.oauth2_install_params) {\n            oauth2InstallParams = {\n              scopes: config.oauth2_install_params.scopes,\n              permissions: new PermissionsBitField(config.oauth2_install_params.permissions).freeze(),\n            };\n          }\n\n          const context = {\n            oauth2InstallParams,\n          };\n\n          return [key, context];\n        }),\n      );\n    } else {\n      this.integrationTypesConfig ??= null;\n    }\n\n    if ('custom_install_url' in data) {\n      /**\n       * This application's custom installation URL\n       * @type {?string}\n       */\n      this.customInstallURL = data.custom_install_url;\n    } else {\n      this.customInstallURL = null;\n    }\n\n    if ('flags' in data) {\n      /**\n       * The flags this application has\n       * @type {ApplicationFlagsBitField}\n       */\n      this.flags = new ApplicationFlagsBitField(data.flags).freeze();\n    }\n\n    if ('approximate_guild_count' in data) {\n      /**\n       * An approximate amount of guilds this application is in.\n       * @type {?number}\n       */\n      this.approximateGuildCount = data.approximate_guild_count;\n    } else {\n      this.approximateGuildCount ??= null;\n    }\n\n    if ('approximate_user_install_count' in data) {\n      /**\n       * An approximate amount of users that have installed this application.\n       * @type {?number}\n       */\n      this.approximateUserInstallCount = data.approximate_user_install_count;\n    } else {\n      this.approximateUserInstallCount ??= null;\n    }\n\n    if ('guild_id' in data) {\n      /**\n       * The id of the guild associated with this application.\n       * @type {?Snowflake}\n       */\n      this.guildId = data.guild_id;\n    } else {\n      this.guildId ??= null;\n    }\n\n    if ('cover_image' in data) {\n      /**\n       * The hash of the application's cover image\n       * @type {?string}\n       */\n      this.cover = data.cover_image;\n    } else {\n      this.cover ??= null;\n    }\n\n    if ('rpc_origins' in data) {\n      /**\n       * The application's RPC origins, if enabled\n       * @type {string[]}\n       */\n      this.rpcOrigins = data.rpc_origins;\n    } else {\n      this.rpcOrigins ??= [];\n    }\n\n    if ('bot_require_code_grant' in data) {\n      /**\n       * If this application's bot requires a code grant when using the OAuth2 flow\n       * @type {?boolean}\n       */\n      this.botRequireCodeGrant = data.bot_require_code_grant;\n    } else {\n      this.botRequireCodeGrant ??= null;\n    }\n\n    if ('bot' in data) {\n      /**\n       * The bot associated with this application.\n       * @type {?User}\n       */\n      this.bot = this.client.users._add(data.bot);\n    } else {\n      this.bot ??= null;\n    }\n\n    if ('bot_public' in data) {\n      /**\n       * If this application's bot is public\n       * @type {?boolean}\n       */\n      this.botPublic = data.bot_public;\n    } else {\n      this.botPublic ??= null;\n    }\n\n    if ('interactions_endpoint_url' in data) {\n      /**\n       * This application's interaction endpoint URL.\n       * @type {?string}\n       */\n      this.interactionsEndpointURL = data.interactions_endpoint_url;\n    } else {\n      this.interactionsEndpointURL ??= null;\n    }\n\n    if ('role_connections_verification_url' in data) {\n      /**\n       * This application's role connection verification entry point URL\n       * @type {?string}\n       */\n      this.roleConnectionsVerificationURL = data.role_connections_verification_url;\n    } else {\n      this.roleConnectionsVerificationURL ??= null;\n    }\n\n    /**\n     * The owner of this OAuth application\n     * @type {?(User|Team)}\n     */\n    this.owner = data.team\n      ? new Team(this.client, data.team)\n      : data.owner\n        ? this.client.users._add(data.owner)\n        : (this.owner ?? null);\n  }\n\n  /**\n   * The guild associated with this application.\n   * @type {?Guild}\n   * @readonly\n   */\n  get guild() {\n    return this.client.guilds.cache.get(this.guildId) ?? null;\n  }\n\n  /**\n   * Whether this application is partial\n   * @type {boolean}\n   * @readonly\n   */\n  get partial() {\n    return !this.name;\n  }\n\n  /**\n   * Options used for editing an application.\n   * @typedef {Object} ClientApplicationEditOptions\n   * @property {string} [customInstallURL] The application's custom installation URL\n   * @property {string} [description] The application's description\n   * @property {string} [roleConnectionsVerificationURL] The application's role connection verification URL\n   * @property {ClientApplicationInstallParams} [installParams]\n   * Settings for the application's default in-app authorization\n   * @property {ApplicationFlagsResolvable} [flags] The flags for the application\n   * @property {?(BufferResolvable|Base64Resolvable)} [icon] The application's icon\n   * @property {?(BufferResolvable|Base64Resolvable)} [coverImage] The application's cover image\n   * @property {string} [interactionsEndpointURL] The application's interaction endpoint URL\n   * @property {string[]} [tags] The application's tags\n   */\n\n  /**\n   * Edits this application.\n   * @param {ClientApplicationEditOptions} [options] The options for editing this application\n   * @returns {Promise<ClientApplication>}\n   */\n  async edit({\n    customInstallURL,\n    description,\n    roleConnectionsVerificationURL,\n    installParams,\n    flags,\n    icon,\n    coverImage,\n    interactionsEndpointURL,\n    tags,\n  } = {}) {\n    const data = await this.client.rest.patch(Routes.currentApplication(), {\n      body: {\n        custom_install_url: customInstallURL,\n        description,\n        role_connections_verification_url: roleConnectionsVerificationURL,\n        install_params: installParams,\n        flags: flags === undefined ? undefined : ApplicationFlagsBitField.resolve(flags),\n        icon: icon && (await resolveImage(icon)),\n        cover_image: coverImage && (await resolveImage(coverImage)),\n        interactions_endpoint_url: interactionsEndpointURL,\n        tags,\n      },\n    });\n\n    this._patch(data);\n    return this;\n  }\n\n  /**\n   * Obtains this application from Discord.\n   * @returns {Promise<ClientApplication>}\n   */\n  async fetch() {\n    const data = await this.client.rest.get(Routes.currentApplication());\n    this._patch(data);\n    return this;\n  }\n\n  /**\n   * Gets this application's role connection metadata records\n   * @returns {Promise<ApplicationRoleConnectionMetadata[]>}\n   */\n  async fetchRoleConnectionMetadataRecords() {\n    const metadata = await this.client.rest.get(Routes.applicationRoleConnectionMetadata(this.client.user.id));\n    return metadata.map(data => new ApplicationRoleConnectionMetadata(data));\n  }\n\n  /**\n   * Data for creating or editing an application role connection metadata.\n   * @typedef {Object} ApplicationRoleConnectionMetadataEditOptions\n   * @property {string} name The name of the metadata field\n   * @property {?Object<Locale, string>} [nameLocalizations] The name localizations for the metadata field\n   * @property {string} description The description of the metadata field\n   * @property {?Object<Locale, string>} [descriptionLocalizations] The description localizations for the metadata field\n   * @property {string} key The dictionary key of the metadata field\n   * @property {ApplicationRoleConnectionMetadataType} type The type of the metadata field\n   */\n\n  /**\n   * Updates this application's role connection metadata records\n   * @param {ApplicationRoleConnectionMetadataEditOptions[]} records The new role connection metadata records\n   * @returns {Promise<ApplicationRoleConnectionMetadata[]>}\n   */\n  async editRoleConnectionMetadataRecords(records) {\n    const newRecords = await this.client.rest.put(Routes.applicationRoleConnectionMetadata(this.client.user.id), {\n      body: records.map(record => ({\n        type: record.type,\n        key: record.key,\n        name: record.name,\n        name_localizations: record.nameLocalizations,\n        description: record.description,\n        description_localizations: record.descriptionLocalizations,\n      })),\n    });\n\n    return newRecords.map(data => new ApplicationRoleConnectionMetadata(data));\n  }\n\n  /**\n   * Gets this application's SKUs\n   * @returns {Promise<Collection<Snowflake, SKU>>}\n   */\n  async fetchSKUs() {\n    const skus = await this.client.rest.get(Routes.skus(this.id));\n    return skus.reduce((coll, sku) => coll.set(sku.id, new SKU(this.client, sku)), new Collection());\n  }\n}\n\nmodule.exports = ClientApplication;\n", "'use strict';\n\nconst { embedLength } = require('@discordjs/builders');\nconst isEqual = require('fast-deep-equal');\n\n/**\n * Represents an embed.\n */\nclass Embed {\n  constructor(data) {\n    /**\n     * The API embed data.\n     * @type {APIEmbed}\n     * @readonly\n     */\n    this.data = { ...data };\n  }\n\n  /**\n   * An array of fields of this embed.\n   * @type {Array<APIEmbedField>}\n   * @readonly\n   */\n  get fields() {\n    return this.data.fields ?? [];\n  }\n\n  /**\n   * The title of this embed.\n   * @type {?string}\n   * @readonly\n   */\n  get title() {\n    return this.data.title ?? null;\n  }\n\n  /**\n   * The description of this embed.\n   * @type {?string}\n   * @readonly\n   */\n  get description() {\n    return this.data.description ?? null;\n  }\n\n  /**\n   * The URL of this embed.\n   * @type {?string}\n   * @readonly\n   */\n  get url() {\n    return this.data.url ?? null;\n  }\n\n  /**\n   * The color of this embed.\n   * @type {?number}\n   * @readonly\n   */\n  get color() {\n    return this.data.color ?? null;\n  }\n\n  /**\n   * The timestamp of this embed. This is in an ISO 8601 format.\n   * @type {?string}\n   * @readonly\n   */\n  get timestamp() {\n    return this.data.timestamp ?? null;\n  }\n\n  /**\n   * @typedef {Object} EmbedAssetData\n   * @property {?string} url The URL of the image\n   * @property {?string} proxyURL The proxy URL of the image\n   * @property {?number} height The height of the image\n   * @property {?number} width The width of the image\n   */\n\n  /**\n   * The thumbnail of this embed.\n   * @type {?EmbedAssetData}\n   * @readonly\n   */\n  get thumbnail() {\n    if (!this.data.thumbnail) return null;\n    return {\n      url: this.data.thumbnail.url,\n      proxyURL: this.data.thumbnail.proxy_url,\n      height: this.data.thumbnail.height,\n      width: this.data.thumbnail.width,\n    };\n  }\n\n  /**\n   * The image of this embed.\n   * @type {?EmbedAssetData}\n   * @readonly\n   */\n  get image() {\n    if (!this.data.image) return null;\n    return {\n      url: this.data.image.url,\n      proxyURL: this.data.image.proxy_url,\n      height: this.data.image.height,\n      width: this.data.image.width,\n    };\n  }\n\n  /**\n   * The video of this embed.\n   * @type {?EmbedAssetData}\n   * @readonly\n   */\n  get video() {\n    if (!this.data.video) return null;\n    return {\n      url: this.data.video.url,\n      proxyURL: this.data.video.proxy_url,\n      height: this.data.video.height,\n      width: this.data.video.width,\n    };\n  }\n\n  /**\n   * @typedef {Object} EmbedAuthorData\n   * @property {string} name The name of the author\n   * @property {?string} url The URL of the author\n   * @property {?string} iconURL The icon URL of the author\n   * @property {?string} proxyIconURL The proxy icon URL of the author\n   */\n\n  /**\n   * The author of this embed.\n   * @type {?EmbedAuthorData}\n   * @readonly\n   */\n  get author() {\n    if (!this.data.author) return null;\n    return {\n      name: this.data.author.name,\n      url: this.data.author.url,\n      iconURL: this.data.author.icon_url,\n      proxyIconURL: this.data.author.proxy_icon_url,\n    };\n  }\n\n  /**\n   * The provider of this embed.\n   * @type {?APIEmbedProvider}\n   * @readonly\n   */\n  get provider() {\n    return this.data.provider ?? null;\n  }\n\n  /**\n   * @typedef {Object} EmbedFooterData\n   * @property {string} text The text of the footer\n   * @property {?string} iconURL The URL of the icon\n   * @property {?string} proxyIconURL The proxy URL of the icon\n   */\n\n  /**\n   * The footer of this embed.\n   * @type {?EmbedFooterData}\n   * @readonly\n   */\n  get footer() {\n    if (!this.data.footer) return null;\n    return {\n      text: this.data.footer.text,\n      iconURL: this.data.footer.icon_url,\n      proxyIconURL: this.data.footer.proxy_icon_url,\n    };\n  }\n\n  /**\n   * The accumulated length for the embed title, description, fields, footer text, and author name.\n   * @type {number}\n   * @readonly\n   */\n  get length() {\n    return embedLength(this.data);\n  }\n\n  /**\n   * The hex color of this embed.\n   * @type {?string}\n   * @readonly\n   */\n  get hexColor() {\n    return typeof this.data.color === 'number'\n      ? `#${this.data.color.toString(16).padStart(6, '0')}`\n      : (this.data.color ?? null);\n  }\n\n  /**\n   * Returns the API-compatible JSON for this embed.\n   * @returns {APIEmbed}\n   */\n  toJSON() {\n    return { ...this.data };\n  }\n\n  /**\n   * Whether the given embeds are equal.\n   * @param {Embed|APIEmbed} other The embed to compare against\n   * @returns {boolean}\n   */\n  equals(other) {\n    if (other instanceof Embed) {\n      return isEqual(this.data, other.data);\n    }\n\n    return (\n      this.author?.iconURL === other.author?.icon_url &&\n      this.author?.name === other.author?.name &&\n      this.author?.url === other.author?.url &&\n      this.color === (other.color ?? null) &&\n      this.description === (other.description ?? null) &&\n      this.footer?.iconURL === other.footer?.icon_url &&\n      this.footer?.text === other.footer?.text &&\n      this.image?.url === other.image?.url &&\n      this.thumbnail?.url === other.thumbnail?.url &&\n      (this.timestamp && Date.parse(this.timestamp)) === (other.timestamp ? Date.parse(other.timestamp) : null) &&\n      this.title === (other.title ?? null) &&\n      this.url === (other.url ?? null) &&\n      this.video?.url === other.video?.url &&\n      isEqual(this.fields, other.fields?.map(field => ({ ...field, inline: field.inline ?? false })) ?? []) &&\n      isEqual(this.provider, other.provider ?? null)\n    );\n  }\n}\n\nmodule.exports = Embed;\n", "'use strict';\n\nconst { Collection } = require('@discordjs/collection');\nconst { FormattingPatterns } = require('discord-api-types/v10');\nconst { flatten } = require('../util/Util');\n\n/**\n * Keeps track of mentions in a {@link Message}.\n */\nclass MessageMentions {\n  /**\n   * A regular expression that matches `@everyone` and `@here`.\n   * The `mention` group property is present on the `exec` result of this expression.\n   * @type {RegExp}\n   * @memberof MessageMentions\n   */\n  static EveryonePattern = /@(?<mention>everyone|here)/;\n\n  /**\n   * A regular expression that matches user mentions like `<@81440962496172032>`.\n   * The `id` group property is present on the `exec` result of this expression.\n   * @type {RegExp}\n   * @memberof MessageMentions\n   */\n  static UsersPattern = FormattingPatterns.UserWithOptionalNickname;\n\n  /**\n   * A regular expression that matches role mentions like `<@&297577916114403338>`.\n   * The `id` group property is present on the `exec` result of this expression.\n   * @type {RegExp}\n   * @memberof MessageMentions\n   */\n  static RolesPattern = FormattingPatterns.Role;\n\n  /**\n   * A regular expression that matches channel mentions like `<#222079895583457280>`.\n   * The `id` group property is present on the `exec` result of this expression.\n   * @type {RegExp}\n   * @memberof MessageMentions\n   */\n  static ChannelsPattern = FormattingPatterns.Channel;\n\n  /**\n   * A global regular expression variant of {@link MessageMentions.ChannelsPattern}.\n   * @type {RegExp}\n   * @memberof MessageMentions\n   * @private\n   */\n  static GlobalChannelsPattern = new RegExp(this.ChannelsPattern.source, 'g');\n\n  /**\n   * A global regular expression variant of {@link MessageMentions.UsersPattern}.\n   * @type {RegExp}\n   * @memberof MessageMentions\n   * @private\n   */\n  static GlobalUsersPattern = new RegExp(this.UsersPattern.source, 'g');\n\n  constructor(message, users, roles, everyone, crosspostedChannels, repliedUser) {\n    /**\n     * The client the message is from\n     * @type {Client}\n     * @readonly\n     */\n    Object.defineProperty(this, 'client', { value: message.client });\n\n    /**\n     * The guild the message is in\n     * @type {?Guild}\n     * @readonly\n     */\n    Object.defineProperty(this, 'guild', { value: message.guild });\n\n    /**\n     * The initial message content\n     * @type {string}\n     * @readonly\n     * @private\n     */\n    Object.defineProperty(this, '_content', { value: message.content });\n\n    /**\n     * Whether `@everyone` or `@here` were mentioned\n     * @type {boolean}\n     */\n    this.everyone = Boolean(everyone);\n\n    if (users) {\n      if (users instanceof Collection) {\n        /**\n         * Any users that were mentioned\n         * <info>Order as received from the API, not as they appear in the message content</info>\n         * @type {Collection<Snowflake, User>}\n         */\n        this.users = new Collection(users);\n      } else {\n        this.users = new Collection();\n        for (const mention of users) {\n          if (mention.member && message.guild) {\n            message.guild.members._add(Object.assign(mention.member, { user: mention }));\n          }\n          const user = message.client.users._add(mention);\n          this.users.set(user.id, user);\n        }\n      }\n    } else {\n      this.users = new Collection();\n    }\n\n    if (roles instanceof Collection) {\n      /**\n       * Any roles that were mentioned\n       * <info>Order as received from the API, not as they appear in the message content</info>\n       * @type {Collection<Snowflake, Role>}\n       */\n      this.roles = new Collection(roles);\n    } else if (roles) {\n      this.roles = new Collection();\n      const guild = message.guild;\n      if (guild) {\n        for (const mention of roles) {\n          const role = guild.roles.cache.get(mention);\n          if (role) this.roles.set(role.id, role);\n        }\n      }\n    } else {\n      this.roles = new Collection();\n    }\n\n    /**\n     * Cached members for {@link MessageMentions#members}\n     * @type {?Collection<Snowflake, GuildMember>}\n     * @private\n     */\n    this._members = null;\n\n    /**\n     * Cached channels for {@link MessageMentions#channels}\n     * @type {?Collection<Snowflake, BaseChannel>}\n     * @private\n     */\n    this._channels = null;\n\n    /**\n     * Cached users for {@link MessageMentions#parsedUsers}\n     * @type {?Collection<Snowflake, User>}\n     * @private\n     */\n    this._parsedUsers = null;\n\n    /**\n     * Crossposted channel data.\n     * @typedef {Object} CrosspostedChannel\n     * @property {Snowflake} channelId The mentioned channel's id\n     * @property {Snowflake} guildId The id of the guild that has the channel\n     * @property {ChannelType} type The channel's type\n     * @property {string} name The channel's name\n     */\n\n    if (crosspostedChannels) {\n      if (crosspostedChannels instanceof Collection) {\n        /**\n         * A collection of crossposted channels\n         * <info>Order as received from the API, not as they appear in the message content</info>\n         * @type {Collection<Snowflake, CrosspostedChannel>}\n         */\n        this.crosspostedChannels = new Collection(crosspostedChannels);\n      } else {\n        this.crosspostedChannels = new Collection();\n        for (const crosspostedChannel of crosspostedChannels) {\n          this.crosspostedChannels.set(crosspostedChannel.id, {\n            channelId: crosspostedChannel.id,\n            guildId: crosspostedChannel.guild_id,\n            type: crosspostedChannel.type,\n            name: crosspostedChannel.name,\n          });\n        }\n      }\n    } else {\n      this.crosspostedChannels = new Collection();\n    }\n\n    /**\n     * The author of the message that this message is a reply to\n     * @type {?User}\n     */\n    this.repliedUser = repliedUser ? this.client.users._add(repliedUser) : null;\n  }\n\n  /**\n   * Any members that were mentioned (only in {@link Guild}s)\n   * <info>Order as received from the API, not as they appear in the message content</info>\n   * @type {?Collection<Snowflake, GuildMember>}\n   * @readonly\n   */\n  get members() {\n    if (this._members) return this._members;\n    if (!this.guild) return null;\n    this._members = new Collection();\n    this.users.forEach(user => {\n      const member = this.guild.members.resolve(user);\n      if (member) this._members.set(member.user.id, member);\n    });\n    return this._members;\n  }\n\n  /**\n   * Any channels that were mentioned\n   * <info>Order as they appear first in the message content</info>\n   * @type {Collection<Snowflake, BaseChannel>}\n   * @readonly\n   */\n  get channels() {\n    if (this._channels) return this._channels;\n    this._channels = new Collection();\n    let matches;\n\n    while ((matches = this.constructor.GlobalChannelsPattern.exec(this._content)) !== null) {\n      const channel = this.client.channels.cache.get(matches.groups.id);\n      if (channel) this._channels.set(channel.id, channel);\n    }\n\n    return this._channels;\n  }\n\n  /**\n   * Any user mentions that were included in the message content\n   * <info>Order as they appear first in the message content</info>\n   * @type {Collection<Snowflake, User>}\n   * @readonly\n   */\n  get parsedUsers() {\n    if (this._parsedUsers) return this._parsedUsers;\n    this._parsedUsers = new Collection();\n    let matches;\n    while ((matches = this.constructor.GlobalUsersPattern.exec(this._content)) !== null) {\n      const user = this.client.users.cache.get(matches[1]);\n      if (user) this._parsedUsers.set(user.id, user);\n    }\n    return this._parsedUsers;\n  }\n\n  /**\n   * Options used to check for a mention.\n   * @typedef {Object} MessageMentionsHasOptions\n   * @property {boolean} [ignoreDirect=false] Whether to ignore direct mentions to the item\n   * @property {boolean} [ignoreRoles=false] Whether to ignore role mentions to a guild member\n   * @property {boolean} [ignoreRepliedUser=false] Whether to ignore replied user mention to an user\n   * @property {boolean} [ignoreEveryone=false] Whether to ignore `@everyone`/`@here` mentions\n   */\n\n  /**\n   * Checks if a user, guild member, thread member, role, or channel is mentioned.\n   * Takes into account user mentions, role mentions, channel mentions,\n   * replied user mention, and `@everyone`/`@here` mentions.\n   * @param {UserResolvable|RoleResolvable|ChannelResolvable} data The User/Role/Channel to check for\n   * @param {MessageMentionsHasOptions} [options] The options for the check\n   * @returns {boolean}\n   */\n  has(data, { ignoreDirect = false, ignoreRoles = false, ignoreRepliedUser = false, ignoreEveryone = false } = {}) {\n    const user = this.client.users.resolve(data);\n\n    if (!ignoreEveryone && user && this.everyone) return true;\n\n    const userWasRepliedTo = user && this.repliedUser?.id === user.id;\n\n    if (!ignoreRepliedUser && userWasRepliedTo && this.users.has(user.id)) return true;\n\n    if (!ignoreDirect) {\n      if (user && (!ignoreRepliedUser || this.parsedUsers.has(user.id)) && this.users.has(user.id)) return true;\n\n      const role = this.guild?.roles.resolve(data);\n      if (role && this.roles.has(role.id)) return true;\n\n      const channel = this.client.channels.resolve(data);\n      if (channel && this.channels.has(channel.id)) return true;\n    }\n\n    if (!ignoreRoles) {\n      const member = this.guild?.members.resolve(data);\n      if (member) {\n        for (const mentionedRole of this.roles.values()) if (member.roles.cache.has(mentionedRole.id)) return true;\n      }\n    }\n\n    return false;\n  }\n\n  toJSON() {\n    return flatten(this, {\n      members: true,\n      channels: true,\n    });\n  }\n}\n\nmodule.exports = MessageMentions;\n", "'use strict';\n\nconst Base = require('./Base');\nconst { Emoji } = require('./Emoji');\n\n/**\n * Represents an answer to a {@link Poll}\n * @extends {Base}\n */\nclass PollAnswer extends Base {\n  constructor(client, data, poll) {\n    super(client);\n\n    /**\n     * The {@link Poll} this answer is part of\n     * @name PollAnswer#poll\n     * @type {Poll}\n     * @readonly\n     */\n    Object.defineProperty(this, 'poll', { value: poll });\n\n    /**\n     * The id of this answer\n     * @type {number}\n     */\n    this.id = data.answer_id;\n\n    /**\n     * The text of this answer\n     * @type {?string}\n     */\n    this.text = data.poll_media.text ?? null;\n\n    /**\n     * The raw emoji of this answer\n     * @name PollAnswer#_emoji\n     * @type {?APIPartialEmoji}\n     * @private\n     */\n    Object.defineProperty(this, '_emoji', { value: data.poll_media.emoji ?? null });\n\n    this._patch(data);\n  }\n\n  _patch(data) {\n    // This `count` field comes from `poll.results.answer_counts`\n    if ('count' in data) {\n      /**\n       * The amount of votes this answer has\n       * @type {number}\n       */\n      this.voteCount = data.count;\n    } else {\n      this.voteCount ??= 0;\n    }\n  }\n\n  /**\n   * The emoji of this answer\n   * @type {?(GuildEmoji|Emoji)}\n   */\n  get emoji() {\n    if (!this._emoji || (!this._emoji.id && !this._emoji.name)) return null;\n    return this.client.emojis.resolve(this._emoji.id) ?? new Emoji(this.client, this._emoji);\n  }\n\n  /**\n   * Options used for fetching voters of a poll answer.\n   * @typedef {Object} BaseFetchPollAnswerVotersOptions\n   * @property {number} [limit] The maximum number of voters to fetch\n   * @property {Snowflake} [after] The user id to fetch voters after\n   */\n\n  /**\n   * Fetches the users that voted for this answer.\n   * @param {BaseFetchPollAnswerVotersOptions} [options={}] The options for fetching voters\n   * @returns {Promise<Collection<Snowflake, User>>}\n   */\n  fetchVoters({ after, limit } = {}) {\n    return this.poll.message.channel.messages.fetchPollAnswerVoters({\n      messageId: this.poll.message.id,\n      answerId: this.id,\n      after,\n      limit,\n    });\n  }\n}\n\nexports.PollAnswer = PollAnswer;\n", "'use strict';\n\nconst { Collection } = require('@discordjs/collection');\nconst Base = require('./Base');\nconst { PollAnswer } = require('./PollAnswer');\nconst { DiscordjsError } = require('../errors/DJSError');\nconst { ErrorCodes } = require('../errors/index');\n\n/**\n * Represents a Poll\n * @extends {Base}\n */\nclass Poll extends Base {\n  constructor(client, data, message) {\n    super(client);\n\n    /**\n     * The message that started this poll\n     * @name Poll#message\n     * @type {Message}\n     * @readonly\n     */\n\n    Object.defineProperty(this, 'message', { value: message });\n\n    /**\n     * The media for a poll's question\n     * @typedef {Object} PollQuestionMedia\n     * @property {string} text The text of this question\n     */\n\n    /**\n     * The media for this poll's question\n     * @type {PollQuestionMedia}\n     */\n    this.question = {\n      text: data.question.text,\n    };\n\n    /**\n     * The answers of this poll\n     * @type {Collection<number, PollAnswer>}\n     */\n    this.answers = data.answers.reduce(\n      (acc, answer) => acc.set(answer.answer_id, new PollAnswer(this.client, answer, this)),\n      new Collection(),\n    );\n\n    /**\n     * The timestamp when this poll expires\n     * @type {number}\n     */\n    this.expiresTimestamp = Date.parse(data.expiry);\n\n    /**\n     * Whether this poll allows multiple answers\n     * @type {boolean}\n     */\n    this.allowMultiselect = data.allow_multiselect;\n\n    /**\n     * The layout type of this poll\n     * @type {PollLayoutType}\n     */\n    this.layoutType = data.layout_type;\n\n    this._patch(data);\n  }\n\n  _patch(data) {\n    if (data.results) {\n      /**\n       * Whether this poll's results have been precisely counted\n       * @type {boolean}\n       */\n      this.resultsFinalized = data.results.is_finalized;\n\n      for (const answerResult of data.results.answer_counts) {\n        const answer = this.answers.get(answerResult.id);\n        answer?._patch(answerResult);\n      }\n    } else {\n      this.resultsFinalized ??= false;\n    }\n  }\n\n  /**\n   * The date when this poll expires\n   * @type {Date}\n   * @readonly\n   */\n  get expiresAt() {\n    return new Date(this.expiresTimestamp);\n  }\n\n  /**\n   * Ends this poll.\n   * @returns {Promise<Message>}\n   */\n  end() {\n    if (Date.now() > this.expiresTimestamp) {\n      return Promise.reject(new DiscordjsError(ErrorCodes.PollAlreadyExpired));\n    }\n\n    return this.message.channel.messages.endPoll(this.message.id);\n  }\n}\n\nexports.Poll = Poll;\n", "'use strict';\n\nconst { Collection } = require('@discordjs/collection');\nconst Collector = require('./interfaces/Collector');\nconst Events = require('../util/Events');\n\n/**\n * @typedef {CollectorOptions} ReactionCollectorOptions\n * @property {number} max The maximum total amount of reactions to collect\n * @property {number} maxEmojis The maximum number of emojis to collect\n * @property {number} maxUsers The maximum number of users to react\n */\n\n/**\n * Collects reactions on messages.\n * Will automatically stop if the message ({@link Client#event:messageDelete messageDelete} or\n * {@link Client#event:messageDeleteBulk messageDeleteBulk}),\n * channel ({@link Client#event:channelDelete channelDelete}),\n * thread ({@link Client#event:threadDelete threadDelete}), or\n * guild ({@link Client#event:guildDelete guildDelete}) is deleted.\n * @extends {Collector}\n */\nclass ReactionCollector extends Collector {\n  /**\n   * @param {Message} message The message upon which to collect reactions\n   * @param {ReactionCollectorOptions} [options={}] The options to apply to this collector\n   */\n  constructor(message, options = {}) {\n    super(message.client, options);\n\n    /**\n     * The message upon which to collect reactions\n     * @type {Message}\n     */\n    this.message = message;\n\n    /**\n     * The users that have reacted to this message\n     * @type {Collection}\n     */\n    this.users = new Collection();\n\n    /**\n     * The total number of reactions collected\n     * @type {number}\n     */\n    this.total = 0;\n\n    this.empty = this.empty.bind(this);\n    this._handleChannelDeletion = this._handleChannelDeletion.bind(this);\n    this._handleThreadDeletion = this._handleThreadDeletion.bind(this);\n    this._handleGuildDeletion = this._handleGuildDeletion.bind(this);\n    this._handleMessageDeletion = this._handleMessageDeletion.bind(this);\n\n    const bulkDeleteListener = messages => {\n      if (messages.has(this.message.id)) this.stop('messageDelete');\n    };\n\n    this.client.incrementMaxListeners();\n    this.client.on(Events.MessageReactionAdd, this.handleCollect);\n    this.client.on(Events.MessageReactionRemove, this.handleDispose);\n    this.client.on(Events.MessageReactionRemoveAll, this.empty);\n    this.client.on(Events.MessageDelete, this._handleMessageDeletion);\n    this.client.on(Events.MessageBulkDelete, bulkDeleteListener);\n    this.client.on(Events.ChannelDelete, this._handleChannelDeletion);\n    this.client.on(Events.ThreadDelete, this._handleThreadDeletion);\n    this.client.on(Events.GuildDelete, this._handleGuildDeletion);\n\n    this.once('end', () => {\n      this.client.removeListener(Events.MessageReactionAdd, this.handleCollect);\n      this.client.removeListener(Events.MessageReactionRemove, this.handleDispose);\n      this.client.removeListener(Events.MessageReactionRemoveAll, this.empty);\n      this.client.removeListener(Events.MessageDelete, this._handleMessageDeletion);\n      this.client.removeListener(Events.MessageBulkDelete, bulkDeleteListener);\n      this.client.removeListener(Events.ChannelDelete, this._handleChannelDeletion);\n      this.client.removeListener(Events.ThreadDelete, this._handleThreadDeletion);\n      this.client.removeListener(Events.GuildDelete, this._handleGuildDeletion);\n      this.client.decrementMaxListeners();\n    });\n\n    this.on('collect', (reaction, user) => {\n      /**\n       * Emitted whenever a reaction is newly created on a message. Will emit only when a new reaction is\n       * added to the message, as opposed to {@link Collector#event:collect} which will\n       * be emitted even when a reaction has already been added to the message.\n       * @event ReactionCollector#create\n       * @param {MessageReaction} reaction The reaction that was added\n       * @param {User} user The user that added the reaction\n       */\n      if (reaction.count === 1) {\n        this.emit('create', reaction, user);\n      }\n      this.total++;\n      this.users.set(user.id, user);\n    });\n\n    this.on('remove', (_reaction, user) => {\n      this.total--;\n      if (!this.collected.some(reaction => reaction.users.cache.has(user.id))) this.users.delete(user.id);\n    });\n  }\n\n  /**\n   * Handles an incoming reaction for possible collection.\n   * @param {MessageReaction} reaction The reaction to possibly collect\n   * @param {User} user The user that added the reaction\n   * @returns {?(Snowflake|string)}\n   * @private\n   */\n  collect(reaction) {\n    /**\n     * Emitted whenever a reaction is collected.\n     * @event ReactionCollector#collect\n     * @param {MessageReaction} reaction The reaction that was collected\n     * @param {User} user The user that added the reaction\n     */\n    if (reaction.message.id !== this.message.id) return null;\n\n    return ReactionCollector.key(reaction);\n  }\n\n  /**\n   * Handles a reaction deletion for possible disposal.\n   * @param {MessageReaction} reaction The reaction to possibly dispose of\n   * @param {User} user The user that removed the reaction\n   * @returns {?(Snowflake|string)}\n   */\n  dispose(reaction, user) {\n    /**\n     * Emitted when the reaction had all the users removed and the `dispose` option is set to true.\n     * @event ReactionCollector#dispose\n     * @param {MessageReaction} reaction The reaction that was disposed of\n     * @param {User} user The user that removed the reaction\n     */\n    if (reaction.message.id !== this.message.id) return null;\n\n    /**\n     * Emitted when the reaction had one user removed and the `dispose` option is set to true.\n     * @event ReactionCollector#remove\n     * @param {MessageReaction} reaction The reaction that was removed\n     * @param {User} user The user that removed the reaction\n     */\n    if (this.collected.has(ReactionCollector.key(reaction)) && this.users.has(user.id)) {\n      this.emit('remove', reaction, user);\n    }\n    return reaction.count ? null : ReactionCollector.key(reaction);\n  }\n\n  /**\n   * Empties this reaction collector.\n   */\n  empty() {\n    this.total = 0;\n    this.collected.clear();\n    this.users.clear();\n    this.checkEnd();\n  }\n\n  /**\n   * The reason this collector has ended with, or null if it hasn't ended yet\n   * @type {?string}\n   * @readonly\n   */\n  get endReason() {\n    if (this.options.max && this.total >= this.options.max) return 'limit';\n    if (this.options.maxEmojis && this.collected.size >= this.options.maxEmojis) return 'emojiLimit';\n    if (this.options.maxUsers && this.users.size >= this.options.maxUsers) return 'userLimit';\n    return super.endReason;\n  }\n\n  /**\n   * Handles checking if the message has been deleted, and if so, stops the collector with the reason 'messageDelete'.\n   * @private\n   * @param {Message} message The message that was deleted\n   * @returns {void}\n   */\n  _handleMessageDeletion(message) {\n    if (message.id === this.message.id) {\n      this.stop('messageDelete');\n    }\n  }\n\n  /**\n   * Handles checking if the channel has been deleted, and if so, stops the collector with the reason 'channelDelete'.\n   * @private\n   * @param {GuildChannel} channel The channel that was deleted\n   * @returns {void}\n   */\n  _handleChannelDeletion(channel) {\n    if (channel.id === this.message.channelId || channel.threads?.cache.has(this.message.channelId)) {\n      this.stop('channelDelete');\n    }\n  }\n\n  /**\n   * Handles checking if the thread has been deleted, and if so, stops the collector with the reason 'threadDelete'.\n   * @private\n   * @param {ThreadChannel} thread The thread that was deleted\n   * @returns {void}\n   */\n  _handleThreadDeletion(thread) {\n    if (thread.id === this.message.channelId) {\n      this.stop('threadDelete');\n    }\n  }\n\n  /**\n   * Handles checking if the guild has been deleted, and if so, stops the collector with the reason 'guildDelete'.\n   * @private\n   * @param {Guild} guild The guild that was deleted\n   * @returns {void}\n   */\n  _handleGuildDeletion(guild) {\n    if (guild.id === this.message.guild?.id) {\n      this.stop('guildDelete');\n    }\n  }\n\n  /**\n   * Gets the collector key for a reaction.\n   * @param {MessageReaction} reaction The message reaction to get the key for\n   * @returns {Snowflake|string}\n   */\n  static key(reaction) {\n    return reaction.emoji.id ?? reaction.emoji.name;\n  }\n}\n\nmodule.exports = ReactionCollector;\n", "'use strict';\n\nconst { DiscordSnowflake } = require('@sapphire/snowflake');\nconst { Routes } = require('discord-api-types/v10');\nconst Base = require('./Base');\nconst { DiscordjsError, ErrorCodes } = require('../errors');\nconst { StickerFormatExtensionMap } = require('../util/Constants');\n\n/**\n * Represents a Sticker.\n * @extends {Base}\n */\nclass Sticker extends Base {\n  constructor(client, sticker) {\n    super(client);\n\n    this._patch(sticker);\n  }\n\n  _patch(sticker) {\n    /**\n     * The sticker's id\n     * @type {Snowflake}\n     */\n    this.id = sticker.id;\n\n    if ('description' in sticker) {\n      /**\n       * The description of the sticker\n       * @type {?string}\n       */\n      this.description = sticker.description;\n    } else {\n      this.description ??= null;\n    }\n\n    if ('type' in sticker) {\n      /**\n       * The type of the sticker\n       * @type {?StickerType}\n       */\n      this.type = sticker.type;\n    } else {\n      this.type ??= null;\n    }\n\n    if ('format_type' in sticker) {\n      /**\n       * The format of the sticker\n       * @type {StickerFormatType}\n       */\n      this.format = sticker.format_type;\n    }\n\n    if ('name' in sticker) {\n      /**\n       * The name of the sticker\n       * @type {string}\n       */\n      this.name = sticker.name;\n    }\n\n    if ('pack_id' in sticker) {\n      /**\n       * The id of the pack the sticker is from, for standard stickers\n       * @type {?Snowflake}\n       */\n      this.packId = sticker.pack_id;\n    } else {\n      this.packId ??= null;\n    }\n\n    if ('tags' in sticker) {\n      /**\n       * Autocomplete/suggestions for the sticker\n       * @type {?string}\n       */\n      this.tags = sticker.tags;\n    } else {\n      this.tags ??= null;\n    }\n\n    if ('available' in sticker) {\n      /**\n       * Whether or not the guild sticker is available\n       * @type {?boolean}\n       */\n      this.available = sticker.available;\n    } else {\n      this.available ??= null;\n    }\n\n    if ('guild_id' in sticker) {\n      /**\n       * The id of the guild that owns this sticker\n       * @type {?Snowflake}\n       */\n      this.guildId = sticker.guild_id;\n    } else {\n      this.guildId ??= null;\n    }\n\n    if ('user' in sticker) {\n      /**\n       * The user that uploaded the guild sticker\n       * @type {?User}\n       */\n      this.user = this.client.users._add(sticker.user);\n    } else {\n      this.user ??= null;\n    }\n\n    if ('sort_value' in sticker) {\n      /**\n       * The standard sticker's sort order within its pack\n       * @type {?number}\n       */\n      this.sortValue = sticker.sort_value;\n    } else {\n      this.sortValue ??= null;\n    }\n  }\n\n  /**\n   * The timestamp the sticker was created at\n   * @type {number}\n   * @readonly\n   */\n  get createdTimestamp() {\n    return DiscordSnowflake.timestampFrom(this.id);\n  }\n\n  /**\n   * The time the sticker was created at\n   * @type {Date}\n   * @readonly\n   */\n  get createdAt() {\n    return new Date(this.createdTimestamp);\n  }\n\n  /**\n   * Whether this sticker is partial\n   * @type {boolean}\n   * @readonly\n   */\n  get partial() {\n    return !this.type;\n  }\n\n  /**\n   * The guild that owns this sticker\n   * @type {?Guild}\n   * @readonly\n   */\n  get guild() {\n    return this.client.guilds.resolve(this.guildId);\n  }\n\n  /**\n   * A link to the sticker\n   * <info>If the sticker's format is {@link StickerFormatType.Lottie}, it returns\n   * the URL of the Lottie JSON file.</info>\n   * @type {string}\n   * @readonly\n   */\n  get url() {\n    return this.client.rest.cdn.sticker(this.id, StickerFormatExtensionMap[this.format]);\n  }\n\n  /**\n   * Fetches this sticker.\n   * @returns {Promise<Sticker>}\n   */\n  async fetch() {\n    const data = await this.client.rest.get(Routes.sticker(this.id));\n    this._patch(data);\n    return this;\n  }\n\n  /**\n   * Fetches the pack that contains this sticker.\n   * @returns {Promise<?StickerPack>} The sticker pack or `null` if this sticker does not belong to one.\n   */\n  fetchPack() {\n    if (!this.packId) return Promise.resolve(null);\n    return this.client.fetchStickerPacks({ packId: this.packId });\n  }\n\n  /**\n   * Fetches the user who uploaded this sticker, if this is a guild sticker.\n   * @returns {Promise<?User>}\n   */\n  async fetchUser() {\n    if (this.partial) await this.fetch();\n    if (!this.guildId) throw new DiscordjsError(ErrorCodes.NotGuildSticker);\n    return this.guild.stickers.fetchUser(this);\n  }\n\n  /**\n   * Data for editing a sticker.\n   * @typedef {Object} GuildStickerEditOptions\n   * @property {string} [name] The name of the sticker\n   * @property {?string} [description] The description of the sticker\n   * @property {string} [tags] The Discord name of a unicode emoji representing the sticker's expression\n   * @property {string} [reason] Reason for editing this sticker\n   */\n\n  /**\n   * Edits the sticker.\n   * @param {GuildStickerEditOptions} options The options to provide\n   * @returns {Promise<Sticker>}\n   * @example\n   * // Update the name of a sticker\n   * sticker.edit({ name: 'new name' })\n   *   .then(sticker => console.log(`Updated the name of the sticker to ${sticker.name}`))\n   *   .catch(console.error);\n   */\n  edit(options) {\n    return this.guild.stickers.edit(this, options);\n  }\n\n  /**\n   * Deletes the sticker.\n   * @returns {Promise<Sticker>}\n   * @param {string} [reason] Reason for deleting this sticker\n   * @example\n   * // Delete a message\n   * sticker.delete()\n   *   .then(sticker => console.log(`Deleted sticker ${sticker.name}`))\n   *   .catch(console.error);\n   */\n  async delete(reason) {\n    await this.guild.stickers.delete(this, reason);\n    return this;\n  }\n\n  /**\n   * Whether this sticker is the same as another one.\n   * @param {Sticker|APISticker} other The sticker to compare it to\n   * @returns {boolean}\n   */\n  equals(other) {\n    if (other instanceof Sticker) {\n      return (\n        other.id === this.id &&\n        other.description === this.description &&\n        other.type === this.type &&\n        other.format === this.format &&\n        other.name === this.name &&\n        other.packId === this.packId &&\n        other.tags === this.tags &&\n        other.available === this.available &&\n        other.guildId === this.guildId &&\n        other.sortValue === this.sortValue\n      );\n    } else {\n      return (\n        other.id === this.id &&\n        other.description === this.description &&\n        other.name === this.name &&\n        other.tags === this.tags\n      );\n    }\n  }\n}\n\nexports.Sticker = Sticker;\n", "'use strict';\n\nconst { Emoji } = require('./Emoji');\n\n/**\n * Parent class for {@link GuildEmoji} and {@link GuildPreviewEmoji}.\n * @extends {Emoji}\n * @abstract\n */\nclass BaseGuildEmoji extends Emoji {\n  constructor(client, data, guild) {\n    super(client, data);\n\n    /**\n     * The guild this emoji is a part of\n     * @type {Guild|GuildPreview}\n     */\n    this.guild = guild;\n\n    this.requiresColons = null;\n    this.managed = null;\n    this.available = null;\n\n    this._patch(data);\n  }\n\n  _patch(data) {\n    if ('name' in data) this.name = data.name;\n\n    if ('require_colons' in data) {\n      /**\n       * Whether or not this emoji requires colons surrounding it\n       * @type {?boolean}\n       */\n      this.requiresColons = data.require_colons;\n    }\n\n    if ('managed' in data) {\n      /**\n       * Whether this emoji is managed by an external service\n       * @type {?boolean}\n       */\n      this.managed = data.managed;\n    }\n\n    if ('available' in data) {\n      /**\n       * Whether this emoji is available\n       * @type {?boolean}\n       */\n      this.available = data.available;\n    }\n  }\n}\n\n/**\n * Returns a URL for the emoji.\n * @method imageURL\n * @memberof BaseGuildEmoji\n * @instance\n * @param {BaseImageURLOptions} [options] Options for the image URL\n * @returns {string}\n */\n\n/**\n * Returns a URL for the emoji.\n * @name url\n * @memberof BaseGuildEmoji\n * @instance\n * @type {string}\n * @readonly\n * @deprecated Use {@link BaseGuildEmoji#imageURL} instead.\n */\n\nmodule.exports = BaseGuildEmoji;\n", "'use strict';\n\nconst { Collection } = require('@discordjs/collection');\nconst DataManager = require('./DataManager');\nconst { DiscordjsTypeError, ErrorCodes } = require('../errors');\nconst { Role } = require('../structures/Role');\n\n/**\n * Manages API methods for roles belonging to emojis and stores their cache.\n * @extends {DataManager}\n */\nclass GuildEmojiRoleManager extends DataManager {\n  constructor(emoji) {\n    super(emoji.client, Role);\n\n    /**\n     * The emoji belonging to this manager\n     * @type {GuildEmoji}\n     */\n    this.emoji = emoji;\n    /**\n     * The guild belonging to this manager\n     * @type {Guild}\n     */\n    this.guild = emoji.guild;\n  }\n\n  /**\n   * The cache of roles belonging to this emoji\n   * @type {Collection<Snowflake, Role>}\n   * @readonly\n   */\n  get cache() {\n    return this.guild.roles.cache.filter(role => this.emoji._roles.includes(role.id));\n  }\n\n  /**\n   * Adds a role (or multiple roles) to the list of roles that can use this emoji.\n   * @param {RoleResolvable|RoleResolvable[]|Collection<Snowflake, Role>} roleOrRoles The role or roles to add\n   * @returns {Promise<GuildEmoji>}\n   */\n  add(roleOrRoles) {\n    if (!Array.isArray(roleOrRoles) && !(roleOrRoles instanceof Collection)) roleOrRoles = [roleOrRoles];\n\n    const resolvedRoles = [];\n    for (const role of roleOrRoles.values()) {\n      const resolvedRole = this.guild.roles.resolveId(role);\n      if (!resolvedRole) {\n        return Promise.reject(new DiscordjsTypeError(ErrorCodes.InvalidElement, 'Array or Collection', 'roles', role));\n      }\n      resolvedRoles.push(resolvedRole);\n    }\n\n    const newRoles = [...new Set(resolvedRoles.concat(...this.cache.keys()))];\n    return this.set(newRoles);\n  }\n\n  /**\n   * Removes a role (or multiple roles) from the list of roles that can use this emoji.\n   * @param {RoleResolvable|RoleResolvable[]|Collection<Snowflake, Role>} roleOrRoles The role or roles to remove\n   * @returns {Promise<GuildEmoji>}\n   */\n  remove(roleOrRoles) {\n    if (!Array.isArray(roleOrRoles) && !(roleOrRoles instanceof Collection)) roleOrRoles = [roleOrRoles];\n\n    const resolvedRoleIds = [];\n    for (const role of roleOrRoles.values()) {\n      const roleId = this.guild.roles.resolveId(role);\n      if (!roleId) {\n        return Promise.reject(new DiscordjsTypeError(ErrorCodes.InvalidElement, 'Array or Collection', 'roles', role));\n      }\n      resolvedRoleIds.push(roleId);\n    }\n\n    const newRoles = [...this.cache.keys()].filter(id => !resolvedRoleIds.includes(id));\n    return this.set(newRoles);\n  }\n\n  /**\n   * Sets the role(s) that can use this emoji.\n   * @param {Collection<Snowflake, Role>|RoleResolvable[]} roles The roles or role ids to apply\n   * @returns {Promise<GuildEmoji>}\n   * @example\n   * // Set the emoji's roles to a single role\n   * guildEmoji.roles.set(['391156570408615936'])\n   *   .then(console.log)\n   *   .catch(console.error);\n   * @example\n   * // Remove all roles from an emoji\n   * guildEmoji.roles.set([])\n   *    .then(console.log)\n   *    .catch(console.error);\n   */\n  set(roles) {\n    return this.emoji.edit({ roles });\n  }\n\n  clone() {\n    const clone = new this.constructor(this.emoji);\n    clone._patch([...this.cache.keys()]);\n    return clone;\n  }\n\n  /**\n   * Patches the roles for this manager's cache\n   * @param {Snowflake[]} roles The new roles\n   * @private\n   */\n  _patch(roles) {\n    this.emoji._roles = roles;\n  }\n\n  valueOf() {\n    return this.cache;\n  }\n}\n\nmodule.exports = GuildEmojiRoleManager;\n", "'use strict';\n\nconst { PermissionFlagsBits } = require('discord-api-types/v10');\nconst BaseGuildEmoji = require('./BaseGuildEmoji');\nconst { DiscordjsError, ErrorCodes } = require('../errors');\nconst GuildEmojiRoleManager = require('../managers/GuildEmojiRoleManager');\n\n/**\n * Represents a custom emoji.\n * @extends {BaseGuildEmoji}\n */\nclass GuildEmoji extends BaseGuildEmoji {\n  constructor(client, data, guild) {\n    super(client, data, guild);\n\n    /**\n     * The user who created this emoji\n     * @type {?User}\n     */\n    this.author = null;\n\n    /**\n     * Array of role ids this emoji is active for\n     * @name GuildEmoji#_roles\n     * @type {Snowflake[]}\n     * @private\n     */\n    Object.defineProperty(this, '_roles', { value: [], writable: true });\n\n    this._patch(data);\n  }\n\n  /**\n   * The guild this emoji is part of\n   * @type {Guild}\n   * @name GuildEmoji#guild\n   */\n\n  _clone() {\n    const clone = super._clone();\n    clone._roles = this._roles.slice();\n    return clone;\n  }\n\n  _patch(data) {\n    super._patch(data);\n\n    if (data.user) this.author = this.client.users._add(data.user);\n    if (data.roles) this._roles = data.roles;\n  }\n\n  /**\n   * Whether the emoji is deletable by the client user\n   * @type {boolean}\n   * @readonly\n   */\n  get deletable() {\n    if (!this.guild.members.me) throw new DiscordjsError(ErrorCodes.GuildUncachedMe);\n    return !this.managed && this.guild.members.me.permissions.has(PermissionFlagsBits.ManageGuildExpressions);\n  }\n\n  /**\n   * A manager for roles this emoji is active for.\n   * @type {GuildEmojiRoleManager}\n   * @readonly\n   */\n  get roles() {\n    return new GuildEmojiRoleManager(this);\n  }\n\n  /**\n   * Fetches the author for this emoji\n   * @returns {Promise<User>}\n   */\n  fetchAuthor() {\n    return this.guild.emojis.fetchAuthor(this);\n  }\n\n  /**\n   * Data for editing an emoji.\n   * @typedef {Object} GuildEmojiEditOptions\n   * @property {string} [name] The name of the emoji\n   * @property {Collection<Snowflake, Role>|RoleResolvable[]} [roles] Roles to restrict emoji to\n   * @property {string} [reason] Reason for editing this emoji\n   */\n\n  /**\n   * Edits the emoji.\n   * @param {GuildEmojiEditOptions} options The options to provide\n   * @returns {Promise<GuildEmoji>}\n   * @example\n   * // Edit an emoji\n   * emoji.edit({ name: 'newemoji' })\n   *   .then(emoji => console.log(`Edited emoji ${emoji}`))\n   *   .catch(console.error);\n   */\n  edit(options) {\n    return this.guild.emojis.edit(this.id, options);\n  }\n\n  /**\n   * Sets the name of the emoji.\n   * @param {string} name The new name for the emoji\n   * @param {string} [reason] Reason for changing the emoji's name\n   * @returns {Promise<GuildEmoji>}\n   */\n  setName(name, reason) {\n    return this.edit({ name, reason });\n  }\n\n  /**\n   * Deletes the emoji.\n   * @param {string} [reason] Reason for deleting the emoji\n   * @returns {Promise<GuildEmoji>}\n   */\n  async delete(reason) {\n    await this.guild.emojis.delete(this.id, reason);\n    return this;\n  }\n\n  /**\n   * Whether this emoji is the same as another one.\n   * @param {GuildEmoji|APIEmoji} other The emoji to compare it to\n   * @returns {boolean}\n   */\n  equals(other) {\n    if (other instanceof GuildEmoji) {\n      return (\n        other.id === this.id &&\n        other.name === this.name &&\n        other.managed === this.managed &&\n        other.available === this.available &&\n        other.requiresColons === this.requiresColons &&\n        other.roles.cache.size === this.roles.cache.size &&\n        other.roles.cache.every(role => this.roles.cache.has(role.id))\n      );\n    } else {\n      return (\n        other.id === this.id &&\n        other.name === this.name &&\n        other.roles.length === this.roles.cache.size &&\n        other.roles.every(role => this.roles.cache.has(role))\n      );\n    }\n  }\n}\n\nmodule.exports = GuildEmoji;\n", "'use strict';\n\nconst { Emoji } = require('./Emoji');\nconst { flatten } = require('../util/Util');\n\n/**\n * Represents a limited emoji set used for both custom and unicode emojis. Custom emojis\n * will use this class opposed to the Emoji class when the client doesn't know enough\n * information about them.\n * @extends {Emoji}\n */\nclass ReactionEmoji extends Emoji {\n  constructor(reaction, emoji) {\n    super(reaction.message.client, emoji);\n    /**\n     * The message reaction this emoji refers to\n     * @type {MessageReaction}\n     */\n    this.reaction = reaction;\n  }\n\n  toJSON() {\n    return flatten(this, { identifier: true });\n  }\n\n  valueOf() {\n    return this.id;\n  }\n}\n\nmodule.exports = ReactionEmoji;\n", "'use strict';\n\nconst { UserFlags } = require('discord-api-types/v10');\nconst BitField = require('./BitField');\n\n/**\n * Data structure that makes it easy to interact with a {@link User#flags} bitfield.\n * @extends {BitField}\n */\nclass UserFlagsBitField extends BitField {\n  /**\n   * Numeric user flags.\n   * @type {UserFlags}\n   * @memberof UserFlagsBitField\n   */\n  static Flags = UserFlags;\n}\n\n/**\n * @name UserFlagsBitField\n * @kind constructor\n * @memberof UserFlagsBitField\n * @param {BitFieldResolvable} [bits=0] Bit(s) to read from\n */\n\n/**\n * Bitfield of the packed bits\n * @type {number}\n * @name UserFlagsBitField#bitfield\n */\n\nmodule.exports = UserFlagsBitField;\n", "'use strict';\n\nconst { userMention } = require('@discordjs/formatters');\nconst { calculateUserDefaultAvatarIndex } = require('@discordjs/rest');\nconst { DiscordSnowflake } = require('@sapphire/snowflake');\nconst Base = require('./Base');\nconst TextBasedChannel = require('./interfaces/TextBasedChannel');\nconst UserFlagsBitField = require('../util/UserFlagsBitField');\n\n/**\n * Represents a user on Discord.\n * @implements {TextBasedChannel}\n * @extends {Base}\n */\nclass User extends Base {\n  constructor(client, data) {\n    super(client);\n\n    /**\n     * The user's id\n     * @type {Snowflake}\n     */\n    this.id = data.id;\n\n    this.bot = null;\n\n    this.system = null;\n\n    this.flags = null;\n\n    this._patch(data);\n  }\n\n  _patch(data) {\n    if ('username' in data) {\n      /**\n       * The username of the user\n       * @type {?string}\n       */\n      this.username = data.username;\n    } else {\n      this.username ??= null;\n    }\n\n    if ('global_name' in data) {\n      /**\n       * The global name of this user\n       * @type {?string}\n       */\n      this.globalName = data.global_name;\n    } else {\n      this.globalName ??= null;\n    }\n\n    if ('bot' in data) {\n      /**\n       * Whether or not the user is a bot\n       * @type {?boolean}\n       */\n      this.bot = Boolean(data.bot);\n    } else if (!this.partial && typeof this.bot !== 'boolean') {\n      this.bot = false;\n    }\n\n    if ('discriminator' in data) {\n      /**\n       * The discriminator of this user\n       * <info>`'0'`, or a 4-digit stringified number if they're using the legacy username system</info>\n       * @type {?string}\n       */\n      this.discriminator = data.discriminator;\n    } else {\n      this.discriminator ??= null;\n    }\n\n    if ('avatar' in data) {\n      /**\n       * The user avatar's hash\n       * @type {?string}\n       */\n      this.avatar = data.avatar;\n    } else {\n      this.avatar ??= null;\n    }\n\n    if ('banner' in data) {\n      /**\n       * The user banner's hash\n       * <info>The user must be force fetched for this property to be present or be updated</info>\n       * @type {?string}\n       */\n      this.banner = data.banner;\n    } else if (this.banner !== null) {\n      this.banner ??= undefined;\n    }\n\n    if ('accent_color' in data) {\n      /**\n       * The base 10 accent color of the user's banner\n       * <info>The user must be force fetched for this property to be present or be updated</info>\n       * @type {?number}\n       */\n      this.accentColor = data.accent_color;\n    } else if (this.accentColor !== null) {\n      this.accentColor ??= undefined;\n    }\n\n    if ('system' in data) {\n      /**\n       * Whether the user is an Official Discord System user (part of the urgent message system)\n       * @type {?boolean}\n       */\n      this.system = Boolean(data.system);\n    } else if (!this.partial && typeof this.system !== 'boolean') {\n      this.system = false;\n    }\n\n    if ('public_flags' in data) {\n      /**\n       * The flags for this user\n       * @type {?UserFlagsBitField}\n       */\n      this.flags = new UserFlagsBitField(data.public_flags);\n    }\n\n    if ('avatar_decoration' in data) {\n      /**\n       * The user avatar decoration's hash\n       * @type {?string}\n       * @deprecated Use `avatarDecorationData` instead\n       */\n      this.avatarDecoration = data.avatar_decoration;\n    } else {\n      this.avatarDecoration ??= null;\n    }\n\n    /**\n     * @typedef {Object} AvatarDecorationData\n     * @property {string} asset The avatar decoration hash\n     * @property {Snowflake} skuId The id of the avatar decoration's SKU\n     */\n\n    if (data.avatar_decoration_data) {\n      /**\n       * The user avatar decoration's data\n       * @type {?AvatarDecorationData}\n       */\n      this.avatarDecorationData = {\n        asset: data.avatar_decoration_data.asset,\n        skuId: data.avatar_decoration_data.sku_id,\n      };\n    } else {\n      this.avatarDecorationData = null;\n    }\n  }\n\n  /**\n   * Whether this User is a partial\n   * @type {boolean}\n   * @readonly\n   */\n  get partial() {\n    return typeof this.username !== 'string';\n  }\n\n  /**\n   * The timestamp the user was created at\n   * @type {number}\n   * @readonly\n   */\n  get createdTimestamp() {\n    return DiscordSnowflake.timestampFrom(this.id);\n  }\n\n  /**\n   * The time the user was created at\n   * @type {Date}\n   * @readonly\n   */\n  get createdAt() {\n    return new Date(this.createdTimestamp);\n  }\n\n  /**\n   * A link to the user's avatar.\n   * @param {ImageURLOptions} [options={}] Options for the image URL\n   * @returns {?string}\n   */\n  avatarURL(options = {}) {\n    return this.avatar && this.client.rest.cdn.avatar(this.id, this.avatar, options);\n  }\n\n  /**\n   * A link to the user's avatar decoration.\n   * @param {BaseImageURLOptions} [options={}] Options for the image URL\n   * @returns {?string}\n   */\n  avatarDecorationURL(options = {}) {\n    if (this.avatarDecorationData) {\n      return this.client.rest.cdn.avatarDecoration(this.avatarDecorationData.asset);\n    }\n\n    return this.avatarDecoration && this.client.rest.cdn.avatarDecoration(this.id, this.avatarDecoration, options);\n  }\n\n  /**\n   * A link to the user's default avatar\n   * @type {string}\n   * @readonly\n   */\n  get defaultAvatarURL() {\n    const index = this.discriminator === '0' ? calculateUserDefaultAvatarIndex(this.id) : this.discriminator % 5;\n    return this.client.rest.cdn.defaultAvatar(index);\n  }\n\n  /**\n   * A link to the user's avatar if they have one.\n   * Otherwise a link to their default avatar will be returned.\n   * @param {ImageURLOptions} [options={}] Options for the image URL\n   * @returns {string}\n   */\n  displayAvatarURL(options) {\n    return this.avatarURL(options) ?? this.defaultAvatarURL;\n  }\n\n  /**\n   * The hexadecimal version of the user accent color, with a leading hash\n   * <info>The user must be force fetched for this property to be present</info>\n   * @type {?string}\n   * @readonly\n   */\n  get hexAccentColor() {\n    if (typeof this.accentColor !== 'number') return this.accentColor;\n    return `#${this.accentColor.toString(16).padStart(6, '0')}`;\n  }\n\n  /**\n   * A link to the user's banner. See {@link User#banner} for more info\n   * @param {ImageURLOptions} [options={}] Options for the image URL\n   * @returns {?string}\n   */\n  bannerURL(options = {}) {\n    return this.banner && this.client.rest.cdn.banner(this.id, this.banner, options);\n  }\n\n  /**\n   * The tag of this user\n   * <info>This user's username, or their legacy tag (e.g. `hydrabolt#0001`)\n   * if they're using the legacy username system</info>\n   * @type {?string}\n   * @readonly\n   */\n  get tag() {\n    return typeof this.username === 'string'\n      ? this.discriminator === '0'\n        ? this.username\n        : `${this.username}#${this.discriminator}`\n      : null;\n  }\n\n  /**\n   * The global name of this user, or their username if they don't have one\n   * @type {?string}\n   * @readonly\n   */\n  get displayName() {\n    return this.globalName ?? this.username;\n  }\n\n  /**\n   * The DM between the client's user and this user\n   * @type {?DMChannel}\n   * @readonly\n   */\n  get dmChannel() {\n    return this.client.users.dmChannel(this.id);\n  }\n\n  /**\n   * Creates a DM channel between the client and the user.\n   * @param {boolean} [force=false] Whether to skip the cache check and request the API\n   * @returns {Promise<DMChannel>}\n   */\n  createDM(force = false) {\n    return this.client.users.createDM(this.id, { force });\n  }\n\n  /**\n   * Deletes a DM channel (if one exists) between the client and the user. Resolves with the channel if successful.\n   * @returns {Promise<DMChannel>}\n   */\n  deleteDM() {\n    return this.client.users.deleteDM(this.id);\n  }\n\n  /**\n   * Checks if the user is equal to another.\n   * It compares id, username, discriminator, avatar, banner, accent color, and bot flags.\n   * It is recommended to compare equality by using `user.id === user2.id` unless you want to compare all properties.\n   * @param {User} user User to compare with\n   * @returns {boolean}\n   */\n  equals(user) {\n    return (\n      user &&\n      this.id === user.id &&\n      this.username === user.username &&\n      this.discriminator === user.discriminator &&\n      this.globalName === user.globalName &&\n      this.avatar === user.avatar &&\n      this.flags?.bitfield === user.flags?.bitfield &&\n      this.banner === user.banner &&\n      this.accentColor === user.accentColor &&\n      this.avatarDecoration === user.avatarDecoration &&\n      this.avatarDecorationData?.asset === user.avatarDecorationData?.asset &&\n      this.avatarDecorationData?.skuId === user.avatarDecorationData?.skuId\n    );\n  }\n\n  /**\n   * Compares the user with an API user object\n   * @param {APIUser} user The API user object to compare\n   * @returns {boolean}\n   * @private\n   */\n  _equals(user) {\n    return (\n      user &&\n      this.id === user.id &&\n      this.username === user.username &&\n      this.discriminator === user.discriminator &&\n      this.globalName === user.global_name &&\n      this.avatar === user.avatar &&\n      this.flags?.bitfield === user.public_flags &&\n      ('banner' in user ? this.banner === user.banner : true) &&\n      ('accent_color' in user ? this.accentColor === user.accent_color : true) &&\n      ('avatar_decoration' in user ? this.avatarDecoration === user.avatar_decoration : true) &&\n      ('avatar_decoration_data' in user\n        ? this.avatarDecorationData?.asset === user.avatar_decoration_data?.asset &&\n          this.avatarDecorationData?.skuId === user.avatar_decoration_data?.sku_id\n        : true)\n    );\n  }\n\n  /**\n   * Fetches this user's flags.\n   * @param {boolean} [force=false] Whether to skip the cache check and request the API\n   * @returns {Promise<UserFlagsBitField>}\n   */\n  fetchFlags(force = false) {\n    return this.client.users.fetchFlags(this.id, { force });\n  }\n\n  /**\n   * Fetches this user.\n   * @param {boolean} [force=true] Whether to skip the cache check and request the API\n   * @returns {Promise<User>}\n   */\n  fetch(force = true) {\n    return this.client.users.fetch(this.id, { force });\n  }\n\n  /**\n   * When concatenated with a string, this automatically returns the user's mention instead of the User object.\n   * @returns {string}\n   * @example\n   * // Logs: Hello from <@123456789012345678>!\n   * console.log(`Hello from ${user}!`);\n   */\n  toString() {\n    return userMention(this.id);\n  }\n\n  toJSON(...props) {\n    const json = super.toJSON(\n      {\n        createdTimestamp: true,\n        defaultAvatarURL: true,\n        hexAccentColor: true,\n        tag: true,\n      },\n      ...props,\n    );\n    json.avatarURL = this.avatarURL();\n    json.displayAvatarURL = this.displayAvatarURL();\n    json.bannerURL = this.banner ? this.bannerURL() : this.banner;\n    return json;\n  }\n}\n\n/**\n * Sends a message to this user.\n * @method send\n * @memberof User\n * @instance\n * @param {string|MessagePayload|MessageCreateOptions} options The options to provide\n * @returns {Promise<Message>}\n * @example\n * // Send a direct message\n * user.send('Hello!')\n *   .then(message => console.log(`Sent message: ${message.content} to ${user.tag}`))\n *   .catch(console.error);\n */\n\nTextBasedChannel.applyToClass(User);\n\nmodule.exports = User;\n", "'use strict';\n\nconst { Collection } = require('@discordjs/collection');\nconst { makeURLSearchParams } = require('@discordjs/rest');\nconst { ReactionType, Routes } = require('discord-api-types/v10');\nconst CachedManager = require('./CachedManager');\nconst { DiscordjsError, ErrorCodes } = require('../errors');\nconst User = require('../structures/User');\n\n/**\n * Manages API methods for users who reacted to a reaction and stores their cache.\n * @extends {CachedManager}\n */\nclass ReactionUserManager extends CachedManager {\n  constructor(reaction, iterable) {\n    super(reaction.client, User, iterable);\n\n    /**\n     * The reaction that this manager belongs to\n     * @type {MessageReaction}\n     */\n    this.reaction = reaction;\n  }\n\n  /**\n   * The cache of this manager\n   * @type {Collection<Snowflake, User>}\n   * @name ReactionUserManager#cache\n   */\n\n  /**\n   * Options used to fetch users who gave a reaction.\n   * @typedef {Object} FetchReactionUsersOptions\n   * @property {ReactionType} [type=ReactionType.Normal] The reaction type to fetch\n   * @property {number} [limit=100] The maximum amount of users to fetch, defaults to `100`\n   * @property {Snowflake} [after] Limit fetching users to those with an id greater than the supplied id\n   */\n\n  /**\n   * Fetches all the users that gave this reaction. Resolves with a collection of users, mapped by their ids.\n   * @param {FetchReactionUsersOptions} [options] Options for fetching the users\n   * @returns {Promise<Collection<Snowflake, User>>}\n   */\n  async fetch({ type = ReactionType.Normal, limit = 100, after } = {}) {\n    const message = this.reaction.message;\n    const query = makeURLSearchParams({ limit, after, type });\n    const data = await this.client.rest.get(\n      Routes.channelMessageReaction(message.channelId, message.id, this.reaction.emoji.identifier),\n      { query },\n    );\n    const users = new Collection();\n    for (const rawUser of data) {\n      const user = this.client.users._add(rawUser);\n      this.cache.set(user.id, user);\n      users.set(user.id, user);\n    }\n    return users;\n  }\n\n  /**\n   * Removes a user from this reaction.\n   * @param {UserResolvable} [user=this.client.user] The user to remove the reaction of\n   * @returns {Promise<MessageReaction>}\n   */\n  async remove(user = this.client.user) {\n    const userId = this.client.users.resolveId(user);\n    if (!userId) throw new DiscordjsError(ErrorCodes.ReactionResolveUser);\n    const message = this.reaction.message;\n    const route =\n      userId === this.client.user.id\n        ? Routes.channelMessageOwnReaction(message.channelId, message.id, this.reaction.emoji.identifier)\n        : Routes.channelMessageUserReaction(message.channelId, message.id, this.reaction.emoji.identifier, userId);\n    await this.client.rest.delete(route);\n    return this.reaction;\n  }\n}\n\nmodule.exports = ReactionUserManager;\n", "'use strict';\n\nconst { Routes } = require('discord-api-types/v10');\nconst GuildEmoji = require('./GuildEmoji');\nconst ReactionEmoji = require('./ReactionEmoji');\nconst ReactionUserManager = require('../managers/ReactionUserManager');\nconst { flatten } = require('../util/Util');\n\n/**\n * Represents a reaction to a message.\n */\nclass MessageReaction {\n  constructor(client, data, message) {\n    /**\n     * The client that instantiated this message reaction\n     * @name MessageReaction#client\n     * @type {Client}\n     * @readonly\n     */\n    Object.defineProperty(this, 'client', { value: client });\n\n    /**\n     * The message that this reaction refers to\n     * @type {Message}\n     */\n    this.message = message;\n\n    /**\n     * Whether the client has given this reaction\n     * @type {boolean}\n     */\n    this.me = data.me;\n\n    /**\n     * Whether the client has super-reacted using this emoji\n     * @type {boolean}\n     */\n    this.meBurst = data.me_burst;\n\n    /**\n     * A manager of the users that have given this reaction\n     * @type {ReactionUserManager}\n     */\n    this.users = new ReactionUserManager(this, this.me ? [client.user] : []);\n\n    this._emoji = new ReactionEmoji(this, data.emoji);\n\n    this.burstColors = null;\n\n    this._patch(data);\n  }\n\n  _patch(data) {\n    if ('burst_colors' in data) {\n      /**\n       * Hexadecimal colors used for this super reaction\n       * @type {?string[]}\n       */\n      this.burstColors = data.burst_colors;\n    }\n\n    if ('count' in data) {\n      /**\n       * The number of people that have given the same reaction\n       * @type {?number}\n       */\n      this.count ??= data.count;\n    }\n\n    if ('count_details' in data) {\n      /**\n       * The reaction count details object contains information about super and normal reaction counts.\n       * @typedef {Object} ReactionCountDetailsData\n       * @property {number} burst Count of super reactions\n       * @property {number} normal Count of normal reactions\n       */\n\n      /**\n       * The reaction count details object contains information about super and normal reaction counts.\n       * @type {ReactionCountDetailsData}\n       */\n      this.countDetails = {\n        burst: data.count_details.burst,\n        normal: data.count_details.normal,\n      };\n    } else {\n      this.countDetails ??= { burst: 0, normal: 0 };\n    }\n  }\n\n  /**\n   * Makes the client user react with this reaction\n   * @returns {Promise<MessageReaction>}\n   */\n  react() {\n    return this.message.react(this.emoji);\n  }\n\n  /**\n   * Removes all users from this reaction.\n   * @returns {Promise<MessageReaction>}\n   */\n  async remove() {\n    await this.client.rest.delete(\n      Routes.channelMessageReaction(this.message.channelId, this.message.id, this._emoji.identifier),\n    );\n    return this;\n  }\n\n  /**\n   * The emoji of this reaction. Either a {@link GuildEmoji} object for known custom emojis, or a {@link ReactionEmoji}\n   * object which has fewer properties. Whatever the prototype of the emoji, it will still have\n   * `name`, `id`, `identifier` and `toString()`\n   * @type {GuildEmoji|ReactionEmoji}\n   * @readonly\n   */\n  get emoji() {\n    if (this._emoji instanceof GuildEmoji) return this._emoji;\n    // Check to see if the emoji has become known to the client\n    if (this._emoji.id) {\n      const emojis = this.message.client.emojis.cache;\n      if (emojis.has(this._emoji.id)) {\n        const emoji = emojis.get(this._emoji.id);\n        this._emoji = emoji;\n        return emoji;\n      }\n    }\n    return this._emoji;\n  }\n\n  /**\n   * Whether or not this reaction is a partial\n   * @type {boolean}\n   * @readonly\n   */\n  get partial() {\n    return this.count === null;\n  }\n\n  /**\n   * Fetch this reaction.\n   * @returns {Promise<MessageReaction>}\n   */\n  async fetch() {\n    const message = await this.message.fetch();\n    const existing = message.reactions.cache.get(this.emoji.id ?? this.emoji.name);\n    // The reaction won't get set when it has been completely removed\n    this._patch(existing ?? { count: 0 });\n    return this;\n  }\n\n  toJSON() {\n    return flatten(this, { emoji: 'emojiId', message: 'messageId' });\n  }\n\n  valueOf() {\n    return this._emoji.id ?? this._emoji.name;\n  }\n\n  _add(user, burst) {\n    if (this.partial) return;\n    this.users.cache.set(user.id, user);\n    if (!this.me || user.id !== this.message.client.user.id || this.count === 0) {\n      this.count++;\n      if (burst) this.countDetails.burst++;\n      else this.countDetails.normal++;\n    }\n    if (user.id === this.message.client.user.id) {\n      if (burst) this.meBurst = true;\n      else this.me = true;\n    }\n  }\n  _remove(user, burst) {\n    if (this.partial) return;\n    this.users.cache.delete(user.id);\n    if (!this.me || user.id !== this.message.client.user.id) {\n      this.count--;\n      if (burst) this.countDetails.burst--;\n      else this.countDetails.normal--;\n    }\n    if (user.id === this.message.client.user.id) {\n      if (burst) this.meBurst = false;\n      else this.me = false;\n    }\n    if (this.count <= 0 && this.users.cache.size === 0) {\n      this.message.reactions.cache.delete(this.emoji.id ?? this.emoji.name);\n    }\n  }\n}\n\nmodule.exports = MessageReaction;\n", "'use strict';\n\nconst { Routes } = require('discord-api-types/v10');\nconst CachedManager = require('./CachedManager');\nconst MessageReaction = require('../structures/MessageReaction');\n\n/**\n * Manages API methods for reactions and holds their cache.\n * @extends {CachedManager}\n */\nclass ReactionManager extends CachedManager {\n  constructor(message, iterable) {\n    super(message.client, MessageReaction, iterable);\n\n    /**\n     * The message that this manager belongs to\n     * @type {Message}\n     */\n    this.message = message;\n  }\n\n  _add(data, cache) {\n    return super._add(data, cache, { id: data.emoji.id ?? data.emoji.name, extras: [this.message] });\n  }\n\n  /**\n   * The reaction cache of this manager\n   * @type {Collection<string|Snowflake, MessageReaction>}\n   * @name ReactionManager#cache\n   */\n\n  /**\n   * Data that can be resolved to a MessageReaction object. This can be:\n   * * A MessageReaction\n   * * A Snowflake\n   * * The Unicode representation of an emoji\n   * @typedef {MessageReaction|Snowflake} MessageReactionResolvable\n   */\n\n  /**\n   * Resolves a {@link MessageReactionResolvable} to a {@link MessageReaction} object.\n   * @method resolve\n   * @memberof ReactionManager\n   * @instance\n   * @param {MessageReactionResolvable} reaction The MessageReaction to resolve\n   * @returns {?MessageReaction}\n   */\n\n  /**\n   * Resolves a {@link MessageReactionResolvable} to a {@link MessageReaction} id.\n   * @method resolveId\n   * @memberof ReactionManager\n   * @instance\n   * @param {MessageReactionResolvable} reaction The MessageReaction to resolve\n   * @returns {?Snowflake}\n   */\n\n  /**\n   * Removes all reactions from a message.\n   * @returns {Promise<Message>}\n   */\n  async removeAll() {\n    await this.client.rest.delete(Routes.channelMessageAllReactions(this.message.channelId, this.message.id));\n    return this.message;\n  }\n}\n\nmodule.exports = ReactionManager;\n", "'use strict';\n\nconst { Collection } = require('@discordjs/collection');\nconst { messageLink } = require('@discordjs/formatters');\nconst { DiscordSnowflake } = require('@sapphire/snowflake');\nconst {\n  InteractionType,\n  ChannelType,\n  MessageType,\n  MessageFlags,\n  PermissionFlagsBits,\n} = require('discord-api-types/v10');\nconst Attachment = require('./Attachment');\nconst Base = require('./Base');\nconst ClientApplication = require('./ClientApplication');\nconst Embed = require('./Embed');\nconst InteractionCollector = require('./InteractionCollector');\nconst Mentions = require('./MessageMentions');\nconst MessagePayload = require('./MessagePayload');\nconst { Poll } = require('./Poll.js');\nconst ReactionCollector = require('./ReactionCollector');\nconst { Sticker } = require('./Sticker');\nconst { DiscordjsError, ErrorCodes } = require('../errors');\nconst ReactionManager = require('../managers/ReactionManager');\nconst { createComponent } = require('../util/Components');\nconst { NonSystemMessageTypes, MaxBulkDeletableMessageAge, UndeletableMessageTypes } = require('../util/Constants');\nconst MessageFlagsBitField = require('../util/MessageFlagsBitField');\nconst PermissionsBitField = require('../util/PermissionsBitField');\nconst { _transformAPIMessageInteractionMetadata } = require('../util/Transformers.js');\nconst { cleanContent, resolvePartialEmoji, transformResolved } = require('../util/Util');\n\n/**\n * Represents a message on Discord.\n * @extends {Base}\n */\nclass Message extends Base {\n  constructor(client, data) {\n    super(client);\n\n    /**\n     * The id of the channel the message was sent in\n     * @type {Snowflake}\n     */\n    this.channelId = data.channel_id;\n\n    /**\n     * The id of the guild the message was sent in, if any\n     * @type {?Snowflake}\n     */\n    this.guildId = data.guild_id ?? this.channel?.guild?.id ?? null;\n\n    this._patch(data);\n  }\n\n  _patch(data) {\n    /**\n     * The message's id\n     * @type {Snowflake}\n     */\n    this.id = data.id;\n\n    /**\n     * The timestamp the message was sent at\n     * @type {number}\n     */\n    this.createdTimestamp = DiscordSnowflake.timestampFrom(this.id);\n\n    if ('type' in data) {\n      /**\n       * The type of the message\n       * @type {?MessageType}\n       */\n      this.type = data.type;\n\n      /**\n       * Whether or not this message was sent by Discord, not actually a user (e.g. pin notifications)\n       * @type {?boolean}\n       */\n      this.system = !NonSystemMessageTypes.includes(this.type);\n    } else {\n      this.system ??= null;\n      this.type ??= null;\n    }\n\n    if ('content' in data) {\n      /**\n       * The content of the message.\n       * <info>This property requires the {@link GatewayIntentBits.MessageContent} privileged intent\n       * in a guild for messages that do not mention the client.</info>\n       * @type {?string}\n       */\n      this.content = data.content;\n    } else {\n      this.content ??= null;\n    }\n\n    if ('author' in data) {\n      /**\n       * The author of the message\n       * @type {?User}\n       */\n      this.author = this.client.users._add(data.author, !data.webhook_id);\n    } else {\n      this.author ??= null;\n    }\n\n    if ('pinned' in data) {\n      /**\n       * Whether or not this message is pinned\n       * @type {?boolean}\n       */\n      this.pinned = Boolean(data.pinned);\n    } else {\n      this.pinned ??= null;\n    }\n\n    if ('tts' in data) {\n      /**\n       * Whether or not the message was Text-To-Speech\n       * @type {?boolean}\n       */\n      this.tts = data.tts;\n    } else {\n      this.tts ??= null;\n    }\n\n    if ('nonce' in data) {\n      /**\n       * A random number or string used for checking message delivery\n       * <warn>This is only received after the message was sent successfully, and\n       * lost if re-fetched</warn>\n       * @type {?string}\n       */\n      this.nonce = data.nonce;\n    } else {\n      this.nonce ??= null;\n    }\n\n    if ('embeds' in data) {\n      /**\n       * An array of embeds in the message - e.g. YouTube Player.\n       * <info>This property requires the {@link GatewayIntentBits.MessageContent} privileged intent\n       * in a guild for messages that do not mention the client.</info>\n       * @type {Embed[]}\n       */\n      this.embeds = data.embeds.map(embed => new Embed(embed));\n    } else {\n      this.embeds = this.embeds?.slice() ?? [];\n    }\n\n    if ('components' in data) {\n      /**\n       * An array of action rows in the message.\n       * <info>This property requires the {@link GatewayIntentBits.MessageContent} privileged intent\n       * in a guild for messages that do not mention the client.</info>\n       * @type {ActionRow[]}\n       */\n      this.components = data.components.map(component => createComponent(component));\n    } else {\n      this.components = this.components?.slice() ?? [];\n    }\n\n    if ('attachments' in data) {\n      /**\n       * A collection of attachments in the message - e.g. Pictures - mapped by their ids.\n       * <info>This property requires the {@link GatewayIntentBits.MessageContent} privileged intent\n       * in a guild for messages that do not mention the client.</info>\n       * @type {Collection<Snowflake, Attachment>}\n       */\n      this.attachments = new Collection();\n      if (data.attachments) {\n        for (const attachment of data.attachments) {\n          this.attachments.set(attachment.id, new Attachment(attachment));\n        }\n      }\n    } else {\n      this.attachments = new Collection(this.attachments);\n    }\n\n    if ('sticker_items' in data || 'stickers' in data) {\n      /**\n       * A collection of stickers in the message\n       * @type {Collection<Snowflake, Sticker>}\n       */\n      this.stickers = new Collection(\n        (data.sticker_items ?? data.stickers)?.map(sticker => [sticker.id, new Sticker(this.client, sticker)]),\n      );\n    } else {\n      this.stickers = new Collection(this.stickers);\n    }\n\n    if ('position' in data) {\n      /**\n       * A generally increasing integer (there may be gaps or duplicates) that represents\n       * the approximate position of the message in a thread.\n       * @type {?number}\n       */\n      this.position = data.position;\n    } else {\n      this.position ??= null;\n    }\n\n    if ('role_subscription_data' in data) {\n      /**\n       * Role subscription data found on {@link MessageType.RoleSubscriptionPurchase} messages.\n       * @typedef {Object} RoleSubscriptionData\n       * @property {Snowflake} roleSubscriptionListingId The id of the SKU and listing the user is subscribed to\n       * @property {string} tierName The name of the tier the user is subscribed to\n       * @property {number} totalMonthsSubscribed The total number of months the user has been subscribed for\n       * @property {boolean} isRenewal Whether this notification is a renewal\n       */\n\n      /**\n       * The data of the role subscription purchase or renewal.\n       * <info>This is present on {@link MessageType.RoleSubscriptionPurchase} messages.</info>\n       * @type {?RoleSubscriptionData}\n       */\n      this.roleSubscriptionData = {\n        roleSubscriptionListingId: data.role_subscription_data.role_subscription_listing_id,\n        tierName: data.role_subscription_data.tier_name,\n        totalMonthsSubscribed: data.role_subscription_data.total_months_subscribed,\n        isRenewal: data.role_subscription_data.is_renewal,\n      };\n    } else {\n      this.roleSubscriptionData ??= null;\n    }\n\n    if ('resolved' in data) {\n      /**\n       * Resolved data from auto-populated select menus.\n       * @typedef {Object} CommandInteractionResolvedData\n       */\n      this.resolved = transformResolved(\n        { client: this.client, guild: this.guild, channel: this.channel },\n        data.resolved,\n      );\n    } else {\n      this.resolved ??= null;\n    }\n\n    // Discord sends null if the message has not been edited\n    if (data.edited_timestamp) {\n      /**\n       * The timestamp the message was last edited at (if applicable)\n       * @type {?number}\n       */\n      this.editedTimestamp = Date.parse(data.edited_timestamp);\n    } else {\n      this.editedTimestamp ??= null;\n    }\n\n    if ('reactions' in data) {\n      /**\n       * A manager of the reactions belonging to this message\n       * @type {ReactionManager}\n       */\n      this.reactions = new ReactionManager(this);\n      if (data.reactions?.length > 0) {\n        for (const reaction of data.reactions) {\n          this.reactions._add(reaction);\n        }\n      }\n    } else {\n      this.reactions ??= new ReactionManager(this);\n    }\n\n    if (!this.mentions) {\n      /**\n       * All valid mentions that the message contains\n       * @type {MessageMentions}\n       */\n      this.mentions = new Mentions(\n        this,\n        data.mentions,\n        data.mention_roles,\n        data.mention_everyone,\n        data.mention_channels,\n        data.referenced_message?.author,\n      );\n    } else {\n      this.mentions = new Mentions(\n        this,\n        data.mentions ?? this.mentions.users,\n        data.mention_roles ?? this.mentions.roles,\n        data.mention_everyone ?? this.mentions.everyone,\n        data.mention_channels ?? this.mentions.crosspostedChannels,\n        data.referenced_message?.author ?? this.mentions.repliedUser,\n      );\n    }\n\n    if ('webhook_id' in data) {\n      /**\n       * The id of the webhook that sent the message, if applicable\n       * @type {?Snowflake}\n       */\n      this.webhookId = data.webhook_id;\n    } else {\n      this.webhookId ??= null;\n    }\n\n    if ('application' in data) {\n      /**\n       * Supplemental application information for group activities\n       * @type {?ClientApplication}\n       */\n      this.groupActivityApplication = new ClientApplication(this.client, data.application);\n    } else {\n      this.groupActivityApplication ??= null;\n    }\n\n    if ('application_id' in data) {\n      /**\n       * The id of the application of the interaction that sent this message, if any\n       * @type {?Snowflake}\n       */\n      this.applicationId = data.application_id;\n    } else {\n      this.applicationId ??= null;\n    }\n\n    if ('activity' in data) {\n      /**\n       * Group activity\n       * @type {?MessageActivity}\n       */\n      this.activity = {\n        partyId: data.activity.party_id,\n        type: data.activity.type,\n      };\n    } else {\n      this.activity ??= null;\n    }\n\n    if ('thread' in data) {\n      this.client.channels._add(data.thread, this.guild);\n    }\n\n    if (this.member && data.member) {\n      this.member._patch(data.member);\n    } else if (data.member && this.guild && this.author) {\n      this.guild.members._add(Object.assign(data.member, { user: this.author }));\n    }\n\n    if ('flags' in data) {\n      /**\n       * Flags that are applied to the message\n       * @type {Readonly<MessageFlagsBitField>}\n       */\n      this.flags = new MessageFlagsBitField(data.flags).freeze();\n    } else {\n      this.flags = new MessageFlagsBitField(this.flags).freeze();\n    }\n\n    /**\n     * Reference data sent in a message that contains ids identifying the referenced message.\n     * This can be present in the following types of message:\n     * * Crossposted messages (`MessageFlags.Crossposted`)\n     * * {@link MessageType.ChannelPinnedMessage}\n     * * {@link MessageType.ChannelFollowAdd}\n     * * {@link MessageType.Reply}\n     * * {@link MessageType.ThreadStarterMessage}\n     * @see {@link https://discord.com/developers/docs/resources/message#message-object-message-types}\n     * @typedef {Object} MessageReference\n     * @property {Snowflake} channelId The channel id that was referenced\n     * @property {Snowflake|undefined} guildId The guild id that was referenced\n     * @property {Snowflake|undefined} messageId The message id that was referenced\n     */\n\n    if ('message_reference' in data) {\n      /**\n       * Message reference data\n       * @type {?MessageReference}\n       */\n      this.reference = {\n        channelId: data.message_reference.channel_id,\n        guildId: data.message_reference.guild_id,\n        messageId: data.message_reference.message_id,\n      };\n    } else {\n      this.reference ??= null;\n    }\n\n    if (data.referenced_message) {\n      this.channel?.messages._add({ guild_id: data.message_reference?.guild_id, ...data.referenced_message });\n    }\n\n    if (data.interaction_metadata) {\n      /**\n       * Partial data of the interaction that a message is a result of\n       * @typedef {Object} MessageInteractionMetadata\n       * @property {Snowflake} id The interaction's id\n       * @property {InteractionType} type The type of the interaction\n       * @property {User} user The user that invoked the interaction\n       * @property {APIAuthorizingIntegrationOwnersMap} authorizingIntegrationOwners\n       * Ids for installation context(s) related to an interaction\n       * @property {?Snowflake} originalResponseMessageId\n       * Id of the original response message. Present only on follow-up messages\n       * @property {?Snowflake} interactedMessageId\n       * Id of the message that contained interactive component.\n       * Present only on messages created from component interactions\n       * @property {?MessageInteractionMetadata} triggeringInteractionMetadata\n       * Metadata for the interaction that was used to open the modal. Present only on modal submit interactions\n       */\n\n      /**\n       * Partial data of the interaction that this message is a result of\n       * @type {?MessageInteractionMetadata}\n       */\n      this.interactionMetadata = _transformAPIMessageInteractionMetadata(this.client, data.interaction_metadata);\n    } else {\n      this.interactionMetadata ??= null;\n    }\n\n    /**\n     * Partial data of the interaction that a message is a reply to\n     * @typedef {Object} MessageInteraction\n     * @property {Snowflake} id The interaction's id\n     * @property {InteractionType} type The type of the interaction\n     * @property {string} commandName The name of the interaction's application command,\n     * as well as the subcommand and subcommand group, where applicable\n     * @property {User} user The user that invoked the interaction\n     * @deprecated Use {@link Message#interactionMetadata} instead.\n     */\n\n    if (data.interaction) {\n      /**\n       * Partial data of the interaction that this message is a reply to\n       * @type {?MessageInteraction}\n       * @deprecated Use {@link Message#interactionMetadata} instead.\n       */\n      this.interaction = {\n        id: data.interaction.id,\n        type: data.interaction.type,\n        commandName: data.interaction.name,\n        user: this.client.users._add(data.interaction.user),\n      };\n    } else {\n      this.interaction ??= null;\n    }\n\n    if (data.poll) {\n      /**\n       * The poll that was sent with the message\n       * @type {?Poll}\n       */\n      this.poll = new Poll(this.client, data.poll, this);\n    } else {\n      this.poll ??= null;\n    }\n\n    /**\n     * A call associated with a message\n     * @typedef {Object} MessageCall\n     * @property {Readonly<?Date>} endedAt The time the call ended\n     * @property {?number} endedTimestamp The timestamp the call ended\n     * @property {Snowflake[]} participants The ids of the users that participated in the call\n     */\n\n    if (data.call) {\n      /**\n       * The call associated with the message\n       * @type {?MessageCall}\n       */\n      this.call = {\n        endedTimestamp: data.call.ended_timestamp ? Date.parse(data.call.ended_timestamp) : null,\n        participants: data.call.participants,\n        get endedAt() {\n          return this.endedTimestamp && new Date(this.endedTimestamp);\n        },\n      };\n    } else {\n      this.call ??= null;\n    }\n  }\n\n  /**\n   * The channel that the message was sent in\n   * @type {TextBasedChannels}\n   * @readonly\n   */\n  get channel() {\n    return this.client.channels.resolve(this.channelId);\n  }\n\n  /**\n   * Whether or not this message is a partial\n   * @type {boolean}\n   * @readonly\n   */\n  get partial() {\n    return typeof this.content !== 'string' || !this.author;\n  }\n\n  /**\n   * Represents the author of the message as a guild member.\n   * Only available if the message comes from a guild where the author is still a member\n   * @type {?GuildMember}\n   * @readonly\n   */\n  get member() {\n    return this.guild?.members.resolve(this.author) ?? null;\n  }\n\n  /**\n   * The time the message was sent at\n   * @type {Date}\n   * @readonly\n   */\n  get createdAt() {\n    return new Date(this.createdTimestamp);\n  }\n\n  /**\n   * The time the message was last edited at (if applicable)\n   * @type {?Date}\n   * @readonly\n   */\n  get editedAt() {\n    return this.editedTimestamp && new Date(this.editedTimestamp);\n  }\n\n  /**\n   * The guild the message was sent in (if in a guild channel)\n   * @type {?Guild}\n   * @readonly\n   */\n  get guild() {\n    return this.client.guilds.resolve(this.guildId) ?? this.channel?.guild ?? null;\n  }\n\n  /**\n   * Whether this message has a thread associated with it\n   * @type {boolean}\n   * @readonly\n   */\n  get hasThread() {\n    return this.flags.has(MessageFlags.HasThread);\n  }\n\n  /**\n   * The thread started by this message\n   * <info>This property is not suitable for checking whether a message has a thread,\n   * use {@link Message#hasThread} instead.</info>\n   * @type {?ThreadChannel}\n   * @readonly\n   */\n  get thread() {\n    return this.channel?.threads?.resolve(this.id) ?? null;\n  }\n\n  /**\n   * The URL to jump to this message\n   * @type {string}\n   * @readonly\n   */\n  get url() {\n    return this.inGuild() ? messageLink(this.channelId, this.id, this.guildId) : messageLink(this.channelId, this.id);\n  }\n\n  /**\n   * The message contents with all mentions replaced by the equivalent text.\n   * If mentions cannot be resolved to a name, the relevant mention in the message content will not be converted.\n   * @type {?string}\n   * @readonly\n   */\n  get cleanContent() {\n    // eslint-disable-next-line eqeqeq\n    return this.content != null ? cleanContent(this.content, this.channel) : null;\n  }\n\n  /**\n   * Creates a reaction collector.\n   * @param {ReactionCollectorOptions} [options={}] Options to send to the collector\n   * @returns {ReactionCollector}\n   * @example\n   * // Create a reaction collector\n   * const filter = (reaction, user) => reaction.emoji.name === '👌' && user.id === 'someId';\n   * const collector = message.createReactionCollector({ filter, time: 15_000 });\n   * collector.on('collect', r => console.log(`Collected ${r.emoji.name}`));\n   * collector.on('end', collected => console.log(`Collected ${collected.size} items`));\n   */\n  createReactionCollector(options = {}) {\n    return new ReactionCollector(this, options);\n  }\n\n  /**\n   * An object containing the same properties as CollectorOptions, but a few more:\n   * @typedef {ReactionCollectorOptions} AwaitReactionsOptions\n   * @property {string[]} [errors] Stop/end reasons that cause the promise to reject\n   */\n\n  /**\n   * Similar to createReactionCollector but in promise form.\n   * Resolves with a collection of reactions that pass the specified filter.\n   * @param {AwaitReactionsOptions} [options={}] Optional options to pass to the internal collector\n   * @returns {Promise<Collection<string | Snowflake, MessageReaction>>}\n   * @example\n   * // Create a reaction collector\n   * const filter = (reaction, user) => reaction.emoji.name === '👌' && user.id === 'someId'\n   * message.awaitReactions({ filter, time: 15_000 })\n   *   .then(collected => console.log(`Collected ${collected.size} reactions`))\n   *   .catch(console.error);\n   */\n  awaitReactions(options = {}) {\n    return new Promise((resolve, reject) => {\n      const collector = this.createReactionCollector(options);\n      collector.once('end', (reactions, reason) => {\n        if (options.errors?.includes(reason)) reject(reactions);\n        else resolve(reactions);\n      });\n    });\n  }\n\n  /**\n   * @typedef {CollectorOptions} MessageComponentCollectorOptions\n   * @property {ComponentType} [componentType] The type of component to listen for\n   * @property {number} [max] The maximum total amount of interactions to collect\n   * @property {number} [maxComponents] The maximum number of components to collect\n   * @property {number} [maxUsers] The maximum number of users to interact\n   */\n\n  /**\n   * Creates a message component interaction collector.\n   * @param {MessageComponentCollectorOptions} [options={}] Options to send to the collector\n   * @returns {InteractionCollector}\n   * @example\n   * // Create a message component interaction collector\n   * const filter = (interaction) => interaction.customId === 'button' && interaction.user.id === 'someId';\n   * const collector = message.createMessageComponentCollector({ filter, time: 15_000 });\n   * collector.on('collect', i => console.log(`Collected ${i.customId}`));\n   * collector.on('end', collected => console.log(`Collected ${collected.size} items`));\n   */\n  createMessageComponentCollector(options = {}) {\n    return new InteractionCollector(this.client, {\n      ...options,\n      interactionType: InteractionType.MessageComponent,\n      message: this,\n    });\n  }\n\n  /**\n   * An object containing the same properties as CollectorOptions, but a few more:\n   * @typedef {Object} AwaitMessageComponentOptions\n   * @property {CollectorFilter} [filter] The filter applied to this collector\n   * @property {number} [time] Time to wait for an interaction before rejecting\n   * @property {ComponentType} [componentType] The type of component interaction to collect\n   * @property {number} [idle] Time to wait without another message component interaction before ending the collector\n   * @property {boolean} [dispose] Whether to remove the message component interaction after collecting\n   * @property {InteractionResponse} [interactionResponse] The interaction response to collect interactions from\n   */\n\n  /**\n   * Collects a single component interaction that passes the filter.\n   * The Promise will reject if the time expires.\n   * @param {AwaitMessageComponentOptions} [options={}] Options to pass to the internal collector\n   * @returns {Promise<MessageComponentInteraction>}\n   * @example\n   * // Collect a message component interaction\n   * const filter = (interaction) => interaction.customId === 'button' && interaction.user.id === 'someId';\n   * message.awaitMessageComponent({ filter, time: 15_000 })\n   *   .then(interaction => console.log(`${interaction.customId} was clicked!`))\n   *   .catch(console.error);\n   */\n  awaitMessageComponent(options = {}) {\n    const _options = { ...options, max: 1 };\n    return new Promise((resolve, reject) => {\n      const collector = this.createMessageComponentCollector(_options);\n      collector.once('end', (interactions, reason) => {\n        const interaction = interactions.first();\n        if (interaction) resolve(interaction);\n        else reject(new DiscordjsError(ErrorCodes.InteractionCollectorError, reason));\n      });\n    });\n  }\n\n  /**\n   * Whether the message is editable by the client user\n   * @type {boolean}\n   * @readonly\n   */\n  get editable() {\n    const precheck = Boolean(this.author.id === this.client.user.id && (!this.guild || this.channel?.viewable));\n\n    // Regardless of permissions thread messages cannot be edited if\n    // the thread is archived or the thread is locked and the bot does not have permission to manage threads.\n    if (this.channel?.isThread()) {\n      if (this.channel.archived) return false;\n      if (this.channel.locked) {\n        const permissions = this.channel.permissionsFor(this.client.user);\n        if (!permissions?.has(PermissionFlagsBits.ManageThreads, true)) return false;\n      }\n    }\n\n    return precheck;\n  }\n\n  /**\n   * Whether the message is deletable by the client user\n   * @type {boolean}\n   * @readonly\n   */\n  get deletable() {\n    if (UndeletableMessageTypes.includes(this.type)) return false;\n\n    if (!this.guild) {\n      return this.author.id === this.client.user.id;\n    }\n    // DMChannel does not have viewable property, so check viewable after proved that message is on a guild.\n    if (!this.channel?.viewable) {\n      return false;\n    }\n\n    const permissions = this.channel?.permissionsFor(this.client.user);\n    if (!permissions) return false;\n    // This flag allows deleting even if timed out\n    if (permissions.has(PermissionFlagsBits.Administrator, false)) return true;\n\n    // The auto moderation action message author is the reference message author\n    return (\n      (this.type !== MessageType.AutoModerationAction && this.author.id === this.client.user.id) ||\n      (permissions.has(PermissionFlagsBits.ManageMessages, false) && !this.guild.members.me.isCommunicationDisabled())\n    );\n  }\n\n  /**\n   * Whether the message is bulk deletable by the client user\n   * @type {boolean}\n   * @readonly\n   * @example\n   * // Filter for bulk deletable messages\n   * channel.bulkDelete(messages.filter(message => message.bulkDeletable));\n   */\n  get bulkDeletable() {\n    return (\n      (this.inGuild() &&\n        Date.now() - this.createdTimestamp < MaxBulkDeletableMessageAge &&\n        this.deletable &&\n        this.channel?.permissionsFor(this.client.user).has(PermissionFlagsBits.ManageMessages, false)) ??\n      false\n    );\n  }\n\n  /**\n   * Whether the message is pinnable by the client user\n   * @type {boolean}\n   * @readonly\n   */\n  get pinnable() {\n    const { channel } = this;\n    return Boolean(\n      !this.system &&\n        (!this.guild ||\n          (channel?.viewable &&\n            channel?.permissionsFor(this.client.user)?.has(PermissionFlagsBits.ManageMessages, false))),\n    );\n  }\n\n  /**\n   * Fetches the Message this crosspost/reply/pin-add references, if available to the client\n   * @returns {Promise<Message>}\n   */\n  async fetchReference() {\n    if (!this.reference) throw new DiscordjsError(ErrorCodes.MessageReferenceMissing);\n    const { channelId, messageId } = this.reference;\n    if (!messageId) throw new DiscordjsError(ErrorCodes.MessageReferenceMissing);\n    const channel = this.client.channels.resolve(channelId);\n    if (!channel) throw new DiscordjsError(ErrorCodes.GuildChannelResolve);\n    const message = await channel.messages.fetch(messageId);\n    return message;\n  }\n\n  /**\n   * Whether the message is crosspostable by the client user\n   * @type {boolean}\n   * @readonly\n   */\n  get crosspostable() {\n    const bitfield =\n      PermissionFlagsBits.SendMessages |\n      (this.author.id === this.client.user.id ? PermissionsBitField.DefaultBit : PermissionFlagsBits.ManageMessages);\n    const { channel } = this;\n    return Boolean(\n      channel?.type === ChannelType.GuildAnnouncement &&\n        !this.flags.has(MessageFlags.Crossposted) &&\n        this.type === MessageType.Default &&\n        !this.poll &&\n        channel.viewable &&\n        channel.permissionsFor(this.client.user)?.has(bitfield, false),\n    );\n  }\n\n  /**\n   * Edits the content of the message.\n   * @param {string|MessagePayload|MessageEditOptions} options The options to provide\n   * @returns {Promise<Message>}\n   * @example\n   * // Update the content of a message\n   * message.edit('This is my new content!')\n   *   .then(msg => console.log(`Updated the content of a message to ${msg.content}`))\n   *   .catch(console.error);\n   */\n  edit(options) {\n    if (!this.channel) return Promise.reject(new DiscordjsError(ErrorCodes.ChannelNotCached));\n    return this.channel.messages.edit(this, options);\n  }\n\n  /**\n   * Publishes a message in an announcement channel to all channels following it.\n   * @returns {Promise<Message>}\n   * @example\n   * // Crosspost a message\n   * if (message.channel.type === ChannelType.GuildAnnouncement) {\n   *   message.crosspost()\n   *     .then(() => console.log('Crossposted message'))\n   *     .catch(console.error);\n   * }\n   */\n  crosspost() {\n    if (!this.channel) return Promise.reject(new DiscordjsError(ErrorCodes.ChannelNotCached));\n    return this.channel.messages.crosspost(this.id);\n  }\n\n  /**\n   * Pins this message to the channel's pinned messages.\n   * @param {string} [reason] Reason for pinning\n   * @returns {Promise<Message>}\n   * @example\n   * // Pin a message\n   * message.pin()\n   *   .then(console.log)\n   *   .catch(console.error)\n   */\n  async pin(reason) {\n    if (!this.channel) throw new DiscordjsError(ErrorCodes.ChannelNotCached);\n    await this.channel.messages.pin(this.id, reason);\n    return this;\n  }\n\n  /**\n   * Unpins this message from the channel's pinned messages.\n   * @param {string} [reason] Reason for unpinning\n   * @returns {Promise<Message>}\n   * @example\n   * // Unpin a message\n   * message.unpin()\n   *   .then(console.log)\n   *   .catch(console.error)\n   */\n  async unpin(reason) {\n    if (!this.channel) throw new DiscordjsError(ErrorCodes.ChannelNotCached);\n    await this.channel.messages.unpin(this.id, reason);\n    return this;\n  }\n\n  /**\n   * Adds a reaction to the message.\n   * @param {EmojiIdentifierResolvable} emoji The emoji to react with\n   * @returns {Promise<MessageReaction>}\n   * @example\n   * // React to a message with a unicode emoji\n   * message.react('🤔')\n   *   .then(console.log)\n   *   .catch(console.error);\n   * @example\n   * // React to a message with a custom emoji\n   * message.react(message.guild.emojis.cache.get('123456789012345678'))\n   *   .then(console.log)\n   *   .catch(console.error);\n   */\n  async react(emoji) {\n    if (!this.channel) throw new DiscordjsError(ErrorCodes.ChannelNotCached);\n    await this.channel.messages.react(this.id, emoji);\n\n    return this.client.actions.MessageReactionAdd.handle(\n      {\n        [this.client.actions.injectedUser]: this.client.user,\n        [this.client.actions.injectedChannel]: this.channel,\n        [this.client.actions.injectedMessage]: this,\n        emoji: resolvePartialEmoji(emoji),\n      },\n      true,\n    ).reaction;\n  }\n\n  /**\n   * Deletes the message.\n   * @returns {Promise<Message>}\n   * @example\n   * // Delete a message\n   * message.delete()\n   *   .then(msg => console.log(`Deleted message from ${msg.author.username}`))\n   *   .catch(console.error);\n   */\n  async delete() {\n    if (!this.channel) throw new DiscordjsError(ErrorCodes.ChannelNotCached);\n    await this.channel.messages.delete(this.id);\n    return this;\n  }\n\n  /**\n   * Options provided when sending a message as an inline reply.\n   * @typedef {BaseMessageCreateOptions} MessageReplyOptions\n   * @property {boolean} [failIfNotExists=this.client.options.failIfNotExists] Whether to error if the referenced\n   * message does not exist (creates a standard message in this case when false)\n   */\n\n  /**\n   * Send an inline reply to this message.\n   * @param {string|MessagePayload|MessageReplyOptions} options The options to provide\n   * @returns {Promise<Message>}\n   * @example\n   * // Reply to a message\n   * message.reply('This is a reply!')\n   *   .then(() => console.log(`Replied to message \"${message.content}\"`))\n   *   .catch(console.error);\n   */\n  reply(options) {\n    if (!this.channel) return Promise.reject(new DiscordjsError(ErrorCodes.ChannelNotCached));\n    let data;\n\n    if (options instanceof MessagePayload) {\n      data = options;\n    } else {\n      data = MessagePayload.create(this, options, {\n        reply: {\n          messageReference: this,\n          failIfNotExists: options?.failIfNotExists ?? this.client.options.failIfNotExists,\n        },\n      });\n    }\n    return this.channel.send(data);\n  }\n\n  /**\n   * Options for starting a thread on a message.\n   * @typedef {Object} StartThreadOptions\n   * @property {string} name The name of the new thread\n   * @property {ThreadAutoArchiveDuration} [autoArchiveDuration=this.channel.defaultAutoArchiveDuration] The amount of\n   * time after which the thread should automatically archive in case of no recent activity\n   * @property {string} [reason] Reason for creating the thread\n   * @property {number} [rateLimitPerUser] The rate limit per user (slowmode) for the thread in seconds\n   */\n\n  /**\n   * Create a new public thread from this message\n   * @see GuildTextThreadManager#create\n   * @param {StartThreadOptions} [options] Options for starting a thread on this message\n   * @returns {Promise<ThreadChannel>}\n   */\n  startThread(options = {}) {\n    if (!this.channel) return Promise.reject(new DiscordjsError(ErrorCodes.ChannelNotCached));\n    if (![ChannelType.GuildText, ChannelType.GuildAnnouncement].includes(this.channel.type)) {\n      return Promise.reject(new DiscordjsError(ErrorCodes.MessageThreadParent));\n    }\n    if (this.hasThread) return Promise.reject(new DiscordjsError(ErrorCodes.MessageExistingThread));\n    return this.channel.threads.create({ ...options, startMessage: this });\n  }\n\n  /**\n   * Fetch this message.\n   * @param {boolean} [force=true] Whether to skip the cache check and request the API\n   * @returns {Promise<Message>}\n   */\n  fetch(force = true) {\n    if (!this.channel) return Promise.reject(new DiscordjsError(ErrorCodes.ChannelNotCached));\n    return this.channel.messages.fetch({ message: this.id, force });\n  }\n\n  /**\n   * Fetches the webhook used to create this message.\n   * @returns {Promise<?Webhook>}\n   */\n  fetchWebhook() {\n    if (!this.webhookId) return Promise.reject(new DiscordjsError(ErrorCodes.WebhookMessage));\n    if (this.webhookId === this.applicationId) return Promise.reject(new DiscordjsError(ErrorCodes.WebhookApplication));\n    return this.client.fetchWebhook(this.webhookId);\n  }\n\n  /**\n   * Suppresses or unsuppresses embeds on a message.\n   * @param {boolean} [suppress=true] If the embeds should be suppressed or not\n   * @returns {Promise<Message>}\n   */\n  suppressEmbeds(suppress = true) {\n    const flags = new MessageFlagsBitField(this.flags.bitfield);\n\n    if (suppress) {\n      flags.add(MessageFlags.SuppressEmbeds);\n    } else {\n      flags.remove(MessageFlags.SuppressEmbeds);\n    }\n\n    return this.edit({ flags });\n  }\n\n  /**\n   * Removes the attachments from this message.\n   * @returns {Promise<Message>}\n   */\n  removeAttachments() {\n    return this.edit({ attachments: [] });\n  }\n\n  /**\n   * Resolves a component by a custom id.\n   * @param {string} customId The custom id to resolve against\n   * @returns {?MessageActionRowComponent}\n   */\n  resolveComponent(customId) {\n    return this.components.flatMap(row => row.components).find(component => component.customId === customId) ?? null;\n  }\n\n  /**\n   * Used mainly internally. Whether two messages are identical in properties. If you want to compare messages\n   * without checking all the properties, use `message.id === message2.id`, which is much more efficient. This\n   * method allows you to see if there are differences in content, embeds, attachments, nonce and tts properties.\n   * @param {Message} message The message to compare it to\n   * @param {APIMessage} rawData Raw data passed through the WebSocket about this message\n   * @returns {boolean}\n   */\n  equals(message, rawData) {\n    if (!message) return false;\n    const embedUpdate = !message.author && !message.attachments;\n    if (embedUpdate) return this.id === message.id && this.embeds.length === message.embeds.length;\n\n    let equal =\n      this.id === message.id &&\n      this.author.id === message.author.id &&\n      this.content === message.content &&\n      this.nonce === message.nonce &&\n      this.tts === message.tts &&\n      this.attachments.size === message.attachments.size &&\n      this.embeds.length === message.embeds.length &&\n      this.attachments.every(attachment => message.attachments.has(attachment.id)) &&\n      this.embeds.every((embed, index) => embed.equals(message.embeds[index]));\n\n    if (equal && rawData) {\n      equal =\n        this.mentions.everyone === message.mentions.everyone &&\n        this.createdTimestamp === Date.parse(rawData.timestamp) &&\n        this.editedTimestamp === Date.parse(rawData.edited_timestamp);\n    }\n\n    return equal;\n  }\n\n  /**\n   * Whether this message is from a guild.\n   * @returns {boolean}\n   */\n  inGuild() {\n    return Boolean(this.guildId);\n  }\n\n  /**\n   * When concatenated with a string, this automatically concatenates the message's content instead of the object.\n   * @returns {string}\n   * @example\n   * // Logs: Message: This is a message!\n   * console.log(`Message: ${message}`);\n   */\n  toString() {\n    return this.content;\n  }\n\n  toJSON() {\n    return super.toJSON({\n      channel: 'channelId',\n      author: 'authorId',\n      groupActivityApplication: 'groupActivityApplicationId',\n      guild: 'guildId',\n      cleanContent: true,\n      member: false,\n      reactions: false,\n    });\n  }\n}\n\nexports.Message = Message;\n", "'use strict';\n\nconst { makeURLSearchParams } = require('@discordjs/rest');\nconst { lazy } = require('@discordjs/util');\nconst { DiscordSnowflake } = require('@sapphire/snowflake');\nconst { Routes, WebhookType } = require('discord-api-types/v10');\nconst MessagePayload = require('./MessagePayload');\nconst { DiscordjsError, ErrorCodes } = require('../errors');\nconst { resolveImage } = require('../util/DataResolver');\n\nconst getMessage = lazy(() => require('./Message').Message);\n\n/**\n * Represents a webhook.\n */\nclass Webhook {\n  constructor(client, data) {\n    /**\n     * The client that instantiated the webhook\n     * @name Webhook#client\n     * @type {Client}\n     * @readonly\n     */\n    Object.defineProperty(this, 'client', { value: client });\n    if (data) this._patch(data);\n  }\n\n  _patch(data) {\n    if ('name' in data) {\n      /**\n       * The name of the webhook\n       * @type {string}\n       */\n      this.name = data.name;\n    }\n\n    /**\n     * The token for the webhook, unavailable for follower webhooks and webhooks owned by another application.\n     * @name Webhook#token\n     * @type {?string}\n     */\n    Object.defineProperty(this, 'token', {\n      value: data.token ?? null,\n      writable: true,\n      configurable: true,\n    });\n\n    if ('avatar' in data) {\n      /**\n       * The avatar for the webhook\n       * @type {?string}\n       */\n      this.avatar = data.avatar;\n    }\n\n    /**\n     * The webhook's id\n     * @type {Snowflake}\n     */\n    this.id = data.id;\n\n    if ('type' in data) {\n      /**\n       * The type of the webhook\n       * @type {WebhookType}\n       */\n      this.type = data.type;\n    }\n\n    if ('guild_id' in data) {\n      /**\n       * The guild the webhook belongs to\n       * @type {Snowflake}\n       */\n      this.guildId = data.guild_id;\n    }\n\n    if ('channel_id' in data) {\n      /**\n       * The id of the channel the webhook belongs to\n       * @type {Snowflake}\n       */\n      this.channelId = data.channel_id;\n    }\n\n    if ('user' in data) {\n      /**\n       * The owner of the webhook\n       * @type {?(User|APIUser)}\n       */\n      this.owner = this.client.users?._add(data.user) ?? data.user;\n    } else {\n      this.owner ??= null;\n    }\n\n    if ('application_id' in data) {\n      /**\n       * The application that created this webhook\n       * @type {?Snowflake}\n       */\n      this.applicationId = data.application_id;\n    } else {\n      this.applicationId ??= null;\n    }\n\n    if ('source_guild' in data) {\n      /**\n       * The source guild of the webhook\n       * @type {?(Guild|APIGuild)}\n       */\n      this.sourceGuild = this.client.guilds?.resolve(data.source_guild.id) ?? data.source_guild;\n    } else {\n      this.sourceGuild ??= null;\n    }\n\n    if ('source_channel' in data) {\n      /**\n       * The source channel of the webhook\n       * @type {?(NewsChannel|APIChannel)}\n       */\n      this.sourceChannel = this.client.channels?.resolve(data.source_channel?.id) ?? data.source_channel;\n    } else {\n      this.sourceChannel ??= null;\n    }\n  }\n\n  /**\n   * Options that can be passed into send.\n   * @typedef {BaseMessageOptionsWithPoll} WebhookMessageCreateOptions\n   * @property {boolean} [tts=false] Whether the message should be spoken aloud\n   * @property {MessageFlags} [flags] Which flags to set for the message.\n   * <info>Only the {@link MessageFlags.SuppressEmbeds} flag can be set.</info>\n   * @property {string} [username=this.name] Username override for the message\n   * @property {string} [avatarURL] Avatar URL override for the message\n   * @property {Snowflake} [threadId] The id of the thread in the channel to send to.\n   * <info>For interaction webhooks, this property is ignored</info>\n   * @property {string} [threadName] Name of the thread to create (only available if the webhook is in a forum channel)\n   * @property {Snowflake[]} [appliedTags]\n   * The tags to apply to the created thread (only available if the webhook is in a forum channel)\n   */\n\n  /**\n   * Options that can be passed into editMessage.\n   * @typedef {BaseMessageOptions} WebhookMessageEditOptions\n   * @property {Attachment[]} [attachments] Attachments to send with the message\n   * @property {Snowflake} [threadId] The id of the thread this message belongs to\n   * <info>For interaction webhooks, this property is ignored</info>\n   */\n\n  /**\n   * The channel the webhook belongs to\n   * @type {?(TextChannel|VoiceChannel|StageChannel|NewsChannel|ForumChannel|MediaChannel)}\n   * @readonly\n   */\n  get channel() {\n    return this.client.channels.resolve(this.channelId);\n  }\n\n  /**\n   * Sends a message with this webhook.\n   * @param {string|MessagePayload|WebhookMessageCreateOptions} options The options to provide\n   * @returns {Promise<Message>}\n   * @example\n   * // Send a basic message\n   * webhook.send('hello!')\n   *   .then(message => console.log(`Sent message: ${message.content}`))\n   *   .catch(console.error);\n   * @example\n   * // Send a basic message in a thread\n   * webhook.send({ content: 'hello!', threadId: '836856309672348295' })\n   *   .then(message => console.log(`Sent message: ${message.content}`))\n   *   .catch(console.error);\n   * @example\n   * // Send a remote file\n   * webhook.send({\n   *   files: ['https://cdn.discordapp.com/icons/222078108977594368/6e1019b3179d71046e463a75915e7244.png?size=2048']\n   * })\n   *   .then(console.log)\n   *   .catch(console.error);\n   * @example\n   * // Send a local file\n   * webhook.send({\n   *   files: [{\n   *     attachment: 'entire/path/to/file.jpg',\n   *     name: 'file.jpg'\n   *   }]\n   * })\n   *   .then(console.log)\n   *   .catch(console.error);\n   * @example\n   * // Send an embed with a local image inside\n   * webhook.send({\n   *   content: 'This is an embed',\n   *   embeds: [{\n   *     thumbnail: {\n   *          url: 'attachment://file.jpg'\n   *       }\n   *    }],\n   *    files: [{\n   *       attachment: 'entire/path/to/file.jpg',\n   *       name: 'file.jpg'\n   *    }]\n   * })\n   *   .then(console.log)\n   *   .catch(console.error);\n   */\n  async send(options) {\n    if (!this.token) throw new DiscordjsError(ErrorCodes.WebhookTokenUnavailable);\n\n    let messagePayload;\n\n    if (options instanceof MessagePayload) {\n      messagePayload = options.resolveBody();\n    } else {\n      messagePayload = MessagePayload.create(this, options).resolveBody();\n    }\n\n    const query = makeURLSearchParams({\n      wait: true,\n      thread_id: messagePayload.options.threadId,\n    });\n\n    const { body, files } = await messagePayload.resolveFiles();\n    const d = await this.client.rest.post(Routes.webhook(this.id, this.token), {\n      body,\n      files,\n      query,\n      auth: false,\n    });\n\n    if (!this.client.channels) return d;\n    return this.client.channels.cache.get(d.channel_id)?.messages._add(d, false) ?? new (getMessage())(this.client, d);\n  }\n\n  /**\n   * Sends a raw slack message with this webhook.\n   * @param {Object} body The raw body to send\n   * @returns {Promise<boolean>}\n   * @example\n   * // Send a slack message\n   * webhook.sendSlackMessage({\n   *   'username': 'Wumpus',\n   *   'attachments': [{\n   *     'pretext': 'this looks pretty cool',\n   *     'color': '#F0F',\n   *     'footer_icon': 'http://snek.s3.amazonaws.com/topSnek.png',\n   *     'footer': 'Powered by sneks',\n   *     'ts': Date.now() / 1_000\n   *   }]\n   * }).catch(console.error);\n   * @see {@link https://api.slack.com/messaging/webhooks}\n   */\n  async sendSlackMessage(body) {\n    if (!this.token) throw new DiscordjsError(ErrorCodes.WebhookTokenUnavailable);\n\n    const data = await this.client.rest.post(Routes.webhookPlatform(this.id, this.token, 'slack'), {\n      query: makeURLSearchParams({ wait: true }),\n      auth: false,\n      body,\n    });\n    return data.toString() === 'ok';\n  }\n\n  /**\n   * Options used to edit a {@link Webhook}.\n   * @typedef {Object} WebhookEditOptions\n   * @property {string} [name=this.name] The new name for the webhook\n   * @property {?(BufferResolvable)} [avatar] The new avatar for the webhook\n   * @property {GuildTextChannelResolvable|VoiceChannel|StageChannel|ForumChannel|MediaChannel} [channel]\n   * The new channel for the webhook\n   * @property {string} [reason] Reason for editing the webhook\n   */\n\n  /**\n   * Edits this webhook.\n   * @param {WebhookEditOptions} options Options for editing the webhook\n   * @returns {Promise<Webhook>}\n   */\n  async edit({ name = this.name, avatar, channel, reason }) {\n    if (avatar && !(typeof avatar === 'string' && avatar.startsWith('data:'))) {\n      avatar = await resolveImage(avatar);\n    }\n    channel &&= channel.id ?? channel;\n    const data = await this.client.rest.patch(Routes.webhook(this.id, channel ? undefined : this.token), {\n      body: { name, avatar, channel_id: channel },\n      reason,\n      auth: !this.token || Boolean(channel),\n    });\n\n    this.name = data.name;\n    this.avatar = data.avatar;\n    this.channelId = data.channel_id;\n    return this;\n  }\n\n  /**\n   * Options that can be passed into fetchMessage.\n   * @typedef {options} WebhookFetchMessageOptions\n   * @property {boolean} [cache=true] Whether to cache the message.\n   * @property {Snowflake} [threadId] The id of the thread this message belongs to.\n   * <info>For interaction webhooks, this property is ignored</info>\n   */\n\n  /**\n   * Gets a message that was sent by this webhook.\n   * @param {Snowflake|'@original'} message The id of the message to fetch\n   * @param {WebhookFetchMessageOptions} [options={}] The options to provide to fetch the message.\n   * @returns {Promise<Message>} Returns the message sent by this webhook\n   */\n  async fetchMessage(message, { threadId } = {}) {\n    if (!this.token) throw new DiscordjsError(ErrorCodes.WebhookTokenUnavailable);\n\n    const data = await this.client.rest.get(Routes.webhookMessage(this.id, this.token, message), {\n      query: threadId ? makeURLSearchParams({ thread_id: threadId }) : undefined,\n      auth: false,\n    });\n\n    if (!this.client.channels) return data;\n    return (\n      this.client.channels.cache.get(data.channel_id)?.messages._add(data, false) ??\n      new (getMessage())(this.client, data)\n    );\n  }\n\n  /**\n   * Edits a message that was sent by this webhook.\n   * @param {MessageResolvable|'@original'} message The message to edit\n   * @param {string|MessagePayload|WebhookMessageEditOptions} options The options to provide\n   * @returns {Promise<Message>} Returns the message edited by this webhook\n   */\n  async editMessage(message, options) {\n    if (!this.token) throw new DiscordjsError(ErrorCodes.WebhookTokenUnavailable);\n\n    let messagePayload;\n\n    if (options instanceof MessagePayload) messagePayload = options;\n    else messagePayload = MessagePayload.create(this, options);\n\n    const { body, files } = await messagePayload.resolveBody().resolveFiles();\n\n    const d = await this.client.rest.patch(\n      Routes.webhookMessage(this.id, this.token, typeof message === 'string' ? message : message.id),\n      {\n        body,\n        files,\n        query: messagePayload.options.threadId\n          ? makeURLSearchParams({ thread_id: messagePayload.options.threadId })\n          : undefined,\n        auth: false,\n      },\n    );\n\n    const channelManager = this.client.channels;\n    if (!channelManager) return d;\n\n    const messageManager = channelManager.cache.get(d.channel_id)?.messages;\n    if (!messageManager) return new (getMessage())(this.client, d);\n\n    const existing = messageManager.cache.get(d.id);\n    if (!existing) return messageManager._add(d);\n\n    const clone = existing._clone();\n    clone._patch(d);\n    return clone;\n  }\n\n  /**\n   * Deletes the webhook.\n   * @param {string} [reason] Reason for deleting this webhook\n   * @returns {Promise<void>}\n   */\n  delete(reason) {\n    return this.client.deleteWebhook(this.id, { token: this.token, reason });\n  }\n\n  /**\n   * Delete a message that was sent by this webhook.\n   * @param {MessageResolvable|'@original'} message The message to delete\n   * @param {Snowflake} [threadId] The id of the thread this message belongs to\n   * @returns {Promise<void>}\n   */\n  async deleteMessage(message, threadId) {\n    if (!this.token) throw new DiscordjsError(ErrorCodes.WebhookTokenUnavailable);\n\n    await this.client.rest.delete(\n      Routes.webhookMessage(this.id, this.token, typeof message === 'string' ? message : message.id),\n      {\n        query: threadId ? makeURLSearchParams({ thread_id: threadId }) : undefined,\n        auth: false,\n      },\n    );\n  }\n\n  /**\n   * The timestamp the webhook was created at\n   * @type {number}\n   * @readonly\n   */\n  get createdTimestamp() {\n    return DiscordSnowflake.timestampFrom(this.id);\n  }\n\n  /**\n   * The time the webhook was created at\n   * @type {Date}\n   * @readonly\n   */\n  get createdAt() {\n    return new Date(this.createdTimestamp);\n  }\n\n  /**\n   * The URL of this webhook\n   * @type {string}\n   * @readonly\n   */\n  get url() {\n    return this.client.options.rest.api + Routes.webhook(this.id, this.token);\n  }\n\n  /**\n   * A link to the webhook's avatar.\n   * @param {ImageURLOptions} [options={}] Options for the image URL\n   * @returns {?string}\n   */\n  avatarURL(options = {}) {\n    return this.avatar && this.client.rest.cdn.avatar(this.id, this.avatar, options);\n  }\n\n  /**\n   * Whether this webhook is created by a user.\n   * @returns {boolean}\n   */\n  isUserCreated() {\n    return Boolean(this.type === WebhookType.Incoming && this.owner && !this.owner.bot);\n  }\n\n  /**\n   * Whether this webhook is created by an application.\n   * @returns {boolean}\n   */\n  isApplicationCreated() {\n    return this.type === WebhookType.Application;\n  }\n\n  /**\n   * Whether or not this webhook is a channel follower webhook.\n   * @returns {boolean}\n   */\n  isChannelFollower() {\n    return this.type === WebhookType.ChannelFollower;\n  }\n\n  /**\n   * Whether or not this webhook is an incoming webhook.\n   * @returns {boolean}\n   */\n  isIncoming() {\n    return this.type === WebhookType.Incoming;\n  }\n\n  static applyToClass(structure, ignore = []) {\n    for (const prop of [\n      'send',\n      'sendSlackMessage',\n      'fetchMessage',\n      'edit',\n      'editMessage',\n      'delete',\n      'deleteMessage',\n      'createdTimestamp',\n      'createdAt',\n      'url',\n    ]) {\n      if (ignore.includes(prop)) continue;\n      Object.defineProperty(structure.prototype, prop, Object.getOwnPropertyDescriptor(Webhook.prototype, prop));\n    }\n  }\n}\n\nmodule.exports = Webhook;\n", "'use strict';\n\nconst BaseClient = require('./BaseClient');\nconst { DiscordjsError, ErrorCodes } = require('../errors');\nconst Webhook = require('../structures/Webhook');\nconst { parseWebhookURL } = require('../util/Util');\n\n/**\n * The webhook client.\n * @implements {Webhook}\n * @extends {BaseClient}\n */\nclass WebhookClient extends BaseClient {\n  /**\n   * Represents the credentials used for a webhook in the form of its id and token.\n   * @typedef {Object} WebhookClientDataIdWithToken\n   * @property {Snowflake} id The webhook's id\n   * @property {string} token The webhook's token\n   */\n\n  /**\n   * Represents the credentials used for a webhook in the form of a URL.\n   * @typedef {Object} WebhookClientDataURL\n   * @property {string} url The full URL for the webhook\n   */\n\n  /**\n   * Represents the credentials used for a webhook.\n   * @typedef {WebhookClientDataIdWithToken|WebhookClientDataURL} WebhookClientData\n   */\n\n  /**\n   * Options for a webhook client.\n   * @typedef {Object} WebhookClientOptions\n   * @property {MessageMentionOptions} [allowedMentions] Default value for {@link BaseMessageOptions#allowedMentions}\n   * @property {RESTOptions} [rest] Options for the REST manager\n   */\n\n  /**\n   * @param {WebhookClientData} data The data of the webhook\n   * @param {WebhookClientOptions} [options] Options for the webhook client\n   */\n  constructor(data, options) {\n    super(options);\n    Object.defineProperty(this, 'client', { value: this });\n    let { id, token } = data;\n\n    if ('url' in data) {\n      const parsed = parseWebhookURL(data.url);\n      if (!parsed) {\n        throw new DiscordjsError(ErrorCodes.WebhookURLInvalid);\n      }\n\n      ({ id, token } = parsed);\n    }\n\n    this.id = id;\n    Object.defineProperty(this, 'token', { value: token, writable: true, configurable: true });\n  }\n\n  /**\n   * The options the webhook client was instantiated with.\n   * @type {WebhookClientOptions}\n   * @name WebhookClient#options\n   */\n\n  // These are here only for documentation purposes - they are implemented by Webhook\n  /* eslint-disable no-empty-function, valid-jsdoc */\n  /**\n   * Sends a message with this webhook.\n   * @param {string|MessagePayload|WebhookMessageCreateOptions} options The content for the reply\n   * @returns {Promise<APIMessage>}\n   */\n  send() {}\n\n  /**\n   * Gets a message that was sent by this webhook.\n   * @param {Snowflake} message The id of the message to fetch\n   * @param {WebhookFetchMessageOptions} [options={}] The options to provide to fetch the message.\n   * @returns {Promise<APIMessage>} Returns the message sent by this webhook\n   */\n  fetchMessage() {}\n\n  /**\n   * Edits a message that was sent by this webhook.\n   * @param {MessageResolvable} message The message to edit\n   * @param {string|MessagePayload|WebhookMessageEditOptions} options The options to provide\n   * @returns {Promise<APIMessage>} Returns the message edited by this webhook\n   */\n  editMessage() {}\n\n  sendSlackMessage() {}\n  edit() {}\n  delete() {}\n  deleteMessage() {}\n  get createdTimestamp() {}\n  get createdAt() {}\n  get url() {}\n}\n\nWebhook.applyToClass(WebhookClient);\n\nmodule.exports = WebhookClient;\n", "'use strict';\n\nconst { ChannelType, Routes } = require('discord-api-types/v10');\nconst Base = require('./Base');\nconst { DiscordjsError, DiscordjsTypeError, ErrorCodes } = require('../errors');\n\n/**\n * Represents the voice state for a Guild Member.\n * @extends {Base}\n */\nclass VoiceState extends Base {\n  constructor(guild, data) {\n    super(guild.client);\n    /**\n     * The guild of this voice state\n     * @type {Guild}\n     */\n    this.guild = guild;\n    /**\n     * The id of the member of this voice state\n     * @type {Snowflake}\n     */\n    this.id = data.user_id;\n    this._patch(data);\n  }\n\n  _patch(data) {\n    if ('deaf' in data) {\n      /**\n       * Whether this member is deafened server-wide\n       * @type {?boolean}\n       */\n      this.serverDeaf = data.deaf;\n    } else {\n      this.serverDeaf ??= null;\n    }\n\n    if ('mute' in data) {\n      /**\n       * Whether this member is muted server-wide\n       * @type {?boolean}\n       */\n      this.serverMute = data.mute;\n    } else {\n      this.serverMute ??= null;\n    }\n\n    if ('self_deaf' in data) {\n      /**\n       * Whether this member is self-deafened\n       * @type {?boolean}\n       */\n      this.selfDeaf = data.self_deaf;\n    } else {\n      this.selfDeaf ??= null;\n    }\n\n    if ('self_mute' in data) {\n      /**\n       * Whether this member is self-muted\n       * @type {?boolean}\n       */\n      this.selfMute = data.self_mute;\n    } else {\n      this.selfMute ??= null;\n    }\n\n    if ('self_video' in data) {\n      /**\n       * Whether this member's camera is enabled\n       * @type {?boolean}\n       */\n      this.selfVideo = data.self_video;\n    } else {\n      this.selfVideo ??= null;\n    }\n\n    if ('session_id' in data) {\n      /**\n       * The session id for this member's connection\n       * @type {?string}\n       */\n      this.sessionId = data.session_id;\n    } else {\n      this.sessionId ??= null;\n    }\n\n    // The self_stream is property is omitted if false, check for another property\n    // here to avoid incorrectly clearing this when partial data is specified\n    if ('self_video' in data) {\n      /**\n       * Whether this member is streaming using \"Screen Share\"\n       * @type {?boolean}\n       */\n      this.streaming = data.self_stream ?? false;\n    } else {\n      this.streaming ??= null;\n    }\n\n    if ('channel_id' in data) {\n      /**\n       * The {@link VoiceChannel} or {@link StageChannel} id the member is in\n       * @type {?Snowflake}\n       */\n      this.channelId = data.channel_id;\n    } else {\n      this.channelId ??= null;\n    }\n\n    if ('suppress' in data) {\n      /**\n       * Whether this member is suppressed from speaking. This property is specific to stage channels only.\n       * @type {?boolean}\n       */\n      this.suppress = data.suppress;\n    } else {\n      this.suppress ??= null;\n    }\n\n    if ('request_to_speak_timestamp' in data) {\n      /**\n       * The time at which the member requested to speak. This property is specific to stage channels only.\n       * @type {?number}\n       */\n      this.requestToSpeakTimestamp = data.request_to_speak_timestamp && Date.parse(data.request_to_speak_timestamp);\n    } else {\n      this.requestToSpeakTimestamp ??= null;\n    }\n\n    return this;\n  }\n\n  /**\n   * The member that this voice state belongs to\n   * @type {?GuildMember}\n   * @readonly\n   */\n  get member() {\n    return this.guild.members.cache.get(this.id) ?? null;\n  }\n\n  /**\n   * The channel that the member is connected to\n   * @type {?(VoiceChannel|StageChannel)}\n   * @readonly\n   */\n  get channel() {\n    return this.guild.channels.cache.get(this.channelId) ?? null;\n  }\n\n  /**\n   * Whether this member is either self-deafened or server-deafened\n   * @type {?boolean}\n   * @readonly\n   */\n  get deaf() {\n    return this.serverDeaf || this.selfDeaf;\n  }\n\n  /**\n   * Whether this member is either self-muted or server-muted\n   * @type {?boolean}\n   * @readonly\n   */\n  get mute() {\n    return this.serverMute || this.selfMute;\n  }\n\n  /**\n   * Mutes/unmutes the member of this voice state.\n   * @param {boolean} [mute=true] Whether or not the member should be muted\n   * @param {string} [reason] Reason for muting or unmuting\n   * @returns {Promise<GuildMember>}\n   */\n  setMute(mute = true, reason) {\n    return this.guild.members.edit(this.id, { mute, reason });\n  }\n\n  /**\n   * Deafens/undeafens the member of this voice state.\n   * @param {boolean} [deaf=true] Whether or not the member should be deafened\n   * @param {string} [reason] Reason for deafening or undeafening\n   * @returns {Promise<GuildMember>}\n   */\n  setDeaf(deaf = true, reason) {\n    return this.guild.members.edit(this.id, { deaf, reason });\n  }\n\n  /**\n   * Disconnects the member from the channel.\n   * @param {string} [reason] Reason for disconnecting the member from the channel\n   * @returns {Promise<GuildMember>}\n   */\n  disconnect(reason) {\n    return this.setChannel(null, reason);\n  }\n\n  /**\n   * Moves the member to a different channel, or disconnects them from the one they're in.\n   * @param {?GuildVoiceChannelResolvable} channel Channel to move the member to, or `null` if you want to\n   * disconnect them from voice.\n   * @param {string} [reason] Reason for moving member to another channel or disconnecting\n   * @returns {Promise<GuildMember>}\n   */\n  setChannel(channel, reason) {\n    return this.guild.members.edit(this.id, { channel, reason });\n  }\n\n  /**\n   * Data to edit the logged in user's own voice state with, when in a stage channel\n   * @typedef {Object} VoiceStateEditOptions\n   * @property {boolean} [requestToSpeak] Whether or not the client is requesting to become a speaker.\n   * <info>Only available to the logged in user's own voice state.</info>\n   * @property {boolean} [suppressed] Whether or not the user should be suppressed.\n   */\n\n  /**\n   * Edits this voice state. Currently only available when in a stage channel\n   * @param {VoiceStateEditOptions} options The options to provide\n   * @returns {Promise<VoiceState>}\n   */\n  async edit(options) {\n    if (this.channel?.type !== ChannelType.GuildStageVoice) throw new DiscordjsError(ErrorCodes.VoiceNotStageChannel);\n\n    const target = this.client.user.id === this.id ? '@me' : this.id;\n\n    if (target !== '@me' && options.requestToSpeak !== undefined) {\n      throw new DiscordjsError(ErrorCodes.VoiceStateNotOwn);\n    }\n\n    if (!['boolean', 'undefined'].includes(typeof options.requestToSpeak)) {\n      throw new DiscordjsTypeError(ErrorCodes.VoiceStateInvalidType, 'requestToSpeak');\n    }\n\n    if (!['boolean', 'undefined'].includes(typeof options.suppressed)) {\n      throw new DiscordjsTypeError(ErrorCodes.VoiceStateInvalidType, 'suppressed');\n    }\n\n    await this.client.rest.patch(Routes.guildVoiceState(this.guild.id, target), {\n      body: {\n        channel_id: this.channelId,\n        request_to_speak_timestamp: options.requestToSpeak\n          ? new Date().toISOString()\n          : options.requestToSpeak === false\n            ? null\n            : undefined,\n        suppress: options.suppressed,\n      },\n    });\n    return this;\n  }\n\n  /**\n   * Fetches this voice state.\n   * @param {boolean} [force=true] Whether to skip the cache check and request the API\n   * @returns {Promise<VoiceState>}\n   */\n  fetch(force = true) {\n    return this.guild.voiceStates.fetch(this.id, { force });\n  }\n\n  /**\n   * Toggles the request to speak in the channel.\n   * Only applicable for stage channels and for the client's own voice state.\n   * @param {boolean} [requestToSpeak=true] Whether or not the client is requesting to become a speaker.\n   * @example\n   * // Making the client request to speak in a stage channel (raise its hand)\n   * guild.members.me.voice.setRequestToSpeak(true);\n   * @example\n   * // Making the client cancel a request to speak\n   * guild.members.me.voice.setRequestToSpeak(false);\n   * @returns {Promise<VoiceState>}\n   */\n  setRequestToSpeak(requestToSpeak = true) {\n    return this.edit({ requestToSpeak });\n  }\n\n  /**\n   * Suppress/unsuppress the user. Only applicable for stage channels.\n   * @param {boolean} [suppressed=true] Whether or not the user should be suppressed.\n   * @example\n   * // Making the client a speaker\n   * guild.members.me.voice.setSuppressed(false);\n   * @example\n   * // Making the client an audience member\n   * guild.members.me.voice.setSuppressed(true);\n   * @example\n   * // Inviting another user to speak\n   * voiceState.setSuppressed(false);\n   * @example\n   * // Moving another user to the audience, or cancelling their invite to speak\n   * voiceState.setSuppressed(true);\n   * @returns {Promise<VoiceState>}\n   */\n  setSuppressed(suppressed = true) {\n    return this.edit({ suppressed });\n  }\n\n  toJSON() {\n    return super.toJSON({\n      id: true,\n      serverDeaf: true,\n      serverMute: true,\n      selfDeaf: true,\n      selfMute: true,\n      sessionId: true,\n      channelId: 'channel',\n    });\n  }\n}\n\nmodule.exports = VoiceState;\n", "'use strict';\n\nconst { Collection } = require('@discordjs/collection');\nconst { Routes } = require('discord-api-types/v10');\nconst DataManager = require('./DataManager');\nconst { DiscordjsTypeError, ErrorCodes } = require('../errors');\nconst { Role } = require('../structures/Role');\n\n/**\n * Manages API methods for roles of a GuildMember and stores their cache.\n * @extends {DataManager}\n */\nclass GuildMemberRoleManager extends DataManager {\n  constructor(member) {\n    super(member.client, Role);\n\n    /**\n     * The GuildMember this manager belongs to\n     * @type {GuildMember}\n     */\n    this.member = member;\n\n    /**\n     * The Guild this manager belongs to\n     * @type {Guild}\n     */\n    this.guild = member.guild;\n  }\n\n  /**\n   * The roles of this member\n   * @type {Collection<Snowflake, Role>}\n   * @readonly\n   */\n  get cache() {\n    const everyone = this.guild.roles.everyone;\n    return this.guild.roles.cache.filter(role => this.member._roles.includes(role.id)).set(everyone.id, everyone);\n  }\n\n  /**\n   * The role of the member used to hoist them in a separate category in the users list\n   * @type {?Role}\n   * @readonly\n   */\n  get hoist() {\n    const hoistedRoles = this.cache.filter(role => role.hoist);\n    if (!hoistedRoles.size) return null;\n    return hoistedRoles.reduce((prev, role) => (role.comparePositionTo(prev) > 0 ? role : prev));\n  }\n\n  /**\n   * The role of the member used to set their role icon\n   * @type {?Role}\n   * @readonly\n   */\n  get icon() {\n    const iconRoles = this.cache.filter(role => role.icon || role.unicodeEmoji);\n    if (!iconRoles.size) return null;\n    return iconRoles.reduce((prev, role) => (role.comparePositionTo(prev) > 0 ? role : prev));\n  }\n\n  /**\n   * The role of the member used to set their color\n   * @type {?Role}\n   * @readonly\n   */\n  get color() {\n    const coloredRoles = this.cache.filter(role => role.color);\n    if (!coloredRoles.size) return null;\n    return coloredRoles.reduce((prev, role) => (role.comparePositionTo(prev) > 0 ? role : prev));\n  }\n\n  /**\n   * The role of the member with the highest position\n   * @type {Role}\n   * @readonly\n   */\n  get highest() {\n    return this.cache.reduce((prev, role) => (role.comparePositionTo(prev) > 0 ? role : prev), this.cache.first());\n  }\n\n  /**\n   * The premium subscriber role of the guild, if present on the member\n   * @type {?Role}\n   * @readonly\n   */\n  get premiumSubscriberRole() {\n    return this.cache.find(role => role.tags?.premiumSubscriberRole) ?? null;\n  }\n\n  /**\n   * The managed role this member created when joining the guild, if any\n   * <info>Only ever available on bots</info>\n   * @type {?Role}\n   * @readonly\n   */\n  get botRole() {\n    if (!this.member.user.bot) return null;\n    return this.cache.find(role => role.tags?.botId === this.member.user.id) ?? null;\n  }\n\n  /**\n   * Adds a role (or multiple roles) to the member.\n   * @param {RoleResolvable|RoleResolvable[]|Collection<Snowflake, Role>} roleOrRoles The role or roles to add\n   * @param {string} [reason] Reason for adding the role(s)\n   * @returns {Promise<GuildMember>}\n   */\n  async add(roleOrRoles, reason) {\n    if (roleOrRoles instanceof Collection || Array.isArray(roleOrRoles)) {\n      const resolvedRoles = [];\n      for (const role of roleOrRoles.values()) {\n        const resolvedRole = this.guild.roles.resolveId(role);\n        if (!resolvedRole) {\n          throw new DiscordjsTypeError(ErrorCodes.InvalidElement, 'Array or Collection', 'roles', role);\n        }\n        resolvedRoles.push(resolvedRole);\n      }\n\n      const newRoles = [...new Set(resolvedRoles.concat(...this.cache.keys()))];\n      return this.set(newRoles, reason);\n    } else {\n      roleOrRoles = this.guild.roles.resolveId(roleOrRoles);\n      if (roleOrRoles === null) {\n        throw new DiscordjsTypeError(\n          ErrorCodes.InvalidType,\n          'roles',\n          'Role, Snowflake or Array or Collection of Roles or Snowflakes',\n        );\n      }\n\n      await this.client.rest.put(Routes.guildMemberRole(this.guild.id, this.member.id, roleOrRoles), { reason });\n\n      const clone = this.member._clone();\n      clone._roles = [...this.cache.keys(), roleOrRoles];\n      return clone;\n    }\n  }\n\n  /**\n   * Removes a role (or multiple roles) from the member.\n   * @param {RoleResolvable|RoleResolvable[]|Collection<Snowflake, Role>} roleOrRoles The role or roles to remove\n   * @param {string} [reason] Reason for removing the role(s)\n   * @returns {Promise<GuildMember>}\n   */\n  async remove(roleOrRoles, reason) {\n    if (roleOrRoles instanceof Collection || Array.isArray(roleOrRoles)) {\n      const resolvedRoles = [];\n      for (const role of roleOrRoles.values()) {\n        const resolvedRole = this.guild.roles.resolveId(role);\n        if (!resolvedRole) {\n          throw new DiscordjsTypeError(ErrorCodes.InvalidElement, 'Array or Collection', 'roles', role);\n        }\n        resolvedRoles.push(resolvedRole);\n      }\n\n      const newRoles = this.cache.filter(role => !resolvedRoles.includes(role.id));\n      return this.set(newRoles, reason);\n    } else {\n      roleOrRoles = this.guild.roles.resolveId(roleOrRoles);\n      if (roleOrRoles === null) {\n        throw new DiscordjsTypeError(\n          ErrorCodes.InvalidType,\n          'roles',\n          'Role, Snowflake or Array or Collection of Roles or Snowflakes',\n        );\n      }\n\n      await this.client.rest.delete(Routes.guildMemberRole(this.guild.id, this.member.id, roleOrRoles), { reason });\n\n      const clone = this.member._clone();\n      const newRoles = this.cache.filter(role => role.id !== roleOrRoles);\n      clone._roles = [...newRoles.keys()];\n      return clone;\n    }\n  }\n\n  /**\n   * Sets the roles applied to the member.\n   * @param {Collection<Snowflake, Role>|RoleResolvable[]} roles The roles or role ids to apply\n   * @param {string} [reason] Reason for applying the roles\n   * @returns {Promise<GuildMember>}\n   * @example\n   * // Set the member's roles to a single role\n   * guildMember.roles.set(['391156570408615936'])\n   *   .then(console.log)\n   *   .catch(console.error);\n   * @example\n   * // Remove all the roles from a member\n   * guildMember.roles.set([])\n   *   .then(member => console.log(`Member roles is now of ${member.roles.cache.size} size`))\n   *   .catch(console.error);\n   */\n  set(roles, reason) {\n    return this.member.edit({ roles, reason });\n  }\n\n  clone() {\n    const clone = new this.constructor(this.member);\n    clone.member._roles = [...this.cache.keys()];\n    return clone;\n  }\n}\n\nmodule.exports = GuildMemberRoleManager;\n", "'use strict';\n\nconst { GuildMemberFlags } = require('discord-api-types/v10');\nconst BitField = require('./BitField');\n\n/**\n * Data structure that makes it easy to interact with a {@link GuildMember#flags} bitfield.\n * @extends {BitField}\n */\nclass GuildMemberFlagsBitField extends BitField {\n  /**\n   * Numeric guild guild member flags.\n   * @type {GuildMemberFlags}\n   * @memberof GuildMemberFlagsBitField\n   */\n  static Flags = GuildMemberFlags;\n}\n\n/**\n * @name GuildMemberFlagsBitField\n * @kind constructor\n * @memberof GuildMemberFlagsBitField\n * @param {BitFieldResolvable} [bits=0] Bit(s) to read from\n */\n\n/**\n * Bitfield of the packed bits\n * @type {number}\n * @name GuildMemberFlagsBitField#bitfield\n */\n\n/**\n * Data that can be resolved to give a guild member flag bitfield. This can be:\n * * A string (see {@link GuildMemberFlagsBitField.Flags})\n * * A guild member flag\n * * An instance of GuildMemberFlagsBitField\n * * An Array of GuildMemberFlagsResolvable\n * @typedef {string|number|GuildMemberFlagsBitField|GuildMemberFlagsResolvable[]} GuildMemberFlagsResolvable\n */\n\nexports.GuildMemberFlagsBitField = GuildMemberFlagsBitField;\n", "'use strict';\n\nconst { PermissionFlagsBits } = require('discord-api-types/v10');\nconst Base = require('./Base');\nconst VoiceState = require('./VoiceState');\nconst TextBasedChannel = require('./interfaces/TextBasedChannel');\nconst { DiscordjsError, ErrorCodes } = require('../errors');\nconst GuildMemberRoleManager = require('../managers/GuildMemberRoleManager');\nconst { GuildMemberFlagsBitField } = require('../util/GuildMemberFlagsBitField');\nconst PermissionsBitField = require('../util/PermissionsBitField');\n\n/**\n * Represents a member of a guild on Discord.\n * @implements {TextBasedChannel}\n * @extends {Base}\n */\nclass GuildMember extends Base {\n  constructor(client, data, guild) {\n    super(client);\n\n    /**\n     * The guild that this member is part of\n     * @type {Guild}\n     */\n    this.guild = guild;\n\n    /**\n     * The timestamp the member joined the guild at\n     * @type {?number}\n     */\n    this.joinedTimestamp = null;\n\n    /**\n     * The last timestamp this member started boosting the guild\n     * @type {?number}\n     */\n    this.premiumSinceTimestamp = null;\n\n    /**\n     * The nickname of this member, if they have one\n     * @type {?string}\n     */\n    this.nickname = null;\n\n    /**\n     * Whether this member has yet to pass the guild's membership gate\n     * @type {?boolean}\n     */\n    this.pending = null;\n\n    /**\n     * The timestamp this member's timeout will be removed\n     * @type {?number}\n     */\n    this.communicationDisabledUntilTimestamp = null;\n\n    /**\n     * The role ids of the member\n     * @name GuildMember#_roles\n     * @type {Snowflake[]}\n     * @private\n     */\n    Object.defineProperty(this, '_roles', { value: [], writable: true });\n\n    if (data) this._patch(data);\n  }\n\n  _patch(data) {\n    if ('user' in data) {\n      /**\n       * The user that this guild member instance represents\n       * @type {?User}\n       */\n      this.user = this.client.users._add(data.user, true);\n    }\n\n    if ('nick' in data) this.nickname = data.nick;\n    if ('avatar' in data) {\n      /**\n       * The guild member's avatar hash\n       * @type {?string}\n       */\n      this.avatar = data.avatar;\n    } else if (typeof this.avatar !== 'string') {\n      this.avatar = null;\n    }\n    if ('joined_at' in data) this.joinedTimestamp = Date.parse(data.joined_at);\n    if ('premium_since' in data) {\n      this.premiumSinceTimestamp = data.premium_since ? Date.parse(data.premium_since) : null;\n    }\n    if ('roles' in data) this._roles = data.roles;\n\n    if ('pending' in data) {\n      this.pending = data.pending;\n    } else if (!this.partial) {\n      // See https://github.com/discordjs/discord.js/issues/6546 for more info.\n      this.pending ??= false;\n    }\n\n    if ('communication_disabled_until' in data) {\n      this.communicationDisabledUntilTimestamp =\n        data.communication_disabled_until && Date.parse(data.communication_disabled_until);\n    }\n\n    if ('flags' in data) {\n      /**\n       * The flags of this member\n       * @type {Readonly<GuildMemberFlagsBitField>}\n       */\n      this.flags = new GuildMemberFlagsBitField(data.flags).freeze();\n    } else {\n      this.flags ??= new GuildMemberFlagsBitField().freeze();\n    }\n  }\n\n  _clone() {\n    const clone = super._clone();\n    clone._roles = this._roles.slice();\n    return clone;\n  }\n\n  /**\n   * Whether this GuildMember is a partial\n   * @type {boolean}\n   * @readonly\n   */\n  get partial() {\n    return this.joinedTimestamp === null;\n  }\n\n  /**\n   * A manager for the roles belonging to this member\n   * @type {GuildMemberRoleManager}\n   * @readonly\n   */\n  get roles() {\n    return new GuildMemberRoleManager(this);\n  }\n\n  /**\n   * The voice state of this member\n   * @type {VoiceState}\n   * @readonly\n   */\n  get voice() {\n    return this.guild.voiceStates.cache.get(this.id) ?? new VoiceState(this.guild, { user_id: this.id });\n  }\n\n  /**\n   * A link to the member's guild avatar.\n   * @param {ImageURLOptions} [options={}] Options for the image URL\n   * @returns {?string}\n   */\n  avatarURL(options = {}) {\n    return this.avatar && this.client.rest.cdn.guildMemberAvatar(this.guild.id, this.id, this.avatar, options);\n  }\n\n  /**\n   * A link to the member's guild avatar if they have one.\n   * Otherwise, a link to their {@link User#displayAvatarURL} will be returned.\n   * @param {ImageURLOptions} [options={}] Options for the image URL\n   * @returns {string}\n   */\n  displayAvatarURL(options) {\n    return this.avatarURL(options) ?? this.user.displayAvatarURL(options);\n  }\n\n  /**\n   * The time this member joined the guild\n   * @type {?Date}\n   * @readonly\n   */\n  get joinedAt() {\n    return this.joinedTimestamp && new Date(this.joinedTimestamp);\n  }\n\n  /**\n   * The time this member's timeout will be removed\n   * @type {?Date}\n   * @readonly\n   */\n  get communicationDisabledUntil() {\n    return this.communicationDisabledUntilTimestamp && new Date(this.communicationDisabledUntilTimestamp);\n  }\n\n  /**\n   * The last time this member started boosting the guild\n   * @type {?Date}\n   * @readonly\n   */\n  get premiumSince() {\n    return this.premiumSinceTimestamp && new Date(this.premiumSinceTimestamp);\n  }\n\n  /**\n   * The presence of this guild member\n   * @type {?Presence}\n   * @readonly\n   */\n  get presence() {\n    return this.guild.presences.resolve(this.id);\n  }\n\n  /**\n   * The displayed role color of this member in base 10\n   * @type {number}\n   * @readonly\n   */\n  get displayColor() {\n    return this.roles.color?.color ?? 0;\n  }\n\n  /**\n   * The displayed role color of this member in hexadecimal\n   * @type {string}\n   * @readonly\n   */\n  get displayHexColor() {\n    return this.roles.color?.hexColor ?? '#000000';\n  }\n\n  /**\n   * The member's id\n   * @type {Snowflake}\n   * @readonly\n   */\n  get id() {\n    return this.user.id;\n  }\n\n  /**\n   * The DM between the client's user and this member\n   * @type {?DMChannel}\n   * @readonly\n   */\n  get dmChannel() {\n    return this.client.users.dmChannel(this.id);\n  }\n\n  /**\n   * The nickname of this member, or their user display name if they don't have one\n   * @type {?string}\n   * @readonly\n   */\n  get displayName() {\n    return this.nickname ?? this.user.displayName;\n  }\n\n  /**\n   * The overall set of permissions for this member, taking only roles and owner status into account\n   * @type {Readonly<PermissionsBitField>}\n   * @readonly\n   */\n  get permissions() {\n    if (this.user.id === this.guild.ownerId) return new PermissionsBitField(PermissionsBitField.All).freeze();\n    return new PermissionsBitField(this.roles.cache.map(role => role.permissions)).freeze();\n  }\n\n  /**\n   * Whether the client user is above this user in the hierarchy, according to role position and guild ownership.\n   * This is a prerequisite for many moderative actions.\n   * @type {boolean}\n   * @readonly\n   */\n  get manageable() {\n    if (this.user.id === this.guild.ownerId) return false;\n    if (this.user.id === this.client.user.id) return false;\n    if (this.client.user.id === this.guild.ownerId) return true;\n    if (!this.guild.members.me) throw new DiscordjsError(ErrorCodes.GuildUncachedMe);\n    return this.guild.members.me.roles.highest.comparePositionTo(this.roles.highest) > 0;\n  }\n\n  /**\n   * Whether this member is kickable by the client user\n   * @type {boolean}\n   * @readonly\n   */\n  get kickable() {\n    if (!this.guild.members.me) throw new DiscordjsError(ErrorCodes.GuildUncachedMe);\n    return this.manageable && this.guild.members.me.permissions.has(PermissionFlagsBits.KickMembers);\n  }\n\n  /**\n   * Whether this member is bannable by the client user\n   * @type {boolean}\n   * @readonly\n   */\n  get bannable() {\n    if (!this.guild.members.me) throw new DiscordjsError(ErrorCodes.GuildUncachedMe);\n    return this.manageable && this.guild.members.me.permissions.has(PermissionFlagsBits.BanMembers);\n  }\n\n  /**\n   * Whether this member is moderatable by the client user\n   * @type {boolean}\n   * @readonly\n   */\n  get moderatable() {\n    return (\n      !this.permissions.has(PermissionFlagsBits.Administrator) &&\n      this.manageable &&\n      (this.guild.members.me?.permissions.has(PermissionFlagsBits.ModerateMembers) ?? false)\n    );\n  }\n\n  /**\n   * Whether this member is currently timed out\n   * @returns {boolean}\n   */\n  isCommunicationDisabled() {\n    return this.communicationDisabledUntilTimestamp > Date.now();\n  }\n\n  /**\n   * Returns `channel.permissionsFor(guildMember)`. Returns permissions for a member in a guild channel,\n   * taking into account roles and permission overwrites.\n   * @param {GuildChannelResolvable} channel The guild channel to use as context\n   * @returns {Readonly<PermissionsBitField>}\n   */\n  permissionsIn(channel) {\n    channel = this.guild.channels.resolve(channel);\n    if (!channel) throw new DiscordjsError(ErrorCodes.GuildChannelResolve);\n    return channel.permissionsFor(this);\n  }\n\n  /**\n   * Edits this member.\n   * @param {GuildMemberEditOptions} options The options to provide\n   * @returns {Promise<GuildMember>}\n   */\n  edit(options) {\n    return this.guild.members.edit(this, options);\n  }\n\n  /**\n   * Sets the flags for this member.\n   * @param {GuildMemberFlagsResolvable} flags The flags to set\n   * @param {string} [reason] Reason for setting the flags\n   * @returns {Promise<GuildMember>}\n   */\n  setFlags(flags, reason) {\n    return this.edit({ flags, reason });\n  }\n\n  /**\n   * Sets the nickname for this member.\n   * @param {?string} nick The nickname for the guild member, or `null` if you want to reset their nickname\n   * @param {string} [reason] Reason for setting the nickname\n   * @returns {Promise<GuildMember>}\n   * @example\n   * // Set a nickname for a guild member\n   * guildMember.setNickname('cool nickname', 'Needed a new nickname')\n   *   .then(member => console.log(`Set nickname of ${member.user.username}`))\n   *   .catch(console.error);\n   * @example\n   * // Remove a nickname for a guild member\n   * guildMember.setNickname(null, 'No nicknames allowed!')\n   *   .then(member => console.log(`Removed nickname for ${member.user.username}`))\n   *   .catch(console.error);\n   */\n  setNickname(nick, reason) {\n    return this.edit({ nick, reason });\n  }\n\n  /**\n   * Creates a DM channel between the client and this member.\n   * @param {boolean} [force=false] Whether to skip the cache check and request the API\n   * @returns {Promise<DMChannel>}\n   */\n  createDM(force = false) {\n    return this.user.createDM(force);\n  }\n\n  /**\n   * Deletes any DMs with this member.\n   * @returns {Promise<DMChannel>}\n   */\n  deleteDM() {\n    return this.user.deleteDM();\n  }\n\n  /**\n   * Kicks this member from the guild.\n   * @param {string} [reason] Reason for kicking user\n   * @returns {Promise<GuildMember>}\n   */\n  kick(reason) {\n    return this.guild.members.kick(this, reason);\n  }\n\n  /**\n   * Bans this guild member.\n   * @param {BanOptions} [options] Options for the ban\n   * @returns {Promise<GuildMember>}\n   * @example\n   * // Ban a guild member, deleting a week's worth of messages\n   * guildMember.ban({ deleteMessageSeconds: 60 * 60 * 24 * 7, reason: 'They deserved it' })\n   *   .then(console.log)\n   *   .catch(console.error);\n   */\n  ban(options) {\n    return this.guild.bans.create(this, options);\n  }\n\n  /**\n   * Times this guild member out.\n   * @param {?DateResolvable} communicationDisabledUntil The date or timestamp\n   * for the member's communication to be disabled until. Provide `null` to remove the timeout.\n   * @param {string} [reason] The reason for this timeout.\n   * @returns {Promise<GuildMember>}\n   * @example\n   * // Time a guild member out for 5 minutes\n   * guildMember.disableCommunicationUntil(Date.now() + (5 * 60 * 1000), 'They deserved it')\n   *   .then(console.log)\n   *   .catch(console.error);\n   * @example\n   * // Remove the timeout of a guild member\n   * guildMember.disableCommunicationUntil(null)\n   *   .then(member => console.log(`Removed timeout for ${member.displayName}`))\n   *   .catch(console.error);\n   */\n  disableCommunicationUntil(communicationDisabledUntil, reason) {\n    return this.edit({ communicationDisabledUntil, reason });\n  }\n\n  /**\n   * Times this guild member out.\n   * @param {?number} timeout The duration in milliseconds\n   * for the member's communication to be disabled. Provide `null` to remove the timeout.\n   * @param {string} [reason] The reason for this timeout.\n   * @returns {Promise<GuildMember>}\n   * @example\n   * // Time a guild member out for 5 minutes\n   * guildMember.timeout(5 * 60 * 1000, 'They deserved it')\n   *   .then(console.log)\n   *   .catch(console.error);\n   */\n  timeout(timeout, reason) {\n    return this.disableCommunicationUntil(timeout && Date.now() + timeout, reason);\n  }\n\n  /**\n   * Fetches this GuildMember.\n   * @param {boolean} [force=true] Whether to skip the cache check and request the API\n   * @returns {Promise<GuildMember>}\n   */\n  fetch(force = true) {\n    return this.guild.members.fetch({ user: this.id, cache: true, force });\n  }\n\n  /**\n   * Whether this guild member equals another guild member. It compares all properties, so for most\n   * comparison it is advisable to just compare `member.id === member2.id` as it is significantly faster\n   * and is often what most users need.\n   * @param {GuildMember} member The member to compare with\n   * @returns {boolean}\n   */\n  equals(member) {\n    return (\n      member instanceof this.constructor &&\n      this.id === member.id &&\n      this.partial === member.partial &&\n      this.guild.id === member.guild.id &&\n      this.joinedTimestamp === member.joinedTimestamp &&\n      this.nickname === member.nickname &&\n      this.avatar === member.avatar &&\n      this.pending === member.pending &&\n      this.communicationDisabledUntilTimestamp === member.communicationDisabledUntilTimestamp &&\n      this.flags.bitfield === member.flags.bitfield &&\n      (this._roles === member._roles ||\n        (this._roles.length === member._roles.length && this._roles.every((role, i) => role === member._roles[i])))\n    );\n  }\n\n  /**\n   * When concatenated with a string, this automatically returns the user's mention instead of the GuildMember object.\n   * @returns {string}\n   * @example\n   * // Logs: Hello from <@123456789012345678>!\n   * console.log(`Hello from ${member}!`);\n   */\n  toString() {\n    return this.user.toString();\n  }\n\n  toJSON() {\n    const json = super.toJSON({\n      guild: 'guildId',\n      user: 'userId',\n      displayName: true,\n      roles: true,\n    });\n    json.avatarURL = this.avatarURL();\n    json.displayAvatarURL = this.displayAvatarURL();\n    return json;\n  }\n}\n\n/**\n * Sends a message to this user.\n * @method send\n * @memberof GuildMember\n * @instance\n * @param {string|MessagePayload|MessageCreateOptions} options The options to provide\n * @returns {Promise<Message>}\n * @example\n * // Send a direct message\n * guildMember.send('Hello!')\n *   .then(message => console.log(`Sent message: ${message.content} to ${guildMember.displayName}`))\n *   .catch(console.error);\n */\n\nTextBasedChannel.applyToClass(GuildMember);\n\nexports.GuildMember = GuildMember;\n", "'use strict';\n\nconst { Collection } = require('@discordjs/collection');\nconst { makeURLSearchParams } = require('@discordjs/rest');\nconst { Routes } = require('discord-api-types/v10');\nconst CachedManager = require('./CachedManager');\nconst { DiscordjsTypeError, ErrorCodes } = require('../errors');\nconst { Message } = require('../structures/Message');\nconst MessagePayload = require('../structures/MessagePayload');\nconst { MakeCacheOverrideSymbol } = require('../util/Symbols');\nconst { resolvePartialEmoji } = require('../util/Util');\n\n/**\n * Manages API methods for Messages and holds their cache.\n * @extends {CachedManager}\n * @abstract\n */\nclass MessageManager extends CachedManager {\n  static [MakeCacheOverrideSymbol] = MessageManager;\n\n  constructor(channel, iterable) {\n    super(channel.client, Message, iterable);\n\n    /**\n     * The channel that the messages belong to\n     * @type {TextBasedChannels}\n     */\n    this.channel = channel;\n  }\n\n  /**\n   * The cache of Messages\n   * @type {Collection<Snowflake, Message>}\n   * @name MessageManager#cache\n   */\n\n  _add(data, cache) {\n    return super._add(data, cache);\n  }\n\n  /**\n   * Data that can be resolved to a Message object. This can be:\n   * * A Message\n   * * A Snowflake\n   * @typedef {Message|Snowflake} MessageResolvable\n   */\n\n  /**\n   * Options used to fetch a message.\n   * @typedef {BaseFetchOptions} FetchMessageOptions\n   * @property {MessageResolvable} message The message to fetch\n   */\n\n  /**\n   * Options used to fetch multiple messages.\n   * <info>The `before`, `after`, and `around` parameters are mutually exclusive.</info>\n   * @typedef {Object} FetchMessagesOptions\n   * @property {number} [limit] The maximum number of messages to return\n   * @property {Snowflake} [before] Consider only messages before this id\n   * @property {Snowflake} [after] Consider only messages after this id\n   * @property {Snowflake} [around] Consider only messages around this id\n   * @property {boolean} [cache] Whether to cache the fetched messages\n   */\n\n  /**\n   * Fetches message(s) from a channel.\n   * <info>The returned Collection does not contain reaction users of the messages if they were not cached.\n   * Those need to be fetched separately in such a case.</info>\n   * @param {MessageResolvable|FetchMessageOptions|FetchMessagesOptions} [options] Options for fetching message(s)\n   * @returns {Promise<Message|Collection<Snowflake, Message>>}\n   * @example\n   * // Fetch a message\n   * channel.messages.fetch('99539446449315840')\n   *   .then(message => console.log(message.content))\n   *   .catch(console.error);\n   * @example\n   * // Fetch a maximum of 10 messages without caching\n   * channel.messages.fetch({ limit: 10, cache: false })\n   *   .then(messages => console.log(`Received ${messages.size} messages`))\n   *   .catch(console.error);\n   * @example\n   * // Fetch a maximum of 10 messages without caching around a message id\n   * channel.messages.fetch({ limit: 10, cache: false, around: '99539446449315840' })\n   *   .then(messages => console.log(`Received ${messages.size} messages`))\n   *   .catch(console.error);\n   * @example\n   * // Fetch messages and filter by a user id\n   * channel.messages.fetch()\n   *   .then(messages => console.log(`${messages.filter(message =>\n   *          message.author.id === '84484653687267328').size} messages`))\n   *   .catch(console.error);\n   */\n  fetch(options) {\n    if (!options) return this._fetchMany();\n    const { message, cache, force } = options;\n    const resolvedMessage = this.resolveId(message ?? options);\n    if (resolvedMessage) return this._fetchSingle({ message: resolvedMessage, cache, force });\n    return this._fetchMany(options);\n  }\n\n  async _fetchSingle({ message, cache, force = false }) {\n    if (!force) {\n      const existing = this.cache.get(message);\n      if (existing && !existing.partial) return existing;\n    }\n\n    const data = await this.client.rest.get(Routes.channelMessage(this.channel.id, message));\n    return this._add(data, cache);\n  }\n\n  async _fetchMany(options = {}) {\n    const data = await this.client.rest.get(Routes.channelMessages(this.channel.id), {\n      query: makeURLSearchParams(options),\n    });\n\n    return data.reduce((_data, message) => _data.set(message.id, this._add(message, options.cache)), new Collection());\n  }\n\n  /**\n   * Fetches the pinned messages of this channel and returns a collection of them.\n   * <info>The returned Collection does not contain any reaction data of the messages.\n   * Those need to be fetched separately.</info>\n   * @param {boolean} [cache=true] Whether to cache the message(s)\n   * @returns {Promise<Collection<Snowflake, Message>>}\n   * @example\n   * // Get pinned messages\n   * channel.messages.fetchPinned()\n   *   .then(messages => console.log(`Received ${messages.size} messages`))\n   *   .catch(console.error);\n   */\n  async fetchPinned(cache = true) {\n    const data = await this.client.rest.get(Routes.channelPins(this.channel.id));\n    const messages = new Collection();\n    for (const message of data) messages.set(message.id, this._add(message, cache));\n    return messages;\n  }\n\n  /**\n   * Resolves a {@link MessageResolvable} to a {@link Message} object.\n   * @method resolve\n   * @memberof MessageManager\n   * @instance\n   * @param {MessageResolvable} message The message resolvable to resolve\n   * @returns {?Message}\n   */\n\n  /**\n   * Resolves a {@link MessageResolvable} to a {@link Message} id.\n   * @method resolveId\n   * @memberof MessageManager\n   * @instance\n   * @param {MessageResolvable} message The message resolvable to resolve\n   * @returns {?Snowflake}\n   */\n\n  /**\n   * Data used to reference an attachment.\n   * @typedef {Object} MessageEditAttachmentData\n   * @property {Snowflake} id The id of the attachment\n   */\n\n  /**\n   * Options that can be passed to edit a message.\n   * @typedef {BaseMessageOptions} MessageEditOptions\n   * @property {Array<Attachment|MessageEditAttachmentData>} [attachments] An array of attachments to keep.\n   * All attachments will be kept if omitted\n   * @property {MessageFlags} [flags] Which flags to set for the message\n   * <info>Only the {@link MessageFlags.SuppressEmbeds} flag can be modified.</info>\n   */\n\n  /**\n   * Edits a message, even if it's not cached.\n   * @param {MessageResolvable} message The message to edit\n   * @param {string|MessageEditOptions|MessagePayload} options The options to edit the message\n   * @returns {Promise<Message>}\n   */\n  async edit(message, options) {\n    const messageId = this.resolveId(message);\n    if (!messageId) throw new DiscordjsTypeError(ErrorCodes.InvalidType, 'message', 'MessageResolvable');\n\n    const { body, files } = await (\n      options instanceof MessagePayload\n        ? options\n        : MessagePayload.create(message instanceof Message ? message : this, options)\n    )\n      .resolveBody()\n      .resolveFiles();\n    const d = await this.client.rest.patch(Routes.channelMessage(this.channel.id, messageId), { body, files });\n\n    const existing = this.cache.get(messageId);\n    if (existing) {\n      const clone = existing._clone();\n      clone._patch(d);\n      return clone;\n    }\n    return this._add(d);\n  }\n\n  /**\n   * Publishes a message in an announcement channel to all channels following it, even if it's not cached.\n   * @param {MessageResolvable} message The message to publish\n   * @returns {Promise<Message>}\n   */\n  async crosspost(message) {\n    message = this.resolveId(message);\n    if (!message) throw new DiscordjsTypeError(ErrorCodes.InvalidType, 'message', 'MessageResolvable');\n\n    const data = await this.client.rest.post(Routes.channelMessageCrosspost(this.channel.id, message));\n    return this.cache.get(data.id) ?? this._add(data);\n  }\n\n  /**\n   * Pins a message to the channel's pinned messages, even if it's not cached.\n   * @param {MessageResolvable} message The message to pin\n   * @param {string} [reason] Reason for pinning\n   * @returns {Promise<void>}\n   */\n  async pin(message, reason) {\n    message = this.resolveId(message);\n    if (!message) throw new DiscordjsTypeError(ErrorCodes.InvalidType, 'message', 'MessageResolvable');\n\n    await this.client.rest.put(Routes.channelPin(this.channel.id, message), { reason });\n  }\n\n  /**\n   * Unpins a message from the channel's pinned messages, even if it's not cached.\n   * @param {MessageResolvable} message The message to unpin\n   * @param {string} [reason] Reason for unpinning\n   * @returns {Promise<void>}\n   */\n  async unpin(message, reason) {\n    message = this.resolveId(message);\n    if (!message) throw new DiscordjsTypeError(ErrorCodes.InvalidType, 'message', 'MessageResolvable');\n\n    await this.client.rest.delete(Routes.channelPin(this.channel.id, message), { reason });\n  }\n\n  /**\n   * Adds a reaction to a message, even if it's not cached.\n   * @param {MessageResolvable} message The message to react to\n   * @param {EmojiIdentifierResolvable} emoji The emoji to react with\n   * @returns {Promise<void>}\n   */\n  async react(message, emoji) {\n    message = this.resolveId(message);\n    if (!message) throw new DiscordjsTypeError(ErrorCodes.InvalidType, 'message', 'MessageResolvable');\n\n    emoji = resolvePartialEmoji(emoji);\n    if (!emoji) throw new DiscordjsTypeError(ErrorCodes.EmojiType, 'emoji', 'EmojiIdentifierResolvable');\n\n    const emojiId = emoji.id\n      ? `${emoji.animated ? 'a:' : ''}${emoji.name}:${emoji.id}`\n      : encodeURIComponent(emoji.name);\n\n    await this.client.rest.put(Routes.channelMessageOwnReaction(this.channel.id, message, emojiId));\n  }\n\n  /**\n   * Deletes a message, even if it's not cached.\n   * @param {MessageResolvable} message The message to delete\n   * @returns {Promise<void>}\n   */\n  async delete(message) {\n    message = this.resolveId(message);\n    if (!message) throw new DiscordjsTypeError(ErrorCodes.InvalidType, 'message', 'MessageResolvable');\n\n    await this.client.rest.delete(Routes.channelMessage(this.channel.id, message));\n  }\n\n  /**\n   * Ends a poll.\n   * @param {Snowflake} messageId The id of the message\n   * @returns {Promise<Message>}\n   */\n  async endPoll(messageId) {\n    const message = await this.client.rest.post(Routes.expirePoll(this.channel.id, messageId));\n    return this._add(message, false);\n  }\n\n  /**\n   * Options used for fetching voters of an answer in a poll.\n   * @typedef {BaseFetchPollAnswerVotersOptions} FetchPollAnswerVotersOptions\n   * @param {Snowflake} messageId The id of the message\n   * @param {number} answerId The id of the answer\n   */\n\n  /**\n   * Fetches the users that voted for a poll answer.\n   * @param {FetchPollAnswerVotersOptions} options The options for fetching the poll answer voters\n   * @returns {Promise<Collection<Snowflake, User>>}\n   */\n  async fetchPollAnswerVoters({ messageId, answerId, after, limit }) {\n    const voters = await this.client.rest.get(Routes.pollAnswerVoters(this.channel.id, messageId, answerId), {\n      query: makeURLSearchParams({ limit, after }),\n    });\n\n    return voters.users.reduce((acc, user) => acc.set(user.id, this.client.users._add(user, false)), new Collection());\n  }\n}\n\nmodule.exports = MessageManager;\n", "'use strict';\n\nconst Webhook = require('./Webhook');\n\n/**\n * Represents a webhook for an Interaction\n * @implements {Webhook}\n */\nclass InteractionWebhook {\n  /**\n   * @param {Client} client The instantiating client\n   * @param {Snowflake} id The application's id\n   * @param {string} token The interaction's token\n   */\n  constructor(client, id, token) {\n    /**\n     * The client that instantiated the interaction webhook\n     * @name InteractionWebhook#client\n     * @type {Client}\n     * @readonly\n     */\n    Object.defineProperty(this, 'client', { value: client });\n    this.id = id;\n    Object.defineProperty(this, 'token', { value: token, writable: true, configurable: true });\n  }\n\n  // These are here only for documentation purposes - they are implemented by Webhook\n  /* eslint-disable no-empty-function */\n  /**\n   * Sends a message with this webhook.\n   * @param {string|MessagePayload|InteractionReplyOptions} options The content for the reply\n   * @returns {Promise<Message>}\n   */\n\n  send() {}\n\n  /**\n   * Gets a message that was sent by this webhook.\n   * @param {Snowflake|'@original'} message The id of the message to fetch\n   * @returns {Promise<Message>} Returns the message sent by this webhook\n   */\n\n  fetchMessage() {}\n\n  /**\n   * Edits a message that was sent by this webhook.\n   * @param {MessageResolvable|'@original'} message The message to edit\n   * @param {string|MessagePayload|WebhookMessageEditOptions} options The options to provide\n   * @returns {Promise<Message>} Returns the message edited by this webhook\n   */\n\n  editMessage() {}\n  deleteMessage() {}\n  get url() {}\n}\n\nWebhook.applyToClass(InteractionWebhook, ['sendSlackMessage', 'edit', 'delete', 'createdTimestamp', 'createdAt']);\n\nmodule.exports = InteractionWebhook;\n", "'use strict';\n\nconst { Buffer } = require('node:buffer');\nconst { lazy, isJSONEncodable } = require('@discordjs/util');\nconst { DiscordSnowflake } = require('@sapphire/snowflake');\nconst { MessageFlags } = require('discord-api-types/v10');\nconst ActionRowBuilder = require('./ActionRowBuilder');\nconst { DiscordjsError, DiscordjsRangeError, ErrorCodes } = require('../errors');\nconst { resolveFile } = require('../util/DataResolver');\nconst MessageFlagsBitField = require('../util/MessageFlagsBitField');\nconst { basename, verifyString, resolvePartialEmoji } = require('../util/Util');\n\nconst getBaseInteraction = lazy(() => require('./BaseInteraction'));\n\n/**\n * Represents a message to be sent to the API.\n */\nclass MessagePayload {\n  /**\n   * @param {MessageTarget} target The target for this message to be sent to\n   * @param {MessagePayloadOption} options The payload of this message\n   */\n  constructor(target, options) {\n    /**\n     * The target for this message to be sent to\n     * @type {MessageTarget}\n     */\n    this.target = target;\n\n    /**\n     * The payload of this message.\n     * @type {MessagePayloadOption}\n     */\n    this.options = options;\n\n    /**\n     * Body sendable to the API\n     * @type {?APIMessage}\n     */\n    this.body = null;\n\n    /**\n     * Files sendable to the API\n     * @type {?RawFile[]}\n     */\n    this.files = null;\n  }\n\n  /**\n   * Whether or not the target is a {@link Webhook} or a {@link WebhookClient}\n   * @type {boolean}\n   * @readonly\n   */\n  get isWebhook() {\n    const Webhook = require('./Webhook');\n    const WebhookClient = require('../client/WebhookClient');\n    return this.target instanceof Webhook || this.target instanceof WebhookClient;\n  }\n\n  /**\n   * Whether or not the target is a {@link User}\n   * @type {boolean}\n   * @readonly\n   */\n  get isUser() {\n    const User = require('./User');\n    const { GuildMember } = require('./GuildMember');\n    return this.target instanceof User || this.target instanceof GuildMember;\n  }\n\n  /**\n   * Whether or not the target is a {@link Message}\n   * @type {boolean}\n   * @readonly\n   */\n  get isMessage() {\n    const { Message } = require('./Message');\n    return this.target instanceof Message;\n  }\n\n  /**\n   * Whether or not the target is a {@link MessageManager}\n   * @type {boolean}\n   * @readonly\n   */\n  get isMessageManager() {\n    const MessageManager = require('../managers/MessageManager');\n    return this.target instanceof MessageManager;\n  }\n\n  /**\n   * Whether or not the target is an {@link BaseInteraction} or an {@link InteractionWebhook}\n   * @type {boolean}\n   * @readonly\n   */\n  get isInteraction() {\n    const BaseInteraction = getBaseInteraction();\n    const InteractionWebhook = require('./InteractionWebhook');\n    return this.target instanceof BaseInteraction || this.target instanceof InteractionWebhook;\n  }\n\n  /**\n   * Makes the content of this message.\n   * @returns {?string}\n   */\n  makeContent() {\n    let content;\n    if (this.options.content === null) {\n      content = '';\n    } else if (this.options.content !== undefined) {\n      content = verifyString(this.options.content, DiscordjsRangeError, ErrorCodes.MessageContentType, true);\n    }\n\n    return content;\n  }\n\n  /**\n   * Resolves the body.\n   * @returns {MessagePayload}\n   */\n  resolveBody() {\n    if (this.body) return this;\n    const isInteraction = this.isInteraction;\n    const isWebhook = this.isWebhook;\n\n    const content = this.makeContent();\n    const tts = Boolean(this.options.tts);\n\n    let nonce;\n    if (this.options.nonce !== undefined) {\n      nonce = this.options.nonce;\n      if (typeof nonce === 'number' ? !Number.isInteger(nonce) : typeof nonce !== 'string') {\n        throw new DiscordjsRangeError(ErrorCodes.MessageNonceType);\n      }\n    }\n\n    let enforce_nonce = Boolean(this.options.enforceNonce);\n\n    // If `nonce` isn't provided, generate one & set `enforceNonce`\n    // Unless `enforceNonce` is explicitly set to `false`(not just falsy)\n    if (nonce === undefined) {\n      if (this.options.enforceNonce !== false && this.target.client.options.enforceNonce) {\n        nonce = DiscordSnowflake.generate().toString();\n        enforce_nonce = true;\n      } else if (enforce_nonce) {\n        throw new DiscordjsError(ErrorCodes.MessageNonceRequired);\n      }\n    }\n\n    const components = this.options.components?.map(component =>\n      (isJSONEncodable(component) ? component : new ActionRowBuilder(component)).toJSON(),\n    );\n\n    let username;\n    let avatarURL;\n    let threadName;\n    let appliedTags;\n    if (isWebhook) {\n      username = this.options.username ?? this.target.name;\n      if (this.options.avatarURL) avatarURL = this.options.avatarURL;\n      if (this.options.threadName) threadName = this.options.threadName;\n      if (this.options.appliedTags) appliedTags = this.options.appliedTags;\n    }\n\n    let flags;\n    if (\n      this.options.flags !== undefined ||\n      (this.isMessage && this.options.reply === undefined) ||\n      this.isMessageManager\n    ) {\n      flags =\n        // eslint-disable-next-line eqeqeq\n        this.options.flags != null\n          ? new MessageFlagsBitField(this.options.flags).bitfield\n          : this.target.flags?.bitfield;\n    }\n\n    if (isInteraction && this.options.ephemeral) {\n      flags |= MessageFlags.Ephemeral;\n    }\n\n    let allowedMentions =\n      this.options.allowedMentions === undefined\n        ? this.target.client.options.allowedMentions\n        : this.options.allowedMentions;\n\n    if (allowedMentions?.repliedUser !== undefined) {\n      allowedMentions = { ...allowedMentions, replied_user: allowedMentions.repliedUser };\n      delete allowedMentions.repliedUser;\n    }\n\n    let message_reference;\n    if (typeof this.options.reply === 'object') {\n      const reference = this.options.reply.messageReference;\n      const message_id = this.isMessage ? (reference.id ?? reference) : this.target.messages.resolveId(reference);\n      if (message_id) {\n        message_reference = {\n          message_id,\n          fail_if_not_exists: this.options.reply.failIfNotExists ?? this.target.client.options.failIfNotExists,\n        };\n      }\n    }\n\n    const attachments = this.options.files?.map((file, index) => ({\n      id: index.toString(),\n      description: file.description,\n    }));\n    if (Array.isArray(this.options.attachments)) {\n      this.options.attachments.push(...(attachments ?? []));\n    } else {\n      this.options.attachments = attachments;\n    }\n\n    let poll;\n    if (this.options.poll) {\n      poll = {\n        question: {\n          text: this.options.poll.question.text,\n        },\n        answers: this.options.poll.answers.map(answer => ({\n          poll_media: { text: answer.text, emoji: resolvePartialEmoji(answer.emoji) },\n        })),\n        duration: this.options.poll.duration,\n        allow_multiselect: this.options.poll.allowMultiselect,\n        layout_type: this.options.poll.layoutType,\n      };\n    }\n\n    this.body = {\n      content,\n      tts,\n      nonce,\n      enforce_nonce,\n      embeds: this.options.embeds?.map(embed =>\n        isJSONEncodable(embed) ? embed.toJSON() : this.target.client.options.jsonTransformer(embed),\n      ),\n      components,\n      username,\n      avatar_url: avatarURL,\n      allowed_mentions: content === undefined && message_reference === undefined ? undefined : allowedMentions,\n      flags,\n      message_reference,\n      attachments: this.options.attachments,\n      sticker_ids: this.options.stickers?.map(sticker => sticker.id ?? sticker),\n      thread_name: threadName,\n      applied_tags: appliedTags,\n      poll,\n    };\n    return this;\n  }\n\n  /**\n   * Resolves files.\n   * @returns {Promise<MessagePayload>}\n   */\n  async resolveFiles() {\n    if (this.files) return this;\n\n    this.files = await Promise.all(this.options.files?.map(file => this.constructor.resolveFile(file)) ?? []);\n    return this;\n  }\n\n  /**\n   * Resolves a single file into an object sendable to the API.\n   * @param {AttachmentPayload|BufferResolvable|Stream} fileLike Something that could be resolved to a file\n   * @returns {Promise<RawFile>}\n   */\n  static async resolveFile(fileLike) {\n    let attachment;\n    let name;\n\n    const findName = thing => {\n      if (typeof thing === 'string') {\n        return basename(thing);\n      }\n\n      if (thing.path) {\n        return basename(thing.path);\n      }\n\n      return 'file.jpg';\n    };\n\n    const ownAttachment =\n      typeof fileLike === 'string' || fileLike instanceof Buffer || typeof fileLike.pipe === 'function';\n    if (ownAttachment) {\n      attachment = fileLike;\n      name = findName(attachment);\n    } else {\n      attachment = fileLike.attachment;\n      name = fileLike.name ?? findName(attachment);\n    }\n\n    const { data, contentType } = await resolveFile(attachment);\n    return { data, name, contentType };\n  }\n\n  /**\n   * Creates a {@link MessagePayload} from user-level arguments.\n   * @param {MessageTarget} target Target to send to\n   * @param {string|MessagePayloadOption} options Options or content to use\n   * @param {MessagePayloadOption} [extra={}] Extra options to add onto specified options\n   * @returns {MessagePayload}\n   */\n  static create(target, options, extra = {}) {\n    return new this(\n      target,\n      typeof options !== 'object' || options === null ? { content: options, ...extra } : { ...options, ...extra },\n    );\n  }\n}\n\nmodule.exports = MessagePayload;\n\n/**\n * A target for a message.\n * @typedef {TextBasedChannels|User|GuildMember|Webhook|WebhookClient|BaseInteraction|InteractionWebhook|\n * Message|MessageManager} MessageTarget\n */\n\n/**\n * A possible payload option.\n * @typedef {MessageCreateOptions|MessageEditOptions|WebhookMessageCreateOptions|WebhookMessageEditOptions|\n * InteractionReplyOptions|InteractionUpdateOptions} MessagePayloadOption\n */\n\n/**\n * @external RawFile\n * @see {@link https://discord.js.org/docs/packages/rest/stable/RawFile:Interface}\n */\n", "'use strict';\n\nconst MessageManager = require('./MessageManager');\n\n/**\n * Manages API methods for messages in a guild and holds their cache.\n * @extends {MessageManager}\n */\nclass GuildMessageManager extends MessageManager {\n  /**\n   * The channel that the messages belong to\n   * @name GuildMessageManager#channel\n   * @type {GuildTextBasedChannel}\n   */\n}\n\nmodule.exports = GuildMessageManager;\n", "'use strict';\n\nconst { Collection } = require('@discordjs/collection');\nconst { DiscordSnowflake } = require('@sapphire/snowflake');\nconst { InteractionType, Routes } = require('discord-api-types/v10');\nconst { DiscordjsTypeError, DiscordjsError, ErrorCodes } = require('../../errors');\nconst { MaxBulkDeletableMessageAge } = require('../../util/Constants');\nconst InteractionCollector = require('../InteractionCollector');\nconst MessageCollector = require('../MessageCollector');\nconst MessagePayload = require('../MessagePayload');\n\n/**\n * Interface for classes that have text-channel-like features.\n * @interface\n */\nclass TextBasedChannel {\n  constructor() {\n    /**\n     * A manager of the messages sent to this channel\n     * @type {GuildMessageManager}\n     */\n    this.messages = new GuildMessageManager(this);\n\n    /**\n     * The channel's last message id, if one was sent\n     * @type {?Snowflake}\n     */\n    this.lastMessageId = null;\n\n    /**\n     * The timestamp when the last pinned message was pinned, if there was one\n     * @type {?number}\n     */\n    this.lastPinTimestamp = null;\n  }\n\n  /**\n   * The Message object of the last message in the channel, if one was sent\n   * @type {?Message}\n   * @readonly\n   */\n  get lastMessage() {\n    return this.messages.resolve(this.lastMessageId);\n  }\n\n  /**\n   * The date when the last pinned message was pinned, if there was one\n   * @type {?Date}\n   * @readonly\n   */\n  get lastPinAt() {\n    return this.lastPinTimestamp && new Date(this.lastPinTimestamp);\n  }\n\n  /**\n   * Represents the data for a poll answer.\n   * @typedef {Object} PollAnswerData\n   * @property {string} text The text for the poll answer\n   * @property {EmojiIdentifierResolvable} [emoji] The emoji for the poll answer\n   */\n\n  /**\n   * Represents the data for a poll.\n   * @typedef {Object} PollData\n   * @property {PollQuestionMedia} question The question for the poll\n   * @property {PollAnswerData[]} answers The answers for the poll\n   * @property {number} duration The duration in hours for the poll\n   * @property {boolean} allowMultiselect Whether the poll allows multiple answers\n   * @property {PollLayoutType} [layoutType] The layout type for the poll\n   */\n\n  /**\n   * The base message options for messages.\n   * @typedef {Object} BaseMessageOptions\n   * @property {?string} [content=''] The content for the message. This can only be `null` when editing a message.\n   * @property {Array<(EmbedBuilder|Embed|APIEmbed)>} [embeds] The embeds for the message\n   * @property {MessageMentionOptions} [allowedMentions] Which mentions should be parsed from the message content\n   * (see [here](https://discord.com/developers/docs/resources/message#allowed-mentions-object) for more details)\n   * @property {Array<(AttachmentBuilder|Attachment|AttachmentPayload|BufferResolvable)>} [files]\n   * The files to send with the message.\n   * @property {Array<(ActionRowBuilder|ActionRow|APIActionRowComponent)>} [components]\n   * Action rows containing interactive components for the message (buttons, select menus)\n   */\n\n  /**\n   * The base message options for messages including a poll.\n   * @typedef {BaseMessageOptions} BaseMessageOptionsWithPoll\n   * @property {PollData} [poll] The poll to send with the message\n   */\n\n  /**\n   * Options for sending a message with a reply.\n   * @typedef {Object} ReplyOptions\n   * @property {MessageResolvable} messageReference The message to reply to (must be in the same channel and not system)\n   * @property {boolean} [failIfNotExists=this.client.options.failIfNotExists] Whether to error if the referenced\n   * message does not exist (creates a standard message in this case when false)\n   */\n\n  /**\n   * The options for sending a message.\n   * @typedef {BaseMessageOptionsWithPoll} BaseMessageCreateOptions\n   * @property {boolean} [tts=false] Whether the message should be spoken aloud\n   * @property {string} [nonce] The nonce for the message\n   * <info>This property is required if `enforceNonce` set to `true`.</info>\n   * @property {boolean} [enforceNonce] Whether the nonce should be checked for uniqueness in the past few minutes.\n   * If another message was created by the same author with the same nonce,\n   * that message will be returned and no new message will be created\n   * @property {StickerResolvable[]} [stickers=[]] The stickers to send in the message\n   * @property {MessageFlags} [flags] Which flags to set for the message.\n   * <info>Only `MessageFlags.SuppressEmbeds` and `MessageFlags.SuppressNotifications` can be set.</info>\n   */\n\n  /**\n   * The options for sending a message.\n   * @typedef {BaseMessageCreateOptions} MessageCreateOptions\n   * @property {ReplyOptions} [reply] The options for replying to a message\n   */\n\n  /**\n   * Options provided to control parsing of mentions by Discord\n   * @typedef {Object} MessageMentionOptions\n   * @property {MessageMentionTypes[]} [parse] Types of mentions to be parsed\n   * @property {Snowflake[]} [users] Snowflakes of Users to be parsed as mentions\n   * @property {Snowflake[]} [roles] Snowflakes of Roles to be parsed as mentions\n   * @property {boolean} [repliedUser=true] Whether the author of the Message being replied to should be pinged\n   */\n\n  /**\n   * Types of mentions to enable in MessageMentionOptions.\n   * - `roles`\n   * - `users`\n   * - `everyone`\n   * @typedef {string} MessageMentionTypes\n   */\n\n  /**\n   * Sends a message to this channel.\n   * @param {string|MessagePayload|MessageCreateOptions} options The options to provide\n   * @returns {Promise<Message>}\n   * @example\n   * // Send a basic message\n   * channel.send('hello!')\n   *   .then(message => console.log(`Sent message: ${message.content}`))\n   *   .catch(console.error);\n   * @example\n   * // Send a remote file\n   * channel.send({\n   *   files: ['https://cdn.discordapp.com/icons/222078108977594368/6e1019b3179d71046e463a75915e7244.png?size=2048']\n   * })\n   *   .then(console.log)\n   *   .catch(console.error);\n   * @example\n   * // Send a local file\n   * channel.send({\n   *   files: [{\n   *     attachment: 'entire/path/to/file.jpg',\n   *     name: 'file.jpg',\n   *     description: 'A description of the file'\n   *   }]\n   * })\n   *   .then(console.log)\n   *   .catch(console.error);\n   */\n  async send(options) {\n    const User = require('../User');\n    const { GuildMember } = require('../GuildMember');\n\n    if (this instanceof User || this instanceof GuildMember) {\n      const dm = await this.createDM();\n      return dm.send(options);\n    }\n\n    let messagePayload;\n\n    if (options instanceof MessagePayload) {\n      messagePayload = options.resolveBody();\n    } else {\n      messagePayload = MessagePayload.create(this, options).resolveBody();\n    }\n\n    const { body, files } = await messagePayload.resolveFiles();\n    const d = await this.client.rest.post(Routes.channelMessages(this.id), { body, files });\n\n    return this.messages.cache.get(d.id) ?? this.messages._add(d);\n  }\n\n  /**\n   * Sends a typing indicator in the channel.\n   * @returns {Promise<void>} Resolves upon the typing status being sent\n   * @example\n   * // Start typing in a channel\n   * channel.sendTyping();\n   */\n  async sendTyping() {\n    await this.client.rest.post(Routes.channelTyping(this.id));\n  }\n\n  /**\n   * Creates a Message Collector.\n   * @param {MessageCollectorOptions} [options={}] The options to pass to the collector\n   * @returns {MessageCollector}\n   * @example\n   * // Create a message collector\n   * const filter = message => message.content.includes('discord');\n   * const collector = channel.createMessageCollector({ filter, time: 15_000 });\n   * collector.on('collect', message => console.log(`Collected ${message.content}`));\n   * collector.on('end', collected => console.log(`Collected ${collected.size} items`));\n   */\n  createMessageCollector(options = {}) {\n    return new MessageCollector(this, options);\n  }\n\n  /**\n   * An object containing the same properties as CollectorOptions, but a few more:\n   * @typedef {MessageCollectorOptions} AwaitMessagesOptions\n   * @property {string[]} [errors] Stop/end reasons that cause the promise to reject\n   */\n\n  /**\n   * Similar to createMessageCollector but in promise form.\n   * Resolves with a collection of messages that pass the specified filter.\n   * @param {AwaitMessagesOptions} [options={}] Optional options to pass to the internal collector\n   * @returns {Promise<Collection<Snowflake, Message>>}\n   * @example\n   * // Await !vote messages\n   * const filter = m => m.content.startsWith('!vote');\n   * // Errors: ['time'] treats ending because of the time limit as an error\n   * channel.awaitMessages({ filter, max: 4, time: 60_000, errors: ['time'] })\n   *   .then(collected => console.log(collected.size))\n   *   .catch(collected => console.log(`After a minute, only ${collected.size} out of 4 voted.`));\n   */\n  awaitMessages(options = {}) {\n    return new Promise((resolve, reject) => {\n      const collector = this.createMessageCollector(options);\n      collector.once('end', (collection, reason) => {\n        if (options.errors?.includes(reason)) {\n          reject(collection);\n        } else {\n          resolve(collection);\n        }\n      });\n    });\n  }\n\n  /**\n   * Creates a component interaction collector.\n   * @param {MessageComponentCollectorOptions} [options={}] Options to send to the collector\n   * @returns {InteractionCollector}\n   * @example\n   * // Create a button interaction collector\n   * const filter = (interaction) => interaction.customId === 'button' && interaction.user.id === 'someId';\n   * const collector = channel.createMessageComponentCollector({ filter, time: 15_000 });\n   * collector.on('collect', interaction => console.log(`Collected ${interaction.customId}`));\n   * collector.on('end', collected => console.log(`Collected ${collected.size} items`));\n   */\n  createMessageComponentCollector(options = {}) {\n    return new InteractionCollector(this.client, {\n      ...options,\n      interactionType: InteractionType.MessageComponent,\n      channel: this,\n    });\n  }\n\n  /**\n   * Collects a single component interaction that passes the filter.\n   * The Promise will reject if the time expires.\n   * @param {AwaitMessageComponentOptions} [options={}] Options to pass to the internal collector\n   * @returns {Promise<MessageComponentInteraction>}\n   * @example\n   * // Collect a message component interaction\n   * const filter = (interaction) => interaction.customId === 'button' && interaction.user.id === 'someId';\n   * channel.awaitMessageComponent({ filter, time: 15_000 })\n   *   .then(interaction => console.log(`${interaction.customId} was clicked!`))\n   *   .catch(console.error);\n   */\n  awaitMessageComponent(options = {}) {\n    const _options = { ...options, max: 1 };\n    return new Promise((resolve, reject) => {\n      const collector = this.createMessageComponentCollector(_options);\n      collector.once('end', (interactions, reason) => {\n        const interaction = interactions.first();\n        if (interaction) resolve(interaction);\n        else reject(new DiscordjsError(ErrorCodes.InteractionCollectorError, reason));\n      });\n    });\n  }\n\n  /**\n   * Bulk deletes given messages that are newer than two weeks.\n   * @param {Collection<Snowflake, Message>|MessageResolvable[]|number} messages\n   * Messages or number of messages to delete\n   * @param {boolean} [filterOld=false] Filter messages to remove those which are older than two weeks automatically\n   * @returns {Promise<Collection<Snowflake, Message|undefined>>} Returns the deleted messages\n   * @example\n   * // Bulk delete messages\n   * channel.bulkDelete(5)\n   *   .then(messages => console.log(`Bulk deleted ${messages.size} messages`))\n   *   .catch(console.error);\n   */\n  async bulkDelete(messages, filterOld = false) {\n    if (Array.isArray(messages) || messages instanceof Collection) {\n      let messageIds =\n        messages instanceof Collection ? [...messages.keys()] : messages.map(message => message.id ?? message);\n      if (filterOld) {\n        messageIds = messageIds.filter(\n          id => Date.now() - DiscordSnowflake.timestampFrom(id) < MaxBulkDeletableMessageAge,\n        );\n      }\n      if (messageIds.length === 0) return new Collection();\n      if (messageIds.length === 1) {\n        const message = this.client.actions.MessageDelete.getMessage(\n          {\n            message_id: messageIds[0],\n          },\n          this,\n        );\n        await this.client.rest.delete(Routes.channelMessage(this.id, messageIds[0]));\n        return message ? new Collection([[message.id, message]]) : new Collection();\n      }\n      await this.client.rest.post(Routes.channelBulkDelete(this.id), { body: { messages: messageIds } });\n      return messageIds.reduce(\n        (col, id) =>\n          col.set(\n            id,\n            this.client.actions.MessageDeleteBulk.getMessage(\n              {\n                message_id: id,\n              },\n              this,\n            ),\n          ),\n        new Collection(),\n      );\n    }\n    if (!isNaN(messages)) {\n      const msgs = await this.messages.fetch({ limit: messages });\n      return this.bulkDelete(msgs, filterOld);\n    }\n    throw new DiscordjsTypeError(ErrorCodes.MessageBulkDeleteType);\n  }\n\n  /**\n   * Fetches all webhooks for the channel.\n   * @returns {Promise<Collection<Snowflake, Webhook>>}\n   * @example\n   * // Fetch webhooks\n   * channel.fetchWebhooks()\n   *   .then(hooks => console.log(`This channel has ${hooks.size} hooks`))\n   *   .catch(console.error);\n   */\n  fetchWebhooks() {\n    return this.guild.channels.fetchWebhooks(this.id);\n  }\n\n  /**\n   * Options used to create a {@link Webhook}.\n   * @typedef {Object} ChannelWebhookCreateOptions\n   * @property {string} name The name of the webhook\n   * @property {?(BufferResolvable|Base64Resolvable)} [avatar] Avatar for the webhook\n   * @property {string} [reason] Reason for creating the webhook\n   */\n\n  /**\n   * Creates a webhook for the channel.\n   * @param {ChannelWebhookCreateOptions} [options] Options for creating the webhook\n   * @returns {Promise<Webhook>} Returns the created Webhook\n   * @example\n   * // Create a webhook for the current channel\n   * channel.createWebhook({\n   *   name: 'Snek',\n   *   avatar: 'https://i.imgur.com/mI8XcpG.jpg',\n   *   reason: 'Needed a cool new Webhook'\n   * })\n   *   .then(console.log)\n   *   .catch(console.error)\n   */\n  createWebhook(options) {\n    return this.guild.channels.createWebhook({ channel: this.id, ...options });\n  }\n\n  /**\n   * Sets the rate limit per user (slowmode) for this channel.\n   * @param {number} rateLimitPerUser The new rate limit in seconds\n   * @param {string} [reason] Reason for changing the channel's rate limit\n   * @returns {Promise<this>}\n   */\n  setRateLimitPerUser(rateLimitPerUser, reason) {\n    return this.edit({ rateLimitPerUser, reason });\n  }\n\n  /**\n   * Sets whether this channel is flagged as NSFW.\n   * @param {boolean} [nsfw=true] Whether the channel should be considered NSFW\n   * @param {string} [reason] Reason for changing the channel's NSFW flag\n   * @returns {Promise<this>}\n   */\n  setNSFW(nsfw = true, reason) {\n    return this.edit({ nsfw, reason });\n  }\n\n  static applyToClass(structure, full = false, ignore = []) {\n    const props = ['send'];\n    if (full) {\n      props.push(\n        'lastMessage',\n        'lastPinAt',\n        'bulkDelete',\n        'sendTyping',\n        'createMessageCollector',\n        'awaitMessages',\n        'createMessageComponentCollector',\n        'awaitMessageComponent',\n        'fetchWebhooks',\n        'createWebhook',\n        'setRateLimitPerUser',\n        'setNSFW',\n      );\n    }\n    for (const prop of props) {\n      if (ignore.includes(prop)) continue;\n      Object.defineProperty(\n        structure.prototype,\n        prop,\n        Object.getOwnPropertyDescriptor(TextBasedChannel.prototype, prop),\n      );\n    }\n  }\n}\n\nmodule.exports = TextBasedChannel;\n\n// Fixes Circular\n// eslint-disable-next-line import/order\nconst GuildMessageManager = require('../../managers/GuildMessageManager');\n", "'use strict';\n\nconst MessageManager = require('./MessageManager');\n\n/**\n * Manages API methods for messages in direct message channels and holds their cache.\n * @extends {MessageManager}\n */\nclass DMMessageManager extends MessageManager {\n  /**\n   * The channel that the messages belong to\n   * @name DMMessageManager#channel\n   * @type {DMChannel}\n   */\n}\n\nmodule.exports = DMMessageManager;\n", "'use strict';\n\nconst { userMention } = require('@discordjs/formatters');\nconst { ChannelType } = require('discord-api-types/v10');\nconst { BaseChannel } = require('./BaseChannel');\nconst TextBasedChannel = require('./interfaces/TextBasedChannel');\nconst DMMessageManager = require('../managers/DMMessageManager');\nconst Partials = require('../util/Partials');\n\n/**\n * Represents a direct message channel between two users.\n * @extends {BaseChannel}\n * @implements {TextBasedChannel}\n */\nclass DMChannel extends BaseChannel {\n  constructor(client, data) {\n    super(client, data);\n\n    // Override the channel type so partials have a known type\n    this.type = ChannelType.DM;\n\n    /**\n     * A manager of the messages belonging to this channel\n     * @type {DMMessageManager}\n     */\n    this.messages = new DMMessageManager(this);\n  }\n\n  _patch(data) {\n    super._patch(data);\n\n    if (data.recipients) {\n      const recipient = data.recipients[0];\n\n      /**\n       * The recipient's id\n       * @type {Snowflake}\n       */\n      this.recipientId = recipient.id;\n\n      if ('username' in recipient || this.client.options.partials.includes(Partials.User)) {\n        this.client.users._add(recipient);\n      }\n    }\n\n    if ('last_message_id' in data) {\n      /**\n       * The channel's last message id, if one was sent\n       * @type {?Snowflake}\n       */\n      this.lastMessageId = data.last_message_id;\n    }\n\n    if ('last_pin_timestamp' in data) {\n      /**\n       * The timestamp when the last pinned message was pinned, if there was one\n       * @type {?number}\n       */\n      this.lastPinTimestamp = Date.parse(data.last_pin_timestamp);\n    } else {\n      this.lastPinTimestamp ??= null;\n    }\n  }\n\n  /**\n   * Whether this DMChannel is a partial\n   * @type {boolean}\n   * @readonly\n   */\n  get partial() {\n    return this.lastMessageId === undefined;\n  }\n\n  /**\n   * The recipient on the other end of the DM\n   * @type {?User}\n   * @readonly\n   */\n  get recipient() {\n    return this.client.users.resolve(this.recipientId);\n  }\n\n  /**\n   * Fetch this DMChannel.\n   * @param {boolean} [force=true] Whether to skip the cache check and request the API\n   * @returns {Promise<DMChannel>}\n   */\n  fetch(force = true) {\n    return this.client.users.createDM(this.recipientId, { force });\n  }\n\n  /**\n   * When concatenated with a string, this automatically returns the recipient's mention instead of the\n   * DMChannel object.\n   * @returns {string}\n   * @example\n   * // Logs: Hello from <@123456789012345678>!\n   * console.log(`Hello from ${channel}!`);\n   */\n  toString() {\n    return userMention(this.recipientId);\n  }\n\n  // These are here only for documentation purposes - they are implemented by TextBasedChannel\n  /* eslint-disable no-empty-function */\n  get lastMessage() {}\n  get lastPinAt() {}\n  send() {}\n  sendTyping() {}\n  createMessageCollector() {}\n  awaitMessages() {}\n  createMessageComponentCollector() {}\n  awaitMessageComponent() {}\n  // Doesn't work on DM channels; bulkDelete() {}\n  // Doesn't work on DM channels; fetchWebhooks() {}\n  // Doesn't work on DM channels; createWebhook() {}\n  // Doesn't work on DM channels; setRateLimitPerUser() {}\n  // Doesn't work on DM channels; setNSFW() {}\n}\n\nTextBasedChannel.applyToClass(DMChannel, true, [\n  'bulkDelete',\n  'fetchWebhooks',\n  'createWebhook',\n  'setRateLimitPerUser',\n  'setNSFW',\n]);\n\nmodule.exports = DMChannel;\n", "'use strict';\n\nconst { Routes } = require('discord-api-types/v10');\nconst ThreadManager = require('./ThreadManager');\nconst { DiscordjsTypeError, ErrorCodes } = require('../errors');\nconst MessagePayload = require('../structures/MessagePayload');\n\n/**\n * Manages API methods for threads in forum channels and stores their cache.\n * @extends {ThreadManager}\n */\nclass GuildForumThreadManager extends ThreadManager {\n  /**\n   * The channel this Manager belongs to\n   * @name GuildForumThreadManager#channel\n   * @type {ForumChannel}\n   */\n\n  /**\n   * @typedef {BaseMessageOptions} GuildForumThreadMessageCreateOptions\n   * @property {StickerResolvable} [stickers] The stickers to send with the message\n   * @property {BitFieldResolvable} [flags] The flags to send with the message\n   * <info>Only `MessageFlags.SuppressEmbeds` and `MessageFlags.SuppressNotifications` can be set.</info>\n   */\n\n  /**\n   * Options for creating a thread.\n   * @typedef {StartThreadOptions} GuildForumThreadCreateOptions\n   * @property {GuildForumThreadMessageCreateOptions|MessagePayload} message The message associated with the thread post\n   * @property {Snowflake[]} [appliedTags] The tags to apply to the thread\n   */\n\n  /**\n   * Creates a new thread in the channel.\n   * @param {GuildForumThreadCreateOptions} [options] Options to create a new thread\n   * @returns {Promise<ThreadChannel>}\n   * @example\n   * // Create a new forum post\n   * forum.threads\n   *   .create({\n   *     name: 'Food Talk',\n   *     autoArchiveDuration: ThreadAutoArchiveDuration.OneHour,\n   *     message: {\n   *      content: 'Discuss your favorite food!',\n   *     },\n   *     reason: 'Needed a separate thread for food',\n   *   })\n   *   .then(threadChannel => console.log(threadChannel))\n   *   .catch(console.error);\n   */\n  async create({\n    name,\n    autoArchiveDuration = this.channel.defaultAutoArchiveDuration,\n    message,\n    reason,\n    rateLimitPerUser,\n    appliedTags,\n  } = {}) {\n    if (!message) {\n      throw new DiscordjsTypeError(ErrorCodes.GuildForumMessageRequired);\n    }\n\n    const { body, files } = await (message instanceof MessagePayload ? message : MessagePayload.create(this, message))\n      .resolveBody()\n      .resolveFiles();\n\n    const data = await this.client.rest.post(Routes.threads(this.channel.id), {\n      body: {\n        name,\n        auto_archive_duration: autoArchiveDuration,\n        rate_limit_per_user: rateLimitPerUser,\n        applied_tags: appliedTags,\n        message: body,\n      },\n      files,\n      reason,\n    });\n\n    return this.client.actions.ThreadCreate.handle(data).thread;\n  }\n}\n\nmodule.exports = GuildForumThreadManager;\n", "'use strict';\n\nconst GuildChannel = require('./GuildChannel');\nconst TextBasedChannel = require('./interfaces/TextBasedChannel');\nconst GuildForumThreadManager = require('../managers/GuildForumThreadManager');\nconst { transformAPIGuildForumTag, transformAPIGuildDefaultReaction } = require('../util/Channels');\n\n/**\n * @typedef {Object} GuildForumTagEmoji\n * @property {?Snowflake} id The id of a guild's custom emoji\n * @property {?string} name The unicode character of the emoji\n */\n\n/**\n * @typedef {Object} GuildForumTag\n * @property {Snowflake} id The id of the tag\n * @property {string} name The name of the tag\n * @property {boolean} moderated Whether this tag can only be added to or removed from threads\n * by a member with the `ManageThreads` permission\n * @property {?GuildForumTagEmoji} emoji The emoji of this tag\n */\n\n/**\n * @typedef {Object} GuildForumTagData\n * @property {Snowflake} [id] The id of the tag\n * @property {string} name The name of the tag\n * @property {boolean} [moderated] Whether this tag can only be added to or removed from threads\n * by a member with the `ManageThreads` permission\n * @property {?GuildForumTagEmoji} [emoji] The emoji of this tag\n */\n\n/**\n * @typedef {Object} DefaultReactionEmoji\n * @property {?Snowflake} id The id of a guild's custom emoji\n * @property {?string} name The unicode character of the emoji\n */\n\n/**\n * Represents symbols utilised by thread-only channels.\n * @extends {GuildChannel}\n * @implements {TextBasedChannel}\n * @abstract\n */\nclass ThreadOnlyChannel extends GuildChannel {\n  constructor(guild, data, client) {\n    super(guild, data, client, false);\n\n    /**\n     * A manager of the threads belonging to this channel\n     * @type {GuildForumThreadManager}\n     */\n    this.threads = new GuildForumThreadManager(this);\n\n    this._patch(data);\n  }\n\n  _patch(data) {\n    super._patch(data);\n    if ('available_tags' in data) {\n      /**\n       * The set of tags that can be used in this channel.\n       * @type {GuildForumTag[]}\n       */\n      this.availableTags = data.available_tags.map(tag => transformAPIGuildForumTag(tag));\n    } else {\n      this.availableTags ??= [];\n    }\n\n    if ('default_reaction_emoji' in data) {\n      /**\n       * The emoji to show in the add reaction button on a thread in a guild forum channel\n       * @type {?DefaultReactionEmoji}\n       */\n      this.defaultReactionEmoji = data.default_reaction_emoji\n        ? transformAPIGuildDefaultReaction(data.default_reaction_emoji)\n        : null;\n    } else {\n      this.defaultReactionEmoji ??= null;\n    }\n\n    if ('default_thread_rate_limit_per_user' in data) {\n      /**\n       * The initial rate limit per user (slowmode) to set on newly created threads in a channel.\n       * @type {?number}\n       */\n      this.defaultThreadRateLimitPerUser = data.default_thread_rate_limit_per_user;\n    } else {\n      this.defaultThreadRateLimitPerUser ??= null;\n    }\n\n    if ('rate_limit_per_user' in data) {\n      /**\n       * The rate limit per user (slowmode) for this channel.\n       * @type {?number}\n       */\n      this.rateLimitPerUser = data.rate_limit_per_user;\n    } else {\n      this.rateLimitPerUser ??= null;\n    }\n\n    if ('default_auto_archive_duration' in data) {\n      /**\n       * The default auto archive duration for newly created threads in this channel.\n       * @type {?ThreadAutoArchiveDuration}\n       */\n      this.defaultAutoArchiveDuration = data.default_auto_archive_duration;\n    } else {\n      this.defaultAutoArchiveDuration ??= null;\n    }\n\n    if ('nsfw' in data) {\n      /**\n       * If this channel is considered NSFW.\n       * @type {boolean}\n       */\n      this.nsfw = data.nsfw;\n    } else {\n      this.nsfw ??= false;\n    }\n\n    if ('topic' in data) {\n      /**\n       * The topic of this channel.\n       * @type {?string}\n       */\n      this.topic = data.topic;\n    }\n\n    if ('default_sort_order' in data) {\n      /**\n       * The default sort order mode used to order posts\n       * @type {?SortOrderType}\n       */\n      this.defaultSortOrder = data.default_sort_order;\n    } else {\n      this.defaultSortOrder ??= null;\n    }\n  }\n\n  /**\n   * Sets the available tags for this forum channel\n   * @param {GuildForumTagData[]} availableTags The tags to set as available in this channel\n   * @param {string} [reason] Reason for changing the available tags\n   * @returns {Promise<this>}\n   */\n  setAvailableTags(availableTags, reason) {\n    return this.edit({ availableTags, reason });\n  }\n\n  /**\n   * Sets the default reaction emoji for this channel\n   * @param {?DefaultReactionEmoji} defaultReactionEmoji The emoji to set as the default reaction emoji\n   * @param {string} [reason] Reason for changing the default reaction emoji\n   * @returns {Promise<this>}\n   */\n  setDefaultReactionEmoji(defaultReactionEmoji, reason) {\n    return this.edit({ defaultReactionEmoji, reason });\n  }\n\n  /**\n   * Sets the default rate limit per user (slowmode) for new threads in this channel\n   * @param {number} defaultThreadRateLimitPerUser The rate limit to set on newly created threads in this channel\n   * @param {string} [reason] Reason for changing the default rate limit\n   * @returns {Promise<this>}\n   */\n  setDefaultThreadRateLimitPerUser(defaultThreadRateLimitPerUser, reason) {\n    return this.edit({ defaultThreadRateLimitPerUser, reason });\n  }\n\n  /**\n   * Creates an invite to this guild channel.\n   * @param {InviteCreateOptions} [options={}] The options for creating the invite\n   * @returns {Promise<Invite>}\n   * @example\n   * // Create an invite to a channel\n   * channel.createInvite()\n   *   .then(invite => console.log(`Created an invite with a code of ${invite.code}`))\n   *   .catch(console.error);\n   */\n  createInvite(options) {\n    return this.guild.invites.create(this.id, options);\n  }\n\n  /**\n   * Fetches a collection of invites to this guild channel.\n   * Resolves with a collection mapping invites by their codes.\n   * @param {boolean} [cache=true] Whether to cache the fetched invites\n   * @returns {Promise<Collection<string, Invite>>}\n   */\n  fetchInvites(cache) {\n    return this.guild.invites.fetch({ channelId: this.id, cache });\n  }\n\n  /**\n   * Sets the default auto archive duration for all newly created threads in this channel.\n   * @param {ThreadAutoArchiveDuration} defaultAutoArchiveDuration The new default auto archive duration\n   * @param {string} [reason] Reason for changing the channel's default auto archive duration\n   * @returns {Promise<this>}\n   */\n  setDefaultAutoArchiveDuration(defaultAutoArchiveDuration, reason) {\n    return this.edit({ defaultAutoArchiveDuration, reason });\n  }\n\n  /**\n   * Sets a new topic for the guild channel.\n   * @param {?string} topic The new topic for the guild channel\n   * @param {string} [reason] Reason for changing the guild channel's topic\n   * @returns {Promise<this>}\n   * @example\n   * // Set a new channel topic\n   * channel.setTopic('needs more rate limiting')\n   *   .then(newChannel => console.log(`Channel's new topic is ${newChannel.topic}`))\n   *   .catch(console.error);\n   */\n  setTopic(topic, reason) {\n    return this.edit({ topic, reason });\n  }\n\n  /**\n   * Sets the default sort order mode used to order posts\n   * @param {?SortOrderType} defaultSortOrder The default sort order mode to set on this channel\n   * @param {string} [reason] Reason for changing the default sort order\n   * @returns {Promise<this>}\n   */\n  setDefaultSortOrder(defaultSortOrder, reason) {\n    return this.edit({ defaultSortOrder, reason });\n  }\n\n  // These are here only for documentation purposes - they are implemented by TextBasedChannel\n  /* eslint-disable no-empty-function */\n  createWebhook() {}\n  fetchWebhooks() {}\n  setNSFW() {}\n  setRateLimitPerUser() {}\n}\n\nTextBasedChannel.applyToClass(ThreadOnlyChannel, true, [\n  'send',\n  'lastMessage',\n  'lastPinAt',\n  'bulkDelete',\n  'sendTyping',\n  'createMessageCollector',\n  'awaitMessages',\n  'createMessageComponentCollector',\n  'awaitMessageComponent',\n]);\n\nmodule.exports = ThreadOnlyChannel;\n", "'use strict';\n\nconst BitField = require('./BitField');\n\n/**\n * Data structure that makes it easy to interact with a {@link ThreadMember#flags} bitfield.\n * @extends {BitField}\n */\nclass ThreadMemberFlagsBitField extends BitField {\n  /**\n   * Numeric thread member flags. There are currently no bitflags relevant to bots for this.\n   * @type {Object<string, number>}\n   * @memberof ThreadMemberFlagsBitField\n   */\n  static Flags = {};\n}\n\n/**\n * @name ThreadMemberFlagsBitField\n * @kind constructor\n * @memberof ThreadMemberFlagsBitField\n * @param {BitFieldResolvable} [bits=0] Bit(s) to read from\n */\n\n/**\n * Bitfield of the packed bits\n * @type {number}\n * @name ThreadMemberFlagsBitField#bitfield\n */\n\nmodule.exports = ThreadMemberFlagsBitField;\n", "'use strict';\n\nconst Base = require('./Base');\nconst ThreadMemberFlagsBitField = require('../util/ThreadMemberFlagsBitField');\n\n/**\n * Represents a Member for a Thread.\n * @extends {Base}\n */\nclass ThreadMember extends Base {\n  constructor(thread, data, extra = {}) {\n    super(thread.client);\n\n    /**\n     * The thread that this member is a part of\n     * @type {ThreadChannel}\n     */\n    this.thread = thread;\n\n    /**\n     * The timestamp the member last joined the thread at\n     * @type {?number}\n     */\n    this.joinedTimestamp = null;\n\n    /**\n     * The flags for this thread member. This will be `null` if partial.\n     * @type {?ThreadMemberFlagsBitField}\n     */\n    this.flags = null;\n\n    /**\n     * The id of the thread member\n     * @type {Snowflake}\n     */\n    this.id = data.user_id;\n\n    this._patch(data, extra);\n  }\n\n  _patch(data, extra = {}) {\n    if ('join_timestamp' in data) this.joinedTimestamp = Date.parse(data.join_timestamp);\n    if ('flags' in data) this.flags = new ThreadMemberFlagsBitField(data.flags).freeze();\n\n    if ('member' in data) {\n      /**\n       * The guild member associated with this thread member.\n       * @type {?GuildMember}\n       * @private\n       */\n      this.member = this.thread.guild.members._add(data.member, extra.cache);\n    } else {\n      this.member ??= null;\n    }\n  }\n\n  /**\n   * Whether this thread member is a partial\n   * @type {boolean}\n   * @readonly\n   */\n  get partial() {\n    return this.flags === null;\n  }\n\n  /**\n   * The guild member associated with this thread member\n   * @type {?GuildMember}\n   * @readonly\n   */\n  get guildMember() {\n    return this.member ?? this.thread.guild.members.resolve(this.id);\n  }\n\n  /**\n   * The last time this member joined the thread\n   * @type {?Date}\n   * @readonly\n   */\n  get joinedAt() {\n    return this.joinedTimestamp && new Date(this.joinedTimestamp);\n  }\n\n  /**\n   * The user associated with this thread member\n   * @type {?User}\n   * @readonly\n   */\n  get user() {\n    return this.client.users.resolve(this.id);\n  }\n\n  /**\n   * Whether the client user can manage this thread member\n   * @type {boolean}\n   * @readonly\n   */\n  get manageable() {\n    return !this.thread.archived && this.thread.editable;\n  }\n\n  /**\n   * Removes this member from the thread.\n   * @param {string} [reason] Reason for removing the member\n   * @returns {Promise<ThreadMember>}\n   */\n  async remove(reason) {\n    await this.thread.members.remove(this.id, reason);\n    return this;\n  }\n}\n\nmodule.exports = ThreadMember;\n", "'use strict';\n\nconst { Collection } = require('@discordjs/collection');\nconst { makeURLSearchParams } = require('@discordjs/rest');\nconst { Routes } = require('discord-api-types/v10');\nconst CachedManager = require('./CachedManager');\nconst { DiscordjsTypeError, ErrorCodes } = require('../errors');\nconst ThreadMember = require('../structures/ThreadMember');\n\n/**\n * Manages API methods for GuildMembers and stores their cache.\n * @extends {CachedManager}\n */\nclass ThreadMemberManager extends CachedManager {\n  constructor(thread, iterable) {\n    super(thread.client, ThreadMember, iterable);\n\n    /**\n     * The thread this manager belongs to\n     * @type {ThreadChannel}\n     */\n    this.thread = thread;\n  }\n\n  /**\n   * The cache of this Manager\n   * @type {Collection<Snowflake, ThreadMember>}\n   * @name ThreadMemberManager#cache\n   */\n\n  _add(data, cache = true) {\n    const existing = this.cache.get(data.user_id);\n    if (cache) existing?._patch(data, { cache });\n    if (existing) return existing;\n\n    const member = new ThreadMember(this.thread, data, { cache });\n    if (cache) this.cache.set(data.user_id, member);\n    return member;\n  }\n\n  /**\n   * Fetches the client user as a ThreadMember of the thread.\n   * @param {BaseFetchOptions} [options] The options for fetching the member\n   * @returns {Promise<ThreadMember>}\n   */\n  fetchMe(options) {\n    return this.fetch({ ...options, member: this.client.user.id });\n  }\n\n  /**\n   * The client user as a ThreadMember of this ThreadChannel\n   * @type {?ThreadMember}\n   * @readonly\n   */\n  get me() {\n    return this.resolve(this.client.user.id);\n  }\n\n  /**\n   * Data that resolves to give a ThreadMember object. This can be:\n   * * A ThreadMember object\n   * * A User resolvable\n   * @typedef {ThreadMember|UserResolvable} ThreadMemberResolvable\n   */\n\n  /**\n   * Resolves a {@link ThreadMemberResolvable} to a {@link ThreadMember} object.\n   * @param {ThreadMemberResolvable} member The user that is part of the thread\n   * @returns {?GuildMember}\n   */\n  resolve(member) {\n    const memberResolvable = super.resolve(member);\n    if (memberResolvable) return memberResolvable;\n    const userResolvable = this.client.users.resolveId(member);\n    if (userResolvable) return super.resolve(userResolvable);\n    return null;\n  }\n\n  /**\n   * Resolves a {@link ThreadMemberResolvable} to a {@link ThreadMember} id string.\n   * @param {ThreadMemberResolvable} member The user that is part of the guild\n   * @returns {?Snowflake}\n   */\n  resolveId(member) {\n    const memberResolvable = super.resolveId(member);\n    if (memberResolvable) return memberResolvable;\n    const userResolvable = this.client.users.resolveId(member);\n    return this.cache.has(userResolvable) ? userResolvable : null;\n  }\n\n  /**\n   * Adds a member to the thread.\n   * @param {UserResolvable|'@me'} member The member to add\n   * @param {string} [reason] The reason for adding this member\n   * @returns {Promise<Snowflake>}\n   */\n  async add(member, reason) {\n    const id = member === '@me' ? member : this.client.users.resolveId(member);\n    if (!id) throw new DiscordjsTypeError(ErrorCodes.InvalidType, 'member', 'UserResolvable');\n    await this.client.rest.put(Routes.threadMembers(this.thread.id, id), { reason });\n    return id;\n  }\n\n  /**\n   * Remove a user from the thread.\n   * @param {UserResolvable|'@me'} member The member to remove\n   * @param {string} [reason] The reason for removing this member from the thread\n   * @returns {Promise<Snowflake>}\n   */\n  async remove(member, reason) {\n    const id = member === '@me' ? member : this.client.users.resolveId(member);\n    if (!id) throw new DiscordjsTypeError(ErrorCodes.InvalidType, 'member', 'UserResolvable');\n    await this.client.rest.delete(Routes.threadMembers(this.thread.id, id), { reason });\n    return id;\n  }\n\n  /**\n   * Options used to fetch a thread member.\n   * @typedef {BaseFetchOptions} FetchThreadMemberOptions\n   * @property {ThreadMemberResolvable} member The thread member to fetch\n   * @property {boolean} [withMember] Whether to also return the guild member associated with this thread member\n   */\n\n  /**\n   * Options used to fetch multiple thread members with guild member data.\n   * <info>With `withMember` set to `true`, pagination is enabled.</info>\n   * @typedef {Object} FetchThreadMembersWithGuildMemberDataOptions\n   * @property {true} withMember Whether to also return the guild member data\n   * @property {Snowflake} [after] Consider only thread members after this id\n   * @property {number} [limit] The maximum number of thread members to return\n   * @property {boolean} [cache] Whether to cache the fetched thread members and guild members\n   */\n\n  /**\n   * Options used to fetch multiple thread members without guild member data.\n   * @typedef {Object} FetchThreadMembersWithoutGuildMemberDataOptions\n   * @property {false} [withMember] Whether to also return the guild member data\n   * @property {boolean} [cache] Whether to cache the fetched thread members\n   */\n\n  /**\n   * Options used to fetch multiple thread members.\n   * @typedef {FetchThreadMembersWithGuildMemberDataOptions|\n   * FetchThreadMembersWithoutGuildMemberDataOptions} FetchThreadMembersOptions\n   */\n\n  /**\n   * Fetches thread member(s) from Discord.\n   * <info>This method requires the {@link GatewayIntentBits.GuildMembers} privileged gateway intent.</info>\n   * @param {ThreadMemberResolvable|FetchThreadMemberOptions|FetchThreadMembersOptions} [options]\n   * Options for fetching thread member(s)\n   * @returns {Promise<ThreadMember|Collection<Snowflake, ThreadMember>>}\n   */\n  fetch(options) {\n    if (!options) return this._fetchMany();\n    const { member, withMember, cache, force } = options;\n    const resolvedMember = this.resolveId(member ?? options);\n    if (resolvedMember) return this._fetchSingle({ member: resolvedMember, withMember, cache, force });\n    return this._fetchMany(options);\n  }\n\n  async _fetchSingle({ member, withMember, cache, force = false }) {\n    if (!force) {\n      const existing = this.cache.get(member);\n      if (existing) return existing;\n    }\n\n    const data = await this.client.rest.get(Routes.threadMembers(this.thread.id, member), {\n      query: makeURLSearchParams({ with_member: withMember }),\n    });\n\n    return this._add(data, cache);\n  }\n\n  async _fetchMany({ withMember, after, limit, cache } = {}) {\n    const data = await this.client.rest.get(Routes.threadMembers(this.thread.id), {\n      query: makeURLSearchParams({ with_member: withMember, after, limit }),\n    });\n\n    return data.reduce((col, member) => col.set(member.user_id, this._add(member, cache)), new Collection());\n  }\n}\n\nmodule.exports = ThreadMemberManager;\n", "'use strict';\n\nconst { DiscordAPIError } = require('@discordjs/rest');\nconst { lazy } = require('@discordjs/util');\nconst { RESTJSONErrorCodes, ChannelFlags, ChannelType, PermissionFlagsBits, Routes } = require('discord-api-types/v10');\nconst { BaseChannel } = require('./BaseChannel');\nconst getThreadOnlyChannel = lazy(() => require('./ThreadOnlyChannel'));\nconst TextBasedChannel = require('./interfaces/TextBasedChannel');\nconst { DiscordjsError, DiscordjsRangeError, ErrorCodes } = require('../errors');\nconst GuildMessageManager = require('../managers/GuildMessageManager');\nconst ThreadMemberManager = require('../managers/ThreadMemberManager');\nconst ChannelFlagsBitField = require('../util/ChannelFlagsBitField');\n\n/**\n * Represents a thread channel on Discord.\n * @extends {BaseChannel}\n * @implements {TextBasedChannel}\n */\nclass ThreadChannel extends BaseChannel {\n  constructor(guild, data, client) {\n    super(guild?.client ?? client, data, false);\n\n    /**\n     * The guild the thread is in\n     * @type {Guild}\n     */\n    this.guild = guild;\n\n    /**\n     * The id of the guild the channel is in\n     * @type {Snowflake}\n     */\n    this.guildId = guild?.id ?? data.guild_id;\n\n    /**\n     * A manager of the messages sent to this thread\n     * @type {GuildMessageManager}\n     */\n    this.messages = new GuildMessageManager(this);\n\n    /**\n     * A manager of the members that are part of this thread\n     * @type {ThreadMemberManager}\n     */\n    this.members = new ThreadMemberManager(this);\n    if (data) this._patch(data);\n  }\n\n  _patch(data) {\n    super._patch(data);\n\n    if ('message' in data) this.messages._add(data.message);\n\n    if ('name' in data) {\n      /**\n       * The name of the thread\n       * @type {string}\n       */\n      this.name = data.name;\n    }\n\n    if ('guild_id' in data) {\n      this.guildId = data.guild_id;\n    }\n\n    if ('parent_id' in data) {\n      /**\n       * The id of the parent channel of this thread\n       * @type {?Snowflake}\n       */\n      this.parentId = data.parent_id;\n    } else {\n      this.parentId ??= null;\n    }\n\n    if ('thread_metadata' in data) {\n      /**\n       * Whether the thread is locked\n       * @type {?boolean}\n       */\n      this.locked = data.thread_metadata.locked ?? false;\n\n      /**\n       * Whether members without the {@link PermissionFlagsBits.ManageThreads} permission\n       * can invite other members to this thread.\n       * <info>This property is always `null` in public threads.</info>\n       * @type {?boolean}\n       */\n      this.invitable = this.type === ChannelType.PrivateThread ? (data.thread_metadata.invitable ?? false) : null;\n\n      /**\n       * Whether the thread is archived\n       * @type {?boolean}\n       */\n      this.archived = data.thread_metadata.archived;\n\n      /**\n       * The amount of time (in minutes) after which the thread will automatically archive in case of no recent activity\n       * @type {?ThreadAutoArchiveDuration}\n       */\n      this.autoArchiveDuration = data.thread_metadata.auto_archive_duration;\n\n      /**\n       * The timestamp when the thread's archive status was last changed\n       * <info>If the thread was never archived or unarchived, this is the timestamp at which the thread was\n       * created</info>\n       * @type {?number}\n       */\n      this.archiveTimestamp = Date.parse(data.thread_metadata.archive_timestamp);\n\n      if ('create_timestamp' in data.thread_metadata) {\n        // Note: this is needed because we can't assign directly to getters\n        this._createdTimestamp = Date.parse(data.thread_metadata.create_timestamp);\n      }\n    } else {\n      this.locked ??= null;\n      this.archived ??= null;\n      this.autoArchiveDuration ??= null;\n      this.archiveTimestamp ??= null;\n      this.invitable ??= null;\n    }\n\n    this._createdTimestamp ??= this.type === ChannelType.PrivateThread ? super.createdTimestamp : null;\n\n    if ('owner_id' in data) {\n      /**\n       * The id of the member who created this thread\n       * @type {?Snowflake}\n       */\n      this.ownerId = data.owner_id;\n    } else {\n      this.ownerId ??= null;\n    }\n\n    if ('last_message_id' in data) {\n      /**\n       * The last message id sent in this thread, if one was sent\n       * @type {?Snowflake}\n       */\n      this.lastMessageId = data.last_message_id;\n    } else {\n      this.lastMessageId ??= null;\n    }\n\n    if ('last_pin_timestamp' in data) {\n      /**\n       * The timestamp when the last pinned message was pinned, if there was one\n       * @type {?number}\n       */\n      this.lastPinTimestamp = data.last_pin_timestamp ? Date.parse(data.last_pin_timestamp) : null;\n    } else {\n      this.lastPinTimestamp ??= null;\n    }\n\n    if ('rate_limit_per_user' in data) {\n      /**\n       * The rate limit per user (slowmode) for this thread in seconds\n       * @type {?number}\n       */\n      this.rateLimitPerUser = data.rate_limit_per_user ?? 0;\n    } else {\n      this.rateLimitPerUser ??= null;\n    }\n\n    if ('message_count' in data) {\n      /**\n       * The approximate count of messages in this thread\n       * <info>Threads created before July 1, 2022 may have an inaccurate count.\n       * If you need an approximate value higher than that, use `ThreadChannel#messages.cache.size`</info>\n       * @type {?number}\n       */\n      this.messageCount = data.message_count;\n    } else {\n      this.messageCount ??= null;\n    }\n\n    if ('member_count' in data) {\n      /**\n       * The approximate count of users in this thread\n       * <info>This stops counting at 50. If you need an approximate value higher than that, use\n       * `ThreadChannel#members.cache.size`</info>\n       * @type {?number}\n       */\n      this.memberCount = data.member_count;\n    } else {\n      this.memberCount ??= null;\n    }\n\n    if ('total_message_sent' in data) {\n      /**\n       * The number of messages ever sent in a thread, similar to {@link ThreadChannel#messageCount} except it\n       * will not decrement whenever a message is deleted\n       * @type {?number}\n       */\n      this.totalMessageSent = data.total_message_sent;\n    } else {\n      this.totalMessageSent ??= null;\n    }\n\n    if (data.member && this.client.user) this.members._add({ user_id: this.client.user.id, ...data.member });\n    if (data.messages) for (const message of data.messages) this.messages._add(message);\n\n    if ('applied_tags' in data) {\n      /**\n       * The tags applied to this thread\n       * @type {Snowflake[]}\n       */\n      this.appliedTags = data.applied_tags;\n    } else {\n      this.appliedTags ??= [];\n    }\n  }\n\n  /**\n   * The timestamp when this thread was created. This isn't available for threads\n   * created before 2022-01-09\n   * @type {?number}\n   * @readonly\n   */\n  get createdTimestamp() {\n    return this._createdTimestamp;\n  }\n\n  /**\n   * A collection of associated guild member objects of this thread's members\n   * @type {Collection<Snowflake, GuildMember>}\n   * @readonly\n   */\n  get guildMembers() {\n    return this.members.cache.mapValues(member => member.guildMember);\n  }\n\n  /**\n   * The time at which this thread's archive status was last changed\n   * <info>If the thread was never archived or unarchived, this is the time at which the thread was created</info>\n   * @type {?Date}\n   * @readonly\n   */\n  get archivedAt() {\n    return this.archiveTimestamp && new Date(this.archiveTimestamp);\n  }\n\n  /**\n   * The time the thread was created at\n   * @type {?Date}\n   * @readonly\n   */\n  get createdAt() {\n    return this.createdTimestamp && new Date(this.createdTimestamp);\n  }\n\n  /**\n   * The parent channel of this thread\n   * @type {?(NewsChannel|TextChannel|ForumChannel|MediaChannel)}\n   * @readonly\n   */\n  get parent() {\n    return this.guild.channels.resolve(this.parentId);\n  }\n\n  /**\n   * Makes the client user join the thread.\n   * @returns {Promise<ThreadChannel>}\n   */\n  async join() {\n    await this.members.add('@me');\n    return this;\n  }\n\n  /**\n   * Makes the client user leave the thread.\n   * @returns {Promise<ThreadChannel>}\n   */\n  async leave() {\n    await this.members.remove('@me');\n    return this;\n  }\n\n  /**\n   * Gets the overall set of permissions for a member or role in this thread's parent channel, taking overwrites into\n   * account.\n   * @param {GuildMemberResolvable|RoleResolvable} memberOrRole The member or role to obtain the overall permissions for\n   * @param {boolean} [checkAdmin=true] Whether having the {@link PermissionFlagsBits.Administrator} permission\n   * will return all permissions\n   * @returns {?Readonly<PermissionsBitField>}\n   */\n  permissionsFor(memberOrRole, checkAdmin) {\n    return this.parent?.permissionsFor(memberOrRole, checkAdmin) ?? null;\n  }\n\n  /**\n   * Fetches the owner of this thread. If the thread member object isn't needed,\n   * use {@link ThreadChannel#ownerId} instead.\n   * @param {BaseFetchOptions} [options] The options for fetching the member\n   * @returns {Promise<?ThreadMember>}\n   */\n  async fetchOwner(options) {\n    if (!this.ownerId) {\n      throw new DiscordjsError(ErrorCodes.FetchOwnerId, 'thread');\n    }\n\n    // TODO: Remove that catch in the next major version\n    const member = await this.members._fetchSingle({ ...options, member: this.ownerId }).catch(error => {\n      if (error instanceof DiscordAPIError && error.code === RESTJSONErrorCodes.UnknownMember) {\n        return null;\n      }\n\n      throw error;\n    });\n\n    return member;\n  }\n\n  /**\n   * Fetches the message that started this thread, if any.\n   * <info>The `Promise` will reject if the original message in a forum post is deleted\n   * or when the original message in the parent channel is deleted.\n   * If you just need the id of that message, use {@link BaseChannel#id} instead.</info>\n   * @param {BaseFetchOptions} [options] Additional options for this fetch\n   * @returns {Promise<?Message<true>>}\n   */\n  // eslint-disable-next-line require-await\n  async fetchStarterMessage(options) {\n    const channel = this.parent instanceof getThreadOnlyChannel() ? this : this.parent;\n    return channel?.messages.fetch({ message: this.id, ...options }) ?? null;\n  }\n\n  /**\n   * The options used to edit a thread channel\n   * @typedef {Object} ThreadEditOptions\n   * @property {string} [name] The new name for the thread\n   * @property {boolean} [archived] Whether the thread is archived\n   * @property {ThreadAutoArchiveDuration} [autoArchiveDuration] The amount of time after which the thread\n   * should automatically archive in case of no recent activity\n   * @property {number} [rateLimitPerUser] The rate limit per user (slowmode) for the thread in seconds\n   * @property {boolean} [locked] Whether the thread is locked\n   * @property {boolean} [invitable] Whether non-moderators can add other non-moderators to a thread\n   * <info>Can only be edited on {@link ChannelType.PrivateThread}</info>\n   * @property {Snowflake[]} [appliedTags] The tags to apply to the thread\n   * @property {ChannelFlagsResolvable} [flags] The flags to set on the channel\n   * @property {string} [reason] Reason for editing the thread\n   */\n\n  /**\n   * Edits this thread.\n   * @param {ThreadEditOptions} options The options to provide\n   * @returns {Promise<ThreadChannel>}\n   * @example\n   * // Edit a thread\n   * thread.edit({ name: 'new-thread' })\n   *   .then(editedThread => console.log(editedThread))\n   *   .catch(console.error);\n   */\n  async edit(options) {\n    const newData = await this.client.rest.patch(Routes.channel(this.id), {\n      body: {\n        name: (options.name ?? this.name).trim(),\n        archived: options.archived,\n        auto_archive_duration: options.autoArchiveDuration,\n        rate_limit_per_user: options.rateLimitPerUser,\n        locked: options.locked,\n        invitable: this.type === ChannelType.PrivateThread ? options.invitable : undefined,\n        applied_tags: options.appliedTags,\n        flags: 'flags' in options ? ChannelFlagsBitField.resolve(options.flags) : undefined,\n      },\n      reason: options.reason,\n    });\n\n    return this.client.actions.ChannelUpdate.handle(newData).updated;\n  }\n\n  /**\n   * Sets whether the thread is archived.\n   * @param {boolean} [archived=true] Whether the thread is archived\n   * @param {string} [reason] Reason for archiving or unarchiving\n   * @returns {Promise<ThreadChannel>}\n   * @example\n   * // Archive the thread\n   * thread.setArchived(true)\n   *   .then(newThread => console.log(`Thread is now ${newThread.archived ? 'archived' : 'active'}`))\n   *   .catch(console.error);\n   */\n  setArchived(archived = true, reason) {\n    return this.edit({ archived, reason });\n  }\n\n  /**\n   * Sets the duration after which the thread will automatically archive in case of no recent activity.\n   * @param {ThreadAutoArchiveDuration} autoArchiveDuration The amount of time after which the thread\n   * should automatically archive in case of no recent activity\n   * @param {string} [reason] Reason for changing the auto archive duration\n   * @returns {Promise<ThreadChannel>}\n   * @example\n   * // Set the thread's auto archive time to 1 hour\n   * thread.setAutoArchiveDuration(ThreadAutoArchiveDuration.OneHour)\n   *   .then(newThread => {\n   *     console.log(`Thread will now archive after ${newThread.autoArchiveDuration} minutes of inactivity`);\n   *    });\n   *   .catch(console.error);\n   */\n  setAutoArchiveDuration(autoArchiveDuration, reason) {\n    return this.edit({ autoArchiveDuration, reason });\n  }\n\n  /**\n   * Sets whether members without the {@link PermissionFlagsBits.ManageThreads} permission\n   * can invite other members to this thread.\n   * @param {boolean} [invitable=true] Whether non-moderators can invite non-moderators to this thread\n   * @param {string} [reason] Reason for changing invite\n   * @returns {Promise<ThreadChannel>}\n   */\n  setInvitable(invitable = true, reason) {\n    if (this.type !== ChannelType.PrivateThread) {\n      return Promise.reject(new DiscordjsRangeError(ErrorCodes.ThreadInvitableType, this.type));\n    }\n    return this.edit({ invitable, reason });\n  }\n\n  /**\n   * Sets whether the thread can be **unarchived** by anyone with the\n   * {@link PermissionFlagsBits.SendMessages} permission. When a thread is locked, only members with the\n   * {@link PermissionFlagsBits.ManageThreads} permission can unarchive it.\n   * @param {boolean} [locked=true] Whether the thread is locked\n   * @param {string} [reason] Reason for locking or unlocking the thread\n   * @returns {Promise<ThreadChannel>}\n   * @example\n   * // Set the thread to locked\n   * thread.setLocked(true)\n   *   .then(newThread => console.log(`Thread is now ${newThread.locked ? 'locked' : 'unlocked'}`))\n   *   .catch(console.error);\n   */\n  setLocked(locked = true, reason) {\n    return this.edit({ locked, reason });\n  }\n\n  /**\n   * Sets a new name for this thread.\n   * @param {string} name The new name for the thread\n   * @param {string} [reason] Reason for changing the thread's name\n   * @returns {Promise<ThreadChannel>}\n   * @example\n   * // Change the thread's name\n   * thread.setName('not_general')\n   *   .then(newThread => console.log(`Thread's new name is ${newThread.name}`))\n   *   .catch(console.error);\n   */\n  setName(name, reason) {\n    return this.edit({ name, reason });\n  }\n\n  /**\n   * Sets the rate limit per user (slowmode) for this thread.\n   * @param {number} rateLimitPerUser The new rate limit in seconds\n   * @param {string} [reason] Reason for changing the thread's rate limit\n   * @returns {Promise<ThreadChannel>}\n   */\n  setRateLimitPerUser(rateLimitPerUser, reason) {\n    return this.edit({ rateLimitPerUser, reason });\n  }\n\n  /**\n   * Set the applied tags for this channel (only applicable to forum threads)\n   * @param {Snowflake[]} appliedTags The tags to set for this channel\n   * @param {string} [reason] Reason for changing the thread's applied tags\n   * @returns {Promise<ThreadChannel>}\n   */\n  setAppliedTags(appliedTags, reason) {\n    return this.edit({ appliedTags, reason });\n  }\n\n  /**\n   * Pins this thread from the forum channel (only applicable to forum threads).\n   * @param {string} [reason] Reason for pinning\n   * @returns {Promise<ThreadChannel>}\n   */\n  pin(reason) {\n    return this.edit({ flags: this.flags.add(ChannelFlags.Pinned), reason });\n  }\n\n  /**\n   * Unpins this thread from the forum channel (only applicable to forum threads).\n   * @param {string} [reason] Reason for unpinning\n   * @returns {Promise<ThreadChannel>}\n   */\n  unpin(reason) {\n    return this.edit({ flags: this.flags.remove(ChannelFlags.Pinned), reason });\n  }\n\n  /**\n   * Whether the client user is a member of the thread.\n   * @type {boolean}\n   * @readonly\n   */\n  get joined() {\n    return this.members.cache.has(this.client.user?.id);\n  }\n\n  /**\n   * Whether the thread is editable by the client user (name, archived, autoArchiveDuration)\n   * @type {boolean}\n   * @readonly\n   */\n  get editable() {\n    return (\n      (this.ownerId === this.client.user.id && (this.type !== ChannelType.PrivateThread || this.joined)) ||\n      this.manageable\n    );\n  }\n\n  /**\n   * Whether the thread is joinable by the client user\n   * @type {boolean}\n   * @readonly\n   */\n  get joinable() {\n    return (\n      !this.archived &&\n      !this.joined &&\n      this.permissionsFor(this.client.user)?.has(\n        this.type === ChannelType.PrivateThread ? PermissionFlagsBits.ManageThreads : PermissionFlagsBits.ViewChannel,\n        false,\n      )\n    );\n  }\n\n  /**\n   * Whether the thread is manageable by the client user, for deleting or editing rateLimitPerUser or locked.\n   * @type {boolean}\n   * @readonly\n   */\n  get manageable() {\n    const permissions = this.permissionsFor(this.client.user);\n    if (!permissions) return false;\n    // This flag allows managing even if timed out\n    if (permissions.has(PermissionFlagsBits.Administrator, false)) return true;\n\n    return (\n      this.guild.members.me.communicationDisabledUntilTimestamp < Date.now() &&\n      permissions.has(PermissionFlagsBits.ManageThreads, false)\n    );\n  }\n\n  /**\n   * Whether the thread is viewable by the client user\n   * @type {boolean}\n   * @readonly\n   */\n  get viewable() {\n    if (this.client.user.id === this.guild.ownerId) return true;\n    const permissions = this.permissionsFor(this.client.user);\n    if (!permissions) return false;\n    return permissions.has(PermissionFlagsBits.ViewChannel, false);\n  }\n\n  /**\n   * Whether the client user can send messages in this thread\n   * @type {boolean}\n   * @readonly\n   */\n  get sendable() {\n    const permissions = this.permissionsFor(this.client.user);\n    if (!permissions) return false;\n    // This flag allows sending even if timed out\n    if (permissions.has(PermissionFlagsBits.Administrator, false)) return true;\n\n    return (\n      !(this.archived && this.locked && !this.manageable) &&\n      (this.type !== ChannelType.PrivateThread || this.joined || this.manageable) &&\n      permissions.has(PermissionFlagsBits.SendMessagesInThreads, false) &&\n      this.guild.members.me.communicationDisabledUntilTimestamp < Date.now()\n    );\n  }\n\n  /**\n   * Whether the thread is unarchivable by the client user\n   * @type {boolean}\n   * @readonly\n   */\n  get unarchivable() {\n    return this.archived && this.sendable && (!this.locked || this.manageable);\n  }\n\n  /**\n   * Deletes this thread.\n   * @param {string} [reason] Reason for deleting this thread\n   * @returns {Promise<ThreadChannel>}\n   * @example\n   * // Delete the thread\n   * thread.delete('cleaning out old threads')\n   *   .then(deletedThread => console.log(deletedThread))\n   *   .catch(console.error);\n   */\n  async delete(reason) {\n    await this.guild.channels.delete(this.id, reason);\n    return this;\n  }\n\n  // These are here only for documentation purposes - they are implemented by TextBasedChannel\n  /* eslint-disable no-empty-function */\n  get lastMessage() {}\n  get lastPinAt() {}\n  send() {}\n  sendTyping() {}\n  createMessageCollector() {}\n  awaitMessages() {}\n  createMessageComponentCollector() {}\n  awaitMessageComponent() {}\n  bulkDelete() {}\n  // Doesn't work on Thread channels; setRateLimitPerUser() {}\n  // Doesn't work on Thread channels; setNSFW() {}\n}\n\nTextBasedChannel.applyToClass(ThreadChannel, true, ['fetchWebhooks', 'setRateLimitPerUser', 'setNSFW']);\n\nmodule.exports = ThreadChannel;\n", "'use strict';\n\nconst { Collection } = require('@discordjs/collection');\nconst { makeURLSearchParams } = require('@discordjs/rest');\nconst { Routes } = require('discord-api-types/v10');\nconst CachedManager = require('./CachedManager');\nconst { DiscordjsTypeError, ErrorCodes } = require('../errors');\nconst ThreadChannel = require('../structures/ThreadChannel');\nconst { MakeCacheOverrideSymbol } = require('../util/Symbols');\n\n/**\n * Manages API methods for thread-based channels and stores their cache.\n * @extends {CachedManager}\n */\nclass ThreadManager extends CachedManager {\n  static [MakeCacheOverrideSymbol] = ThreadManager;\n\n  constructor(channel, iterable) {\n    super(channel.client, ThreadChannel, iterable);\n\n    /**\n     * The channel this Manager belongs to\n     * @type {TextChannel|NewsChannel|ForumChannel|MediaChannel}\n     */\n    this.channel = channel;\n  }\n\n  /**\n   * Data that can be resolved to a Thread Channel object. This can be:\n   * * A ThreadChannel object\n   * * A Snowflake\n   * @typedef {ThreadChannel|Snowflake} ThreadChannelResolvable\n   */\n\n  /**\n   * The cache of this Manager\n   * @type {Collection<Snowflake, ThreadChannel>}\n   * @name ThreadManager#cache\n   */\n\n  _add(thread) {\n    const existing = this.cache.get(thread.id);\n    if (existing) return existing;\n    this.cache.set(thread.id, thread);\n    return thread;\n  }\n\n  /**\n   * Resolves a {@link ThreadChannelResolvable} to a {@link ThreadChannel} object.\n   * @method resolve\n   * @memberof ThreadManager\n   * @instance\n   * @param {ThreadChannelResolvable} thread The ThreadChannel resolvable to resolve\n   * @returns {?ThreadChannel}\n   */\n\n  /**\n   * Resolves a {@link ThreadChannelResolvable} to a {@link ThreadChannel} id.\n   * @method resolveId\n   * @memberof ThreadManager\n   * @instance\n   * @param {ThreadChannelResolvable} thread The ThreadChannel resolvable to resolve\n   * @returns {?Snowflake}\n   */\n\n  /**\n   * Options for fetching multiple threads.\n   * @typedef {Object} FetchThreadsOptions\n   * @property {FetchArchivedThreadOptions} [archived] Options used to fetch archived threads\n   */\n\n  /**\n   * Obtains a thread from Discord, or the channel cache if it's already available.\n   * @param {ThreadChannelResolvable|FetchThreadsOptions} [options] The options to fetch threads. If it is a\n   * ThreadChannelResolvable then the specified thread will be fetched. Fetches all active threads if `undefined`\n   * @param {BaseFetchOptions} [cacheOptions] Additional options for this fetch. <warn>The `force` field gets ignored\n   * if `options` is not a {@link ThreadChannelResolvable}</warn>\n   * @returns {Promise<?(ThreadChannel|FetchedThreads|FetchedThreadsMore)>}\n   * {@link FetchedThreads} if active & {@link FetchedThreadsMore} if archived.\n   * @example\n   * // Fetch a thread by its id\n   * channel.threads.fetch('831955138126104859')\n   *   .then(channel => console.log(channel.name))\n   *   .catch(console.error);\n   */\n  fetch(options, { cache, force } = {}) {\n    if (!options) return this.fetchActive(cache);\n    const channel = this.client.channels.resolveId(options);\n    if (channel) return this.client.channels.fetch(channel, { cache, force });\n    if (options.archived) {\n      return this.fetchArchived(options.archived, cache);\n    }\n    return this.fetchActive(cache);\n  }\n\n  /**\n   * Data that can be resolved to a Date object. This can be:\n   * * A Date object\n   * * A number representing a timestamp\n   * * An [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) string\n   * @typedef {Date|number|string} DateResolvable\n   */\n\n  /**\n   * The options used to fetch archived threads.\n   * @typedef {Object} FetchArchivedThreadOptions\n   * @property {string} [type='public'] The type of threads to fetch (`public` or `private`)\n   * @property {boolean} [fetchAll=false] Whether to fetch **all** archived threads when `type` is `private`\n   * <info>This property requires the {@link PermissionFlagsBits.ManageThreads} permission if `true`.</info>\n   * @property {DateResolvable|ThreadChannelResolvable} [before] Only return threads that were archived before this Date\n   * or Snowflake\n   * <warn>Must be a {@link ThreadChannelResolvable} when `type` is `private` and `fetchAll` is `false`.</warn>\n   * @property {number} [limit] Maximum number of threads to return\n   */\n\n  /**\n   * Data returned from fetching multiple threads.\n   * @typedef {FetchedThreads} FetchedThreadsMore\n   * @property {?boolean} hasMore Whether there are potentially additional threads that require a subsequent call\n   */\n\n  /**\n   * Obtains a set of archived threads from Discord.\n   * <info>This method requires the {@link PermissionFlagsBits.ReadMessageHistory} permission\n   * in the parent channel.</info>\n   * @param {FetchArchivedThreadOptions} [options] The options to fetch archived threads\n   * @param {boolean} [cache=true] Whether to cache the new thread objects if they aren't already\n   * @returns {Promise<FetchedThreadsMore>}\n   */\n  async fetchArchived({ type = 'public', fetchAll = false, before, limit } = {}, cache = true) {\n    let path = Routes.channelThreads(this.channel.id, type);\n    if (type === 'private' && !fetchAll) {\n      path = Routes.channelJoinedArchivedThreads(this.channel.id);\n    }\n    let timestamp;\n    let id;\n    const query = makeURLSearchParams({ limit });\n    if (before !== undefined) {\n      if (before instanceof ThreadChannel || /^\\d{17,19}$/.test(String(before))) {\n        id = this.resolveId(before);\n        timestamp = this.resolve(before)?.archivedAt?.toISOString();\n        const toUse = type === 'private' && !fetchAll ? id : timestamp;\n        if (toUse) {\n          query.set('before', toUse);\n        }\n      } else {\n        try {\n          timestamp = new Date(before).toISOString();\n          if (type === 'public' || fetchAll) {\n            query.set('before', timestamp);\n          }\n        } catch {\n          throw new DiscordjsTypeError(ErrorCodes.InvalidType, 'before', 'DateResolvable or ThreadChannelResolvable');\n        }\n      }\n    }\n\n    const raw = await this.client.rest.get(path, { query });\n    return this.constructor._mapThreads(raw, this.client, { parent: this.channel, cache });\n  }\n\n  /**\n   * Obtains all active threads in the channel.\n   * @param {boolean} [cache=true] Whether to cache the fetched data\n   * @returns {Promise<FetchedThreads>}\n   */\n  async fetchActive(cache = true) {\n    const data = await this.channel.guild.channels.rawFetchGuildActiveThreads();\n    return this.constructor._mapThreads(data, this.client, { parent: this.channel, cache });\n  }\n\n  static _mapThreads(rawThreads, client, { parent, guild, cache }) {\n    const threads = rawThreads.threads.reduce((coll, raw) => {\n      const thread = client.channels._add(raw, guild ?? parent?.guild, { cache });\n      if (parent && thread.parentId !== parent.id) return coll;\n      return coll.set(thread.id, thread);\n    }, new Collection());\n\n    // Discord sends the thread id as id in this object\n    const threadMembers = rawThreads.members.reduce((coll, raw) => {\n      const thread = threads.get(raw.id);\n      return thread ? coll.set(raw.user_id, thread.members._add(raw)) : coll;\n    }, new Collection());\n\n    const response = { threads, members: threadMembers };\n\n    // The GET `/guilds/{guild.id}/threads/active` route does not return `has_more`.\n    if ('has_more' in rawThreads) response.hasMore = rawThreads.has_more;\n    return response;\n  }\n}\n\nmodule.exports = ThreadManager;\n", "'use strict';\n\nconst { ChannelType, Routes } = require('discord-api-types/v10');\nconst ThreadManager = require('./ThreadManager');\nconst { DiscordjsTypeError, ErrorCodes } = require('../errors');\n\n/**\n * Manages API methods for {@link ThreadChannel} objects and stores their cache.\n * @extends {ThreadManager}\n */\nclass GuildTextThreadManager extends ThreadManager {\n  /**\n   * The channel this Manager belongs to\n   * @name GuildTextThreadManager#channel\n   * @type {TextChannel|NewsChannel}\n   */\n\n  /**\n   * Options for creating a thread. <warn>Only one of `startMessage` or `type` can be defined.</warn>\n   * @typedef {StartThreadOptions} GuildTextThreadCreateOptions\n   * @property {MessageResolvable} [startMessage] The message to start a thread from.\n   * <warn>If this is defined, then the `type` of thread gets inferred automatically and cannot be changed.</warn>\n   * @property {ThreadChannelTypes} [type] The type of thread to create.\n   * Defaults to {@link ChannelType.PublicThread} if created in a {@link TextChannel}\n   * <warn>When creating threads in a {@link NewsChannel}, this is ignored and is always\n   * {@link ChannelType.AnnouncementThread}</warn>\n   * @property {boolean} [invitable] Whether non-moderators can add other non-moderators to the thread\n   * <info>Can only be set when type will be {@link ChannelType.PrivateThread}</info>\n   */\n\n  /**\n   * Creates a new thread in the channel.\n   * @param {GuildTextThreadCreateOptions} [options] Options to create a new thread\n   * @returns {Promise<ThreadChannel>}\n   * @example\n   * // Create a new public thread\n   * channel.threads\n   *   .create({\n   *     name: 'food-talk',\n   *     autoArchiveDuration: ThreadAutoArchiveDuration.OneHour,\n   *     reason: 'Needed a separate thread for food',\n   *   })\n   *   .then(threadChannel => console.log(threadChannel))\n   *   .catch(console.error);\n   * @example\n   * // Create a new private thread\n   * channel.threads\n   *   .create({\n   *      name: 'mod-talk',\n   *      autoArchiveDuration: ThreadAutoArchiveDuration.OneHour,\n   *      type: ChannelType.PrivateThread,\n   *      reason: 'Needed a separate thread for moderation',\n   *    })\n   *   .then(threadChannel => console.log(threadChannel))\n   *   .catch(console.error);\n   */\n  async create({\n    name,\n    autoArchiveDuration = this.channel.defaultAutoArchiveDuration,\n    startMessage,\n    type,\n    invitable,\n    reason,\n    rateLimitPerUser,\n  } = {}) {\n    let resolvedType =\n      this.channel.type === ChannelType.GuildAnnouncement ? ChannelType.AnnouncementThread : ChannelType.PublicThread;\n    let startMessageId;\n    if (startMessage) {\n      startMessageId = this.channel.messages.resolveId(startMessage);\n      if (!startMessageId) throw new DiscordjsTypeError(ErrorCodes.InvalidType, 'startMessage', 'MessageResolvable');\n    } else if (this.channel.type !== ChannelType.GuildAnnouncement) {\n      resolvedType = type ?? resolvedType;\n    }\n\n    const data = await this.client.rest.post(Routes.threads(this.channel.id, startMessageId), {\n      body: {\n        name,\n        auto_archive_duration: autoArchiveDuration,\n        type: resolvedType,\n        invitable: resolvedType === ChannelType.PrivateThread ? invitable : undefined,\n        rate_limit_per_user: rateLimitPerUser,\n      },\n      reason,\n    });\n\n    return this.client.actions.ThreadCreate.handle(data).thread;\n  }\n}\n\nmodule.exports = GuildTextThreadManager;\n", "'use strict';\n\nconst GuildChannel = require('./GuildChannel');\nconst TextBasedChannel = require('./interfaces/TextBasedChannel');\nconst GuildMessageManager = require('../managers/GuildMessageManager');\nconst GuildTextThreadManager = require('../managers/GuildTextThreadManager');\n\n/**\n * Represents a text-based guild channel on Discord.\n * @extends {GuildChannel}\n * @implements {TextBasedChannel}\n */\nclass BaseGuildTextChannel extends GuildChannel {\n  constructor(guild, data, client) {\n    super(guild, data, client, false);\n\n    /**\n     * A manager of the messages sent to this channel\n     * @type {GuildMessageManager}\n     */\n    this.messages = new GuildMessageManager(this);\n\n    /**\n     * A manager of the threads belonging to this channel\n     * @type {GuildTextThreadManager}\n     */\n    this.threads = new GuildTextThreadManager(this);\n\n    /**\n     * If the guild considers this channel NSFW\n     * @type {boolean}\n     */\n    this.nsfw = Boolean(data.nsfw);\n\n    this._patch(data);\n  }\n\n  _patch(data) {\n    super._patch(data);\n\n    if ('topic' in data) {\n      /**\n       * The topic of the text channel\n       * @type {?string}\n       */\n      this.topic = data.topic;\n    }\n\n    if ('nsfw' in data) {\n      this.nsfw = Boolean(data.nsfw);\n    }\n\n    if ('last_message_id' in data) {\n      /**\n       * The last message id sent in the channel, if one was sent\n       * @type {?Snowflake}\n       */\n      this.lastMessageId = data.last_message_id;\n    }\n\n    if ('last_pin_timestamp' in data) {\n      /**\n       * The timestamp when the last pinned message was pinned, if there was one\n       * @type {?number}\n       */\n      this.lastPinTimestamp = data.last_pin_timestamp ? Date.parse(data.last_pin_timestamp) : null;\n    }\n\n    if ('default_auto_archive_duration' in data) {\n      /**\n       * The default auto archive duration for newly created threads in this channel\n       * @type {?ThreadAutoArchiveDuration}\n       */\n      this.defaultAutoArchiveDuration = data.default_auto_archive_duration;\n    }\n\n    if ('default_thread_rate_limit_per_user' in data) {\n      /**\n       * The initial rate limit per user (slowmode) to set on newly created threads in a channel.\n       * @type {?number}\n       */\n      this.defaultThreadRateLimitPerUser = data.default_thread_rate_limit_per_user;\n    } else {\n      this.defaultThreadRateLimitPerUser ??= null;\n    }\n\n    if ('messages' in data) {\n      for (const message of data.messages) this.messages._add(message);\n    }\n  }\n\n  /**\n   * Sets the default auto archive duration for all newly created threads in this channel.\n   * @param {ThreadAutoArchiveDuration} defaultAutoArchiveDuration The new default auto archive duration\n   * @param {string} [reason] Reason for changing the channel's default auto archive duration\n   * @returns {Promise<TextChannel>}\n   */\n  setDefaultAutoArchiveDuration(defaultAutoArchiveDuration, reason) {\n    return this.edit({ defaultAutoArchiveDuration, reason });\n  }\n\n  /**\n   * Sets the type of this channel.\n   * <info>Only conversion between {@link TextChannel} and {@link NewsChannel} is supported.</info>\n   * @param {ChannelType.GuildText|ChannelType.GuildAnnouncement} type The new channel type\n   * @param {string} [reason] Reason for changing the channel's type\n   * @returns {Promise<GuildChannel>}\n   */\n  setType(type, reason) {\n    return this.edit({ type, reason });\n  }\n\n  /**\n   * Sets a new topic for the guild channel.\n   * @param {?string} topic The new topic for the guild channel\n   * @param {string} [reason] Reason for changing the guild channel's topic\n   * @returns {Promise<GuildChannel>}\n   * @example\n   * // Set a new channel topic\n   * channel.setTopic('needs more rate limiting')\n   *   .then(newChannel => console.log(`Channel's new topic is ${newChannel.topic}`))\n   *   .catch(console.error);\n   */\n  setTopic(topic, reason) {\n    return this.edit({ topic, reason });\n  }\n\n  /**\n   * Data that can be resolved to an Application. This can be:\n   * * An Application\n   * * An Activity with associated Application\n   * * A Snowflake\n   * @typedef {Application|Snowflake} ApplicationResolvable\n   */\n\n  /**\n   * Options used to create an invite to a guild channel.\n   * @typedef {Object} InviteCreateOptions\n   * @property {boolean} [temporary] Whether members that joined via the invite should be automatically\n   * kicked after 24 hours if they have not yet received a role\n   * @property {number} [maxAge] How long the invite should last (in seconds, 0 for forever)\n   * @property {number} [maxUses] Maximum number of uses\n   * @property {boolean} [unique] Create a unique invite, or use an existing one with similar settings\n   * @property {UserResolvable} [targetUser] The user whose stream to display for this invite,\n   * required if `targetType` is {@link InviteTargetType.Stream}, the user must be streaming in the channel\n   * @property {ApplicationResolvable} [targetApplication] The embedded application to open for this invite,\n   * required if `targetType` is {@link InviteTargetType.Stream}, the application must have the\n   * {@link InviteTargetType.EmbeddedApplication} flag\n   * @property {InviteTargetType} [targetType] The type of the target for this voice channel invite\n   * @property {string} [reason] The reason for creating the invite\n   */\n\n  /**\n   * Creates an invite to this guild channel.\n   * @param {InviteCreateOptions} [options={}] The options for creating the invite\n   * @returns {Promise<Invite>}\n   * @example\n   * // Create an invite to a channel\n   * channel.createInvite()\n   *   .then(invite => console.log(`Created an invite with a code of ${invite.code}`))\n   *   .catch(console.error);\n   */\n  createInvite(options) {\n    return this.guild.invites.create(this.id, options);\n  }\n\n  /**\n   * Fetches a collection of invites to this guild channel.\n   * Resolves with a collection mapping invites by their codes.\n   * @param {boolean} [cache=true] Whether or not to cache the fetched invites\n   * @returns {Promise<Collection<string, Invite>>}\n   */\n  fetchInvites(cache = true) {\n    return this.guild.invites.fetch({ channelId: this.id, cache });\n  }\n\n  // These are here only for documentation purposes - they are implemented by TextBasedChannel\n  /* eslint-disable no-empty-function */\n  get lastMessage() {}\n  get lastPinAt() {}\n  send() {}\n  sendTyping() {}\n  createMessageCollector() {}\n  awaitMessages() {}\n  createMessageComponentCollector() {}\n  awaitMessageComponent() {}\n  bulkDelete() {}\n  fetchWebhooks() {}\n  createWebhook() {}\n  setRateLimitPerUser() {}\n  setNSFW() {}\n}\n\nTextBasedChannel.applyToClass(BaseGuildTextChannel, true);\n\nmodule.exports = BaseGuildTextChannel;\n", "'use strict';\n\nconst { Routes } = require('discord-api-types/v10');\nconst BaseGuildTextChannel = require('./BaseGuildTextChannel');\nconst { DiscordjsError, ErrorCodes } = require('../errors');\n\n/**\n * Represents a guild news channel on Discord.\n * @extends {BaseGuildTextChannel}\n */\nclass NewsChannel extends BaseGuildTextChannel {\n  /**\n   * Adds the target to this channel's followers.\n   * @param {TextChannelResolvable} channel The channel where the webhook should be created\n   * @param {string} [reason] Reason for creating the webhook\n   * @returns {Promise<NewsChannel>}\n   * @example\n   * if (channel.type === ChannelType.GuildAnnouncement) {\n   *   channel.addFollower('222197033908436994', 'Important announcements')\n   *     .then(() => console.log('Added follower'))\n   *     .catch(console.error);\n   * }\n   */\n  async addFollower(channel, reason) {\n    const channelId = this.guild.channels.resolveId(channel);\n    if (!channelId) throw new DiscordjsError(ErrorCodes.GuildChannelResolve);\n    await this.client.rest.post(Routes.channelFollowers(this.id), { body: { webhook_channel_id: channelId }, reason });\n    return this;\n  }\n}\n\nmodule.exports = NewsChannel;\n", "'use strict';\n\nconst { Collection } = require('@discordjs/collection');\nconst { PermissionFlagsBits } = require('discord-api-types/v10');\nconst GuildChannel = require('./GuildChannel');\nconst TextBasedChannel = require('./interfaces/TextBasedChannel');\nconst GuildMessageManager = require('../managers/GuildMessageManager');\n\n/**\n * Represents a voice-based guild channel on Discord.\n * @extends {GuildChannel}\n * @implements {TextBasedChannel}\n */\nclass BaseGuildVoiceChannel extends GuildChannel {\n  constructor(guild, data, client) {\n    super(guild, data, client, false);\n    /**\n     * A manager of the messages sent to this channel\n     * @type {GuildMessageManager}\n     */\n    this.messages = new GuildMessageManager(this);\n\n    /**\n     * If the guild considers this channel NSFW\n     * @type {boolean}\n     */\n    this.nsfw = Boolean(data.nsfw);\n\n    this._patch(data);\n  }\n\n  _patch(data) {\n    super._patch(data);\n\n    if ('rtc_region' in data) {\n      /**\n       * The RTC region for this voice-based channel. This region is automatically selected if `null`.\n       * @type {?string}\n       */\n      this.rtcRegion = data.rtc_region;\n    }\n\n    if ('bitrate' in data) {\n      /**\n       * The bitrate of this voice-based channel\n       * @type {number}\n       */\n      this.bitrate = data.bitrate;\n    }\n\n    if ('user_limit' in data) {\n      /**\n       * The maximum amount of users allowed in this channel.\n       * @type {number}\n       */\n      this.userLimit = data.user_limit;\n    }\n\n    if ('video_quality_mode' in data) {\n      /**\n       * The camera video quality mode of the channel.\n       * @type {?VideoQualityMode}\n       */\n      this.videoQualityMode = data.video_quality_mode;\n    } else {\n      this.videoQualityMode ??= null;\n    }\n\n    if ('last_message_id' in data) {\n      /**\n       * The last message id sent in the channel, if one was sent\n       * @type {?Snowflake}\n       */\n      this.lastMessageId = data.last_message_id;\n    }\n\n    if ('messages' in data) {\n      for (const message of data.messages) this.messages._add(message);\n    }\n\n    if ('rate_limit_per_user' in data) {\n      /**\n       * The rate limit per user (slowmode) for this channel in seconds\n       * @type {number}\n       */\n      this.rateLimitPerUser = data.rate_limit_per_user;\n    }\n\n    if ('nsfw' in data) {\n      this.nsfw = data.nsfw;\n    }\n  }\n\n  /**\n   * The members in this voice-based channel\n   * @type {Collection<Snowflake, GuildMember>}\n   * @readonly\n   */\n  get members() {\n    const coll = new Collection();\n    for (const state of this.guild.voiceStates.cache.values()) {\n      if (state.channelId === this.id && state.member) {\n        coll.set(state.id, state.member);\n      }\n    }\n    return coll;\n  }\n\n  /**\n   * Checks if the voice-based channel is full\n   * @type {boolean}\n   * @readonly\n   */\n  get full() {\n    return this.userLimit > 0 && this.members.size >= this.userLimit;\n  }\n\n  /**\n   * Whether the channel is joinable by the client user\n   * @type {boolean}\n   * @readonly\n   */\n  get joinable() {\n    if (!this.viewable) return false;\n    const permissions = this.permissionsFor(this.client.user);\n    if (!permissions) return false;\n\n    // This flag allows joining even if timed out\n    if (permissions.has(PermissionFlagsBits.Administrator, false)) return true;\n\n    return (\n      this.guild.members.me.communicationDisabledUntilTimestamp < Date.now() &&\n      permissions.has(PermissionFlagsBits.Connect, false)\n    );\n  }\n\n  /**\n   * Creates an invite to this guild channel.\n   * @param {InviteCreateOptions} [options={}] The options for creating the invite\n   * @returns {Promise<Invite>}\n   * @example\n   * // Create an invite to a channel\n   * channel.createInvite()\n   *   .then(invite => console.log(`Created an invite with a code of ${invite.code}`))\n   *   .catch(console.error);\n   */\n  createInvite(options) {\n    return this.guild.invites.create(this.id, options);\n  }\n\n  /**\n   * Fetches a collection of invites to this guild channel.\n   * @param {boolean} [cache=true] Whether to cache the fetched invites\n   * @returns {Promise<Collection<string, Invite>>}\n   */\n  fetchInvites(cache = true) {\n    return this.guild.invites.fetch({ channelId: this.id, cache });\n  }\n\n  /**\n   * Sets the bitrate of the channel.\n   * @param {number} bitrate The new bitrate\n   * @param {string} [reason] Reason for changing the channel's bitrate\n   * @returns {Promise<BaseGuildVoiceChannel>}\n   * @example\n   * // Set the bitrate of a voice channel\n   * channel.setBitrate(48_000)\n   *   .then(channel => console.log(`Set bitrate to ${channel.bitrate}bps for ${channel.name}`))\n   *   .catch(console.error);\n   */\n  setBitrate(bitrate, reason) {\n    return this.edit({ bitrate, reason });\n  }\n\n  /**\n   * Sets the RTC region of the channel.\n   * @param {?string} rtcRegion The new region of the channel. Set to `null` to remove a specific region for the channel\n   * @param {string} [reason] The reason for modifying this region.\n   * @returns {Promise<BaseGuildVoiceChannel>}\n   * @example\n   * // Set the RTC region to sydney\n   * channel.setRTCRegion('sydney');\n   * @example\n   * // Remove a fixed region for this channel - let Discord decide automatically\n   * channel.setRTCRegion(null, 'We want to let Discord decide.');\n   */\n  setRTCRegion(rtcRegion, reason) {\n    return this.edit({ rtcRegion, reason });\n  }\n\n  /**\n   * Sets the user limit of the channel.\n   * @param {number} userLimit The new user limit\n   * @param {string} [reason] Reason for changing the user limit\n   * @returns {Promise<BaseGuildVoiceChannel>}\n   * @example\n   * // Set the user limit of a voice channel\n   * channel.setUserLimit(42)\n   *   .then(channel => console.log(`Set user limit to ${channel.userLimit} for ${channel.name}`))\n   *   .catch(console.error);\n   */\n  setUserLimit(userLimit, reason) {\n    return this.edit({ userLimit, reason });\n  }\n\n  /**\n   * Sets the camera video quality mode of the channel.\n   * @param {VideoQualityMode} videoQualityMode The new camera video quality mode.\n   * @param {string} [reason] Reason for changing the camera video quality mode.\n   * @returns {Promise<BaseGuildVoiceChannel>}\n   */\n  setVideoQualityMode(videoQualityMode, reason) {\n    return this.edit({ videoQualityMode, reason });\n  }\n\n  // These are here only for documentation purposes - they are implemented by TextBasedChannel\n  /* eslint-disable no-empty-function */\n  get lastMessage() {}\n  send() {}\n  sendTyping() {}\n  createMessageCollector() {}\n  awaitMessages() {}\n  createMessageComponentCollector() {}\n  awaitMessageComponent() {}\n  bulkDelete() {}\n  fetchWebhooks() {}\n  createWebhook() {}\n  setRateLimitPerUser() {}\n  setNSFW() {}\n}\n\nTextBasedChannel.applyToClass(BaseGuildVoiceChannel, true, ['lastPinAt']);\n\nmodule.exports = BaseGuildVoiceChannel;\n", "'use strict';\n\nconst BaseGuildVoiceChannel = require('./BaseGuildVoiceChannel');\n\n/**\n * Represents a guild stage channel on Discord.\n * @extends {BaseGuildVoiceChannel}\n */\nclass StageChannel extends BaseGuildVoiceChannel {\n  _patch(data) {\n    super._patch(data);\n\n    if ('topic' in data) {\n      /**\n       * The topic of the stage channel\n       * @type {?string}\n       */\n      this.topic = data.topic;\n    }\n  }\n\n  /**\n   * The stage instance of this stage channel, if it exists\n   * @type {?StageInstance}\n   * @readonly\n   */\n  get stageInstance() {\n    return this.guild.stageInstances.cache.find(stageInstance => stageInstance.channelId === this.id) ?? null;\n  }\n\n  /**\n   * Creates a stage instance associated with this stage channel.\n   * @param {StageInstanceCreateOptions} options The options to create the stage instance\n   * @returns {Promise<StageInstance>}\n   */\n  createStageInstance(options) {\n    return this.guild.stageInstances.create(this.id, options);\n  }\n\n  /**\n   * Sets a new topic for the guild channel.\n   * @param {?string} topic The new topic for the guild channel\n   * @param {string} [reason] Reason for changing the guild channel's topic\n   * @returns {Promise<StageChannel>}\n   * @example\n   * // Set a new channel topic\n   * stageChannel.setTopic('needs more rate limiting')\n   *   .then(channel => console.log(`Channel's new topic is ${channel.topic}`))\n   *   .catch(console.error);\n   */\n  setTopic(topic, reason) {\n    return this.edit({ topic, reason });\n  }\n}\n\n/**\n * Sets the bitrate of the channel.\n * @method setBitrate\n * @memberof StageChannel\n * @instance\n * @param {number} bitrate The new bitrate\n * @param {string} [reason] Reason for changing the channel's bitrate\n * @returns {Promise<StageChannel>}\n * @example\n * // Set the bitrate of a voice channel\n * stageChannel.setBitrate(48_000)\n *   .then(channel => console.log(`Set bitrate to ${channel.bitrate}bps for ${channel.name}`))\n *   .catch(console.error);\n */\n\n/**\n * Sets the RTC region of the channel.\n * @method setRTCRegion\n * @memberof StageChannel\n * @instance\n * @param {?string} rtcRegion The new region of the channel. Set to `null` to remove a specific region for the channel\n * @param {string} [reason] The reason for modifying this region.\n * @returns {Promise<StageChannel>}\n * @example\n * // Set the RTC region to sydney\n * stageChannel.setRTCRegion('sydney');\n * @example\n * // Remove a fixed region for this channel - let Discord decide automatically\n * stageChannel.setRTCRegion(null, 'We want to let Discord decide.');\n */\n\n/**\n * Sets the user limit of the channel.\n * @method setUserLimit\n * @memberof StageChannel\n * @instance\n * @param {number} userLimit The new user limit\n * @param {string} [reason] Reason for changing the user limit\n * @returns {Promise<StageChannel>}\n * @example\n * // Set the user limit of a voice channel\n * stageChannel.setUserLimit(42)\n *   .then(channel => console.log(`Set user limit to ${channel.userLimit} for ${channel.name}`))\n *   .catch(console.error);\n */\n\n/**\n * Sets the camera video quality mode of the channel.\n * @method setVideoQualityMode\n * @memberof StageChannel\n * @instance\n * @param {VideoQualityMode} videoQualityMode The new camera video quality mode.\n * @param {string} [reason] Reason for changing the camera video quality mode.\n * @returns {Promise<StageChannel>}\n */\n\nmodule.exports = StageChannel;\n", "'use strict';\n\nconst BaseGuildTextChannel = require('./BaseGuildTextChannel');\n\n/**\n * Represents a guild text channel on Discord.\n * @extends {BaseGuildTextChannel}\n */\nclass TextChannel extends BaseGuildTextChannel {\n  _patch(data) {\n    super._patch(data);\n\n    if ('rate_limit_per_user' in data) {\n      /**\n       * The rate limit per user (slowmode) for this channel in seconds\n       * @type {number}\n       */\n      this.rateLimitPerUser = data.rate_limit_per_user;\n    }\n  }\n\n  /**\n   * Sets the rate limit per user (slowmode) for this channel.\n   * @param {number} rateLimitPerUser The new rate limit in seconds\n   * @param {string} [reason] Reason for changing the channel's rate limit\n   * @returns {Promise<TextChannel>}\n   */\n  setRateLimitPerUser(rateLimitPerUser, reason) {\n    return this.edit({ rateLimitPerUser, reason });\n  }\n}\n\nmodule.exports = TextChannel;\n", "'use strict';\n\nconst { PermissionFlagsBits } = require('discord-api-types/v10');\nconst BaseGuildVoiceChannel = require('./BaseGuildVoiceChannel');\n\n/**\n * Represents a guild voice channel on Discord.\n * @extends {BaseGuildVoiceChannel}\n */\nclass VoiceChannel extends BaseGuildVoiceChannel {\n  /**\n   * Whether the channel is joinable by the client user\n   * @type {boolean}\n   * @readonly\n   */\n  get joinable() {\n    if (!super.joinable) return false;\n    if (this.full && !this.permissionsFor(this.client.user).has(PermissionFlagsBits.MoveMembers, false)) return false;\n    return true;\n  }\n\n  /**\n   * Checks if the client has permission to send audio to the voice channel\n   * @type {boolean}\n   * @readonly\n   */\n  get speakable() {\n    const permissions = this.permissionsFor(this.client.user);\n    if (!permissions) return false;\n    // This flag allows speaking even if timed out\n    if (permissions.has(PermissionFlagsBits.Administrator, false)) return true;\n\n    return (\n      this.guild.members.me.communicationDisabledUntilTimestamp < Date.now() &&\n      permissions.has(PermissionFlagsBits.Speak, false)\n    );\n  }\n}\n\n/**\n * Sets the bitrate of the channel.\n * @method setBitrate\n * @memberof VoiceChannel\n * @instance\n * @param {number} bitrate The new bitrate\n * @param {string} [reason] Reason for changing the channel's bitrate\n * @returns {Promise<VoiceChannel>}\n * @example\n * // Set the bitrate of a voice channel\n * voiceChannel.setBitrate(48_000)\n *   .then(channel => console.log(`Set bitrate to ${channel.bitrate}bps for ${channel.name}`))\n *   .catch(console.error);\n */\n\n/**\n * Sets the RTC region of the channel.\n * @method setRTCRegion\n * @memberof VoiceChannel\n * @instance\n * @param {?string} rtcRegion The new region of the channel. Set to `null` to remove a specific region for the channel\n * @param {string} [reason] The reason for modifying this region.\n * @returns {Promise<VoiceChannel>}\n * @example\n * // Set the RTC region to sydney\n * voiceChannel.setRTCRegion('sydney');\n * @example\n * // Remove a fixed region for this channel - let Discord decide automatically\n * voiceChannel.setRTCRegion(null, 'We want to let Discord decide.');\n */\n\n/**\n * Sets the user limit of the channel.\n * @method setUserLimit\n * @memberof VoiceChannel\n * @instance\n * @param {number} userLimit The new user limit\n * @param {string} [reason] Reason for changing the user limit\n * @returns {Promise<VoiceChannel>}\n * @example\n * // Set the user limit of a voice channel\n * voiceChannel.setUserLimit(42)\n *   .then(channel => console.log(`Set user limit to ${channel.userLimit} for ${channel.name}`))\n *   .catch(console.error);\n */\n\n/**\n * Sets the camera video quality mode of the channel.\n * @method setVideoQualityMode\n * @memberof VoiceChannel\n * @instance\n * @param {VideoQualityMode} videoQualityMode The new camera video quality mode.\n * @param {string} [reason] Reason for changing the camera video quality mode.\n * @returns {Promise<VoiceChannel>}\n */\n\nmodule.exports = VoiceChannel;\n", "'use strict';\n\nconst { BaseChannel } = require('./BaseChannel');\n\n/**\n * Represents a channel that displays a directory of guilds.\n * @extends {BaseChannel}\n */\nclass DirectoryChannel extends BaseChannel {\n  constructor(guild, data, client) {\n    super(client, data);\n\n    /**\n     * The guild the channel is in\n     * @type {InviteGuild}\n     */\n    this.guild = guild;\n\n    /**\n     * The id of the guild the channel is in\n     * @type {Snowflake}\n     */\n    this.guildId = guild.id;\n  }\n\n  _patch(data) {\n    super._patch(data);\n    /**\n     * The channel's name\n     * @type {string}\n     */\n    this.name = data.name;\n  }\n}\n\nmodule.exports = DirectoryChannel;\n", "'use strict';\n\nconst MessageManager = require('./MessageManager');\n\n/**\n * Manages API methods for messages in group direct message channels and holds their cache.\n * @extends {MessageManager}\n */\nclass PartialGroupDMMessageManager extends MessageManager {\n  /**\n   * The channel that the messages belong to\n   * @name PartialGroupDMMessageManager#channel\n   * @type {PartialGroupDMChannel}\n   */\n}\n\nmodule.exports = PartialGroupDMMessageManager;\n", "'use strict';\n\nconst { BaseChannel } = require('./BaseChannel');\nconst { DiscordjsError, ErrorCodes } = require('../errors');\nconst PartialGroupDMMessageManager = require('../managers/PartialGroupDMMessageManager');\n\n/**\n * Represents a Partial Group DM Channel on Discord.\n * @extends {BaseChannel}\n */\nclass PartialGroupDMChannel extends BaseChannel {\n  constructor(client, data) {\n    super(client, data);\n\n    // No flags are present when fetching partial group DM channels.\n    this.flags = null;\n\n    /**\n     * The name of this Group DM Channel\n     * @type {?string}\n     */\n    this.name = data.name;\n\n    /**\n     * The hash of the channel icon\n     * @type {?string}\n     */\n    this.icon = data.icon;\n\n    /**\n     * Recipient data received in a {@link PartialGroupDMChannel}.\n     * @typedef {Object} PartialRecipient\n     * @property {string} username The username of the recipient\n     */\n\n    /**\n     * The recipients of this Group DM Channel.\n     * @type {PartialRecipient[]}\n     */\n    this.recipients = data.recipients;\n\n    /**\n     * A manager of the messages belonging to this channel\n     * @type {PartialGroupDMMessageManager}\n     */\n    this.messages = new PartialGroupDMMessageManager(this);\n  }\n\n  /**\n   * The URL to this channel's icon.\n   * @param {ImageURLOptions} [options={}] Options for the image URL\n   * @returns {?string}\n   */\n  iconURL(options = {}) {\n    return this.icon && this.client.rest.cdn.channelIcon(this.id, this.icon, options);\n  }\n\n  delete() {\n    return Promise.reject(new DiscordjsError(ErrorCodes.DeleteGroupDMChannel));\n  }\n\n  fetch() {\n    return Promise.reject(new DiscordjsError(ErrorCodes.FetchGroupDMChannel));\n  }\n}\n\nmodule.exports = PartialGroupDMChannel;\n", "'use strict';\n\nconst ThreadOnlyChannel = require('./ThreadOnlyChannel');\n\n/**\n * Represents a forum channel.\n * @extends {ThreadOnlyChannel}\n */\nclass ForumChannel extends ThreadOnlyChannel {\n  _patch(data) {\n    super._patch(data);\n\n    /**\n     * The default layout type used to display posts\n     * @type {ForumLayoutType}\n     */\n    this.defaultForumLayout = data.default_forum_layout;\n  }\n\n  /**\n   * Sets the default forum layout type used to display posts\n   * @param {ForumLayoutType} defaultForumLayout The default forum layout type to set on this channel\n   * @param {string} [reason] Reason for changing the default forum layout\n   * @returns {Promise<ForumChannel>}\n   */\n  setDefaultForumLayout(defaultForumLayout, reason) {\n    return this.edit({ defaultForumLayout, reason });\n  }\n}\n\nmodule.exports = ForumChannel;\n", "'use strict';\n\nconst ThreadOnlyChannel = require('./ThreadOnlyChannel');\n\n/**\n * Represents a media channel.\n * @extends {ThreadOnlyChannel}\n */\nclass MediaChannel extends ThreadOnlyChannel {}\n\nmodule.exports = MediaChannel;\n", "'use strict';\n\nconst { lazy } = require('@discordjs/util');\nconst { ChannelType } = require('discord-api-types/v10');\n\nconst getCategoryChannel = lazy(() => require('../structures/CategoryChannel'));\nconst getDMChannel = lazy(() => require('../structures/DMChannel'));\nconst getNewsChannel = lazy(() => require('../structures/NewsChannel'));\nconst getStageChannel = lazy(() => require('../structures/StageChannel'));\nconst getTextChannel = lazy(() => require('../structures/TextChannel'));\nconst getThreadChannel = lazy(() => require('../structures/ThreadChannel'));\nconst getVoiceChannel = lazy(() => require('../structures/VoiceChannel'));\nconst getDirectoryChannel = lazy(() => require('../structures/DirectoryChannel'));\nconst getPartialGroupDMChannel = lazy(() => require('../structures/PartialGroupDMChannel'));\nconst getForumChannel = lazy(() => require('../structures/ForumChannel'));\nconst getMediaChannel = lazy(() => require('../structures/MediaChannel'));\n\n/**\n * Extra options for creating a channel.\n * @typedef {Object} CreateChannelOptions\n * @property {boolean} [allowFromUnknownGuild] Whether to allow creating a channel from an unknown guild\n * @private\n */\n\n/**\n * Creates a discord.js channel from data received from the API.\n * @param {Client} client The client\n * @param {APIChannel} data The data of the channel to create\n * @param {Guild} [guild] The guild where this channel belongs\n * @param {CreateChannelOptions} [extras] Extra information to supply for creating this channel\n * @returns {BaseChannel} Any kind of channel.\n * @ignore\n */\nfunction createChannel(client, data, guild, { allowUnknownGuild } = {}) {\n  let channel;\n  if (!data.guild_id && !guild) {\n    if ((data.recipients && data.type !== ChannelType.GroupDM) || data.type === ChannelType.DM) {\n      channel = new (getDMChannel())(client, data);\n    } else if (data.type === ChannelType.GroupDM) {\n      channel = new (getPartialGroupDMChannel())(client, data);\n    }\n  } else {\n    guild ??= client.guilds.cache.get(data.guild_id);\n\n    if (guild || allowUnknownGuild) {\n      switch (data.type) {\n        case ChannelType.GuildText: {\n          channel = new (getTextChannel())(guild, data, client);\n          break;\n        }\n        case ChannelType.GuildVoice: {\n          channel = new (getVoiceChannel())(guild, data, client);\n          break;\n        }\n        case ChannelType.GuildCategory: {\n          channel = new (getCategoryChannel())(guild, data, client);\n          break;\n        }\n        case ChannelType.GuildAnnouncement: {\n          channel = new (getNewsChannel())(guild, data, client);\n          break;\n        }\n        case ChannelType.GuildStageVoice: {\n          channel = new (getStageChannel())(guild, data, client);\n          break;\n        }\n        case ChannelType.AnnouncementThread:\n        case ChannelType.PublicThread:\n        case ChannelType.PrivateThread: {\n          channel = new (getThreadChannel())(guild, data, client);\n          if (!allowUnknownGuild) channel.parent?.threads.cache.set(channel.id, channel);\n          break;\n        }\n        case ChannelType.GuildDirectory:\n          channel = new (getDirectoryChannel())(guild, data, client);\n          break;\n        case ChannelType.GuildForum:\n          channel = new (getForumChannel())(guild, data, client);\n          break;\n        case ChannelType.GuildMedia:\n          channel = new (getMediaChannel())(guild, data, client);\n          break;\n      }\n      if (channel && !allowUnknownGuild) guild.channels?.cache.set(channel.id, channel);\n    }\n  }\n  return channel;\n}\n\n/**\n * Transforms an API guild forum tag to camel-cased guild forum tag.\n * @param {APIGuildForumTag} tag The tag to transform\n * @returns {GuildForumTag}\n * @ignore\n */\nfunction transformAPIGuildForumTag(tag) {\n  return {\n    id: tag.id,\n    name: tag.name,\n    moderated: tag.moderated,\n    emoji:\n      (tag.emoji_id ?? tag.emoji_name)\n        ? {\n            id: tag.emoji_id,\n            name: tag.emoji_name,\n          }\n        : null,\n  };\n}\n\n/**\n * Transforms a camel-cased guild forum tag to an API guild forum tag.\n * @param {GuildForumTag} tag The tag to transform\n * @returns {APIGuildForumTag}\n * @ignore\n */\nfunction transformGuildForumTag(tag) {\n  return {\n    id: tag.id,\n    name: tag.name,\n    moderated: tag.moderated,\n    emoji_id: tag.emoji?.id ?? null,\n    emoji_name: tag.emoji?.name ?? null,\n  };\n}\n\n/**\n * Transforms an API guild forum default reaction object to a\n * camel-cased guild forum default reaction object.\n * @param {APIGuildForumDefaultReactionEmoji} defaultReaction The default reaction to transform\n * @returns {DefaultReactionEmoji}\n * @ignore\n */\nfunction transformAPIGuildDefaultReaction(defaultReaction) {\n  return {\n    id: defaultReaction.emoji_id,\n    name: defaultReaction.emoji_name,\n  };\n}\n\n/**\n * Transforms a camel-cased guild forum default reaction object to an\n * API guild forum default reaction object.\n * @param {DefaultReactionEmoji} defaultReaction The default reaction to transform\n * @returns {APIGuildForumDefaultReactionEmoji}\n * @ignore\n */\nfunction transformGuildDefaultReaction(defaultReaction) {\n  return {\n    emoji_id: defaultReaction.id,\n    emoji_name: defaultReaction.name,\n  };\n}\n\nmodule.exports = {\n  createChannel,\n  transformAPIGuildForumTag,\n  transformGuildForumTag,\n  transformAPIGuildDefaultReaction,\n  transformGuildDefaultReaction,\n};\n", "'use strict';\n\nconst Action = require('./Action');\nconst { createChannel } = require('../../util/Channels');\n\nclass ChannelUpdateAction extends Action {\n  handle(data) {\n    const client = this.client;\n    let channel = client.channels.cache.get(data.id);\n\n    if (channel) {\n      const old = channel._update(data);\n\n      if (channel.type !== data.type) {\n        const newChannel = createChannel(this.client, data, channel.guild);\n\n        if (!newChannel) {\n          this.client.channels.cache.delete(channel.id);\n          return {};\n        }\n\n        if (channel.isTextBased() && newChannel.isTextBased()) {\n          for (const [id, message] of channel.messages.cache) newChannel.messages.cache.set(id, message);\n        }\n\n        channel = newChannel;\n        this.client.channels.cache.set(channel.id, channel);\n      }\n\n      return {\n        old,\n        updated: channel,\n      };\n    } else {\n      client.channels._add(data);\n    }\n\n    return {};\n  }\n}\n\nmodule.exports = ChannelUpdateAction;\n", "'use strict';\n\nconst Action = require('./Action');\nconst Events = require('../../util/Events');\n\nclass EntitlementCreateAction extends Action {\n  handle(data) {\n    const client = this.client;\n\n    const entitlement = client.application.entitlements._add(data);\n\n    /**\n     * Emitted whenever an entitlement is created.\n     * @event Client#entitlementCreate\n     * @param {Entitlement} entitlement The entitlement that was created\n     */\n    client.emit(Events.EntitlementCreate, entitlement);\n\n    return {};\n  }\n}\n\nmodule.exports = EntitlementCreateAction;\n", "'use strict';\n\nconst Action = require('./Action');\nconst Events = require('../../util/Events');\n\nclass EntitlementDeleteAction extends Action {\n  handle(data) {\n    const client = this.client;\n\n    const entitlement = client.application.entitlements._add(data, false);\n\n    client.application.entitlements.cache.delete(entitlement.id);\n\n    /**\n     * Emitted whenever an entitlement is deleted.\n     * <warn>Entitlements are not deleted when they expire.\n     * This is only triggered when Discord issues a refund or deletes the entitlement manually.</warn>\n     * @event Client#entitlementDelete\n     * @param {Entitlement} entitlement The entitlement that was deleted\n     */\n    client.emit(Events.EntitlementDelete, entitlement);\n\n    return {};\n  }\n}\n\nmodule.exports = EntitlementDeleteAction;\n", "'use strict';\n\nconst Action = require('./Action');\nconst Events = require('../../util/Events');\n\nclass EntitlementUpdateAction extends Action {\n  handle(data) {\n    const client = this.client;\n\n    const oldEntitlement = client.application.entitlements.cache.get(data.id)?._clone() ?? null;\n    const newEntitlement = client.application.entitlements._add(data);\n\n    /**\n     * Emitted whenever an entitlement is updated - i.e. when a user's subscription renews.\n     * @event Client#entitlementUpdate\n     * @param {?Entitlement} oldEntitlement The entitlement before the update\n     * @param {Entitlement} newEntitlement The entitlement after the update\n     */\n    client.emit(Events.EntitlementUpdate, oldEntitlement, newEntitlement);\n\n    return {};\n  }\n}\n\nmodule.exports = EntitlementUpdateAction;\n", "'use strict';\n\nconst { Collection } = require('@discordjs/collection');\nconst Base = require('./Base');\nconst { _transformAPIAutoModerationAction } = require('../util/Transformers');\n\n/**\n * Represents an auto moderation rule.\n * @extends {Base}\n */\nclass AutoModerationRule extends Base {\n  constructor(client, data, guild) {\n    super(client);\n\n    /**\n     * The id of this auto moderation rule.\n     * @type {Snowflake}\n     */\n    this.id = data.id;\n\n    /**\n     * The guild this auto moderation rule is for.\n     * @type {Guild}\n     */\n    this.guild = guild;\n\n    /**\n     * The user that created this auto moderation rule.\n     * @type {Snowflake}\n     */\n    this.creatorId = data.creator_id;\n\n    /**\n     * The trigger type of this auto moderation rule.\n     * @type {AutoModerationRuleTriggerType}\n     */\n    this.triggerType = data.trigger_type;\n\n    this._patch(data);\n  }\n\n  _patch(data) {\n    if ('name' in data) {\n      /**\n       * The name of this auto moderation rule.\n       * @type {string}\n       */\n      this.name = data.name;\n    }\n\n    if ('event_type' in data) {\n      /**\n       * The event type of this auto moderation rule.\n       * @type {AutoModerationRuleEventType}\n       */\n      this.eventType = data.event_type;\n    }\n\n    if ('trigger_metadata' in data) {\n      /**\n       * Additional data used to determine whether an auto moderation rule should be triggered.\n       * @typedef {Object} AutoModerationTriggerMetadata\n       * @property {string[]} keywordFilter The substrings that will be searched for in the content\n       * @property {string[]} regexPatterns The regular expression patterns which will be matched against the content\n       * <info>Only Rust-flavored regular expressions are supported.</info>\n       * @property {AutoModerationRuleKeywordPresetType[]} presets\n       * The internally pre-defined wordsets which will be searched for in the content\n       * @property {string[]} allowList The substrings that will be exempt from triggering\n       * {@link AutoModerationRuleTriggerType.Keyword},\n       * {@link AutoModerationRuleTriggerType.KeywordPreset},\n       * and {@link AutoModerationRuleTriggerType.MemberProfile}\n       * @property {?number} mentionTotalLimit The total number of role & user mentions allowed per message\n       * @property {boolean} mentionRaidProtectionEnabled Whether mention raid protection is enabled\n       */\n\n      /**\n       * The trigger metadata of the rule.\n       * @type {AutoModerationTriggerMetadata}\n       */\n      this.triggerMetadata = {\n        keywordFilter: data.trigger_metadata.keyword_filter ?? [],\n        regexPatterns: data.trigger_metadata.regex_patterns ?? [],\n        presets: data.trigger_metadata.presets ?? [],\n        allowList: data.trigger_metadata.allow_list ?? [],\n        mentionTotalLimit: data.trigger_metadata.mention_total_limit ?? null,\n        mentionRaidProtectionEnabled: data.trigger_metadata.mention_raid_protection_enabled ?? false,\n      };\n    }\n\n    if ('actions' in data) {\n      /**\n       * An object containing information about an auto moderation rule action.\n       * @typedef {Object} AutoModerationAction\n       * @property {AutoModerationActionType} type The type of this auto moderation rule action\n       * @property {AutoModerationActionMetadata} metadata Additional metadata needed during execution\n       */\n\n      /**\n       * Additional data used when an auto moderation rule is executed.\n       * @typedef {Object} AutoModerationActionMetadata\n       * @property {?Snowflake} channelId The id of the channel to which content will be logged\n       * @property {?number} durationSeconds The timeout duration in seconds\n       * @property {?string} customMessage The custom message that is shown whenever a message is blocked\n       */\n\n      /**\n       * The actions of this auto moderation rule.\n       * @type {AutoModerationAction[]}\n       */\n      this.actions = data.actions.map(action => _transformAPIAutoModerationAction(action));\n    }\n\n    if ('enabled' in data) {\n      /**\n       * Whether this auto moderation rule is enabled.\n       * @type {boolean}\n       */\n      this.enabled = data.enabled;\n    }\n\n    if ('exempt_roles' in data) {\n      /**\n       * The roles exempt by this auto moderation rule.\n       * @type {Collection<Snowflake, Role>}\n       */\n      this.exemptRoles = new Collection(\n        data.exempt_roles.map(exemptRole => [exemptRole, this.guild.roles.cache.get(exemptRole)]),\n      );\n    }\n\n    if ('exempt_channels' in data) {\n      /**\n       * The channels exempt by this auto moderation rule.\n       * @type {Collection<Snowflake, GuildChannel|ThreadChannel>}\n       */\n      this.exemptChannels = new Collection(\n        data.exempt_channels.map(exemptChannel => [exemptChannel, this.guild.channels.cache.get(exemptChannel)]),\n      );\n    }\n  }\n\n  /**\n   * Edits this auto moderation rule.\n   * @param {AutoModerationRuleEditOptions} options Options for editing this auto moderation rule\n   * @returns {Promise<AutoModerationRule>}\n   */\n  edit(options) {\n    return this.guild.autoModerationRules.edit(this.id, options);\n  }\n\n  /**\n   * Deletes this auto moderation rule.\n   * @param {string} [reason] The reason for deleting this auto moderation rule\n   * @returns {Promise<void>}\n   */\n  delete(reason) {\n    return this.guild.autoModerationRules.delete(this.id, reason);\n  }\n\n  /**\n   * Sets the name for this auto moderation rule.\n   * @param {string} name The name of this auto moderation rule\n   * @param {string} [reason] The reason for changing the name of this auto moderation rule\n   * @returns {Promise<AutoModerationRule>}\n   */\n  setName(name, reason) {\n    return this.edit({ name, reason });\n  }\n\n  /**\n   * Sets the event type for this auto moderation rule.\n   * @param {AutoModerationRuleEventType} eventType The event type of this auto moderation rule\n   * @param {string} [reason] The reason for changing the event type of this auto moderation rule\n   * @returns {Promise<AutoModerationRule>}\n   */\n  setEventType(eventType, reason) {\n    return this.edit({ eventType, reason });\n  }\n\n  /**\n   * Sets the keyword filter for this auto moderation rule.\n   * @param {string[]} keywordFilter The keyword filter of this auto moderation rule\n   * @param {string} [reason] The reason for changing the keyword filter of this auto moderation rule\n   * @returns {Promise<AutoModerationRule>}\n   */\n  setKeywordFilter(keywordFilter, reason) {\n    return this.edit({ triggerMetadata: { ...this.triggerMetadata, keywordFilter }, reason });\n  }\n\n  /**\n   * Sets the regular expression patterns for this auto moderation rule.\n   * @param {string[]} regexPatterns The regular expression patterns of this auto moderation rule\n   * <info>Only Rust-flavored regular expressions are supported.</info>\n   * @param {string} [reason] The reason for changing the regular expression patterns of this auto moderation rule\n   * @returns {Promise<AutoModerationRule>}\n   */\n  setRegexPatterns(regexPatterns, reason) {\n    return this.edit({ triggerMetadata: { ...this.triggerMetadata, regexPatterns }, reason });\n  }\n\n  /**\n   * Sets the presets for this auto moderation rule.\n   * @param {AutoModerationRuleKeywordPresetType[]} presets The presets of this auto moderation rule\n   * @param {string} [reason] The reason for changing the presets of this auto moderation rule\n   * @returns {Promise<AutoModerationRule>}\n   */\n  setPresets(presets, reason) {\n    return this.edit({ triggerMetadata: { ...this.triggerMetadata, presets }, reason });\n  }\n\n  /**\n   * Sets the allow list for this auto moderation rule.\n   * @param {string[]} allowList The substrings that will be exempt from triggering\n   * {@link AutoModerationRuleTriggerType.Keyword},\n   * {@link AutoModerationRuleTriggerType.KeywordPreset},\n   * and {@link AutoModerationRuleTriggerType.MemberProfile}\n   * @param {string} [reason] The reason for changing the allow list of this auto moderation rule\n   * @returns {Promise<AutoModerationRule>}\n   */\n  setAllowList(allowList, reason) {\n    return this.edit({ triggerMetadata: { ...this.triggerMetadata, allowList }, reason });\n  }\n\n  /**\n   * Sets the mention total limit for this auto moderation rule.\n   * @param {number} mentionTotalLimit The total number of unique role and user mentions allowed per message\n   * @param {string} [reason] The reason for changing the mention total limit of this auto moderation rule\n   * @returns {Promise<AutoModerationRule>}\n   */\n  setMentionTotalLimit(mentionTotalLimit, reason) {\n    return this.edit({ triggerMetadata: { ...this.triggerMetadata, mentionTotalLimit }, reason });\n  }\n\n  /**\n   * Sets whether to enable mention raid protection for this auto moderation rule.\n   * @param {boolean} mentionRaidProtectionEnabled\n   * Whether to enable mention raid protection for this auto moderation rule\n   * @param {string} [reason] The reason for changing the mention raid protection of this auto moderation rule\n   * @returns {Promise<AutoModerationRule>}\n   */\n  setMentionRaidProtectionEnabled(mentionRaidProtectionEnabled, reason) {\n    return this.edit({ triggerMetadata: { ...this.triggerMetadata, mentionRaidProtectionEnabled }, reason });\n  }\n\n  /**\n   * Sets the actions for this auto moderation rule.\n   * @param {AutoModerationActionOptions[]} actions The actions of this auto moderation rule\n   * @param {string} [reason] The reason for changing the actions of this auto moderation rule\n   * @returns {Promise<AutoModerationRule>}\n   */\n  setActions(actions, reason) {\n    return this.edit({ actions, reason });\n  }\n\n  /**\n   * Sets whether this auto moderation rule should be enabled.\n   * @param {boolean} [enabled=true] Whether to enable this auto moderation rule\n   * @param {string} [reason] The reason for enabling or disabling this auto moderation rule\n   * @returns {Promise<AutoModerationRule>}\n   */\n  setEnabled(enabled = true, reason) {\n    return this.edit({ enabled, reason });\n  }\n\n  /**\n   * Sets the exempt roles for this auto moderation rule.\n   * @param {Collection<Snowflake, Role>|RoleResolvable[]} [exemptRoles]\n   * The roles that should not be affected by the auto moderation rule\n   * @param {string} [reason] The reason for changing the exempt roles of this auto moderation rule\n   * @returns {Promise<AutoModerationRule>}\n   */\n  setExemptRoles(exemptRoles, reason) {\n    return this.edit({ exemptRoles, reason });\n  }\n\n  /**\n   * Sets the exempt channels for this auto moderation rule.\n   * @param {Collection<Snowflake, GuildChannel|ThreadChannel>|GuildChannelResolvable[]} [exemptChannels]\n   * The channels that should not be affected by the auto moderation rule\n   * @param {string} [reason] The reason for changing the exempt channels of this auto moderation rule\n   * @returns {Promise<AutoModerationRule>}\n   */\n  setExemptChannels(exemptChannels, reason) {\n    return this.edit({ exemptChannels, reason });\n  }\n}\n\nmodule.exports = AutoModerationRule;\n", "'use strict';\n\nconst { Collection } = require('@discordjs/collection');\nconst Base = require('./Base');\nconst { Emoji } = require('./Emoji.js');\n\n/**\n * Represents the data of an option from a prompt of a guilds onboarding.\n * @extends {Base}\n */\nclass GuildOnboardingPromptOption extends Base {\n  constructor(client, data, guildId) {\n    super(client);\n\n    /**\n     * The id of the guild this onboarding prompt option is from\n     * @type {Snowflake}\n     */\n    this.guildId = guildId;\n\n    const guild = this.guild;\n\n    /**\n     * The id of the option\n     * @type {Snowflake}\n     */\n    this.id = data.id;\n\n    /**\n     * The channels a member is added to when the option is selected\n     * @type {Collection<Snowflake, GuildChannel>}\n     */\n    this.channels = data.channel_ids.reduce(\n      (channels, channelId) => channels.set(channelId, guild.channels.cache.get(channelId)),\n      new Collection(),\n    );\n\n    /**\n     * The roles assigned to a member when the option is selected\n     * @type {Collection<Snowflake, Role>}\n     */\n    this.roles = data.role_ids.reduce(\n      (roles, roleId) => roles.set(roleId, guild.roles.cache.get(roleId)),\n      new Collection(),\n    );\n\n    /**\n     * The raw emoji of the option\n     * @type {APIPartialEmoji}\n     * @private\n     */\n    this._emoji = data.emoji;\n\n    /**\n     * The title of the option\n     * @type {string}\n     */\n    this.title = data.title;\n\n    /**\n     * The description of the option\n     * @type {?string}\n     */\n    this.description = data.description;\n  }\n\n  /**\n   * The guild this onboarding prompt option is from\n   * @type {Guild}\n   * @readonly\n   */\n  get guild() {\n    return this.client.guilds.cache.get(this.guildId);\n  }\n\n  /**\n   * The emoji of this onboarding prompt option\n   * @type {?(GuildEmoji|Emoji)}\n   */\n  get emoji() {\n    if (!this._emoji.id && !this._emoji.name) return null;\n    return this.client.emojis.resolve(this._emoji.id) ?? new Emoji(this.client, this._emoji);\n  }\n}\n\nexports.GuildOnboardingPromptOption = GuildOnboardingPromptOption;\n", "'use strict';\n\nconst { Collection } = require('@discordjs/collection');\nconst Base = require('./Base');\nconst { GuildOnboardingPromptOption } = require('./GuildOnboardingPromptOption');\n\n/**\n * Represents the data of a prompt of a guilds onboarding.\n * @extends {Base}\n */\nclass GuildOnboardingPrompt extends Base {\n  constructor(client, data, guildId) {\n    super(client);\n\n    /**\n     * The id of the guild this onboarding prompt is from\n     * @type {Snowflake}\n     */\n    this.guildId = guildId;\n\n    /**\n     * The id of the prompt\n     * @type {Snowflake}\n     */\n    this.id = data.id;\n\n    /**\n     * The options available within the prompt\n     * @type {Collection<Snowflake, GuildOnboardingPromptOption>}\n     */\n    this.options = data.options.reduce(\n      (options, option) => options.set(option.id, new GuildOnboardingPromptOption(client, option, guildId)),\n      new Collection(),\n    );\n\n    /**\n     * The title of the prompt\n     * @type {string}\n     */\n    this.title = data.title;\n\n    /**\n     * Whether users are limited to selecting one option for the prompt\n     * @type {boolean}\n     */\n    this.singleSelect = data.single_select;\n\n    /**\n     * Whether the prompt is required before a user completes the onboarding flow\n     * @type {boolean}\n     */\n    this.required = data.required;\n\n    /**\n     * Whether the prompt is present in the onboarding flow.\n     * If `false`, the prompt will only appear in the Channels & Roles tab\n     * @type {boolean}\n     */\n    this.inOnboarding = data.in_onboarding;\n\n    /**\n     * The type of the prompt\n     * @type {GuildOnboardingPromptType}\n     */\n    this.type = data.type;\n  }\n\n  /**\n   * The guild this onboarding prompt is from\n   * @type {Guild}\n   * @readonly\n   */\n  get guild() {\n    return this.client.guilds.cache.get(this.guildId);\n  }\n}\n\nexports.GuildOnboardingPrompt = GuildOnboardingPrompt;\n", "'use strict';\n\nconst { Routes } = require('discord-api-types/v10');\nconst Base = require('./Base');\nconst IntegrationApplication = require('./IntegrationApplication');\n\n/**\n * The information account for an integration\n * @typedef {Object} IntegrationAccount\n * @property {Snowflake|string} id The id of the account\n * @property {string} name The name of the account\n */\n\n/**\n * The type of an {@link Integration}. This can be:\n * * `twitch`\n * * `youtube`\n * * `discord`\n * * `guild_subscription`\n * @typedef {string} IntegrationType\n */\n\n/**\n * Represents a guild integration.\n * @extends {Base}\n */\nclass Integration extends Base {\n  constructor(client, data, guild) {\n    super(client);\n\n    /**\n     * The guild this integration belongs to\n     * @type {Guild}\n     */\n    this.guild = guild;\n\n    /**\n     * The integration id\n     * @type {Snowflake|string}\n     */\n    this.id = data.id;\n\n    /**\n     * The integration name\n     * @type {string}\n     */\n    this.name = data.name;\n\n    /**\n     * The integration type\n     * @type {IntegrationType}\n     */\n    this.type = data.type;\n\n    /**\n     * Whether this integration is enabled\n     * @type {?boolean}\n     */\n    this.enabled = data.enabled ?? null;\n\n    if ('syncing' in data) {\n      /**\n       * Whether this integration is syncing\n       * @type {?boolean}\n       */\n      this.syncing = data.syncing;\n    } else {\n      this.syncing ??= null;\n    }\n\n    /**\n     * The role that this integration uses for subscribers\n     * @type {?Role}\n     */\n    this.role = this.guild.roles.resolve(data.role_id);\n\n    if ('enable_emoticons' in data) {\n      /**\n       * Whether emoticons should be synced for this integration (twitch only currently)\n       * @type {?boolean}\n       */\n      this.enableEmoticons = data.enable_emoticons;\n    } else {\n      this.enableEmoticons ??= null;\n    }\n\n    if (data.user) {\n      /**\n       * The user for this integration\n       * @type {?User}\n       */\n      this.user = this.client.users._add(data.user);\n    } else {\n      this.user ??= null;\n    }\n\n    /**\n     * The account integration information\n     * @type {IntegrationAccount}\n     */\n    this.account = data.account;\n\n    if ('synced_at' in data) {\n      /**\n       * The timestamp at which this integration was last synced at\n       * @type {?number}\n       */\n      this.syncedTimestamp = Date.parse(data.synced_at);\n    } else {\n      this.syncedTimestamp ??= null;\n    }\n\n    if ('subscriber_count' in data) {\n      /**\n       * How many subscribers this integration has\n       * @type {?number}\n       */\n      this.subscriberCount = data.subscriber_count;\n    } else {\n      this.subscriberCount ??= null;\n    }\n\n    if ('revoked' in data) {\n      /**\n       * Whether this integration has been revoked\n       * @type {?boolean}\n       */\n      this.revoked = data.revoked;\n    } else {\n      this.revoked ??= null;\n    }\n\n    this._patch(data);\n  }\n\n  /**\n   * The date at which this integration was last synced at\n   * @type {?Date}\n   * @readonly\n   */\n  get syncedAt() {\n    return this.syncedTimestamp && new Date(this.syncedTimestamp);\n  }\n\n  /**\n   * All roles that are managed by this integration\n   * @type {Collection<Snowflake, Role>}\n   * @readonly\n   */\n  get roles() {\n    const roles = this.guild.roles.cache;\n    return roles.filter(role => role.tags?.integrationId === this.id);\n  }\n\n  _patch(data) {\n    if ('expire_behavior' in data) {\n      /**\n       * The behavior of expiring subscribers\n       * @type {?IntegrationExpireBehavior}\n       */\n      this.expireBehavior = data.expire_behavior;\n    } else {\n      this.expireBehavior ??= null;\n    }\n\n    if ('expire_grace_period' in data) {\n      /**\n       * The grace period (in days) before expiring subscribers\n       * @type {?number}\n       */\n      this.expireGracePeriod = data.expire_grace_period;\n    } else {\n      this.expireGracePeriod ??= null;\n    }\n\n    if ('application' in data) {\n      if (this.application) {\n        this.application._patch(data.application);\n      } else {\n        /**\n         * The application for this integration\n         * @type {?IntegrationApplication}\n         */\n        this.application = new IntegrationApplication(this.client, data.application);\n      }\n    } else {\n      this.application ??= null;\n    }\n\n    if ('scopes' in data) {\n      /**\n       * The scopes this application has been authorized for\n       * @type {OAuth2Scopes[]}\n       */\n      this.scopes = data.scopes;\n    } else {\n      this.scopes ??= [];\n    }\n  }\n\n  /**\n   * Deletes this integration.\n   * @returns {Promise<Integration>}\n   * @param {string} [reason] Reason for deleting this integration\n   */\n  async delete(reason) {\n    await this.client.rest.delete(Routes.guildIntegration(this.guild.id, this.id), { reason });\n    return this;\n  }\n\n  toJSON() {\n    return super.toJSON({\n      role: 'roleId',\n      guild: 'guildId',\n      user: 'userId',\n    });\n  }\n}\n\nmodule.exports = Integration;\n", "'use strict';\n\nconst { DiscordSnowflake } = require('@sapphire/snowflake');\nconst Base = require('./Base');\n\n/**\n * Represents a stage instance.\n * @extends {Base}\n */\nclass StageInstance extends Base {\n  constructor(client, data) {\n    super(client);\n\n    /**\n     * The stage instance's id\n     * @type {Snowflake}\n     */\n    this.id = data.id;\n\n    this._patch(data);\n  }\n\n  _patch(data) {\n    if ('guild_id' in data) {\n      /**\n       * The id of the guild associated with the stage channel\n       * @type {Snowflake}\n       */\n      this.guildId = data.guild_id;\n    }\n\n    if ('channel_id' in data) {\n      /**\n       * The id of the channel associated with the stage channel\n       * @type {Snowflake}\n       */\n      this.channelId = data.channel_id;\n    }\n\n    if ('topic' in data) {\n      /**\n       * The topic of the stage instance\n       * @type {string}\n       */\n      this.topic = data.topic;\n    }\n\n    if ('privacy_level' in data) {\n      /**\n       * The privacy level of the stage instance\n       * @type {StageInstancePrivacyLevel}\n       */\n      this.privacyLevel = data.privacy_level;\n    }\n\n    if ('discoverable_disabled' in data) {\n      /**\n       * Whether or not stage discovery is disabled\n       * @type {?boolean}\n       * @deprecated See https://github.com/discord/discord-api-docs/pull/4296 for more information\n       */\n      this.discoverableDisabled = data.discoverable_disabled;\n    } else {\n      this.discoverableDisabled ??= null;\n    }\n\n    if ('guild_scheduled_event_id' in data) {\n      /**\n       * The associated guild scheduled event id of this stage instance\n       * @type {?Snowflake}\n       */\n      this.guildScheduledEventId = data.guild_scheduled_event_id;\n    } else {\n      this.guildScheduledEventId ??= null;\n    }\n  }\n\n  /**\n   * The stage channel associated with this stage instance\n   * @type {?StageChannel}\n   * @readonly\n   */\n  get channel() {\n    return this.client.channels.resolve(this.channelId);\n  }\n\n  /**\n   * The guild this stage instance belongs to\n   * @type {?Guild}\n   * @readonly\n   */\n  get guild() {\n    return this.client.guilds.resolve(this.guildId);\n  }\n\n  /**\n   * The associated guild scheduled event of this stage instance\n   * @type {?GuildScheduledEvent}\n   * @readonly\n   */\n  get guildScheduledEvent() {\n    return this.guild?.scheduledEvents.resolve(this.guildScheduledEventId) ?? null;\n  }\n\n  /**\n   * Edits this stage instance.\n   * @param {StageInstanceEditOptions} options The options to edit the stage instance\n   * @returns {Promise<StageInstance>}\n   * @example\n   * // Edit a stage instance\n   * stageInstance.edit({ topic: 'new topic' })\n   *  .then(stageInstance => console.log(stageInstance))\n   *  .catch(console.error)\n   */\n  edit(options) {\n    return this.guild.stageInstances.edit(this.channelId, options);\n  }\n\n  /**\n   * Deletes this stage instance.\n   * @returns {Promise<StageInstance>}\n   * @example\n   * // Delete a stage instance\n   * stageInstance.delete()\n   *  .then(stageInstance => console.log(stageInstance))\n   *  .catch(console.error);\n   */\n  async delete() {\n    await this.guild.stageInstances.delete(this.channelId);\n    const clone = this._clone();\n    return clone;\n  }\n\n  /**\n   * Sets the topic of this stage instance.\n   * @param {string} topic The topic for the stage instance\n   * @returns {Promise<StageInstance>}\n   * @example\n   * // Set topic of a stage instance\n   * stageInstance.setTopic('new topic')\n   *  .then(stageInstance => console.log(`Set the topic to: ${stageInstance.topic}`))\n   *  .catch(console.error);\n   */\n  setTopic(topic) {\n    return this.guild.stageInstances.edit(this.channelId, { topic });\n  }\n\n  /**\n   * The timestamp this stage instances was created at\n   * @type {number}\n   * @readonly\n   */\n  get createdTimestamp() {\n    return DiscordSnowflake.timestampFrom(this.id);\n  }\n\n  /**\n   * The time this stage instance was created at\n   * @type {Date}\n   * @readonly\n   */\n  get createdAt() {\n    return new Date(this.createdTimestamp);\n  }\n}\n\nexports.StageInstance = StageInstance;\n", "'use strict';\n\nconst { DiscordSnowflake } = require('@sapphire/snowflake');\nconst { AuditLogOptionsType, AuditLogEvent } = require('discord-api-types/v10');\nconst AutoModerationRule = require('./AutoModerationRule');\nconst { GuildOnboardingPrompt } = require('./GuildOnboardingPrompt');\nconst { GuildScheduledEvent } = require('./GuildScheduledEvent');\nconst Integration = require('./Integration');\nconst Invite = require('./Invite');\nconst { StageInstance } = require('./StageInstance');\nconst { Sticker } = require('./Sticker');\nconst Webhook = require('./Webhook');\nconst Partials = require('../util/Partials');\nconst { flatten } = require('../util/Util');\n\nconst Targets = {\n  All: 'All',\n  Guild: 'Guild',\n  GuildScheduledEvent: 'GuildScheduledEvent',\n  Channel: 'Channel',\n  User: 'User',\n  Role: 'Role',\n  Invite: 'Invite',\n  Webhook: 'Webhook',\n  Emoji: 'Emoji',\n  Message: 'Message',\n  Integration: 'Integration',\n  StageInstance: 'StageInstance',\n  Sticker: 'Sticker',\n  Thread: 'Thread',\n  ApplicationCommand: 'ApplicationCommand',\n  AutoModeration: 'AutoModeration',\n  GuildOnboarding: 'GuildOnboarding',\n  GuildOnboardingPrompt: 'GuildOnboardingPrompt',\n  Unknown: 'Unknown',\n};\n\n/**\n * The target of a guild audit log entry. It can be one of:\n * * A guild\n * * A channel\n * * A user\n * * A role\n * * An invite\n * * A webhook\n * * An emoji\n * * A message\n * * An integration\n * * A stage instance\n * * A sticker\n * * A guild scheduled event\n * * A thread\n * * An application command\n * * An auto moderation rule\n * * A guild onboarding prompt\n * * An object with an id key if target was deleted or fake entity\n * * An object where the keys represent either the new value or the old value\n * @typedef {?(Object|Guild|BaseChannel|User|Role|Invite|Webhook|GuildEmoji|Message|Integration|StageInstance|Sticker|\n * GuildScheduledEvent|ApplicationCommand|AutoModerationRule|GuildOnboardingPrompt)} AuditLogEntryTarget\n */\n\n/**\n * The action type of an entry, e.g. `Create`. Here are the available types:\n * * Create\n * * Delete\n * * Update\n * * All\n * @typedef {string} AuditLogActionType\n */\n\n/**\n * The target type of an entry. Here are the available types:\n * * Guild\n * * Channel\n * * User\n * * Role\n * * Invite\n * * Webhook\n * * Emoji\n * * Message\n * * Integration\n * * StageInstance\n * * Sticker\n * * Thread\n * * GuildScheduledEvent\n * * ApplicationCommandPermission\n * * GuildOnboarding\n * * GuildOnboardingPrompt\n * * Unknown\n * @typedef {string} AuditLogTargetType\n */\n\n/**\n * Constructs an object of known properties for a structure from an array of changes.\n * @param {AuditLogChange[]} changes The array of changes\n * @param {Object} [initialData={}] The initial data passed to the function\n * @returns {Object}\n * @ignore\n */\nfunction changesReduce(changes, initialData = {}) {\n  return changes.reduce((accumulator, change) => {\n    accumulator[change.key] = change.new ?? change.old;\n    return accumulator;\n  }, initialData);\n}\n\n/**\n * Audit logs entry.\n */\nclass GuildAuditLogsEntry {\n  /**\n   * Key mirror of all available audit log targets.\n   * @type {Object<string, string>}\n   * @memberof GuildAuditLogsEntry\n   */\n  static Targets = Targets;\n\n  constructor(guild, data, logs) {\n    /**\n     * The target type of this entry\n     * @type {AuditLogTargetType}\n     */\n    this.targetType = GuildAuditLogsEntry.targetType(data.action_type);\n    const targetType = this.targetType;\n\n    /**\n     * The action type of this entry\n     * @type {AuditLogActionType}\n     */\n    this.actionType = GuildAuditLogsEntry.actionType(data.action_type);\n\n    /**\n     * The type of action that occurred.\n     * @type {AuditLogEvent}\n     */\n    this.action = data.action_type;\n\n    /**\n     * The reason of this entry\n     * @type {?string}\n     */\n    this.reason = data.reason ?? null;\n\n    /**\n     * The id of the user that executed this entry\n     * @type {?Snowflake}\n     */\n    this.executorId = data.user_id;\n\n    /**\n     * The user that executed this entry\n     * @type {?User}\n     */\n    this.executor = data.user_id\n      ? guild.client.options.partials.includes(Partials.User)\n        ? guild.client.users._add({ id: data.user_id })\n        : (guild.client.users.cache.get(data.user_id) ?? null)\n      : null;\n\n    /**\n     * An entry in the audit log representing a specific change.\n     * @typedef {Object} AuditLogChange\n     * @property {string} key The property that was changed, e.g. `nick` for nickname changes\n     * <warn>For application command permissions updates the key is the id of the user, channel,\n     * role, or a permission constant that was updated instead of an actual property name</warn>\n     * @property {*} [old] The old value of the change, e.g. for nicknames, the old nickname\n     * @property {*} [new] The new value of the change, e.g. for nicknames, the new nickname\n     */\n\n    /**\n     * Specific property changes\n     * @type {AuditLogChange[]}\n     */\n    this.changes =\n      data.changes?.map(change => ({\n        key: change.key,\n        ...('old_value' in change ? { old: change.old_value } : {}),\n        ...('new_value' in change ? { new: change.new_value } : {}),\n      })) ?? [];\n\n    /**\n     * The entry's id\n     * @type {Snowflake}\n     */\n    this.id = data.id;\n\n    /**\n     * Any extra data from the entry\n     * @type {?(Object|Role|GuildMember)}\n     */\n    this.extra = null;\n    switch (data.action_type) {\n      case AuditLogEvent.MemberPrune:\n        this.extra = {\n          removed: Number(data.options.members_removed),\n          days: Number(data.options.delete_member_days),\n        };\n        break;\n\n      case AuditLogEvent.MemberMove:\n      case AuditLogEvent.MessageDelete:\n      case AuditLogEvent.MessageBulkDelete:\n        this.extra = {\n          channel: guild.channels.cache.get(data.options.channel_id) ?? { id: data.options.channel_id },\n          count: Number(data.options.count),\n        };\n        break;\n\n      case AuditLogEvent.MessagePin:\n      case AuditLogEvent.MessageUnpin:\n        this.extra = {\n          channel: guild.client.channels.cache.get(data.options.channel_id) ?? { id: data.options.channel_id },\n          messageId: data.options.message_id,\n        };\n        break;\n\n      case AuditLogEvent.MemberDisconnect:\n        this.extra = {\n          count: Number(data.options.count),\n        };\n        break;\n\n      case AuditLogEvent.ChannelOverwriteCreate:\n      case AuditLogEvent.ChannelOverwriteUpdate:\n      case AuditLogEvent.ChannelOverwriteDelete:\n        switch (data.options.type) {\n          case AuditLogOptionsType.Role:\n            this.extra = guild.roles.cache.get(data.options.id) ?? {\n              id: data.options.id,\n              name: data.options.role_name,\n              type: AuditLogOptionsType.Role,\n            };\n            break;\n\n          case AuditLogOptionsType.Member:\n            this.extra = guild.members.cache.get(data.options.id) ?? {\n              id: data.options.id,\n              type: AuditLogOptionsType.Member,\n            };\n            break;\n\n          default:\n            break;\n        }\n        break;\n\n      case AuditLogEvent.StageInstanceCreate:\n      case AuditLogEvent.StageInstanceDelete:\n      case AuditLogEvent.StageInstanceUpdate:\n        this.extra = {\n          channel: guild.client.channels.cache.get(data.options?.channel_id) ?? { id: data.options?.channel_id },\n        };\n        break;\n\n      case AuditLogEvent.ApplicationCommandPermissionUpdate:\n        this.extra = {\n          applicationId: data.options.application_id,\n        };\n        break;\n\n      case AuditLogEvent.AutoModerationBlockMessage:\n      case AuditLogEvent.AutoModerationFlagToChannel:\n      case AuditLogEvent.AutoModerationUserCommunicationDisabled:\n        this.extra = {\n          autoModerationRuleName: data.options.auto_moderation_rule_name,\n          autoModerationRuleTriggerType: data.options.auto_moderation_rule_trigger_type,\n          channel: guild.client.channels.cache.get(data.options?.channel_id) ?? { id: data.options?.channel_id },\n        };\n        break;\n\n      case AuditLogEvent.MemberKick:\n      case AuditLogEvent.MemberRoleUpdate: {\n        if (data.integration_type) {\n          this.extra = {\n            integrationType: data.integration_type,\n          };\n        }\n        break;\n      }\n\n      default:\n        break;\n    }\n\n    /**\n     * The id of the target of this entry\n     * @type {?Snowflake}\n     */\n    this.targetId = data.target_id;\n\n    /**\n     * The target of this entry\n     * @type {?AuditLogEntryTarget}\n     */\n    this.target = null;\n    if (targetType === Targets.Unknown) {\n      this.target = changesReduce(this.changes);\n      this.target.id = data.target_id;\n      // MemberDisconnect and similar types do not provide a target_id.\n    } else if (targetType === Targets.User && data.target_id) {\n      this.target = guild.client.options.partials.includes(Partials.User)\n        ? guild.client.users._add({ id: data.target_id })\n        : (guild.client.users.cache.get(data.target_id) ?? null);\n    } else if (targetType === Targets.Guild) {\n      this.target = guild.client.guilds.cache.get(data.target_id);\n    } else if (targetType === Targets.Webhook) {\n      this.target =\n        logs?.webhooks.get(data.target_id) ??\n        new Webhook(\n          guild.client,\n          changesReduce(this.changes, {\n            id: data.target_id,\n            guild_id: guild.id,\n          }),\n        );\n    } else if (targetType === Targets.Invite) {\n      const inviteChange = this.changes.find(({ key }) => key === 'code');\n\n      this.target =\n        guild.invites.cache.get(inviteChange.new ?? inviteChange.old) ??\n        new Invite(guild.client, changesReduce(this.changes, { guild }));\n    } else if (targetType === Targets.Message) {\n      // Discord sends a channel id for the MessageBulkDelete action type.\n      this.target =\n        data.action_type === AuditLogEvent.MessageBulkDelete\n          ? (guild.channels.cache.get(data.target_id) ?? { id: data.target_id })\n          : (guild.client.users.cache.get(data.target_id) ?? null);\n    } else if (targetType === Targets.Integration) {\n      this.target =\n        logs?.integrations.get(data.target_id) ??\n        new Integration(guild.client, changesReduce(this.changes, { id: data.target_id }), guild);\n    } else if (targetType === Targets.Channel || targetType === Targets.Thread) {\n      this.target = guild.channels.cache.get(data.target_id) ?? changesReduce(this.changes, { id: data.target_id });\n    } else if (targetType === Targets.StageInstance) {\n      this.target =\n        guild.stageInstances.cache.get(data.target_id) ??\n        new StageInstance(\n          guild.client,\n          changesReduce(this.changes, {\n            id: data.target_id,\n            channel_id: data.options?.channel_id,\n            guild_id: guild.id,\n          }),\n        );\n    } else if (targetType === Targets.Sticker) {\n      this.target =\n        guild.stickers.cache.get(data.target_id) ??\n        new Sticker(guild.client, changesReduce(this.changes, { id: data.target_id }));\n    } else if (targetType === Targets.GuildScheduledEvent) {\n      this.target =\n        guild.scheduledEvents.cache.get(data.target_id) ??\n        new GuildScheduledEvent(guild.client, changesReduce(this.changes, { id: data.target_id, guild_id: guild.id }));\n    } else if (targetType === Targets.ApplicationCommand) {\n      this.target = logs?.applicationCommands.get(data.target_id) ?? { id: data.target_id };\n    } else if (targetType === Targets.AutoModeration) {\n      this.target =\n        guild.autoModerationRules.cache.get(data.target_id) ??\n        new AutoModerationRule(\n          guild.client,\n          changesReduce(this.changes, { id: data.target_id, guild_id: guild.id }),\n          guild,\n        );\n    } else if (targetType === Targets.GuildOnboardingPrompt) {\n      this.target =\n        data.action_type === AuditLogEvent.OnboardingPromptCreate\n          ? new GuildOnboardingPrompt(guild.client, changesReduce(this.changes, { id: data.target_id }), guild.id)\n          : changesReduce(this.changes, { id: data.target_id });\n    } else if (targetType === Targets.GuildOnboarding) {\n      this.target = changesReduce(this.changes, { id: data.target_id });\n    } else if (data.target_id) {\n      this.target = guild[`${targetType.toLowerCase()}s`]?.cache.get(data.target_id) ?? { id: data.target_id };\n    }\n  }\n\n  /**\n   * Finds the target type of a guild audit log entry.\n   * @param {AuditLogEvent} target The action target\n   * @returns {AuditLogTargetType}\n   */\n  static targetType(target) {\n    if (target < 10) return Targets.Guild;\n    if (target < 20) return Targets.Channel;\n    if (target < 30) return Targets.User;\n    if (target < 40) return Targets.Role;\n    if (target < 50) return Targets.Invite;\n    if (target < 60) return Targets.Webhook;\n    if (target < 70) return Targets.Emoji;\n    if (target < 80) return Targets.Message;\n    if (target < 83) return Targets.Integration;\n    if (target < 86) return Targets.StageInstance;\n    if (target < 100) return Targets.Sticker;\n    if (target < 110) return Targets.GuildScheduledEvent;\n    if (target < 120) return Targets.Thread;\n    if (target < 130) return Targets.ApplicationCommand;\n    if (target >= 140 && target < 150) return Targets.AutoModeration;\n    if (target >= 163 && target <= 165) return Targets.GuildOnboardingPrompt;\n    if (target >= 160 && target < 170) return Targets.GuildOnboarding;\n    return Targets.Unknown;\n  }\n\n  /**\n   * Finds the action type from the guild audit log entry action.\n   * @param {AuditLogEvent} action The action target\n   * @returns {AuditLogActionType}\n   */\n  static actionType(action) {\n    if (\n      [\n        AuditLogEvent.ChannelCreate,\n        AuditLogEvent.ChannelOverwriteCreate,\n        AuditLogEvent.MemberBanRemove,\n        AuditLogEvent.BotAdd,\n        AuditLogEvent.RoleCreate,\n        AuditLogEvent.InviteCreate,\n        AuditLogEvent.WebhookCreate,\n        AuditLogEvent.EmojiCreate,\n        AuditLogEvent.MessagePin,\n        AuditLogEvent.IntegrationCreate,\n        AuditLogEvent.StageInstanceCreate,\n        AuditLogEvent.StickerCreate,\n        AuditLogEvent.GuildScheduledEventCreate,\n        AuditLogEvent.ThreadCreate,\n        AuditLogEvent.AutoModerationRuleCreate,\n        AuditLogEvent.AutoModerationBlockMessage,\n        AuditLogEvent.OnboardingPromptCreate,\n        AuditLogEvent.OnboardingCreate,\n      ].includes(action)\n    ) {\n      return 'Create';\n    }\n\n    if (\n      [\n        AuditLogEvent.ChannelDelete,\n        AuditLogEvent.ChannelOverwriteDelete,\n        AuditLogEvent.MemberKick,\n        AuditLogEvent.MemberPrune,\n        AuditLogEvent.MemberBanAdd,\n        AuditLogEvent.MemberDisconnect,\n        AuditLogEvent.RoleDelete,\n        AuditLogEvent.InviteDelete,\n        AuditLogEvent.WebhookDelete,\n        AuditLogEvent.EmojiDelete,\n        AuditLogEvent.MessageDelete,\n        AuditLogEvent.MessageBulkDelete,\n        AuditLogEvent.MessageUnpin,\n        AuditLogEvent.IntegrationDelete,\n        AuditLogEvent.StageInstanceDelete,\n        AuditLogEvent.StickerDelete,\n        AuditLogEvent.GuildScheduledEventDelete,\n        AuditLogEvent.ThreadDelete,\n        AuditLogEvent.AutoModerationRuleDelete,\n        AuditLogEvent.OnboardingPromptDelete,\n      ].includes(action)\n    ) {\n      return 'Delete';\n    }\n\n    if (\n      [\n        AuditLogEvent.GuildUpdate,\n        AuditLogEvent.ChannelUpdate,\n        AuditLogEvent.ChannelOverwriteUpdate,\n        AuditLogEvent.MemberUpdate,\n        AuditLogEvent.MemberRoleUpdate,\n        AuditLogEvent.MemberMove,\n        AuditLogEvent.RoleUpdate,\n        AuditLogEvent.InviteUpdate,\n        AuditLogEvent.WebhookUpdate,\n        AuditLogEvent.EmojiUpdate,\n        AuditLogEvent.IntegrationUpdate,\n        AuditLogEvent.StageInstanceUpdate,\n        AuditLogEvent.StickerUpdate,\n        AuditLogEvent.GuildScheduledEventUpdate,\n        AuditLogEvent.ThreadUpdate,\n        AuditLogEvent.ApplicationCommandPermissionUpdate,\n        AuditLogEvent.AutoModerationRuleUpdate,\n        AuditLogEvent.OnboardingPromptUpdate,\n        AuditLogEvent.OnboardingUpdate,\n      ].includes(action)\n    ) {\n      return 'Update';\n    }\n\n    return 'All';\n  }\n\n  /**\n   * The timestamp this entry was created at\n   * @type {number}\n   * @readonly\n   */\n  get createdTimestamp() {\n    return DiscordSnowflake.timestampFrom(this.id);\n  }\n\n  /**\n   * The time this entry was created at\n   * @type {Date}\n   * @readonly\n   */\n  get createdAt() {\n    return new Date(this.createdTimestamp);\n  }\n\n  toJSON() {\n    return flatten(this, { createdTimestamp: true });\n  }\n}\n\nmodule.exports = GuildAuditLogsEntry;\n", "'use strict';\n\nconst Action = require('./Action');\nconst GuildAuditLogsEntry = require('../../structures/GuildAuditLogsEntry');\nconst Events = require('../../util/Events');\n\nclass GuildAuditLogEntryCreateAction extends Action {\n  handle(data) {\n    const client = this.client;\n    const guild = client.guilds.cache.get(data.guild_id);\n    let auditLogEntry;\n\n    if (guild) {\n      auditLogEntry = new GuildAuditLogsEntry(guild, data);\n\n      /**\n       * Emitted whenever a guild audit log entry is created.\n       * @event Client#guildAuditLogEntryCreate\n       * @param {GuildAuditLogsEntry} auditLogEntry The entry that was created\n       * @param {Guild} guild The guild where the entry was created\n       */\n      client.emit(Events.GuildAuditLogEntryCreate, auditLogEntry, guild);\n    }\n\n    return { auditLogEntry };\n  }\n}\n\nmodule.exports = GuildAuditLogEntryCreateAction;\n", "'use strict';\n\nconst Action = require('./Action');\nconst Events = require('../../util/Events');\n\nclass GuildBanAdd extends Action {\n  handle(data) {\n    const client = this.client;\n    const guild = client.guilds.cache.get(data.guild_id);\n\n    /**\n     * Emitted whenever a member is banned from a guild.\n     * @event Client#guildBanAdd\n     * @param {GuildBan} ban The ban that occurred\n     */\n    if (guild) client.emit(Events.GuildBanAdd, guild.bans._add(data));\n  }\n}\n\nmodule.exports = GuildBanAdd;\n", "'use strict';\n\nconst Base = require('./Base');\n\n/**\n * Represents a ban in a guild on Discord.\n * @extends {Base}\n */\nclass GuildBan extends Base {\n  constructor(client, data, guild) {\n    super(client);\n\n    /**\n     * The guild in which the ban is\n     * @type {Guild}\n     */\n    this.guild = guild;\n\n    this._patch(data);\n  }\n\n  _patch(data) {\n    if ('user' in data) {\n      /**\n       * The user this ban applies to\n       * @type {User}\n       */\n      this.user = this.client.users._add(data.user, true);\n    }\n\n    if ('reason' in data) {\n      /**\n       * The reason for the ban\n       * @type {?string}\n       */\n      this.reason = data.reason;\n    }\n  }\n\n  /**\n   * Whether this GuildBan is partial. If the reason is not provided the value is null\n   * @type {boolean}\n   * @readonly\n   */\n  get partial() {\n    return !('reason' in this);\n  }\n\n  /**\n   * Fetches this GuildBan.\n   * @param {boolean} [force=true] Whether to skip the cache check and request the API\n   * @returns {Promise<GuildBan>}\n   */\n  fetch(force = true) {\n    return this.guild.bans.fetch({ user: this.user, cache: true, force });\n  }\n}\n\nmodule.exports = GuildBan;\n", "'use strict';\n\nconst Action = require('./Action');\nconst GuildBan = require('../../structures/GuildBan');\nconst Events = require('../../util/Events');\n\nclass GuildBanRemove extends Action {\n  handle(data) {\n    const client = this.client;\n    const guild = client.guilds.cache.get(data.guild_id);\n\n    /**\n     * Emitted whenever a member is unbanned from a guild.\n     * @event Client#guildBanRemove\n     * @param {GuildBan} ban The ban that was removed\n     */\n    if (guild) {\n      const ban = guild.bans.cache.get(data.user.id) ?? new GuildBan(client, data, guild);\n      guild.bans.cache.delete(ban.user.id);\n      client.emit(Events.GuildBanRemove, ban);\n    }\n  }\n}\n\nmodule.exports = GuildBanRemove;\n", "'use strict';\n\nconst Action = require('./Action');\n\nclass GuildChannelsPositionUpdate extends Action {\n  handle(data) {\n    const client = this.client;\n\n    const guild = client.guilds.cache.get(data.guild_id);\n    if (guild) {\n      for (const partialChannel of data.channels) {\n        const channel = guild.channels.cache.get(partialChannel.id);\n        if (channel) channel.rawPosition = partialChannel.position;\n      }\n    }\n\n    return { guild };\n  }\n}\n\nmodule.exports = GuildChannelsPositionUpdate;\n", "'use strict';\n\nconst Action = require('./Action');\nconst Events = require('../../util/Events');\n\nclass GuildDeleteAction extends Action {\n  handle(data) {\n    const client = this.client;\n\n    let guild = client.guilds.cache.get(data.id);\n    if (guild) {\n      if (data.unavailable) {\n        // Guild is unavailable\n        guild.available = false;\n\n        /**\n         * Emitted whenever a guild becomes unavailable, likely due to a server outage.\n         * @event Client#guildUnavailable\n         * @param {Guild} guild The guild that has become unavailable\n         */\n        client.emit(Events.GuildUnavailable, guild);\n\n        // Stops the GuildDelete packet thinking a guild was actually deleted,\n        // handles emitting of event itself\n        return;\n      }\n\n      for (const channel of guild.channels.cache.values()) this.client.channels._remove(channel.id);\n      client.voice.adapters.get(data.id)?.destroy();\n\n      // Delete guild\n      client.guilds.cache.delete(guild.id);\n\n      /**\n       * Emitted whenever a guild kicks the client or the guild is deleted/left.\n       * @event Client#guildDelete\n       * @param {Guild} guild The guild that was deleted\n       */\n      client.emit(Events.GuildDelete, guild);\n    }\n  }\n}\n\nmodule.exports = GuildDeleteAction;\n", "'use strict';\n\nconst Action = require('./Action');\nconst Events = require('../../util/Events');\n\nclass GuildEmojiCreateAction extends Action {\n  handle(guild, createdEmoji) {\n    const already = guild.emojis.cache.has(createdEmoji.id);\n    const emoji = guild.emojis._add(createdEmoji);\n    /**\n     * Emitted whenever a custom emoji is created in a guild.\n     * @event Client#emojiCreate\n     * @param {GuildEmoji} emoji The emoji that was created\n     */\n    if (!already) this.client.emit(Events.GuildEmojiCreate, emoji);\n    return { emoji };\n  }\n}\n\nmodule.exports = GuildEmojiCreateAction;\n", "'use strict';\n\nconst Action = require('./Action');\nconst Events = require('../../util/Events');\n\nclass GuildEmojiDeleteAction extends Action {\n  handle(emoji) {\n    emoji.guild.emojis.cache.delete(emoji.id);\n    /**\n     * Emitted whenever a custom emoji is deleted in a guild.\n     * @event Client#emojiDelete\n     * @param {GuildEmoji} emoji The emoji that was deleted\n     */\n    this.client.emit(Events.GuildEmojiDelete, emoji);\n    return { emoji };\n  }\n}\n\nmodule.exports = GuildEmojiDeleteAction;\n", "'use strict';\n\nconst Action = require('./Action');\nconst Events = require('../../util/Events');\n\nclass GuildEmojiUpdateAction extends Action {\n  handle(current, data) {\n    const old = current._update(data);\n    /**\n     * Emitted whenever a custom emoji is updated in a guild.\n     * @event Client#emojiUpdate\n     * @param {GuildEmoji} oldEmoji The old emoji\n     * @param {GuildEmoji} newEmoji The new emoji\n     */\n    this.client.emit(Events.GuildEmojiUpdate, old, current);\n    return { emoji: current };\n  }\n}\n\nmodule.exports = GuildEmojiUpdateAction;\n", "'use strict';\n\nconst Action = require('./Action');\n\nclass GuildEmojisUpdateAction extends Action {\n  handle(data) {\n    const guild = this.client.guilds.cache.get(data.guild_id);\n    if (!guild?.emojis) return;\n\n    const deletions = new Map(guild.emojis.cache);\n\n    for (const emoji of data.emojis) {\n      // Determine type of emoji event\n      const cachedEmoji = guild.emojis.cache.get(emoji.id);\n      if (cachedEmoji) {\n        deletions.delete(emoji.id);\n        if (!cachedEmoji.equals(emoji)) {\n          // Emoji updated\n          this.client.actions.GuildEmojiUpdate.handle(cachedEmoji, emoji);\n        }\n      } else {\n        // Emoji added\n        this.client.actions.GuildEmojiCreate.handle(guild, emoji);\n      }\n    }\n\n    for (const emoji of deletions.values()) {\n      // Emoji deleted\n      this.client.actions.GuildEmojiDelete.handle(emoji);\n    }\n  }\n}\n\nmodule.exports = GuildEmojisUpdateAction;\n", "'use strict';\n\nconst Action = require('./Action');\nconst Events = require('../../util/Events');\n\nclass GuildIntegrationsUpdate extends Action {\n  handle(data) {\n    const client = this.client;\n    const guild = client.guilds.cache.get(data.guild_id);\n    /**\n     * Emitted whenever a guild integration is updated\n     * @event Client#guildIntegrationsUpdate\n     * @param {Guild} guild The guild whose integrations were updated\n     */\n    if (guild) client.emit(Events.GuildIntegrationsUpdate, guild);\n  }\n}\n\nmodule.exports = GuildIntegrationsUpdate;\n", "'use strict';\n\nconst { createEnum } = require('./Enums');\n\n/**\n * @typedef {Object} Status\n * @property {number} Ready\n * @property {number} Connecting\n * @property {number} Reconnecting\n * @property {number} Idle\n * @property {number} Nearly\n * @property {number} Disconnected\n * @property {number} WaitingForGuilds\n * @property {number} Identifying\n * @property {number} Resuming\n */\n\n// JSDoc for IntelliSense purposes\n/**\n * @type {Status}\n * @ignore\n */\nmodule.exports = createEnum([\n  'Ready',\n  'Connecting',\n  'Reconnecting',\n  'Idle',\n  'Nearly',\n  'Disconnected',\n  'WaitingForGuilds',\n  'Identifying',\n  'Resuming',\n]);\n", "'use strict';\n\nconst Action = require('./Action');\nconst Events = require('../../util/Events');\nconst Status = require('../../util/Status');\n\nclass GuildMemberRemoveAction extends Action {\n  handle(data, shard) {\n    const client = this.client;\n    const guild = client.guilds.cache.get(data.guild_id);\n    let member = null;\n    if (guild) {\n      member = this.getMember({ user: data.user }, guild);\n      guild.memberCount--;\n      if (member) {\n        guild.members.cache.delete(member.id);\n        /**\n         * Emitted whenever a member leaves a guild, or is kicked.\n         * @event Client#guildMemberRemove\n         * @param {GuildMember} member The member that has left/been kicked from the guild\n         */\n        if (shard.status === Status.Ready) client.emit(Events.GuildMemberRemove, member);\n      }\n      guild.presences.cache.delete(data.user.id);\n      guild.voiceStates.cache.delete(data.user.id);\n    }\n    return { guild, member };\n  }\n}\n\nmodule.exports = GuildMemberRemoveAction;\n", "'use strict';\n\nconst Action = require('./Action');\nconst Events = require('../../util/Events');\nconst Status = require('../../util/Status');\n\nclass GuildMemberUpdateAction extends Action {\n  handle(data, shard) {\n    const { client } = this;\n    if (data.user.username) {\n      const user = client.users.cache.get(data.user.id);\n      if (!user) {\n        client.users._add(data.user);\n      } else if (!user._equals(data.user)) {\n        client.actions.UserUpdate.handle(data.user);\n      }\n    }\n\n    const guild = client.guilds.cache.get(data.guild_id);\n    if (guild) {\n      const member = this.getMember({ user: data.user }, guild);\n      if (member) {\n        const old = member._update(data);\n        /**\n         * Emitted whenever a guild member changes - i.e. new role, removed role, nickname.\n         * @event Client#guildMemberUpdate\n         * @param {GuildMember} oldMember The member before the update\n         * @param {GuildMember} newMember The member after the update\n         */\n        if (shard.status === Status.Ready && !member.equals(old)) client.emit(Events.GuildMemberUpdate, old, member);\n      } else {\n        const newMember = guild.members._add(data);\n        /**\n         * Emitted whenever a member becomes available.\n         * @event Client#guildMemberAvailable\n         * @param {GuildMember} member The member that became available\n         */\n        this.client.emit(Events.GuildMemberAvailable, newMember);\n      }\n    }\n  }\n}\n\nmodule.exports = GuildMemberUpdateAction;\n", "'use strict';\n\nconst Action = require('./Action');\nconst Events = require('../../util/Events');\n\nclass GuildRoleCreate extends Action {\n  handle(data) {\n    const client = this.client;\n    const guild = client.guilds.cache.get(data.guild_id);\n    let role;\n    if (guild) {\n      const already = guild.roles.cache.has(data.role.id);\n      role = guild.roles._add(data.role);\n      /**\n       * Emitted whenever a role is created.\n       * @event Client#roleCreate\n       * @param {Role} role The role that was created\n       */\n      if (!already) client.emit(Events.GuildRoleCreate, role);\n    }\n    return { role };\n  }\n}\n\nmodule.exports = GuildRoleCreate;\n", "'use strict';\n\nconst Action = require('./Action');\nconst Events = require('../../util/Events');\n\nclass GuildRoleDeleteAction extends Action {\n  handle(data) {\n    const client = this.client;\n    const guild = client.guilds.cache.get(data.guild_id);\n    let role;\n\n    if (guild) {\n      role = guild.roles.cache.get(data.role_id);\n      if (role) {\n        guild.roles.cache.delete(data.role_id);\n        /**\n         * Emitted whenever a guild role is deleted.\n         * @event Client#roleDelete\n         * @param {Role} role The role that was deleted\n         */\n        client.emit(Events.GuildRoleDelete, role);\n      }\n    }\n\n    return { role };\n  }\n}\n\nmodule.exports = GuildRoleDeleteAction;\n", "'use strict';\n\nconst Action = require('./Action');\nconst Events = require('../../util/Events');\n\nclass GuildRoleUpdateAction extends Action {\n  handle(data) {\n    const client = this.client;\n    const guild = client.guilds.cache.get(data.guild_id);\n\n    if (guild) {\n      let old = null;\n\n      const role = guild.roles.cache.get(data.role.id);\n      if (role) {\n        old = role._update(data.role);\n        /**\n         * Emitted whenever a guild role is updated.\n         * @event Client#roleUpdate\n         * @param {Role} oldRole The role before the update\n         * @param {Role} newRole The role after the update\n         */\n        client.emit(Events.GuildRoleUpdate, old, role);\n      }\n\n      return {\n        old,\n        updated: role,\n      };\n    }\n\n    return {\n      old: null,\n      updated: null,\n    };\n  }\n}\n\nmodule.exports = GuildRoleUpdateAction;\n", "'use strict';\n\nconst Action = require('./Action');\n\nclass GuildRolesPositionUpdate extends Action {\n  handle(data) {\n    const client = this.client;\n\n    const guild = client.guilds.cache.get(data.guild_id);\n    if (guild) {\n      for (const partialRole of data.roles) {\n        const role = guild.roles.cache.get(partialRole.id);\n        if (role) role.rawPosition = partialRole.position;\n      }\n    }\n\n    return { guild };\n  }\n}\n\nmodule.exports = GuildRolesPositionUpdate;\n", "'use strict';\n\nconst Action = require('./Action');\nconst Events = require('../../util/Events');\n\nclass GuildScheduledEventCreateAction extends Action {\n  handle(data) {\n    const client = this.client;\n    const guild = client.guilds.cache.get(data.guild_id);\n    if (guild) {\n      const guildScheduledEvent = guild.scheduledEvents._add(data);\n\n      /**\n       * Emitted whenever a guild scheduled event is created.\n       * @event Client#guildScheduledEventCreate\n       * @param {GuildScheduledEvent} guildScheduledEvent The created guild scheduled event\n       */\n      client.emit(Events.GuildScheduledEventCreate, guildScheduledEvent);\n\n      return { guildScheduledEvent };\n    }\n\n    return {};\n  }\n}\n\nmodule.exports = GuildScheduledEventCreateAction;\n", "'use strict';\n\nconst Action = require('./Action');\nconst Events = require('../../util/Events');\n\nclass GuildScheduledEventDeleteAction extends Action {\n  handle(data) {\n    const client = this.client;\n    const guild = client.guilds.cache.get(data.guild_id);\n\n    if (guild) {\n      const guildScheduledEvent = this.getScheduledEvent(data, guild);\n      if (guildScheduledEvent) {\n        guild.scheduledEvents.cache.delete(guildScheduledEvent.id);\n\n        /**\n         * Emitted whenever a guild scheduled event is deleted.\n         * @event Client#guildScheduledEventDelete\n         * @param {GuildScheduledEvent} guildScheduledEvent The deleted guild scheduled event\n         */\n        client.emit(Events.GuildScheduledEventDelete, guildScheduledEvent);\n\n        return { guildScheduledEvent };\n      }\n    }\n\n    return {};\n  }\n}\n\nmodule.exports = GuildScheduledEventDeleteAction;\n", "'use strict';\n\nconst Action = require('./Action');\nconst Events = require('../../util/Events');\n\nclass GuildScheduledEventUpdateAction extends Action {\n  handle(data) {\n    const client = this.client;\n    const guild = client.guilds.cache.get(data.guild_id);\n\n    if (guild) {\n      const oldGuildScheduledEvent = guild.scheduledEvents.cache.get(data.id)?._clone() ?? null;\n      const newGuildScheduledEvent = guild.scheduledEvents._add(data);\n\n      /**\n       * Emitted whenever a guild scheduled event gets updated.\n       * @event Client#guildScheduledEventUpdate\n       * @param {?GuildScheduledEvent} oldGuildScheduledEvent The guild scheduled event object before the update\n       * @param {GuildScheduledEvent} newGuildScheduledEvent The guild scheduled event object after the update\n       */\n      client.emit(Events.GuildScheduledEventUpdate, oldGuildScheduledEvent, newGuildScheduledEvent);\n\n      return { oldGuildScheduledEvent, newGuildScheduledEvent };\n    }\n\n    return {};\n  }\n}\n\nmodule.exports = GuildScheduledEventUpdateAction;\n", "'use strict';\n\nconst Action = require('./Action');\nconst Events = require('../../util/Events');\n\nclass GuildScheduledEventUserAddAction extends Action {\n  handle(data) {\n    const client = this.client;\n    const guild = client.guilds.cache.get(data.guild_id);\n\n    if (guild) {\n      const guildScheduledEvent = this.getScheduledEvent(data, guild);\n      const user = this.getUser(data);\n\n      if (guildScheduledEvent && user) {\n        /**\n         * Emitted whenever a user subscribes to a guild scheduled event\n         * @event Client#guildScheduledEventUserAdd\n         * @param {GuildScheduledEvent} guildScheduledEvent The guild scheduled event\n         * @param {User} user The user who subscribed\n         */\n        client.emit(Events.GuildScheduledEventUserAdd, guildScheduledEvent, user);\n\n        return { guildScheduledEvent, user };\n      }\n    }\n\n    return {};\n  }\n}\n\nmodule.exports = GuildScheduledEventUserAddAction;\n", "'use strict';\n\nconst Action = require('./Action');\nconst Events = require('../../util/Events');\n\nclass GuildScheduledEventUserRemoveAction extends Action {\n  handle(data) {\n    const client = this.client;\n    const guild = client.guilds.cache.get(data.guild_id);\n\n    if (guild) {\n      const guildScheduledEvent = this.getScheduledEvent(data, guild);\n      const user = this.getUser(data);\n\n      if (guildScheduledEvent && user) {\n        /**\n         * Emitted whenever a user unsubscribes from a guild scheduled event\n         * @event Client#guildScheduledEventUserRemove\n         * @param {GuildScheduledEvent} guildScheduledEvent The guild scheduled event\n         * @param {User} user The user who unsubscribed\n         */\n        client.emit(Events.GuildScheduledEventUserRemove, guildScheduledEvent, user);\n\n        return { guildScheduledEvent, user };\n      }\n    }\n\n    return {};\n  }\n}\n\nmodule.exports = GuildScheduledEventUserRemoveAction;\n", "'use strict';\n\nconst Action = require('./Action');\nconst Events = require('../../util/Events');\n\nclass GuildStickerCreateAction extends Action {\n  handle(guild, createdSticker) {\n    const already = guild.stickers.cache.has(createdSticker.id);\n    const sticker = guild.stickers._add(createdSticker);\n    /**\n     * Emitted whenever a custom sticker is created in a guild.\n     * @event Client#stickerCreate\n     * @param {Sticker} sticker The sticker that was created\n     */\n    if (!already) this.client.emit(Events.GuildStickerCreate, sticker);\n    return { sticker };\n  }\n}\n\nmodule.exports = GuildStickerCreateAction;\n", "'use strict';\n\nconst Action = require('./Action');\nconst Events = require('../../util/Events');\n\nclass GuildStickerDeleteAction extends Action {\n  handle(sticker) {\n    sticker.guild.stickers.cache.delete(sticker.id);\n    /**\n     * Emitted whenever a custom sticker is deleted in a guild.\n     * @event Client#stickerDelete\n     * @param {Sticker} sticker The sticker that was deleted\n     */\n    this.client.emit(Events.GuildStickerDelete, sticker);\n    return { sticker };\n  }\n}\n\nmodule.exports = GuildStickerDeleteAction;\n", "'use strict';\n\nconst Action = require('./Action');\nconst Events = require('../../util/Events');\n\nclass GuildStickerUpdateAction extends Action {\n  handle(current, data) {\n    const old = current._update(data);\n    /**\n     * Emitted whenever a custom sticker is updated in a guild.\n     * @event Client#stickerUpdate\n     * @param {Sticker} oldSticker The old sticker\n     * @param {Sticker} newSticker The new sticker\n     */\n    this.client.emit(Events.GuildStickerUpdate, old, current);\n    return { sticker: current };\n  }\n}\n\nmodule.exports = GuildStickerUpdateAction;\n", "'use strict';\n\nconst Action = require('./Action');\n\nclass GuildStickersUpdateAction extends Action {\n  handle(data) {\n    const guild = this.client.guilds.cache.get(data.guild_id);\n    if (!guild?.stickers) return;\n\n    const deletions = new Map(guild.stickers.cache);\n\n    for (const sticker of data.stickers) {\n      // Determine type of sticker event\n      const cachedSticker = guild.stickers.cache.get(sticker.id);\n      if (cachedSticker) {\n        deletions.delete(sticker.id);\n        if (!cachedSticker.equals(sticker)) {\n          // Sticker updated\n          this.client.actions.GuildStickerUpdate.handle(cachedSticker, sticker);\n        }\n      } else {\n        // Sticker added\n        this.client.actions.GuildStickerCreate.handle(guild, sticker);\n      }\n    }\n\n    for (const sticker of deletions.values()) {\n      // Sticker deleted\n      this.client.actions.GuildStickerDelete.handle(sticker);\n    }\n  }\n}\n\nmodule.exports = GuildStickersUpdateAction;\n", "'use strict';\n\nconst Action = require('./Action');\nconst Events = require('../../util/Events');\n\nclass GuildUpdateAction extends Action {\n  handle(data) {\n    const client = this.client;\n\n    const guild = client.guilds.cache.get(data.id);\n    if (guild) {\n      const old = guild._update(data);\n      /**\n       * Emitted whenever a guild is updated - e.g. name change.\n       * @event Client#guildUpdate\n       * @param {Guild} oldGuild The guild before the update\n       * @param {Guild} newGuild The guild after the update\n       */\n      client.emit(Events.GuildUpdate, old, guild);\n      return {\n        old,\n        updated: guild,\n      };\n    }\n\n    return {\n      old: null,\n      updated: null,\n    };\n  }\n}\n\nmodule.exports = GuildUpdateAction;\n", "'use strict';\n\nconst { ApplicationCommandOptionType } = require('discord-api-types/v10');\nconst { DiscordjsTypeError, ErrorCodes } = require('../errors');\n\n/**\n * A resolver for command interaction options.\n */\nclass CommandInteractionOptionResolver {\n  constructor(client, options, resolved) {\n    /**\n     * The client that instantiated this.\n     * @name CommandInteractionOptionResolver#client\n     * @type {Client}\n     * @readonly\n     */\n    Object.defineProperty(this, 'client', { value: client });\n\n    /**\n     * The name of the subcommand group.\n     * @type {?string}\n     * @private\n     */\n    this._group = null;\n\n    /**\n     * The name of the subcommand.\n     * @type {?string}\n     * @private\n     */\n    this._subcommand = null;\n\n    /**\n     * The bottom-level options for the interaction.\n     * If there is a subcommand (or subcommand and group), this is the options for the subcommand.\n     * @type {CommandInteractionOption[]}\n     * @private\n     */\n    this._hoistedOptions = options;\n\n    // Hoist subcommand group if present\n    if (this._hoistedOptions[0]?.type === ApplicationCommandOptionType.SubcommandGroup) {\n      this._group = this._hoistedOptions[0].name;\n      this._hoistedOptions = this._hoistedOptions[0].options ?? [];\n    }\n    // Hoist subcommand if present\n    if (this._hoistedOptions[0]?.type === ApplicationCommandOptionType.Subcommand) {\n      this._subcommand = this._hoistedOptions[0].name;\n      this._hoistedOptions = this._hoistedOptions[0].options ?? [];\n    }\n\n    /**\n     * The interaction options array.\n     * @name CommandInteractionOptionResolver#data\n     * @type {ReadonlyArray<CommandInteractionOption>}\n     * @readonly\n     */\n    Object.defineProperty(this, 'data', { value: Object.freeze([...options]) });\n\n    /**\n     * The interaction resolved data\n     * @name CommandInteractionOptionResolver#resolved\n     * @type {?Readonly<CommandInteractionResolvedData>}\n     */\n    Object.defineProperty(this, 'resolved', { value: resolved ? Object.freeze(resolved) : null });\n  }\n\n  /**\n   * Gets an option by its name.\n   * @param {string} name The name of the option.\n   * @param {boolean} [required=false] Whether to throw an error if the option is not found.\n   * @returns {?CommandInteractionOption} The option, if found.\n   */\n  get(name, required = false) {\n    const option = this._hoistedOptions.find(opt => opt.name === name);\n    if (!option) {\n      if (required) {\n        throw new DiscordjsTypeError(ErrorCodes.CommandInteractionOptionNotFound, name);\n      }\n      return null;\n    }\n    return option;\n  }\n\n  /**\n   * Gets an option by name and property and checks its type.\n   * @param {string} name The name of the option.\n   * @param {ApplicationCommandOptionType[]} allowedTypes The allowed types of the option.\n   * @param {string[]} properties The properties to check for for `required`.\n   * @param {boolean} required Whether to throw an error if the option is not found.\n   * @returns {?CommandInteractionOption} The option, if found.\n   * @private\n   */\n  _getTypedOption(name, allowedTypes, properties, required) {\n    const option = this.get(name, required);\n    if (!option) {\n      return null;\n    } else if (!allowedTypes.includes(option.type)) {\n      throw new DiscordjsTypeError(ErrorCodes.CommandInteractionOptionType, name, option.type, allowedTypes.join(', '));\n    } else if (required && properties.every(prop => option[prop] === null || option[prop] === undefined)) {\n      throw new DiscordjsTypeError(ErrorCodes.CommandInteractionOptionEmpty, name, option.type);\n    }\n    return option;\n  }\n\n  /**\n   * Gets the selected subcommand.\n   * @param {boolean} [required=true] Whether to throw an error if there is no subcommand.\n   * @returns {?string} The name of the selected subcommand, or null if not set and not required.\n   */\n  getSubcommand(required = true) {\n    if (required && !this._subcommand) {\n      throw new DiscordjsTypeError(ErrorCodes.CommandInteractionOptionNoSubcommand);\n    }\n    return this._subcommand;\n  }\n\n  /**\n   * Gets the selected subcommand group.\n   * @param {boolean} [required=false] Whether to throw an error if there is no subcommand group.\n   * @returns {?string} The name of the selected subcommand group, or null if not set and not required.\n   */\n  getSubcommandGroup(required = false) {\n    if (required && !this._group) {\n      throw new DiscordjsTypeError(ErrorCodes.CommandInteractionOptionNoSubcommandGroup);\n    }\n    return this._group;\n  }\n\n  /**\n   * Gets a boolean option.\n   * @param {string} name The name of the option.\n   * @param {boolean} [required=false] Whether to throw an error if the option is not found.\n   * @returns {?boolean} The value of the option, or null if not set and not required.\n   */\n  getBoolean(name, required = false) {\n    const option = this._getTypedOption(name, [ApplicationCommandOptionType.Boolean], ['value'], required);\n    return option?.value ?? null;\n  }\n\n  /**\n   * Gets a channel option.\n   * @param {string} name The name of the option.\n   * @param {boolean} [required=false] Whether to throw an error if the option is not found.\n   * @param {ChannelType[]} [channelTypes=[]] The allowed types of channels. If empty, all channel types are allowed.\n   * @returns {?(GuildChannel|ThreadChannel|APIChannel)}\n   * The value of the option, or null if not set and not required.\n   */\n  getChannel(name, required = false, channelTypes = []) {\n    const option = this._getTypedOption(name, [ApplicationCommandOptionType.Channel], ['channel'], required);\n    const channel = option?.channel ?? null;\n\n    if (channel && channelTypes.length > 0 && !channelTypes.includes(channel.type)) {\n      throw new DiscordjsTypeError(\n        ErrorCodes.CommandInteractionOptionInvalidChannelType,\n        name,\n        channel.type,\n        channelTypes.join(', '),\n      );\n    }\n\n    return channel;\n  }\n\n  /**\n   * Gets a string option.\n   * @param {string} name The name of the option.\n   * @param {boolean} [required=false] Whether to throw an error if the option is not found.\n   * @returns {?string} The value of the option, or null if not set and not required.\n   */\n  getString(name, required = false) {\n    const option = this._getTypedOption(name, [ApplicationCommandOptionType.String], ['value'], required);\n    return option?.value ?? null;\n  }\n\n  /**\n   * Gets an integer option.\n   * @param {string} name The name of the option.\n   * @param {boolean} [required=false] Whether to throw an error if the option is not found.\n   * @returns {?number} The value of the option, or null if not set and not required.\n   */\n  getInteger(name, required = false) {\n    const option = this._getTypedOption(name, [ApplicationCommandOptionType.Integer], ['value'], required);\n    return option?.value ?? null;\n  }\n\n  /**\n   * Gets a number option.\n   * @param {string} name The name of the option.\n   * @param {boolean} [required=false] Whether to throw an error if the option is not found.\n   * @returns {?number} The value of the option, or null if not set and not required.\n   */\n  getNumber(name, required = false) {\n    const option = this._getTypedOption(name, [ApplicationCommandOptionType.Number], ['value'], required);\n    return option?.value ?? null;\n  }\n\n  /**\n   * Gets a user option.\n   * @param {string} name The name of the option.\n   * @param {boolean} [required=false] Whether to throw an error if the option is not found.\n   * @returns {?User} The value of the option, or null if not set and not required.\n   */\n  getUser(name, required = false) {\n    const option = this._getTypedOption(\n      name,\n      [ApplicationCommandOptionType.User, ApplicationCommandOptionType.Mentionable],\n      ['user'],\n      required,\n    );\n    return option?.user ?? null;\n  }\n\n  /**\n   * Gets a member option.\n   * @param {string} name The name of the option.\n   * @returns {?(GuildMember|APIGuildMember)}\n   * The value of the option, or null if the user is not present in the guild or the option is not set.\n   */\n  getMember(name) {\n    const option = this._getTypedOption(\n      name,\n      [ApplicationCommandOptionType.User, ApplicationCommandOptionType.Mentionable],\n      ['member'],\n      false,\n    );\n    return option?.member ?? null;\n  }\n\n  /**\n   * Gets a role option.\n   * @param {string} name The name of the option.\n   * @param {boolean} [required=false] Whether to throw an error if the option is not found.\n   * @returns {?(Role|APIRole)} The value of the option, or null if not set and not required.\n   */\n  getRole(name, required = false) {\n    const option = this._getTypedOption(\n      name,\n      [ApplicationCommandOptionType.Role, ApplicationCommandOptionType.Mentionable],\n      ['role'],\n      required,\n    );\n    return option?.role ?? null;\n  }\n\n  /**\n   * Gets an attachment option.\n   * @param {string} name The name of the option.\n   * @param {boolean} [required=false] Whether to throw an error if the option is not found.\n   * @returns {?Attachment} The value of the option, or null if not set and not required.\n   */\n  getAttachment(name, required = false) {\n    const option = this._getTypedOption(name, [ApplicationCommandOptionType.Attachment], ['attachment'], required);\n    return option?.attachment ?? null;\n  }\n\n  /**\n   * Gets a mentionable option.\n   * @param {string} name The name of the option.\n   * @param {boolean} [required=false] Whether to throw an error if the option is not found.\n   * @returns {?(User|GuildMember|APIGuildMember|Role|APIRole)}\n   * The value of the option, or null if not set and not required.\n   */\n  getMentionable(name, required = false) {\n    const option = this._getTypedOption(\n      name,\n      [ApplicationCommandOptionType.Mentionable],\n      ['user', 'member', 'role'],\n      required,\n    );\n    return option?.member ?? option?.user ?? option?.role ?? null;\n  }\n\n  /**\n   * Gets a message option.\n   * @param {string} name The name of the option.\n   * @param {boolean} [required=false] Whether to throw an error if the option is not found.\n   * @returns {?Message}\n   * The value of the option, or null if not set and not required.\n   */\n  getMessage(name, required = false) {\n    const option = this._getTypedOption(name, ['_MESSAGE'], ['message'], required);\n    return option?.message ?? null;\n  }\n\n  /**\n   * The full autocomplete option object.\n   * @typedef {Object} AutocompleteFocusedOption\n   * @property {string} name The name of the option\n   * @property {ApplicationCommandOptionType} type The type of the application command option\n   * @property {string} value The value of the option\n   * @property {boolean} focused Whether this option is currently in focus for autocomplete\n   */\n\n  /**\n   * Gets the focused option.\n   * @param {boolean} [getFull=false] Whether to get the full option object\n   * @returns {string|AutocompleteFocusedOption}\n   * The value of the option, or the whole option if getFull is true\n   */\n  getFocused(getFull = false) {\n    const focusedOption = this._hoistedOptions.find(option => option.focused);\n    if (!focusedOption) throw new DiscordjsTypeError(ErrorCodes.AutocompleteInteractionOptionNoFocusedOption);\n    return getFull ? focusedOption : focusedOption.value;\n  }\n}\n\nmodule.exports = CommandInteractionOptionResolver;\n", "'use strict';\n\nconst { InteractionResponseType, Routes } = require('discord-api-types/v10');\nconst BaseInteraction = require('./BaseInteraction');\nconst CommandInteractionOptionResolver = require('./CommandInteractionOptionResolver');\nconst { DiscordjsError, ErrorCodes } = require('../errors');\n\n/**\n * Represents an autocomplete interaction.\n * @extends {BaseInteraction}\n */\nclass AutocompleteInteraction extends BaseInteraction {\n  constructor(client, data) {\n    super(client, data);\n\n    /**\n     * The id of the channel this interaction was sent in\n     * @type {Snowflake}\n     * @name AutocompleteInteraction#channelId\n     */\n\n    /**\n     * The invoked application command's id\n     * @type {Snowflake}\n     */\n    this.commandId = data.data.id;\n\n    /**\n     * The invoked application command's name\n     * @type {string}\n     */\n    this.commandName = data.data.name;\n\n    /**\n     * The invoked application command's type\n     * @type {ApplicationCommandType}\n     */\n    this.commandType = data.data.type;\n\n    /**\n     * The id of the guild the invoked application command is registered to\n     * @type {?Snowflake}\n     */\n    this.commandGuildId = data.data.guild_id ?? null;\n\n    /**\n     * Whether this interaction has already received a response\n     * @type {boolean}\n     */\n    this.responded = false;\n\n    /**\n     * The options passed to the command\n     * @type {CommandInteractionOptionResolver}\n     */\n    this.options = new CommandInteractionOptionResolver(this.client, data.data.options ?? []);\n  }\n\n  /**\n   * The invoked application command, if it was fetched before\n   * @type {?ApplicationCommand}\n   */\n  get command() {\n    const id = this.commandId;\n    return this.guild?.commands.cache.get(id) ?? this.client.application.commands.cache.get(id) ?? null;\n  }\n\n  /**\n   * Sends results for the autocomplete of this interaction.\n   * @param {ApplicationCommandOptionChoiceData[]} options The options for the autocomplete\n   * @returns {Promise<void>}\n   * @example\n   * // respond to autocomplete interaction\n   * interaction.respond([\n   *  {\n   *    name: 'Option 1',\n   *    value: 'option1',\n   *  },\n   * ])\n   *  .then(() => console.log('Successfully responded to the autocomplete interaction'))\n   *  .catch(console.error);\n   */\n  async respond(options) {\n    if (this.responded) throw new DiscordjsError(ErrorCodes.InteractionAlreadyReplied);\n\n    await this.client.rest.post(Routes.interactionCallback(this.id, this.token), {\n      body: {\n        type: InteractionResponseType.ApplicationCommandAutocompleteResult,\n        data: {\n          choices: options.map(({ nameLocalizations, ...option }) => ({\n            ...this.client.options.jsonTransformer(option),\n            name_localizations: nameLocalizations,\n          })),\n        },\n      },\n      auth: false,\n    });\n    this.responded = true;\n  }\n}\n\nmodule.exports = AutocompleteInteraction;\n", "'use strict';\n\nconst { DiscordSnowflake } = require('@sapphire/snowflake');\nconst { InteractionType } = require('discord-api-types/v10');\nconst { DiscordjsError, ErrorCodes } = require('../errors');\n\n/**\n * Represents an interaction's response\n */\nclass InteractionResponse {\n  constructor(interaction, id) {\n    /**\n     * The interaction associated with the interaction response\n     * @type {BaseInteraction}\n     */\n    this.interaction = interaction;\n    /**\n     * The id of the original interaction response\n     * @type {Snowflake}\n     */\n    this.id = id ?? interaction.id;\n    this.client = interaction.client;\n  }\n\n  /**\n   * The timestamp the interaction response was created at\n   * @type {number}\n   * @readonly\n   */\n  get createdTimestamp() {\n    return DiscordSnowflake.timestampFrom(this.id);\n  }\n\n  /**\n   * The time the interaction response was created at\n   * @type {Date}\n   * @readonly\n   */\n  get createdAt() {\n    return new Date(this.createdTimestamp);\n  }\n\n  /**\n   * Collects a single component interaction that passes the filter.\n   * The Promise will reject if the time expires.\n   * @param {AwaitMessageComponentOptions} [options={}] Options to pass to the internal collector\n   * @returns {Promise<MessageComponentInteraction>}\n   */\n  awaitMessageComponent(options = {}) {\n    const _options = { ...options, max: 1 };\n    return new Promise((resolve, reject) => {\n      const collector = this.createMessageComponentCollector(_options);\n      collector.once('end', (interactions, reason) => {\n        const interaction = interactions.first();\n        if (interaction) resolve(interaction);\n        else reject(new DiscordjsError(ErrorCodes.InteractionCollectorError, reason));\n      });\n    });\n  }\n\n  /**\n   * Creates a message component interaction collector\n   * @param {MessageComponentCollectorOptions} [options={}] Options to send to the collector\n   * @returns {InteractionCollector}\n   */\n  createMessageComponentCollector(options = {}) {\n    return new InteractionCollector(this.client, {\n      ...options,\n      interactionResponse: this,\n      interactionType: InteractionType.MessageComponent,\n    });\n  }\n\n  /**\n   * Fetches the response as a {@link Message} object.\n   * @returns {Promise<Message>}\n   */\n  fetch() {\n    return this.interaction.fetchReply();\n  }\n\n  /**\n   * Deletes the response.\n   * @returns {Promise<void>}\n   */\n  delete() {\n    return this.interaction.deleteReply();\n  }\n\n  /**\n   * Edits the response.\n   * @param {string|MessagePayload|WebhookMessageEditOptions} options The new options for the response.\n   * @returns {Promise<Message>}\n   */\n  edit(options) {\n    return this.interaction.editReply(options);\n  }\n}\n\n// eslint-disable-next-line import/order\nconst InteractionCollector = require('./InteractionCollector');\nmodule.exports = InteractionResponse;\n", "'use strict';\n\nconst { deprecate } = require('node:util');\nconst { isJSONEncodable } = require('@discordjs/util');\nconst { InteractionResponseType, MessageFlags, Routes, InteractionType } = require('discord-api-types/v10');\nconst { DiscordjsError, ErrorCodes } = require('../../errors');\nconst MessageFlagsBitField = require('../../util/MessageFlagsBitField');\nconst InteractionCollector = require('../InteractionCollector');\nconst InteractionResponse = require('../InteractionResponse');\nconst MessagePayload = require('../MessagePayload');\n\n/**\n * @typedef {Object} ModalComponentData\n * @property {string} title The title of the modal\n * @property {string} customId The custom id of the modal\n * @property {ActionRow[]} components The components within this modal\n */\n\n/**\n * Interface for classes that support shared interaction response types.\n * @interface\n */\nclass InteractionResponses {\n  /**\n   * Options for deferring the reply to an {@link BaseInteraction}.\n   * @typedef {Object} InteractionDeferReplyOptions\n   * @property {boolean} [ephemeral] Whether the reply should be ephemeral\n   * @property {boolean} [fetchReply] Whether to fetch the reply\n   */\n\n  /**\n   * Options for deferring and updating the reply to a {@link MessageComponentInteraction}.\n   * @typedef {Object} InteractionDeferUpdateOptions\n   * @property {boolean} [fetchReply] Whether to fetch the reply\n   */\n\n  /**\n   * Options for a reply to a {@link BaseInteraction}.\n   * @typedef {BaseMessageOptionsWithPoll} InteractionReplyOptions\n   * @property {boolean} [tts=false] Whether the message should be spoken aloud\n   * @property {boolean} [ephemeral] Whether the reply should be ephemeral\n   * @property {boolean} [fetchReply] Whether to fetch the reply\n   * @property {MessageFlags} [flags] Which flags to set for the message.\n   * <info>Only `MessageFlags.Ephemeral`, `MessageFlags.SuppressEmbeds`, and `MessageFlags.SuppressNotifications`\n   * can be set.</info>\n   */\n\n  /**\n   * Options for updating the message received from a {@link MessageComponentInteraction}.\n   * @typedef {MessageEditOptions} InteractionUpdateOptions\n   * @property {boolean} [fetchReply] Whether to fetch the reply\n   */\n\n  /**\n   * Defers the reply to this interaction.\n   * @param {InteractionDeferReplyOptions} [options] Options for deferring the reply to this interaction\n   * @returns {Promise<Message|InteractionResponse>}\n   * @example\n   * // Defer the reply to this interaction\n   * interaction.deferReply()\n   *   .then(console.log)\n   *   .catch(console.error)\n   * @example\n   * // Defer to send an ephemeral reply later\n   * interaction.deferReply({ ephemeral: true })\n   *   .then(console.log)\n   *   .catch(console.error);\n   */\n  async deferReply(options = {}) {\n    if (this.deferred || this.replied) throw new DiscordjsError(ErrorCodes.InteractionAlreadyReplied);\n    this.ephemeral = options.ephemeral ?? false;\n    await this.client.rest.post(Routes.interactionCallback(this.id, this.token), {\n      body: {\n        type: InteractionResponseType.DeferredChannelMessageWithSource,\n        data: {\n          flags: options.ephemeral ? MessageFlags.Ephemeral : undefined,\n        },\n      },\n      auth: false,\n    });\n    this.deferred = true;\n\n    return options.fetchReply ? this.fetchReply() : new InteractionResponse(this);\n  }\n\n  /**\n   * Creates a reply to this interaction.\n   * <info>Use the `fetchReply` option to get the bot's reply message.</info>\n   * @param {string|MessagePayload|InteractionReplyOptions} options The options for the reply\n   * @returns {Promise<Message|InteractionResponse>}\n   * @example\n   * // Reply to the interaction and fetch the response\n   * interaction.reply({ content: 'Pong!', fetchReply: true })\n   *   .then((message) => console.log(`Reply sent with content ${message.content}`))\n   *   .catch(console.error);\n   * @example\n   * // Create an ephemeral reply with an embed\n   * const embed = new EmbedBuilder().setDescription('Pong!');\n   *\n   * interaction.reply({ embeds: [embed], ephemeral: true })\n   *   .then(() => console.log('Reply sent.'))\n   *   .catch(console.error);\n   */\n  async reply(options) {\n    if (this.deferred || this.replied) throw new DiscordjsError(ErrorCodes.InteractionAlreadyReplied);\n\n    let messagePayload;\n    if (options instanceof MessagePayload) messagePayload = options;\n    else messagePayload = MessagePayload.create(this, options);\n\n    const { body: data, files } = await messagePayload.resolveBody().resolveFiles();\n\n    this.ephemeral = new MessageFlagsBitField(data.flags).has(MessageFlags.Ephemeral);\n\n    await this.client.rest.post(Routes.interactionCallback(this.id, this.token), {\n      body: {\n        type: InteractionResponseType.ChannelMessageWithSource,\n        data,\n      },\n      files,\n      auth: false,\n    });\n    this.replied = true;\n\n    return options.fetchReply ? this.fetchReply() : new InteractionResponse(this);\n  }\n\n  /**\n   * Fetches a reply to this interaction.\n   * @see Webhook#fetchMessage\n   * @param {Snowflake|'@original'} [message='@original'] The response to fetch\n   * @returns {Promise<Message>}\n   * @example\n   * // Fetch the initial reply to this interaction\n   * interaction.fetchReply()\n   *   .then(reply => console.log(`Replied with ${reply.content}`))\n   *   .catch(console.error);\n   */\n  fetchReply(message = '@original') {\n    return this.webhook.fetchMessage(message);\n  }\n\n  /**\n   * Options that can be passed into {@link InteractionResponses#editReply}.\n   * @typedef {WebhookMessageEditOptions} InteractionEditReplyOptions\n   * @property {MessageResolvable|'@original'} [message='@original'] The response to edit\n   */\n\n  /**\n   * Edits a reply to this interaction.\n   * @see Webhook#editMessage\n   * @param {string|MessagePayload|InteractionEditReplyOptions} options The new options for the message\n   * @returns {Promise<Message>}\n   * @example\n   * // Edit the initial reply to this interaction\n   * interaction.editReply('New content')\n   *   .then(console.log)\n   *   .catch(console.error);\n   */\n  async editReply(options) {\n    if (!this.deferred && !this.replied) throw new DiscordjsError(ErrorCodes.InteractionNotReplied);\n    const msg = await this.webhook.editMessage(options.message ?? '@original', options);\n    this.replied = true;\n    return msg;\n  }\n\n  /**\n   * Deletes a reply to this interaction.\n   * @see Webhook#deleteMessage\n   * @param {MessageResolvable|'@original'} [message='@original'] The response to delete\n   * @returns {Promise<void>}\n   * @example\n   * // Delete the initial reply to this interaction\n   * interaction.deleteReply()\n   *   .then(console.log)\n   *   .catch(console.error);\n   */\n  async deleteReply(message = '@original') {\n    await this.webhook.deleteMessage(message);\n  }\n\n  /**\n   * Send a follow-up message to this interaction.\n   * @param {string|MessagePayload|InteractionReplyOptions} options The options for the reply\n   * @returns {Promise<Message>}\n   */\n  followUp(options) {\n    if (!this.deferred && !this.replied) return Promise.reject(new DiscordjsError(ErrorCodes.InteractionNotReplied));\n    return this.webhook.send(options);\n  }\n\n  /**\n   * Defers an update to the message to which the component was attached.\n   * @param {InteractionDeferUpdateOptions} [options] Options for deferring the update to this interaction\n   * @returns {Promise<Message|InteractionResponse>}\n   * @example\n   * // Defer updating and reset the component's loading state\n   * interaction.deferUpdate()\n   *   .then(console.log)\n   *   .catch(console.error);\n   */\n  async deferUpdate(options = {}) {\n    if (this.deferred || this.replied) throw new DiscordjsError(ErrorCodes.InteractionAlreadyReplied);\n    await this.client.rest.post(Routes.interactionCallback(this.id, this.token), {\n      body: {\n        type: InteractionResponseType.DeferredMessageUpdate,\n      },\n      auth: false,\n    });\n    this.deferred = true;\n\n    return options.fetchReply ? this.fetchReply() : new InteractionResponse(this, this.message?.interaction?.id);\n  }\n\n  /**\n   * Updates the original message of the component on which the interaction was received on.\n   * @param {string|MessagePayload|InteractionUpdateOptions} options The options for the updated message\n   * @returns {Promise<Message|void>}\n   * @example\n   * // Remove the components from the message\n   * interaction.update({\n   *   content: \"A component interaction was received\",\n   *   components: []\n   * })\n   *   .then(console.log)\n   *   .catch(console.error);\n   */\n  async update(options) {\n    if (this.deferred || this.replied) throw new DiscordjsError(ErrorCodes.InteractionAlreadyReplied);\n\n    let messagePayload;\n    if (options instanceof MessagePayload) messagePayload = options;\n    else messagePayload = MessagePayload.create(this, options);\n\n    const { body: data, files } = await messagePayload.resolveBody().resolveFiles();\n\n    await this.client.rest.post(Routes.interactionCallback(this.id, this.token), {\n      body: {\n        type: InteractionResponseType.UpdateMessage,\n        data,\n      },\n      files,\n      auth: false,\n    });\n    this.replied = true;\n\n    return options.fetchReply ? this.fetchReply() : new InteractionResponse(this, this.message.interaction?.id);\n  }\n\n  /**\n   * Shows a modal component\n   * @param {ModalBuilder|ModalComponentData|APIModalInteractionResponseCallbackData} modal The modal to show\n   * @returns {Promise<void>}\n   */\n  async showModal(modal) {\n    if (this.deferred || this.replied) throw new DiscordjsError(ErrorCodes.InteractionAlreadyReplied);\n    await this.client.rest.post(Routes.interactionCallback(this.id, this.token), {\n      body: {\n        type: InteractionResponseType.Modal,\n        data: isJSONEncodable(modal) ? modal.toJSON() : this.client.options.jsonTransformer(modal),\n      },\n      auth: false,\n    });\n    this.replied = true;\n  }\n\n  /**\n   * Responds to the interaction with an upgrade button.\n   * <info>Only available for applications with monetization enabled.</info>\n   * @deprecated Sending a premium-style button is the new Discord behaviour.\n   * @returns {Promise<void>}\n   */\n  async sendPremiumRequired() {\n    if (this.deferred || this.replied) throw new DiscordjsError(ErrorCodes.InteractionAlreadyReplied);\n    await this.client.rest.post(Routes.interactionCallback(this.id, this.token), {\n      body: {\n        type: InteractionResponseType.PremiumRequired,\n      },\n      auth: false,\n    });\n    this.replied = true;\n  }\n\n  /**\n   * An object containing the same properties as {@link CollectorOptions}, but a few less:\n   * @typedef {Object} AwaitModalSubmitOptions\n   * @property {CollectorFilter} [filter] The filter applied to this collector\n   * @property {number} time Time in milliseconds to wait for an interaction before rejecting\n   */\n\n  /**\n   * Collects a single modal submit interaction that passes the filter.\n   * The Promise will reject if the time expires.\n   * @param {AwaitModalSubmitOptions} options Options to pass to the internal collector\n   * @returns {Promise<ModalSubmitInteraction>}\n   * @example\n   * // Collect a modal submit interaction\n   * const filter = (interaction) => interaction.customId === 'modal';\n   * interaction.awaitModalSubmit({ filter, time: 15_000 })\n   *   .then(interaction => console.log(`${interaction.customId} was submitted!`))\n   *   .catch(console.error);\n   */\n  awaitModalSubmit(options) {\n    if (typeof options.time !== 'number') throw new DiscordjsError(ErrorCodes.InvalidType, 'time', 'number');\n    const _options = { ...options, max: 1, interactionType: InteractionType.ModalSubmit };\n    return new Promise((resolve, reject) => {\n      const collector = new InteractionCollector(this.client, _options);\n      collector.once('end', (interactions, reason) => {\n        const interaction = interactions.first();\n        if (interaction) resolve(interaction);\n        else reject(new DiscordjsError(ErrorCodes.InteractionCollectorError, reason));\n      });\n    });\n  }\n\n  static applyToClass(structure, ignore = []) {\n    const props = [\n      'deferReply',\n      'reply',\n      'fetchReply',\n      'editReply',\n      'deleteReply',\n      'followUp',\n      'deferUpdate',\n      'update',\n      'showModal',\n      'sendPremiumRequired',\n      'awaitModalSubmit',\n    ];\n\n    for (const prop of props) {\n      if (ignore.includes(prop)) continue;\n      Object.defineProperty(\n        structure.prototype,\n        prop,\n        Object.getOwnPropertyDescriptor(InteractionResponses.prototype, prop),\n      );\n    }\n  }\n}\n\nInteractionResponses.prototype.sendPremiumRequired = deprecate(\n  InteractionResponses.prototype.sendPremiumRequired,\n  // eslint-disable-next-line max-len\n  'InteractionResponses#sendPremiumRequired() is deprecated. Sending a premium-style button is the new Discord behaviour.',\n);\n\nmodule.exports = InteractionResponses;\n", "'use strict';\n\nconst { lazy } = require('@discordjs/util');\nconst BaseInteraction = require('./BaseInteraction');\nconst InteractionWebhook = require('./InteractionWebhook');\nconst InteractionResponses = require('./interfaces/InteractionResponses');\n\nconst getMessage = lazy(() => require('./Message').Message);\n\n/**\n * Represents a message component interaction.\n * @extends {BaseInteraction}\n * @implements {InteractionResponses}\n */\nclass MessageComponentInteraction extends BaseInteraction {\n  constructor(client, data) {\n    super(client, data);\n\n    /**\n     * The id of the channel this interaction was sent in\n     * @type {Snowflake}\n     * @name MessageComponentInteraction#channelId\n     */\n\n    /**\n     * The message to which the component was attached\n     * @type {Message}\n     */\n    this.message = this.channel?.messages._add(data.message) ?? new (getMessage())(client, data.message);\n\n    /**\n     * The custom id of the component which was interacted with\n     * @type {string}\n     */\n    this.customId = data.data.custom_id;\n\n    /**\n     * The type of component which was interacted with\n     * @type {ComponentType}\n     */\n    this.componentType = data.data.component_type;\n\n    /**\n     * Whether the reply to this interaction has been deferred\n     * @type {boolean}\n     */\n    this.deferred = false;\n\n    /**\n     * Whether the reply to this interaction is ephemeral\n     * @type {?boolean}\n     */\n    this.ephemeral = null;\n\n    /**\n     * Whether this interaction has already been replied to\n     * @type {boolean}\n     */\n    this.replied = false;\n\n    /**\n     * An associated interaction webhook, can be used to further interact with this interaction\n     * @type {InteractionWebhook}\n     */\n    this.webhook = new InteractionWebhook(this.client, this.applicationId, this.token);\n  }\n\n  /**\n   * Components that can be placed in an action row for messages.\n   * * ButtonComponent\n   * * StringSelectMenuComponent\n   * * UserSelectMenuComponent\n   * * RoleSelectMenuComponent\n   * * MentionableSelectMenuComponent\n   * * ChannelSelectMenuComponent\n   * @typedef {ButtonComponent|StringSelectMenuComponent|UserSelectMenuComponent|\n   * RoleSelectMenuComponent|MentionableSelectMenuComponent|ChannelSelectMenuComponent} MessageActionRowComponent\n   */\n\n  /**\n   * The component which was interacted with\n   * @type {MessageActionRowComponent|APIMessageActionRowComponent}\n   * @readonly\n   */\n  get component() {\n    return this.message.components\n      .flatMap(row => row.components)\n      .find(component => (component.customId ?? component.custom_id) === this.customId);\n  }\n\n  // These are here only for documentation purposes - they are implemented by InteractionResponses\n  /* eslint-disable no-empty-function */\n  deferReply() {}\n  reply() {}\n  fetchReply() {}\n  editReply() {}\n  deleteReply() {}\n  followUp() {}\n  deferUpdate() {}\n  update() {}\n  showModal() {}\n  sendPremiumRequired() {}\n  awaitModalSubmit() {}\n}\n\nInteractionResponses.applyToClass(MessageComponentInteraction);\n\nmodule.exports = MessageComponentInteraction;\n", "'use strict';\n\nconst MessageComponentInteraction = require('./MessageComponentInteraction');\n\n/**\n * Represents a button interaction.\n * @extends {MessageComponentInteraction}\n */\nclass ButtonInteraction extends MessageComponentInteraction {}\n\nmodule.exports = ButtonInteraction;\n", "'use strict';\n\nconst { Collection } = require('@discordjs/collection');\nconst MessageComponentInteraction = require('./MessageComponentInteraction');\n\n/**\n * Represents a {@link ComponentType.ChannelSelect} select menu interaction.\n * @extends {MessageComponentInteraction}\n */\nclass ChannelSelectMenuInteraction extends MessageComponentInteraction {\n  constructor(client, data) {\n    super(client, data);\n    const { resolved, values } = data.data;\n\n    /**\n     * An array of the selected channel ids\n     * @type {Snowflake[]}\n     */\n    this.values = values ?? [];\n\n    /**\n     * Collection of the selected channels\n     * @type {Collection<Snowflake, BaseChannel|APIChannel>}\n     */\n    this.channels = new Collection();\n\n    for (const channel of Object.values(resolved?.channels ?? {})) {\n      this.channels.set(channel.id, this.client.channels._add(channel, this.guild) ?? channel);\n    }\n  }\n}\n\nmodule.exports = ChannelSelectMenuInteraction;\n", "'use strict';\n\nconst Attachment = require('./Attachment');\nconst BaseInteraction = require('./BaseInteraction');\nconst InteractionWebhook = require('./InteractionWebhook');\nconst InteractionResponses = require('./interfaces/InteractionResponses');\n\n/**\n * Represents a command interaction.\n * @extends {BaseInteraction}\n * @implements {InteractionResponses}\n * @abstract\n */\nclass CommandInteraction extends BaseInteraction {\n  constructor(client, data) {\n    super(client, data);\n\n    /**\n     * The id of the channel this interaction was sent in\n     * @type {Snowflake}\n     * @name CommandInteraction#channelId\n     */\n\n    /**\n     * The invoked application command's id\n     * @type {Snowflake}\n     */\n    this.commandId = data.data.id;\n\n    /**\n     * The invoked application command's name\n     * @type {string}\n     */\n    this.commandName = data.data.name;\n\n    /**\n     * The invoked application command's type\n     * @type {ApplicationCommandType}\n     */\n    this.commandType = data.data.type;\n\n    /**\n     * The id of the guild the invoked application command is registered to\n     * @type {?Snowflake}\n     */\n    this.commandGuildId = data.data.guild_id ?? null;\n\n    /**\n     * Whether the reply to this interaction has been deferred\n     * @type {boolean}\n     */\n    this.deferred = false;\n\n    /**\n     * Whether this interaction has already been replied to\n     * @type {boolean}\n     */\n    this.replied = false;\n\n    /**\n     * Whether the reply to this interaction is ephemeral\n     * @type {?boolean}\n     */\n    this.ephemeral = null;\n\n    /**\n     * An associated interaction webhook, can be used to further interact with this interaction\n     * @type {InteractionWebhook}\n     */\n    this.webhook = new InteractionWebhook(this.client, this.applicationId, this.token);\n  }\n\n  /**\n   * The invoked application command, if it was fetched before\n   * @type {?ApplicationCommand}\n   */\n  get command() {\n    const id = this.commandId;\n    return this.guild?.commands.cache.get(id) ?? this.client.application.commands.cache.get(id) ?? null;\n  }\n\n  /**\n   * Represents the resolved data of a received command interaction.\n   * @typedef {Object} CommandInteractionResolvedData\n   * @property {Collection<Snowflake, User>} [users] The resolved users\n   * @property {Collection<Snowflake, GuildMember|APIGuildMember>} [members] The resolved guild members\n   * @property {Collection<Snowflake, Role|APIRole>} [roles] The resolved roles\n   * @property {Collection<Snowflake, BaseChannel|APIChannel>} [channels] The resolved channels\n   * @property {Collection<Snowflake, Message|APIMessage>} [messages] The resolved messages\n   * @property {Collection<Snowflake, Attachment>} [attachments] The resolved attachments\n   */\n\n  /**\n   * Represents an option of a received command interaction.\n   * @typedef {Object} CommandInteractionOption\n   * @property {string} name The name of the option\n   * @property {ApplicationCommandOptionType} type The type of the option\n   * @property {boolean} [autocomplete] Whether the autocomplete interaction is enabled for a\n   * {@link ApplicationCommandOptionType.String}, {@link ApplicationCommandOptionType.Integer} or\n   * {@link ApplicationCommandOptionType.Number} option\n   * @property {string|number|boolean} [value] The value of the option\n   * @property {CommandInteractionOption[]} [options] Additional options if this option is a\n   * subcommand (group)\n   * @property {User} [user] The resolved user\n   * @property {GuildMember|APIGuildMember} [member] The resolved member\n   * @property {GuildChannel|ThreadChannel|APIChannel} [channel] The resolved channel\n   * @property {Role|APIRole} [role] The resolved role\n   * @property {Attachment} [attachment] The resolved attachment\n   */\n\n  /**\n   * Transforms an option received from the API.\n   * @param {APIApplicationCommandOption} option The received option\n   * @param {APIInteractionDataResolved} resolved The resolved interaction data\n   * @returns {CommandInteractionOption}\n   * @private\n   */\n  transformOption(option, resolved) {\n    const result = {\n      name: option.name,\n      type: option.type,\n    };\n\n    if ('value' in option) result.value = option.value;\n    if ('options' in option) result.options = option.options.map(opt => this.transformOption(opt, resolved));\n\n    if (resolved) {\n      const user = resolved.users?.[option.value];\n      if (user) result.user = this.client.users._add(user);\n\n      const member = resolved.members?.[option.value];\n      if (member) result.member = this.guild?.members._add({ user, ...member }) ?? member;\n\n      const channel = resolved.channels?.[option.value];\n      if (channel) result.channel = this.client.channels._add(channel, this.guild) ?? channel;\n\n      const role = resolved.roles?.[option.value];\n      if (role) result.role = this.guild?.roles._add(role) ?? role;\n\n      const attachment = resolved.attachments?.[option.value];\n      if (attachment) result.attachment = new Attachment(attachment);\n    }\n\n    return result;\n  }\n\n  // These are here only for documentation purposes - they are implemented by InteractionResponses\n  /* eslint-disable no-empty-function */\n  deferReply() {}\n  reply() {}\n  fetchReply() {}\n  editReply() {}\n  deleteReply() {}\n  followUp() {}\n  showModal() {}\n  sendPremiumRequired() {}\n  awaitModalSubmit() {}\n}\n\nInteractionResponses.applyToClass(CommandInteraction, ['deferUpdate', 'update']);\n\nmodule.exports = CommandInteraction;\n", "'use strict';\n\nconst CommandInteraction = require('./CommandInteraction');\nconst CommandInteractionOptionResolver = require('./CommandInteractionOptionResolver');\nconst { transformResolved } = require('../util/Util');\n\n/**\n * Represents a command interaction.\n * @extends {CommandInteraction}\n */\nclass ChatInputCommandInteraction extends CommandInteraction {\n  constructor(client, data) {\n    super(client, data);\n\n    /**\n     * The options passed to the command.\n     * @type {CommandInteractionOptionResolver}\n     */\n    this.options = new CommandInteractionOptionResolver(\n      this.client,\n      data.data.options?.map(option => this.transformOption(option, data.data.resolved)) ?? [],\n      transformResolved({ client: this.client, guild: this.guild, channel: this.channel }, data.data.resolved),\n    );\n  }\n\n  /**\n   * Returns a string representation of the command interaction.\n   * This can then be copied by a user and executed again in a new command while keeping the option order.\n   * @returns {string}\n   */\n  toString() {\n    const properties = [\n      this.commandName,\n      this.options._group,\n      this.options._subcommand,\n      ...this.options._hoistedOptions.map(option => `${option.name}:${option.value}`),\n    ];\n    return `/${properties.filter(Boolean).join(' ')}`;\n  }\n}\n\nmodule.exports = ChatInputCommandInteraction;\n", "'use strict';\n\nconst { Collection } = require('@discordjs/collection');\nconst MessageComponentInteraction = require('./MessageComponentInteraction');\nconst Events = require('../util/Events');\n\n/**\n * Represents a {@link ComponentType.MentionableSelect} select menu interaction.\n * @extends {MessageComponentInteraction}\n */\nclass MentionableSelectMenuInteraction extends MessageComponentInteraction {\n  constructor(client, data) {\n    super(client, data);\n    const { resolved, values } = data.data;\n    const { members, users, roles } = resolved ?? {};\n\n    /**\n     * An array of the selected user and role ids\n     * @type {Snowflake[]}\n     */\n    this.values = values ?? [];\n\n    /**\n     * Collection of the selected users\n     * @type {Collection<Snowflake, User>}\n     */\n    this.users = new Collection();\n\n    /**\n     * Collection of the selected users\n     * @type {Collection<Snowflake, GuildMember|APIGuildMember>}\n     */\n    this.members = new Collection();\n\n    /**\n     * Collection of the selected roles\n     * @type {Collection<Snowflake, Role|APIRole>}\n     */\n    this.roles = new Collection();\n\n    if (members) {\n      for (const [id, member] of Object.entries(members)) {\n        const user = users[id];\n        if (!user) {\n          this.client.emit(\n            Events.Debug,\n            `[MentionableSelectMenuInteraction] Received a member without a user, skipping ${id}`,\n          );\n\n          continue;\n        }\n\n        this.members.set(id, this.guild?.members._add({ user, ...member }) ?? { user, ...member });\n      }\n    }\n\n    if (users) {\n      for (const user of Object.values(users)) {\n        this.users.set(user.id, this.client.users._add(user));\n      }\n    }\n\n    if (roles) {\n      for (const role of Object.values(roles)) {\n        this.roles.set(role.id, this.guild?.roles._add(role) ?? role);\n      }\n    }\n  }\n}\n\nmodule.exports = MentionableSelectMenuInteraction;\n", "'use strict';\n\nconst { lazy } = require('@discordjs/util');\nconst { ApplicationCommandOptionType } = require('discord-api-types/v10');\nconst CommandInteraction = require('./CommandInteraction');\nconst CommandInteractionOptionResolver = require('./CommandInteractionOptionResolver');\nconst { transformResolved } = require('../util/Util');\n\nconst getMessage = lazy(() => require('./Message').Message);\n\n/**\n * Represents a context menu interaction.\n * @extends {CommandInteraction}\n */\nclass ContextMenuCommandInteraction extends CommandInteraction {\n  constructor(client, data) {\n    super(client, data);\n    /**\n     * The target of the interaction, parsed into options\n     * @type {CommandInteractionOptionResolver}\n     */\n    this.options = new CommandInteractionOptionResolver(\n      this.client,\n      this.resolveContextMenuOptions(data.data),\n      transformResolved({ client: this.client, guild: this.guild, channel: this.channel }, data.data.resolved),\n    );\n\n    /**\n     * The id of the target of this interaction\n     * @type {Snowflake}\n     */\n    this.targetId = data.data.target_id;\n  }\n\n  /**\n   * Resolves and transforms options received from the API for a context menu interaction.\n   * @param {APIApplicationCommandInteractionData} data The interaction data\n   * @returns {CommandInteractionOption[]}\n   * @private\n   */\n  resolveContextMenuOptions({ target_id, resolved }) {\n    const result = [];\n\n    if (resolved.users?.[target_id]) {\n      result.push(\n        this.transformOption({ name: 'user', type: ApplicationCommandOptionType.User, value: target_id }, resolved),\n      );\n    }\n\n    if (resolved.messages?.[target_id]) {\n      result.push({\n        name: 'message',\n        type: '_MESSAGE',\n        value: target_id,\n        message:\n          this.channel?.messages._add(resolved.messages[target_id]) ??\n          new (getMessage())(this.client, resolved.messages[target_id]),\n      });\n    }\n\n    return result;\n  }\n}\n\nmodule.exports = ContextMenuCommandInteraction;\n", "'use strict';\n\nconst ContextMenuCommandInteraction = require('./ContextMenuCommandInteraction');\n\n/**\n * Represents a message context menu interaction.\n * @extends {ContextMenuCommandInteraction}\n */\nclass MessageContextMenuCommandInteraction extends ContextMenuCommandInteraction {\n  /**\n   * The message this interaction was sent from\n   * @type {Message|APIMessage}\n   * @readonly\n   */\n  get targetMessage() {\n    return this.options.getMessage('message');\n  }\n}\n\nmodule.exports = MessageContextMenuCommandInteraction;\n", "'use strict';\n\nconst { Collection } = require('@discordjs/collection');\nconst { ComponentType } = require('discord-api-types/v10');\nconst { DiscordjsTypeError, ErrorCodes } = require('../errors');\n\n/**\n * Represents the serialized fields from a modal submit interaction\n */\nclass ModalSubmitFields {\n  constructor(components) {\n    /**\n     * The components within the modal\n     * @type {ActionRowModalData[]}\n     */\n    this.components = components;\n\n    /**\n     * The extracted fields from the modal\n     * @type {Collection<string, ModalData>}\n     */\n    this.fields = components.reduce((accumulator, next) => {\n      next.components.forEach(component => accumulator.set(component.customId, component));\n      return accumulator;\n    }, new Collection());\n  }\n\n  /**\n   * Gets a field given a custom id from a component\n   * @param {string} customId The custom id of the component\n   * @param {ComponentType} [type] The type of the component\n   * @returns {ModalData}\n   */\n  getField(customId, type) {\n    const field = this.fields.get(customId);\n    if (!field) throw new DiscordjsTypeError(ErrorCodes.ModalSubmitInteractionFieldNotFound, customId);\n\n    if (type !== undefined && type !== field.type) {\n      throw new DiscordjsTypeError(ErrorCodes.ModalSubmitInteractionFieldType, customId, field.type, type);\n    }\n\n    return field;\n  }\n\n  /**\n   * Gets the value of a text input component given a custom id\n   * @param {string} customId The custom id of the text input component\n   * @returns {string}\n   */\n  getTextInputValue(customId) {\n    return this.getField(customId, ComponentType.TextInput).value;\n  }\n}\n\nmodule.exports = ModalSubmitFields;\n", "'use strict';\n\nconst { lazy } = require('@discordjs/util');\nconst BaseInteraction = require('./BaseInteraction');\nconst InteractionWebhook = require('./InteractionWebhook');\nconst ModalSubmitFields = require('./ModalSubmitFields');\nconst InteractionResponses = require('./interfaces/InteractionResponses');\n\nconst getMessage = lazy(() => require('./Message').Message);\n\n/**\n * @typedef {Object} ModalData\n * @property {string} value The value of the field\n * @property {ComponentType} type The component type of the field\n * @property {string} customId The custom id of the field\n */\n\n/**\n * @typedef {Object} ActionRowModalData\n * @property {ModalData[]} components The components of this action row\n * @property {ComponentType} type The component type of the action row\n */\n\n/**\n * Represents a modal interaction\n * @extends {BaseInteraction}\n * @implements {InteractionResponses}\n */\nclass ModalSubmitInteraction extends BaseInteraction {\n  constructor(client, data) {\n    super(client, data);\n    /**\n     * The custom id of the modal.\n     * @type {string}\n     */\n    this.customId = data.data.custom_id;\n\n    if ('message' in data) {\n      /**\n       * The message associated with this interaction\n       * @type {?Message}\n       */\n      this.message = this.channel?.messages._add(data.message) ?? new (getMessage())(this.client, data.message);\n    } else {\n      this.message = null;\n    }\n\n    /**\n     * The components within the modal\n     * @type {ActionRowModalData[]}\n     */\n    this.components = data.data.components?.map(component => ModalSubmitInteraction.transformComponent(component));\n\n    /**\n     * The fields within the modal\n     * @type {ModalSubmitFields}\n     */\n    this.fields = new ModalSubmitFields(this.components);\n\n    /**\n     * Whether the reply to this interaction has been deferred\n     * @type {boolean}\n     */\n    this.deferred = false;\n\n    /**\n     * Whether this interaction has already been replied to\n     * @type {boolean}\n     */\n    this.replied = false;\n\n    /**\n     * Whether the reply to this interaction is ephemeral\n     * @type {?boolean}\n     */\n    this.ephemeral = null;\n\n    /**\n     * An associated interaction webhook, can be used to further interact with this interaction\n     * @type {InteractionWebhook}\n     */\n    this.webhook = new InteractionWebhook(this.client, this.applicationId, this.token);\n  }\n\n  /**\n   * Transforms component data to discord.js-compatible data\n   * @param {*} rawComponent The data to transform\n   * @returns {ModalData[]}\n   */\n  static transformComponent(rawComponent) {\n    return rawComponent.components\n      ? {\n          type: rawComponent.type,\n          components: rawComponent.components.map(component => this.transformComponent(component)),\n        }\n      : {\n          value: rawComponent.value,\n          type: rawComponent.type,\n          customId: rawComponent.custom_id,\n        };\n  }\n\n  /**\n   * Whether this is from a {@link MessageComponentInteraction}.\n   * @returns {boolean}\n   */\n  isFromMessage() {\n    return Boolean(this.message);\n  }\n\n  // These are here only for documentation purposes - they are implemented by InteractionResponses\n  /* eslint-disable no-empty-function */\n  deferReply() {}\n  reply() {}\n  fetchReply() {}\n  editReply() {}\n  deleteReply() {}\n  followUp() {}\n  deferUpdate() {}\n  update() {}\n  sendPremiumRequired() {}\n}\n\nInteractionResponses.applyToClass(ModalSubmitInteraction, 'showModal');\n\nmodule.exports = ModalSubmitInteraction;\n", "'use strict';\n\nconst { Collection } = require('@discordjs/collection');\nconst MessageComponentInteraction = require('./MessageComponentInteraction');\n\n/**\n * Represents a {@link ComponentType.RoleSelect} select menu interaction.\n * @extends {MessageComponentInteraction}\n */\nclass RoleSelectMenuInteraction extends MessageComponentInteraction {\n  constructor(client, data) {\n    super(client, data);\n    const { resolved, values } = data.data;\n\n    /**\n     * An array of the selected role ids\n     * @type {Snowflake[]}\n     */\n    this.values = values ?? [];\n\n    /**\n     * Collection of the selected roles\n     * @type {Collection<Snowflake, Role|APIRole>}\n     */\n    this.roles = new Collection();\n\n    for (const role of Object.values(resolved?.roles ?? {})) {\n      this.roles.set(role.id, this.guild?.roles._add(role) ?? role);\n    }\n  }\n}\n\nmodule.exports = RoleSelectMenuInteraction;\n", "'use strict';\n\nconst MessageComponentInteraction = require('./MessageComponentInteraction');\n\n/**\n * Represents a {@link ComponentType.StringSelect} select menu interaction.\n * @extends {MessageComponentInteraction}\n */\nclass StringSelectMenuInteraction extends MessageComponentInteraction {\n  constructor(client, data) {\n    super(client, data);\n\n    /**\n     * The values selected\n     * @type {string[]}\n     */\n    this.values = data.data.values ?? [];\n  }\n}\n\nmodule.exports = StringSelectMenuInteraction;\n", "'use strict';\n\nconst ContextMenuCommandInteraction = require('./ContextMenuCommandInteraction');\n\n/**\n * Represents a user context menu interaction.\n * @extends {ContextMenuCommandInteraction}\n */\nclass UserContextMenuCommandInteraction extends ContextMenuCommandInteraction {\n  /**\n   * The target user from this interaction\n   * @type {User}\n   * @readonly\n   */\n  get targetUser() {\n    return this.options.getUser('user');\n  }\n\n  /**\n   * The target member from this interaction\n   * @type {?(GuildMember|APIGuildMember)}\n   * @readonly\n   */\n  get targetMember() {\n    return this.options.getMember('user');\n  }\n}\n\nmodule.exports = UserContextMenuCommandInteraction;\n", "'use strict';\n\nconst { Collection } = require('@discordjs/collection');\nconst MessageComponentInteraction = require('./MessageComponentInteraction');\nconst Events = require('../util/Events');\n\n/**\n * Represents a {@link ComponentType.UserSelect} select menu interaction.\n * @extends {MessageComponentInteraction}\n */\nclass UserSelectMenuInteraction extends MessageComponentInteraction {\n  constructor(client, data) {\n    super(client, data);\n    const { resolved, values } = data.data;\n\n    /**\n     * An array of the selected user ids\n     * @type {Snowflake[]}\n     */\n    this.values = values ?? [];\n\n    /**\n     * Collection of the selected users\n     * @type {Collection<Snowflake, User>}\n     */\n    this.users = new Collection();\n\n    /**\n     * Collection of the selected members\n     * @type {Collection<Snowflake, GuildMember|APIGuildMember>}\n     */\n    this.members = new Collection();\n\n    for (const user of Object.values(resolved?.users ?? {})) {\n      this.users.set(user.id, this.client.users._add(user));\n    }\n\n    for (const [id, member] of Object.entries(resolved?.members ?? {})) {\n      const user = resolved.users[id];\n\n      if (!user) {\n        this.client.emit(Events.Debug, `[UserSelectMenuInteraction] Received a member without a user, skipping ${id}`);\n        continue;\n      }\n\n      this.members.set(id, this.guild?.members._add({ user, ...member }) ?? { user, ...member });\n    }\n  }\n}\n\nmodule.exports = UserSelectMenuInteraction;\n", "'use strict';\n\nconst { InteractionType, ComponentType, ApplicationCommandType } = require('discord-api-types/v10');\nconst Action = require('./Action');\nconst AutocompleteInteraction = require('../../structures/AutocompleteInteraction');\nconst ButtonInteraction = require('../../structures/ButtonInteraction');\nconst ChannelSelectMenuInteraction = require('../../structures/ChannelSelectMenuInteraction');\nconst ChatInputCommandInteraction = require('../../structures/ChatInputCommandInteraction');\nconst MentionableSelectMenuInteraction = require('../../structures/MentionableSelectMenuInteraction');\nconst MessageContextMenuCommandInteraction = require('../../structures/MessageContextMenuCommandInteraction');\nconst ModalSubmitInteraction = require('../../structures/ModalSubmitInteraction');\nconst RoleSelectMenuInteraction = require('../../structures/RoleSelectMenuInteraction');\nconst StringSelectMenuInteraction = require('../../structures/StringSelectMenuInteraction');\nconst UserContextMenuCommandInteraction = require('../../structures/UserContextMenuCommandInteraction');\nconst UserSelectMenuInteraction = require('../../structures/UserSelectMenuInteraction');\nconst Events = require('../../util/Events');\n\nclass InteractionCreateAction extends Action {\n  handle(data) {\n    const client = this.client;\n\n    // Resolve and cache partial channels for Interaction#channel getter\n    const channel = data.channel && this.getChannel(data.channel);\n\n    // Do not emit this for interactions that cache messages that are non-text-based.\n    let InteractionClass;\n\n    switch (data.type) {\n      case InteractionType.ApplicationCommand:\n        switch (data.data.type) {\n          case ApplicationCommandType.ChatInput:\n            InteractionClass = ChatInputCommandInteraction;\n            break;\n          case ApplicationCommandType.User:\n            InteractionClass = UserContextMenuCommandInteraction;\n            break;\n          case ApplicationCommandType.Message:\n            if (channel && !channel.isTextBased()) return;\n            InteractionClass = MessageContextMenuCommandInteraction;\n            break;\n          default:\n            client.emit(\n              Events.Debug,\n              `[INTERACTION] Received application command interaction with unknown type: ${data.data.type}`,\n            );\n            return;\n        }\n        break;\n      case InteractionType.MessageComponent:\n        if (channel && !channel.isTextBased()) return;\n\n        switch (data.data.component_type) {\n          case ComponentType.Button:\n            InteractionClass = ButtonInteraction;\n            break;\n          case ComponentType.StringSelect:\n            InteractionClass = StringSelectMenuInteraction;\n            break;\n          case ComponentType.UserSelect:\n            InteractionClass = UserSelectMenuInteraction;\n            break;\n          case ComponentType.RoleSelect:\n            InteractionClass = RoleSelectMenuInteraction;\n            break;\n          case ComponentType.MentionableSelect:\n            InteractionClass = MentionableSelectMenuInteraction;\n            break;\n          case ComponentType.ChannelSelect:\n            InteractionClass = ChannelSelectMenuInteraction;\n            break;\n          default:\n            client.emit(\n              Events.Debug,\n              `[INTERACTION] Received component interaction with unknown type: ${data.data.component_type}`,\n            );\n            return;\n        }\n        break;\n      case InteractionType.ApplicationCommandAutocomplete:\n        InteractionClass = AutocompleteInteraction;\n        break;\n      case InteractionType.ModalSubmit:\n        InteractionClass = ModalSubmitInteraction;\n        break;\n      default:\n        client.emit(Events.Debug, `[INTERACTION] Received interaction with unknown type: ${data.type}`);\n        return;\n    }\n\n    const interaction = new InteractionClass(client, data);\n\n    /**\n     * Emitted when an interaction is created.\n     * @event Client#interactionCreate\n     * @param {BaseInteraction} interaction The interaction which was created\n     */\n    client.emit(Events.InteractionCreate, interaction);\n  }\n}\n\nmodule.exports = InteractionCreateAction;\n", "'use strict';\n\nconst Action = require('./Action');\nconst Events = require('../../util/Events');\n\nclass InviteCreateAction extends Action {\n  handle(data) {\n    const client = this.client;\n    const channel = client.channels.cache.get(data.channel_id);\n    const guild = client.guilds.cache.get(data.guild_id);\n    if (!channel) return false;\n\n    const inviteData = Object.assign(data, { channel, guild });\n    const invite = guild.invites._add(inviteData);\n\n    /**\n     * Emitted when an invite is created.\n     * <info>This event requires the {@link PermissionFlagsBits.ManageChannels} permission for the channel.</info>\n     * @event Client#inviteCreate\n     * @param {Invite} invite The invite that was created\n     */\n    client.emit(Events.InviteCreate, invite);\n    return { invite };\n  }\n}\n\nmodule.exports = InviteCreateAction;\n", "'use strict';\n\nconst Action = require('./Action');\nconst Invite = require('../../structures/Invite');\nconst Events = require('../../util/Events');\n\nclass InviteDeleteAction extends Action {\n  handle(data) {\n    const client = this.client;\n    const channel = client.channels.cache.get(data.channel_id);\n    const guild = client.guilds.cache.get(data.guild_id);\n    if (!channel) return false;\n\n    const inviteData = Object.assign(data, { channel, guild });\n    const invite = new Invite(client, inviteData);\n    guild.invites.cache.delete(invite.code);\n\n    /**\n     * Emitted when an invite is deleted.\n     * <info>This event requires the {@link PermissionFlagsBits.ManageChannels} permission for the channel.</info>\n     * @event Client#inviteDelete\n     * @param {Invite} invite The invite that was deleted\n     */\n    client.emit(Events.InviteDelete, invite);\n    return { invite };\n  }\n}\n\nmodule.exports = InviteDeleteAction;\n", "'use strict';\n\nconst Action = require('./Action');\nconst Events = require('../../util/Events');\n\nclass MessageCreateAction extends Action {\n  handle(data) {\n    const client = this.client;\n    const channel = this.getChannel({\n      id: data.channel_id,\n      author: data.author,\n      ...('guild_id' in data && { guild_id: data.guild_id }),\n    });\n    if (channel) {\n      if (!channel.isTextBased()) return {};\n\n      if (channel.isThread()) {\n        channel.messageCount++;\n        channel.totalMessageSent++;\n      }\n\n      const existing = channel.messages.cache.get(data.id);\n      if (existing && existing.author?.id !== this.client.user.id) return { message: existing };\n      const message = existing ?? channel.messages._add(data);\n      channel.lastMessageId = data.id;\n\n      /**\n       * Emitted whenever a message is created.\n       * @event Client#messageCreate\n       * @param {Message} message The created message\n       */\n      client.emit(Events.MessageCreate, message);\n\n      return { message };\n    }\n\n    return {};\n  }\n}\n\nmodule.exports = MessageCreateAction;\n", "'use strict';\n\nconst Action = require('./Action');\nconst Events = require('../../util/Events');\n\nclass MessageDeleteAction extends Action {\n  handle(data) {\n    const client = this.client;\n    const channel = this.getChannel({ id: data.channel_id, ...('guild_id' in data && { guild_id: data.guild_id }) });\n    let message;\n    if (channel) {\n      if (!channel.isTextBased()) return {};\n\n      if (channel.isThread()) channel.messageCount--;\n\n      message = this.getMessage(data, channel);\n      if (message) {\n        channel.messages.cache.delete(message.id);\n        /**\n         * Emitted whenever a message is deleted.\n         * @event Client#messageDelete\n         * @param {Message} message The deleted message\n         */\n        client.emit(Events.MessageDelete, message);\n      }\n    }\n\n    return { message };\n  }\n}\n\nmodule.exports = MessageDeleteAction;\n", "'use strict';\n\nconst { Collection } = require('@discordjs/collection');\nconst Action = require('./Action');\nconst Events = require('../../util/Events');\n\nclass MessageDeleteBulkAction extends Action {\n  handle(data) {\n    const client = this.client;\n    const channel = client.channels.cache.get(data.channel_id);\n\n    if (channel) {\n      if (!channel.isTextBased()) return {};\n\n      if (channel.isThread()) channel.messageCount -= data.ids.length;\n\n      const ids = data.ids;\n      const messages = new Collection();\n      for (const id of ids) {\n        const message = this.getMessage(\n          {\n            id,\n            guild_id: data.guild_id,\n          },\n          channel,\n          false,\n        );\n        if (message) {\n          messages.set(message.id, message);\n          channel.messages.cache.delete(id);\n        }\n      }\n\n      /**\n       * Emitted whenever messages are deleted in bulk.\n       * @event Client#messageDeleteBulk\n       * @param {Collection<Snowflake, Message>} messages The deleted messages, mapped by their id\n       * @param {GuildTextBasedChannel} channel The channel that the messages were deleted in\n       */\n      if (messages.size > 0) client.emit(Events.MessageBulkDelete, messages, channel);\n      return { messages };\n    }\n    return {};\n  }\n}\n\nmodule.exports = MessageDeleteBulkAction;\n", "'use strict';\n\nconst Action = require('./Action');\nconst Events = require('../../util/Events');\n\nclass MessagePollVoteAddAction extends Action {\n  handle(data) {\n    const channel = this.getChannel({ id: data.channel_id, ...('guild_id' in data && { guild_id: data.guild_id }) });\n    if (!channel?.isTextBased()) return false;\n\n    const message = this.getMessage(data, channel);\n    if (!message) return false;\n\n    const { poll } = message;\n\n    const answer = poll?.answers.get(data.answer_id);\n    if (!answer) return false;\n\n    answer.voteCount++;\n\n    /**\n     * Emitted whenever a user votes in a poll.\n     * @event Client#messagePollVoteAdd\n     * @param {PollAnswer} pollAnswer The answer that was voted on\n     * @param {Snowflake} userId The id of the user that voted\n     */\n    this.client.emit(Events.MessagePollVoteAdd, answer, data.user_id);\n\n    return { poll };\n  }\n}\n\nmodule.exports = MessagePollVoteAddAction;\n", "'use strict';\n\nconst Action = require('./Action');\nconst Events = require('../../util/Events');\n\nclass MessagePollVoteRemoveAction extends Action {\n  handle(data) {\n    const channel = this.getChannel({ id: data.channel_id, ...('guild_id' in data && { guild_id: data.guild_id }) });\n    if (!channel?.isTextBased()) return false;\n\n    const message = this.getMessage(data, channel);\n    if (!message) return false;\n\n    const { poll } = message;\n\n    const answer = poll?.answers.get(data.answer_id);\n    if (!answer) return false;\n\n    answer.voteCount--;\n\n    /**\n     * Emitted whenever a user removes their vote in a poll.\n     * @event Client#messagePollVoteRemove\n     * @param {PollAnswer} pollAnswer The answer where the vote was removed\n     * @param {Snowflake} userId The id of the user that removed their vote\n     */\n    this.client.emit(Events.MessagePollVoteRemove, answer, data.user_id);\n\n    return { poll };\n  }\n}\n\nmodule.exports = MessagePollVoteRemoveAction;\n", "'use strict';\n\nconst Action = require('./Action');\nconst Events = require('../../util/Events');\nconst Partials = require('../../util/Partials');\n\n/*\n{ user_id: 'id',\n     message_id: 'id',\n     emoji: { name: '�', id: null },\n     channel_id: 'id',\n     burst: boolean\n     // If originating from a guild\n     guild_id: 'id',\n     member: { ..., user: { ... } } }\n*/\n\nclass MessageReactionAdd extends Action {\n  handle(data, fromStructure = false) {\n    if (!data.emoji) return false;\n\n    const user = this.getUserFromMember(data);\n    if (!user) return false;\n\n    // Verify channel\n    const channel = this.getChannel({\n      id: data.channel_id,\n      ...('guild_id' in data && { guild_id: data.guild_id }),\n      user_id: data.user_id,\n      ...this.spreadInjectedData(data),\n    });\n\n    if (!channel?.isTextBased()) return false;\n\n    // Verify message\n    const message = this.getMessage(data, channel);\n    if (!message) return false;\n\n    // Verify reaction\n    const includePartial = this.client.options.partials.includes(Partials.Reaction);\n    if (message.partial && !includePartial) return false;\n    const reaction = message.reactions._add({\n      emoji: data.emoji,\n      count: message.partial ? null : 0,\n      me: user.id === this.client.user.id,\n      burst_colors: data.burst_colors,\n    });\n    if (!reaction) return false;\n    reaction._add(user, data.burst);\n    if (fromStructure) return { message, reaction, user };\n    /**\n     * Provides additional information about altered reaction\n     * @typedef {Object} MessageReactionEventDetails\n     * @property {boolean} burst Determines whether a super reaction was used\n     */\n    /**\n     * Emitted whenever a reaction is added to a cached message.\n     * @event Client#messageReactionAdd\n     * @param {MessageReaction} messageReaction The reaction object\n     * @param {User} user The user that applied the guild or reaction emoji\n     * @param {MessageReactionEventDetails} details Details of adding the reaction\n     */\n    this.client.emit(Events.MessageReactionAdd, reaction, user, { burst: data.burst });\n\n    return { message, reaction, user };\n  }\n}\n\nmodule.exports = MessageReactionAdd;\n", "'use strict';\n\nconst Action = require('./Action');\nconst Events = require('../../util/Events');\n\n/*\n{ user_id: 'id',\n     message_id: 'id',\n     emoji: { name: '�', id: null },\n     channel_id: 'id',\n     guild_id: 'id' }\n*/\n\nclass MessageReactionRemove extends Action {\n  handle(data) {\n    if (!data.emoji) return false;\n\n    const user = this.getUser(data);\n    if (!user) return false;\n\n    // Verify channel\n    const channel = this.getChannel({\n      id: data.channel_id,\n      ...('guild_id' in data && { guild_id: data.guild_id }),\n      user_id: data.user_id,\n    });\n    if (!channel?.isTextBased()) return false;\n\n    // Verify message\n    const message = this.getMessage(data, channel);\n    if (!message) return false;\n\n    // Verify reaction\n    const reaction = this.getReaction(data, message, user);\n    if (!reaction) return false;\n    reaction._remove(user, data.burst);\n    /**\n     * Emitted whenever a reaction is removed from a cached message.\n     * @event Client#messageReactionRemove\n     * @param {MessageReaction} messageReaction The reaction object\n     * @param {User} user The user whose emoji or reaction emoji was removed\n     * @param {MessageReactionEventDetails} details Details of removing the reaction\n     */\n    this.client.emit(Events.MessageReactionRemove, reaction, user, { burst: data.burst });\n\n    return { message, reaction, user };\n  }\n}\n\nmodule.exports = MessageReactionRemove;\n", "'use strict';\n\nconst Action = require('./Action');\nconst Events = require('../../util/Events');\n\nclass MessageReactionRemoveAll extends Action {\n  handle(data) {\n    // Verify channel\n    const channel = this.getChannel({ id: data.channel_id, ...('guild_id' in data && { guild_id: data.guild_id }) });\n    if (!channel?.isTextBased()) return false;\n\n    // Verify message\n    const message = this.getMessage(data, channel);\n    if (!message) return false;\n\n    // Copy removed reactions to emit for the event.\n    const removed = message.reactions.cache.clone();\n\n    message.reactions.cache.clear();\n    this.client.emit(Events.MessageReactionRemoveAll, message, removed);\n\n    return { message };\n  }\n}\n\n/**\n * Emitted whenever all reactions are removed from a cached message.\n * @event Client#messageReactionRemoveAll\n * @param {Message} message The message the reactions were removed from\n * @param {Collection<string|Snowflake, MessageReaction>} reactions The cached message reactions that were removed.\n */\n\nmodule.exports = MessageReactionRemoveAll;\n", "'use strict';\n\nconst Action = require('./Action');\nconst Events = require('../../util/Events');\n\nclass MessageReactionRemoveEmoji extends Action {\n  handle(data) {\n    const channel = this.getChannel({ id: data.channel_id, ...('guild_id' in data && { guild_id: data.guild_id }) });\n    if (!channel?.isTextBased()) return false;\n\n    const message = this.getMessage(data, channel);\n    if (!message) return false;\n\n    const reaction = this.getReaction(data, message);\n    if (!reaction) return false;\n    if (!message.partial) message.reactions.cache.delete(reaction.emoji.id ?? reaction.emoji.name);\n\n    /**\n     * Emitted when a bot removes an emoji reaction from a cached message.\n     * @event Client#messageReactionRemoveEmoji\n     * @param {MessageReaction} reaction The reaction that was removed\n     */\n    this.client.emit(Events.MessageReactionRemoveEmoji, reaction);\n    return { reaction };\n  }\n}\n\nmodule.exports = MessageReactionRemoveEmoji;\n", "'use strict';\n\nconst Action = require('./Action');\n\nclass MessageUpdateAction extends Action {\n  handle(data) {\n    const channel = this.getChannel({ id: data.channel_id, ...('guild_id' in data && { guild_id: data.guild_id }) });\n    if (channel) {\n      if (!channel.isTextBased()) return {};\n\n      const { id, channel_id, guild_id, author, timestamp, type } = data;\n      const message = this.getMessage({ id, channel_id, guild_id, author, timestamp, type }, channel);\n      if (message) {\n        const old = message._update(data);\n        return {\n          old,\n          updated: message,\n        };\n      }\n    }\n\n    return {};\n  }\n}\n\nmodule.exports = MessageUpdateAction;\n", "'use strict';\n\nconst Action = require('./Action');\nconst Events = require('../../util/Events');\n\nclass PresenceUpdateAction extends Action {\n  handle(data) {\n    let user = this.client.users.cache.get(data.user.id);\n    if (!user && data.user.username) user = this.client.users._add(data.user);\n    if (!user) return;\n\n    if (data.user.username) {\n      if (!user._equals(data.user)) this.client.actions.UserUpdate.handle(data.user);\n    }\n\n    const guild = this.client.guilds.cache.get(data.guild_id);\n    if (!guild) return;\n\n    const oldPresence = guild.presences.cache.get(user.id)?._clone() ?? null;\n    let member = guild.members.cache.get(user.id);\n    if (!member && data.status !== 'offline') {\n      member = guild.members._add({\n        user,\n        deaf: false,\n        mute: false,\n      });\n      this.client.emit(Events.GuildMemberAvailable, member);\n    }\n    const newPresence = guild.presences._add(Object.assign(data, { guild }));\n    if (this.client.listenerCount(Events.PresenceUpdate) && !newPresence.equals(oldPresence)) {\n      /**\n       * Emitted whenever a guild member's presence (e.g. status, activity) is changed.\n       * @event Client#presenceUpdate\n       * @param {?Presence} oldPresence The presence before the update, if one at all\n       * @param {Presence} newPresence The presence after the update\n       */\n      this.client.emit(Events.PresenceUpdate, oldPresence, newPresence);\n    }\n  }\n}\n\nmodule.exports = PresenceUpdateAction;\n", "'use strict';\n\nconst Action = require('./Action');\nconst Events = require('../../util/Events');\n\nclass StageInstanceCreateAction extends Action {\n  handle(data) {\n    const client = this.client;\n    const channel = this.getChannel({ id: data.channel_id, guild_id: data.guild_id });\n\n    if (channel) {\n      const stageInstance = channel.guild.stageInstances._add(data);\n\n      /**\n       * Emitted whenever a stage instance is created.\n       * @event Client#stageInstanceCreate\n       * @param {StageInstance} stageInstance The created stage instance\n       */\n      client.emit(Events.StageInstanceCreate, stageInstance);\n\n      return { stageInstance };\n    }\n\n    return {};\n  }\n}\n\nmodule.exports = StageInstanceCreateAction;\n", "'use strict';\n\nconst Action = require('./Action');\nconst Events = require('../../util/Events');\n\nclass StageInstanceDeleteAction extends Action {\n  handle(data) {\n    const client = this.client;\n    const channel = this.getChannel({ id: data.channel_id, guild_id: data.guild_id });\n\n    if (channel) {\n      const stageInstance = channel.guild.stageInstances._add(data);\n      if (stageInstance) {\n        channel.guild.stageInstances.cache.delete(stageInstance.id);\n\n        /**\n         * Emitted whenever a stage instance is deleted.\n         * @event Client#stageInstanceDelete\n         * @param {StageInstance} stageInstance The deleted stage instance\n         */\n        client.emit(Events.StageInstanceDelete, stageInstance);\n\n        return { stageInstance };\n      }\n    }\n\n    return {};\n  }\n}\n\nmodule.exports = StageInstanceDeleteAction;\n", "'use strict';\n\nconst Action = require('./Action');\nconst Events = require('../../util/Events');\n\nclass StageInstanceUpdateAction extends Action {\n  handle(data) {\n    const client = this.client;\n    const channel = this.getChannel({ id: data.channel_id, guild_id: data.guild_id });\n\n    if (channel) {\n      const oldStageInstance = channel.guild.stageInstances.cache.get(data.id)?._clone() ?? null;\n      const newStageInstance = channel.guild.stageInstances._add(data);\n\n      /**\n       * Emitted whenever a stage instance gets updated - e.g. change in topic or privacy level\n       * @event Client#stageInstanceUpdate\n       * @param {?StageInstance} oldStageInstance The stage instance before the update\n       * @param {StageInstance} newStageInstance The stage instance after the update\n       */\n      client.emit(Events.StageInstanceUpdate, oldStageInstance, newStageInstance);\n\n      return { oldStageInstance, newStageInstance };\n    }\n\n    return {};\n  }\n}\n\nmodule.exports = StageInstanceUpdateAction;\n", "'use strict';\n\nconst Action = require('./Action');\nconst Events = require('../../util/Events');\n\nclass ThreadCreateAction extends Action {\n  handle(data) {\n    const client = this.client;\n    const existing = client.channels.cache.has(data.id);\n    const thread = client.channels._add(data);\n    if (!existing && thread) {\n      /**\n       * Emitted whenever a thread is created or when the client user is added to a thread.\n       * @event Client#threadCreate\n       * @param {ThreadChannel} thread The thread that was created\n       * @param {boolean} newlyCreated Whether the thread was newly created\n       */\n      client.emit(Events.ThreadCreate, thread, data.newly_created ?? false);\n    }\n    return { thread };\n  }\n}\n\nmodule.exports = ThreadCreateAction;\n", "'use strict';\n\nconst Action = require('./Action');\nconst Events = require('../../util/Events');\n\nclass ThreadDeleteAction extends Action {\n  handle(data) {\n    const client = this.client;\n    const thread = client.channels.cache.get(data.id);\n\n    if (thread) {\n      client.channels._remove(thread.id);\n\n      /**\n       * Emitted whenever a thread is deleted.\n       * @event Client#threadDelete\n       * @param {ThreadChannel} thread The thread that was deleted\n       */\n      client.emit(Events.ThreadDelete, thread);\n    }\n\n    return { thread };\n  }\n}\n\nmodule.exports = ThreadDeleteAction;\n", "'use strict';\n\nconst { Collection } = require('@discordjs/collection');\nconst Action = require('./Action');\nconst Events = require('../../util/Events');\n\nclass ThreadListSyncAction extends Action {\n  handle(data) {\n    const client = this.client;\n\n    const guild = client.guilds.cache.get(data.guild_id);\n    if (!guild) return {};\n\n    if (data.channel_ids) {\n      for (const id of data.channel_ids) {\n        const channel = client.channels.resolve(id);\n        if (channel) this.removeStale(channel);\n      }\n    } else {\n      for (const channel of guild.channels.cache.values()) {\n        this.removeStale(channel);\n      }\n    }\n\n    const syncedThreads = data.threads.reduce((coll, rawThread) => {\n      const thread = client.channels._add(rawThread);\n      return coll.set(thread.id, thread);\n    }, new Collection());\n\n    for (const rawMember of Object.values(data.members)) {\n      // Discord sends the thread id as id in this object\n      const thread = client.channels.cache.get(rawMember.id);\n      if (thread) {\n        thread.members._add(rawMember);\n      }\n    }\n\n    /**\n     * Emitted whenever the client user gains access to a text or news channel that contains threads\n     * @event Client#threadListSync\n     * @param {Collection<Snowflake, ThreadChannel>} threads The threads that were synced\n     * @param {Guild} guild The guild that the threads were synced in\n     */\n    client.emit(Events.ThreadListSync, syncedThreads, guild);\n\n    return {\n      syncedThreads,\n    };\n  }\n\n  removeStale(channel) {\n    channel.threads?.cache.forEach(thread => {\n      if (!thread.archived) {\n        this.client.channels._remove(thread.id);\n      }\n    });\n  }\n}\n\nmodule.exports = ThreadListSyncAction;\n", "'use strict';\n\nconst Action = require('./Action');\nconst Events = require('../../util/Events');\n\nclass ThreadMemberUpdateAction extends Action {\n  handle(data) {\n    const client = this.client;\n    // Discord sends the thread id as id in this object\n    const thread = client.channels.cache.get(data.id);\n    if (thread) {\n      const member = thread.members.cache.get(data.user_id);\n      if (!member) {\n        const newMember = thread.members._add(data);\n        return { newMember };\n      }\n      const old = member._update(data);\n      /**\n       * Emitted whenever the client user's thread member is updated.\n       * @event Client#threadMemberUpdate\n       * @param {ThreadMember} oldMember The member before the update\n       * @param {ThreadMember} newMember The member after the update\n       */\n      client.emit(Events.ThreadMemberUpdate, old, member);\n    }\n    return {};\n  }\n}\n\nmodule.exports = ThreadMemberUpdateAction;\n", "'use strict';\n\nconst { Collection } = require('@discordjs/collection');\nconst Action = require('./Action');\nconst Events = require('../../util/Events');\n\nclass ThreadMembersUpdateAction extends Action {\n  handle(data) {\n    const client = this.client;\n    const thread = client.channels.cache.get(data.id);\n    if (thread) {\n      thread.memberCount = data.member_count;\n      const addedMembers = new Collection();\n      const removedMembers = new Collection();\n\n      data.added_members?.reduce(\n        (_addedMembers, addedMember) => _addedMembers.set(addedMember.user_id, thread.members._add(addedMember)),\n        addedMembers,\n      );\n\n      data.removed_member_ids?.reduce((removedMembersIds, removedMembersId) => {\n        const threadMember = this.getThreadMember(removedMembersId, thread.members);\n        if (threadMember) removedMembersIds.set(threadMember.id, threadMember);\n        thread.members.cache.delete(removedMembersId);\n        return removedMembersIds;\n      }, removedMembers);\n\n      if (addedMembers.size === 0 && removedMembers.size === 0) {\n        // Uncached thread member(s) left.\n        return {};\n      }\n\n      /**\n       * Emitted whenever members are added or removed from a thread.\n       * <info>This event requires the {@link GatewayIntentBits.GuildMembers} privileged gateway intent.</info>\n       * @event Client#threadMembersUpdate\n       * @param {Collection<Snowflake, ThreadMember>} addedMembers The members that were added\n       * @param {Collection<Snowflake, ThreadMember>} removedMembers The members that were removed\n       * @param {ThreadChannel} thread The thread where members got updated\n       */\n      client.emit(Events.ThreadMembersUpdate, addedMembers, removedMembers, thread);\n    }\n    return {};\n  }\n}\n\nmodule.exports = ThreadMembersUpdateAction;\n", "'use strict';\n\nconst Base = require('./Base');\n\n/**\n * Represents a typing state for a user in a channel.\n * @extends {Base}\n */\nclass Typing extends Base {\n  constructor(channel, user, data) {\n    super(channel.client);\n\n    /**\n     * The channel the status is from\n     * @type {TextBasedChannels}\n     */\n    this.channel = channel;\n\n    /**\n     * The user who is typing\n     * @type {User}\n     */\n    this.user = user;\n\n    this._patch(data);\n  }\n\n  _patch(data) {\n    if ('timestamp' in data) {\n      /**\n       * The UNIX timestamp in milliseconds the user started typing at\n       * @type {number}\n       */\n      this.startedTimestamp = data.timestamp * 1_000;\n    }\n  }\n\n  /**\n   * Indicates whether the status is received from a guild.\n   * @returns {boolean}\n   */\n  inGuild() {\n    return this.guild !== null;\n  }\n\n  /**\n   * The time the user started typing at\n   * @type {Date}\n   * @readonly\n   */\n  get startedAt() {\n    return new Date(this.startedTimestamp);\n  }\n\n  /**\n   * The guild the status is from\n   * @type {?Guild}\n   * @readonly\n   */\n  get guild() {\n    return this.channel.guild ?? null;\n  }\n\n  /**\n   * The member who is typing\n   * @type {?GuildMember}\n   * @readonly\n   */\n  get member() {\n    return this.guild?.members.resolve(this.user) ?? null;\n  }\n}\n\nmodule.exports = Typing;\n", "'use strict';\n\nconst Action = require('./Action');\nconst Typing = require('../../structures/Typing');\nconst Events = require('../../util/Events');\n\nclass TypingStart extends Action {\n  handle(data) {\n    const channel = this.getChannel({ id: data.channel_id, ...('guild_id' in data && { guild_id: data.guild_id }) });\n    if (!channel) return;\n\n    if (!channel.isTextBased()) {\n      this.client.emit(Events.Warn, `Discord sent a typing packet to a ${channel.type} channel ${channel.id}`);\n      return;\n    }\n\n    const user = this.getUserFromMember(data);\n    if (user) {\n      /**\n       * Emitted whenever a user starts typing in a channel.\n       * @event Client#typingStart\n       * @param {Typing} typing The typing state\n       */\n      this.client.emit(Events.TypingStart, new Typing(channel, user, data));\n    }\n  }\n}\n\nmodule.exports = TypingStart;\n", "'use strict';\n\nconst Action = require('./Action');\nconst Events = require('../../util/Events');\n\nclass UserUpdateAction extends Action {\n  handle(data) {\n    const client = this.client;\n\n    const newUser = data.id === client.user.id ? client.user : client.users.cache.get(data.id);\n    const oldUser = newUser._update(data);\n\n    if (!oldUser.equals(newUser)) {\n      /**\n       * Emitted whenever a user's details (e.g. username) are changed.\n       * Triggered by the Discord gateway events {@link Events.UserUpdate},\n       * {@link Events.GuildMemberUpdate}, and {@link Events.PresenceUpdate}.\n       * @event Client#userUpdate\n       * @param {User} oldUser The user before the update\n       * @param {User} newUser The user after the update\n       */\n      client.emit(Events.UserUpdate, oldUser, newUser);\n      return {\n        old: oldUser,\n        updated: newUser,\n      };\n    }\n\n    return {\n      old: null,\n      updated: null,\n    };\n  }\n}\n\nmodule.exports = UserUpdateAction;\n", "'use strict';\n\nconst Action = require('./Action');\nconst VoiceState = require('../../structures/VoiceState');\nconst Events = require('../../util/Events');\n\nclass VoiceStateUpdate extends Action {\n  handle(data) {\n    const client = this.client;\n    const guild = client.guilds.cache.get(data.guild_id);\n    if (guild) {\n      // Update the state\n      const oldState =\n        guild.voiceStates.cache.get(data.user_id)?._clone() ?? new VoiceState(guild, { user_id: data.user_id });\n\n      const newState = guild.voiceStates._add(data);\n\n      // Get the member\n      let member = guild.members.cache.get(data.user_id);\n      if (member && data.member) {\n        member._patch(data.member);\n      } else if (data.member?.user && data.member.joined_at) {\n        member = guild.members._add(data.member);\n      }\n\n      // Emit event\n      if (member?.user.id === client.user.id) {\n        client.emit('debug', `[VOICE] received voice state update: ${JSON.stringify(data)}`);\n        client.voice.onVoiceStateUpdate(data);\n      }\n\n      /**\n       * Emitted whenever a member changes voice state - e.g. joins/leaves a channel, mutes/unmutes.\n       * @event Client#voiceStateUpdate\n       * @param {VoiceState} oldState The voice state before the update\n       * @param {VoiceState} newState The voice state after the update\n       */\n      client.emit(Events.VoiceStateUpdate, oldState, newState);\n    }\n  }\n}\n\nmodule.exports = VoiceStateUpdate;\n", "'use strict';\n\nconst process = require('node:process');\nconst Action = require('./Action');\n\nlet deprecationEmitted = false;\n\nclass WebhooksUpdate extends Action {\n  handle(data) {\n    const client = this.client;\n    const channel = client.channels.cache.get(data.channel_id);\n    if (!channel) return;\n\n    // TODO: change to Events.WebhooksUpdate in the next major version\n    /**\n     * Emitted whenever a channel has its webhooks changed.\n     * @event Client#webhooksUpdate\n     * @param {TextChannel|NewsChannel|VoiceChannel|StageChannel|ForumChannel|MediaChannel} channel\n     * The channel that had a webhook update\n     */\n    client.emit('webhooksUpdate', channel);\n\n    /**\n     * Emitted whenever a channel has its webhooks changed.\n     * @event Client#webhookUpdate\n     * @param {TextChannel|NewsChannel|VoiceChannel|StageChannel|ForumChannel|MediaChannel} channel\n     * The channel that had a webhook update\n     * @deprecated Use {@link Client#event:webhooksUpdate} instead.\n     */\n    if (client.emit('webhookUpdate', channel) && !deprecationEmitted) {\n      deprecationEmitted = true;\n      process.emitWarning('The webhookUpdate event is deprecated. Use webhooksUpdate instead.', 'DeprecationWarning');\n    }\n  }\n}\n\nmodule.exports = WebhooksUpdate;\n", "'use strict';\n\nclass ActionsManager {\n  // These symbols represent fully built data that we inject at times when calling actions manually.\n  // Action#getUser, for example, will return the injected data (which is assumed to be a built structure)\n  // instead of trying to make it from provided data\n  injectedUser = Symbol('djs.actions.injectedUser');\n  injectedChannel = Symbol('djs.actions.injectedChannel');\n  injectedMessage = Symbol('djs.actions.injectedMessage');\n\n  constructor(client) {\n    this.client = client;\n\n    this.register(require('./ApplicationCommandPermissionsUpdate'));\n    this.register(require('./AutoModerationActionExecution'));\n    this.register(require('./AutoModerationRuleCreate'));\n    this.register(require('./AutoModerationRuleDelete'));\n    this.register(require('./AutoModerationRuleUpdate'));\n    this.register(require('./ChannelCreate'));\n    this.register(require('./ChannelDelete'));\n    this.register(require('./ChannelUpdate'));\n    this.register(require('./EntitlementCreate'));\n    this.register(require('./EntitlementDelete'));\n    this.register(require('./EntitlementUpdate'));\n    this.register(require('./GuildAuditLogEntryCreate'));\n    this.register(require('./GuildBanAdd'));\n    this.register(require('./GuildBanRemove'));\n    this.register(require('./GuildChannelsPositionUpdate'));\n    this.register(require('./GuildDelete'));\n    this.register(require('./GuildEmojiCreate'));\n    this.register(require('./GuildEmojiDelete'));\n    this.register(require('./GuildEmojiUpdate'));\n    this.register(require('./GuildEmojisUpdate'));\n    this.register(require('./GuildIntegrationsUpdate'));\n    this.register(require('./GuildMemberRemove'));\n    this.register(require('./GuildMemberUpdate'));\n    this.register(require('./GuildRoleCreate'));\n    this.register(require('./GuildRoleDelete'));\n    this.register(require('./GuildRoleUpdate'));\n    this.register(require('./GuildRolesPositionUpdate'));\n    this.register(require('./GuildScheduledEventCreate'));\n    this.register(require('./GuildScheduledEventDelete'));\n    this.register(require('./GuildScheduledEventUpdate'));\n    this.register(require('./GuildScheduledEventUserAdd'));\n    this.register(require('./GuildScheduledEventUserRemove'));\n    this.register(require('./GuildStickerCreate'));\n    this.register(require('./GuildStickerDelete'));\n    this.register(require('./GuildStickerUpdate'));\n    this.register(require('./GuildStickersUpdate'));\n    this.register(require('./GuildUpdate'));\n    this.register(require('./InteractionCreate'));\n    this.register(require('./InviteCreate'));\n    this.register(require('./InviteDelete'));\n    this.register(require('./MessageCreate'));\n    this.register(require('./MessageDelete'));\n    this.register(require('./MessageDeleteBulk'));\n    this.register(require('./MessagePollVoteAdd'));\n    this.register(require('./MessagePollVoteRemove'));\n    this.register(require('./MessageReactionAdd'));\n    this.register(require('./MessageReactionRemove'));\n    this.register(require('./MessageReactionRemoveAll'));\n    this.register(require('./MessageReactionRemoveEmoji'));\n    this.register(require('./MessageUpdate'));\n    this.register(require('./PresenceUpdate'));\n    this.register(require('./StageInstanceCreate'));\n    this.register(require('./StageInstanceDelete'));\n    this.register(require('./StageInstanceUpdate'));\n    this.register(require('./ThreadCreate'));\n    this.register(require('./ThreadDelete'));\n    this.register(require('./ThreadListSync'));\n    this.register(require('./ThreadMemberUpdate'));\n    this.register(require('./ThreadMembersUpdate'));\n    this.register(require('./TypingStart'));\n    this.register(require('./UserUpdate'));\n    this.register(require('./VoiceStateUpdate'));\n    this.register(require('./WebhooksUpdate'));\n  }\n\n  register(Action) {\n    this[Action.name.replace(/Action$/, '')] = new Action(this.client);\n  }\n}\n\nmodule.exports = ActionsManager;\n", "'use strict';\n\nconst Events = require('../../util/Events');\n\n/**\n * Manages voice connections for the client\n */\nclass ClientVoiceManager {\n  constructor(client) {\n    /**\n     * The client that instantiated this voice manager\n     * @type {Client}\n     * @readonly\n     * @name ClientVoiceManager#client\n     */\n    Object.defineProperty(this, 'client', { value: client });\n\n    /**\n     * Maps guild ids to voice adapters created for use with `@discordjs/voice`.\n     * @type {Map<Snowflake, Object>}\n     */\n    this.adapters = new Map();\n\n    client.on(Events.ShardDisconnect, (_, shardId) => {\n      for (const [guildId, adapter] of this.adapters.entries()) {\n        if (client.guilds.cache.get(guildId)?.shardId === shardId) {\n          adapter.destroy();\n        }\n      }\n    });\n  }\n\n  onVoiceServer(payload) {\n    this.adapters.get(payload.guild_id)?.onVoiceServerUpdate(payload);\n  }\n\n  onVoiceStateUpdate(payload) {\n    if (payload.guild_id && payload.session_id && payload.user_id === this.client.user?.id) {\n      this.adapters.get(payload.guild_id)?.onVoiceStateUpdate(payload);\n    }\n  }\n}\n\nmodule.exports = ClientVoiceManager;\n", "module.exports = Object.create(new Proxy({}, {\n  get(_, key) {\n    if (\n      key !== '__esModule' &&\n      key !== '__proto__' &&\n      key !== 'constructor' &&\n      key !== 'splice'\n    ) {\n      console.warn(`Module \"worker_threads\" has been externalized for browser compatibility. Cannot access \"worker_threads.${key}\" in client code. See https://vite.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`)\n    }\n  }\n}))", "export * from './collection.js';\n\n/**\n * The {@link https://github.com/discordjs/discord.js/blob/main/packages/collection#readme | @discordjs/collection} version\n * that you are currently using.\n */\n// This needs to explicitly be `string` so it is not typed as a \"const string\" that gets injected by esbuild\nexport const version = '2.1.1' as string;\n", "/* eslint-disable no-param-reassign */\n/**\n * @internal\n */\nexport interface CollectionConstructor {\n\tnew (): Collection<unknown, unknown>;\n\tnew <Key, Value>(entries?: readonly (readonly [Key, Value])[] | null): Collection<Key, Value>;\n\tnew <Key, Value>(iterable: Iterable<readonly [Key, Value]>): Collection<Key, Value>;\n\treadonly prototype: Collection<unknown, unknown>;\n\treadonly [Symbol.species]: CollectionConstructor;\n}\n\n/**\n * Represents an immutable version of a collection\n */\nexport type ReadonlyCollection<Key, Value> = Omit<\n\tCollection<Key, Value>,\n\t'clear' | 'delete' | 'ensure' | 'forEach' | 'get' | 'reverse' | 'set' | 'sort' | 'sweep'\n> &\n\tReadonlyMap<Key, Value>;\n\n/**\n * Separate interface for the constructor so that emitted js does not have a constructor that overwrites itself\n *\n * @internal\n */\nexport interface Collection<Key, Value> extends Map<Key, Value> {\n\tconstructor: CollectionConstructor;\n}\n\n/**\n * A Map with additional utility methods. This is used throughout discord.js rather than Arrays for anything that has\n * an ID, for significantly improved performance and ease-of-use.\n *\n * @typeParam Key - The key type this collection holds\n * @typeParam Value - The value type this collection holds\n */\nexport class Collection<Key, Value> extends Map<Key, Value> {\n\t/**\n\t * Obtains the value of the given key if it exists, otherwise sets and returns the value provided by the default value generator.\n\t *\n\t * @param key - The key to get if it exists, or set otherwise\n\t * @param defaultValueGenerator - A function that generates the default value\n\t * @example\n\t * ```ts\n\t * collection.ensure(guildId, () => defaultGuildConfig);\n\t * ```\n\t */\n\tpublic ensure(key: Key, defaultValueGenerator: (key: Key, collection: this) => Value): Value {\n\t\tif (this.has(key)) return this.get(key)!;\n\t\tif (typeof defaultValueGenerator !== 'function') throw new TypeError(`${defaultValueGenerator} is not a function`);\n\t\tconst defaultValue = defaultValueGenerator(key, this);\n\t\tthis.set(key, defaultValue);\n\t\treturn defaultValue;\n\t}\n\n\t/**\n\t * Checks if all of the elements exist in the collection.\n\t *\n\t * @param keys - The keys of the elements to check for\n\t * @returns `true` if all of the elements exist, `false` if at least one does not exist.\n\t */\n\tpublic hasAll(...keys: Key[]) {\n\t\treturn keys.every((key) => super.has(key));\n\t}\n\n\t/**\n\t * Checks if any of the elements exist in the collection.\n\t *\n\t * @param keys - The keys of the elements to check for\n\t * @returns `true` if any of the elements exist, `false` if none exist.\n\t */\n\tpublic hasAny(...keys: Key[]) {\n\t\treturn keys.some((key) => super.has(key));\n\t}\n\n\t/**\n\t * Obtains the first value(s) in this collection.\n\t *\n\t * @param amount - Amount of values to obtain from the beginning\n\t * @returns A single value if no amount is provided or an array of values, starting from the end if amount is negative\n\t */\n\tpublic first(): Value | undefined;\n\tpublic first(amount: number): Value[];\n\tpublic first(amount?: number): Value | Value[] | undefined {\n\t\tif (amount === undefined) return this.values().next().value;\n\t\tif (amount < 0) return this.last(amount * -1);\n\t\tamount = Math.min(this.size, amount);\n\t\tconst iter = this.values();\n\t\treturn Array.from({ length: amount }, (): Value => iter.next().value!);\n\t}\n\n\t/**\n\t * Obtains the first key(s) in this collection.\n\t *\n\t * @param amount - Amount of keys to obtain from the beginning\n\t * @returns A single key if no amount is provided or an array of keys, starting from the end if\n\t * amount is negative\n\t */\n\tpublic firstKey(): Key | undefined;\n\tpublic firstKey(amount: number): Key[];\n\tpublic firstKey(amount?: number): Key | Key[] | undefined {\n\t\tif (amount === undefined) return this.keys().next().value;\n\t\tif (amount < 0) return this.lastKey(amount * -1);\n\t\tamount = Math.min(this.size, amount);\n\t\tconst iter = this.keys();\n\t\treturn Array.from({ length: amount }, (): Key => iter.next().value!);\n\t}\n\n\t/**\n\t * Obtains the last value(s) in this collection.\n\t *\n\t * @param amount - Amount of values to obtain from the end\n\t * @returns A single value if no amount is provided or an array of values, starting from the start if\n\t * amount is negative\n\t */\n\tpublic last(): Value | undefined;\n\tpublic last(amount: number): Value[];\n\tpublic last(amount?: number): Value | Value[] | undefined {\n\t\tconst arr = [...this.values()];\n\t\tif (amount === undefined) return arr[arr.length - 1];\n\t\tif (amount < 0) return this.first(amount * -1);\n\t\tif (!amount) return [];\n\t\treturn arr.slice(-amount);\n\t}\n\n\t/**\n\t * Obtains the last key(s) in this collection.\n\t *\n\t * @param amount - Amount of keys to obtain from the end\n\t * @returns A single key if no amount is provided or an array of keys, starting from the start if\n\t * amount is negative\n\t */\n\tpublic lastKey(): Key | undefined;\n\tpublic lastKey(amount: number): Key[];\n\tpublic lastKey(amount?: number): Key | Key[] | undefined {\n\t\tconst arr = [...this.keys()];\n\t\tif (amount === undefined) return arr[arr.length - 1];\n\t\tif (amount < 0) return this.firstKey(amount * -1);\n\t\tif (!amount) return [];\n\t\treturn arr.slice(-amount);\n\t}\n\n\t/**\n\t * Identical to {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/at | Array.at()}.\n\t * Returns the item at a given index, allowing for positive and negative integers.\n\t * Negative integers count back from the last item in the collection.\n\t *\n\t * @param index - The index of the element to obtain\n\t */\n\tpublic at(index: number) {\n\t\tindex = Math.floor(index);\n\t\tconst arr = [...this.values()];\n\t\treturn arr.at(index);\n\t}\n\n\t/**\n\t * Identical to {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/at | Array.at()}.\n\t * Returns the key at a given index, allowing for positive and negative integers.\n\t * Negative integers count back from the last item in the collection.\n\t *\n\t * @param index - The index of the key to obtain\n\t */\n\tpublic keyAt(index: number) {\n\t\tindex = Math.floor(index);\n\t\tconst arr = [...this.keys()];\n\t\treturn arr.at(index);\n\t}\n\n\t/**\n\t * Obtains unique random value(s) from this collection.\n\t *\n\t * @param amount - Amount of values to obtain randomly\n\t * @returns A single value if no amount is provided or an array of values\n\t */\n\tpublic random(): Value | undefined;\n\tpublic random(amount: number): Value[];\n\tpublic random(amount?: number): Value | Value[] | undefined {\n\t\tconst arr = [...this.values()];\n\t\tif (amount === undefined) return arr[Math.floor(Math.random() * arr.length)];\n\t\tif (!arr.length || !amount) return [];\n\t\treturn Array.from(\n\t\t\t{ length: Math.min(amount, arr.length) },\n\t\t\t(): Value => arr.splice(Math.floor(Math.random() * arr.length), 1)[0]!,\n\t\t);\n\t}\n\n\t/**\n\t * Obtains unique random key(s) from this collection.\n\t *\n\t * @param amount - Amount of keys to obtain randomly\n\t * @returns A single key if no amount is provided or an array\n\t */\n\tpublic randomKey(): Key | undefined;\n\tpublic randomKey(amount: number): Key[];\n\tpublic randomKey(amount?: number): Key | Key[] | undefined {\n\t\tconst arr = [...this.keys()];\n\t\tif (amount === undefined) return arr[Math.floor(Math.random() * arr.length)];\n\t\tif (!arr.length || !amount) return [];\n\t\treturn Array.from(\n\t\t\t{ length: Math.min(amount, arr.length) },\n\t\t\t(): Key => arr.splice(Math.floor(Math.random() * arr.length), 1)[0]!,\n\t\t);\n\t}\n\n\t/**\n\t * Identical to {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reverse | Array.reverse()}\n\t * but returns a Collection instead of an Array.\n\t */\n\tpublic reverse() {\n\t\tconst entries = [...this.entries()].reverse();\n\t\tthis.clear();\n\t\tfor (const [key, value] of entries) this.set(key, value);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Searches for a single item where the given function returns a truthy value. This behaves like\n\t * {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find | Array.find()}.\n\t * All collections used in Discord.js are mapped using their `id` property, and if you want to find by id you\n\t * should use the `get` method. See\n\t * {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map/get | MDN} for details.\n\t *\n\t * @param fn - The function to test with (should return a boolean)\n\t * @param thisArg - Value to use as `this` when executing the function\n\t * @example\n\t * ```ts\n\t * collection.find(user => user.username === 'Bob');\n\t * ```\n\t */\n\tpublic find<NewValue extends Value>(\n\t\tfn: (value: Value, key: Key, collection: this) => value is NewValue,\n\t): NewValue | undefined;\n\tpublic find(fn: (value: Value, key: Key, collection: this) => unknown): Value | undefined;\n\tpublic find<This, NewValue extends Value>(\n\t\tfn: (this: This, value: Value, key: Key, collection: this) => value is NewValue,\n\t\tthisArg: This,\n\t): NewValue | undefined;\n\tpublic find<This>(\n\t\tfn: (this: This, value: Value, key: Key, collection: this) => unknown,\n\t\tthisArg: This,\n\t): Value | undefined;\n\tpublic find(fn: (value: Value, key: Key, collection: this) => unknown, thisArg?: unknown): Value | undefined {\n\t\tif (typeof fn !== 'function') throw new TypeError(`${fn} is not a function`);\n\t\tif (thisArg !== undefined) fn = fn.bind(thisArg);\n\t\tfor (const [key, val] of this) {\n\t\t\tif (fn(val, key, this)) return val;\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n\t/**\n\t * Searches for the key of a single item where the given function returns a truthy value. This behaves like\n\t * {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/findIndex | Array.findIndex()},\n\t * but returns the key rather than the positional index.\n\t *\n\t * @param fn - The function to test with (should return a boolean)\n\t * @param thisArg - Value to use as `this` when executing the function\n\t * @example\n\t * ```ts\n\t * collection.findKey(user => user.username === 'Bob');\n\t * ```\n\t */\n\tpublic findKey<NewKey extends Key>(\n\t\tfn: (value: Value, key: Key, collection: this) => key is NewKey,\n\t): NewKey | undefined;\n\tpublic findKey(fn: (value: Value, key: Key, collection: this) => unknown): Key | undefined;\n\tpublic findKey<This, NewKey extends Key>(\n\t\tfn: (this: This, value: Value, key: Key, collection: this) => key is NewKey,\n\t\tthisArg: This,\n\t): NewKey | undefined;\n\tpublic findKey<This>(\n\t\tfn: (this: This, value: Value, key: Key, collection: this) => unknown,\n\t\tthisArg: This,\n\t): Key | undefined;\n\tpublic findKey(fn: (value: Value, key: Key, collection: this) => unknown, thisArg?: unknown): Key | undefined {\n\t\tif (typeof fn !== 'function') throw new TypeError(`${fn} is not a function`);\n\t\tif (thisArg !== undefined) fn = fn.bind(thisArg);\n\t\tfor (const [key, val] of this) {\n\t\t\tif (fn(val, key, this)) return key;\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n\t/**\n\t * Searches for a last item where the given function returns a truthy value. This behaves like\n\t * {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/findLast | Array.findLast()}.\n\t *\n\t * @param fn - The function to test with (should return a boolean)\n\t * @param thisArg - Value to use as `this` when executing the function\n\t */\n\tpublic findLast<NewValue extends Value>(\n\t\tfn: (value: Value, key: Key, collection: this) => value is NewValue,\n\t): NewValue | undefined;\n\tpublic findLast(fn: (value: Value, key: Key, collection: this) => unknown): Value | undefined;\n\tpublic findLast<This, NewValue extends Value>(\n\t\tfn: (this: This, value: Value, key: Key, collection: this) => value is NewValue,\n\t\tthisArg: This,\n\t): NewValue | undefined;\n\tpublic findLast<This>(\n\t\tfn: (this: This, value: Value, key: Key, collection: this) => unknown,\n\t\tthisArg: This,\n\t): Value | undefined;\n\tpublic findLast(fn: (value: Value, key: Key, collection: this) => unknown, thisArg?: unknown): Value | undefined {\n\t\tif (typeof fn !== 'function') throw new TypeError(`${fn} is not a function`);\n\t\tif (thisArg !== undefined) fn = fn.bind(thisArg);\n\t\tconst entries = [...this.entries()];\n\t\tfor (let index = entries.length - 1; index >= 0; index--) {\n\t\t\tconst val = entries[index]![1];\n\t\t\tconst key = entries[index]![0];\n\t\t\tif (fn(val, key, this)) return val;\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n\t/**\n\t * Searches for the key of a last item where the given function returns a truthy value. This behaves like\n\t * {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/findLastIndex | Array.findLastIndex()},\n\t * but returns the key rather than the positional index.\n\t *\n\t * @param fn - The function to test with (should return a boolean)\n\t * @param thisArg - Value to use as `this` when executing the function\n\t */\n\tpublic findLastKey<NewKey extends Key>(\n\t\tfn: (value: Value, key: Key, collection: this) => key is NewKey,\n\t): NewKey | undefined;\n\tpublic findLastKey(fn: (value: Value, key: Key, collection: this) => unknown): Key | undefined;\n\tpublic findLastKey<This, NewKey extends Key>(\n\t\tfn: (this: This, value: Value, key: Key, collection: this) => key is NewKey,\n\t\tthisArg: This,\n\t): NewKey | undefined;\n\tpublic findLastKey<This>(\n\t\tfn: (this: This, value: Value, key: Key, collection: this) => unknown,\n\t\tthisArg: This,\n\t): Key | undefined;\n\tpublic findLastKey(fn: (value: Value, key: Key, collection: this) => unknown, thisArg?: unknown): Key | undefined {\n\t\tif (typeof fn !== 'function') throw new TypeError(`${fn} is not a function`);\n\t\tif (thisArg !== undefined) fn = fn.bind(thisArg);\n\t\tconst entries = [...this.entries()];\n\t\tfor (let index = entries.length - 1; index >= 0; index--) {\n\t\t\tconst key = entries[index]![0];\n\t\t\tconst val = entries[index]![1];\n\t\t\tif (fn(val, key, this)) return key;\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n\t/**\n\t * Removes items that satisfy the provided filter function.\n\t *\n\t * @param fn - Function used to test (should return a boolean)\n\t * @param thisArg - Value to use as `this` when executing the function\n\t * @returns The number of removed entries\n\t */\n\tpublic sweep(fn: (value: Value, key: Key, collection: this) => unknown): number;\n\tpublic sweep<This>(fn: (this: This, value: Value, key: Key, collection: this) => unknown, thisArg: This): number;\n\tpublic sweep(fn: (value: Value, key: Key, collection: this) => unknown, thisArg?: unknown): number {\n\t\tif (typeof fn !== 'function') throw new TypeError(`${fn} is not a function`);\n\t\tif (thisArg !== undefined) fn = fn.bind(thisArg);\n\t\tconst previousSize = this.size;\n\t\tfor (const [key, val] of this) {\n\t\t\tif (fn(val, key, this)) this.delete(key);\n\t\t}\n\n\t\treturn previousSize - this.size;\n\t}\n\n\t/**\n\t * Identical to\n\t * {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter | Array.filter()},\n\t * but returns a Collection instead of an Array.\n\t *\n\t * @param fn - The function to test with (should return a boolean)\n\t * @param thisArg - Value to use as `this` when executing the function\n\t * @example\n\t * ```ts\n\t * collection.filter(user => user.username === 'Bob');\n\t * ```\n\t */\n\tpublic filter<NewKey extends Key>(\n\t\tfn: (value: Value, key: Key, collection: this) => key is NewKey,\n\t): Collection<NewKey, Value>;\n\tpublic filter<NewValue extends Value>(\n\t\tfn: (value: Value, key: Key, collection: this) => value is NewValue,\n\t): Collection<Key, NewValue>;\n\tpublic filter(fn: (value: Value, key: Key, collection: this) => unknown): Collection<Key, Value>;\n\tpublic filter<This, NewKey extends Key>(\n\t\tfn: (this: This, value: Value, key: Key, collection: this) => key is NewKey,\n\t\tthisArg: This,\n\t): Collection<NewKey, Value>;\n\tpublic filter<This, NewValue extends Value>(\n\t\tfn: (this: This, value: Value, key: Key, collection: this) => value is NewValue,\n\t\tthisArg: This,\n\t): Collection<Key, NewValue>;\n\tpublic filter<This>(\n\t\tfn: (this: This, value: Value, key: Key, collection: this) => unknown,\n\t\tthisArg: This,\n\t): Collection<Key, Value>;\n\tpublic filter(fn: (value: Value, key: Key, collection: this) => unknown, thisArg?: unknown): Collection<Key, Value> {\n\t\tif (typeof fn !== 'function') throw new TypeError(`${fn} is not a function`);\n\t\tif (thisArg !== undefined) fn = fn.bind(thisArg);\n\t\tconst results = new this.constructor[Symbol.species]<Key, Value>();\n\t\tfor (const [key, val] of this) {\n\t\t\tif (fn(val, key, this)) results.set(key, val);\n\t\t}\n\n\t\treturn results;\n\t}\n\n\t/**\n\t * Partitions the collection into two collections where the first collection\n\t * contains the items that passed and the second contains the items that failed.\n\t *\n\t * @param fn - Function used to test (should return a boolean)\n\t * @param thisArg - Value to use as `this` when executing the function\n\t * @example\n\t * ```ts\n\t * const [big, small] = collection.partition(guild => guild.memberCount > 250);\n\t * ```\n\t */\n\tpublic partition<NewKey extends Key>(\n\t\tfn: (value: Value, key: Key, collection: this) => key is NewKey,\n\t): [Collection<NewKey, Value>, Collection<Exclude<Key, NewKey>, Value>];\n\tpublic partition<NewValue extends Value>(\n\t\tfn: (value: Value, key: Key, collection: this) => value is NewValue,\n\t): [Collection<Key, NewValue>, Collection<Key, Exclude<Value, NewValue>>];\n\tpublic partition(\n\t\tfn: (value: Value, key: Key, collection: this) => unknown,\n\t): [Collection<Key, Value>, Collection<Key, Value>];\n\tpublic partition<This, NewKey extends Key>(\n\t\tfn: (this: This, value: Value, key: Key, collection: this) => key is NewKey,\n\t\tthisArg: This,\n\t): [Collection<NewKey, Value>, Collection<Exclude<Key, NewKey>, Value>];\n\tpublic partition<This, NewValue extends Value>(\n\t\tfn: (this: This, value: Value, key: Key, collection: this) => value is NewValue,\n\t\tthisArg: This,\n\t): [Collection<Key, NewValue>, Collection<Key, Exclude<Value, NewValue>>];\n\tpublic partition<This>(\n\t\tfn: (this: This, value: Value, key: Key, collection: this) => unknown,\n\t\tthisArg: This,\n\t): [Collection<Key, Value>, Collection<Key, Value>];\n\tpublic partition(\n\t\tfn: (value: Value, key: Key, collection: this) => unknown,\n\t\tthisArg?: unknown,\n\t): [Collection<Key, Value>, Collection<Key, Value>] {\n\t\tif (typeof fn !== 'function') throw new TypeError(`${fn} is not a function`);\n\t\tif (thisArg !== undefined) fn = fn.bind(thisArg);\n\t\tconst results: [Collection<Key, Value>, Collection<Key, Value>] = [\n\t\t\tnew this.constructor[Symbol.species]<Key, Value>(),\n\t\t\tnew this.constructor[Symbol.species]<Key, Value>(),\n\t\t];\n\t\tfor (const [key, val] of this) {\n\t\t\tif (fn(val, key, this)) {\n\t\t\t\tresults[0].set(key, val);\n\t\t\t} else {\n\t\t\t\tresults[1].set(key, val);\n\t\t\t}\n\t\t}\n\n\t\treturn results;\n\t}\n\n\t/**\n\t * Maps each item into a Collection, then joins the results into a single Collection. Identical in behavior to\n\t * {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/flatMap | Array.flatMap()}.\n\t *\n\t * @param fn - Function that produces a new Collection\n\t * @param thisArg - Value to use as `this` when executing the function\n\t * @example\n\t * ```ts\n\t * collection.flatMap(guild => guild.members.cache);\n\t * ```\n\t */\n\tpublic flatMap<NewValue>(\n\t\tfn: (value: Value, key: Key, collection: this) => Collection<Key, NewValue>,\n\t): Collection<Key, NewValue>;\n\tpublic flatMap<NewValue, This>(\n\t\tfn: (this: This, value: Value, key: Key, collection: this) => Collection<Key, NewValue>,\n\t\tthisArg: This,\n\t): Collection<Key, NewValue>;\n\tpublic flatMap<NewValue>(\n\t\tfn: (value: Value, key: Key, collection: this) => Collection<Key, NewValue>,\n\t\tthisArg?: unknown,\n\t): Collection<Key, NewValue> {\n\t\t// eslint-disable-next-line unicorn/no-array-method-this-argument\n\t\tconst collections = this.map(fn, thisArg);\n\t\treturn new this.constructor[Symbol.species]<Key, NewValue>().concat(...collections);\n\t}\n\n\t/**\n\t * Maps each item to another value into an array. Identical in behavior to\n\t * {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map | Array.map()}.\n\t *\n\t * @param fn - Function that produces an element of the new array, taking three arguments\n\t * @param thisArg - Value to use as `this` when executing the function\n\t * @example\n\t * ```ts\n\t * collection.map(user => user.tag);\n\t * ```\n\t */\n\tpublic map<NewValue>(fn: (value: Value, key: Key, collection: this) => NewValue): NewValue[];\n\tpublic map<This, NewValue>(\n\t\tfn: (this: This, value: Value, key: Key, collection: this) => NewValue,\n\t\tthisArg: This,\n\t): NewValue[];\n\tpublic map<NewValue>(fn: (value: Value, key: Key, collection: this) => NewValue, thisArg?: unknown): NewValue[] {\n\t\tif (typeof fn !== 'function') throw new TypeError(`${fn} is not a function`);\n\t\tif (thisArg !== undefined) fn = fn.bind(thisArg);\n\t\tconst iter = this.entries();\n\t\treturn Array.from({ length: this.size }, (): NewValue => {\n\t\t\tconst [key, value] = iter.next().value!;\n\t\t\treturn fn(value, key, this);\n\t\t});\n\t}\n\n\t/**\n\t * Maps each item to another value into a collection. Identical in behavior to\n\t * {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map | Array.map()}.\n\t *\n\t * @param fn - Function that produces an element of the new collection, taking three arguments\n\t * @param thisArg - Value to use as `this` when executing the function\n\t * @example\n\t * ```ts\n\t * collection.mapValues(user => user.tag);\n\t * ```\n\t */\n\tpublic mapValues<NewValue>(fn: (value: Value, key: Key, collection: this) => NewValue): Collection<Key, NewValue>;\n\tpublic mapValues<This, NewValue>(\n\t\tfn: (this: This, value: Value, key: Key, collection: this) => NewValue,\n\t\tthisArg: This,\n\t): Collection<Key, NewValue>;\n\tpublic mapValues<NewValue>(\n\t\tfn: (value: Value, key: Key, collection: this) => NewValue,\n\t\tthisArg?: unknown,\n\t): Collection<Key, NewValue> {\n\t\tif (typeof fn !== 'function') throw new TypeError(`${fn} is not a function`);\n\t\tif (thisArg !== undefined) fn = fn.bind(thisArg);\n\t\tconst coll = new this.constructor[Symbol.species]<Key, NewValue>();\n\t\tfor (const [key, val] of this) coll.set(key, fn(val, key, this));\n\t\treturn coll;\n\t}\n\n\t/**\n\t * Checks if there exists an item that passes a test. Identical in behavior to\n\t * {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some | Array.some()}.\n\t *\n\t * @param fn - Function used to test (should return a boolean)\n\t * @param thisArg - Value to use as `this` when executing the function\n\t * @example\n\t * ```ts\n\t * collection.some(user => user.discriminator === '0000');\n\t * ```\n\t */\n\tpublic some(fn: (value: Value, key: Key, collection: this) => unknown): boolean;\n\tpublic some<This>(fn: (this: This, value: Value, key: Key, collection: this) => unknown, thisArg: This): boolean;\n\tpublic some(fn: (value: Value, key: Key, collection: this) => unknown, thisArg?: unknown): boolean {\n\t\tif (typeof fn !== 'function') throw new TypeError(`${fn} is not a function`);\n\t\tif (thisArg !== undefined) fn = fn.bind(thisArg);\n\t\tfor (const [key, val] of this) {\n\t\t\tif (fn(val, key, this)) return true;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * Checks if all items passes a test. Identical in behavior to\n\t * {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/every | Array.every()}.\n\t *\n\t * @param fn - Function used to test (should return a boolean)\n\t * @param thisArg - Value to use as `this` when executing the function\n\t * @example\n\t * ```ts\n\t * collection.every(user => !user.bot);\n\t * ```\n\t */\n\tpublic every<NewKey extends Key>(\n\t\tfn: (value: Value, key: Key, collection: this) => key is NewKey,\n\t): this is Collection<NewKey, Value>;\n\tpublic every<NewValue extends Value>(\n\t\tfn: (value: Value, key: Key, collection: this) => value is NewValue,\n\t): this is Collection<Key, NewValue>;\n\tpublic every(fn: (value: Value, key: Key, collection: this) => unknown): boolean;\n\tpublic every<This, NewKey extends Key>(\n\t\tfn: (this: This, value: Value, key: Key, collection: this) => key is NewKey,\n\t\tthisArg: This,\n\t): this is Collection<NewKey, Value>;\n\tpublic every<This, NewValue extends Value>(\n\t\tfn: (this: This, value: Value, key: Key, collection: this) => value is NewValue,\n\t\tthisArg: This,\n\t): this is Collection<Key, NewValue>;\n\tpublic every<This>(fn: (this: This, value: Value, key: Key, collection: this) => unknown, thisArg: This): boolean;\n\tpublic every(fn: (value: Value, key: Key, collection: this) => unknown, thisArg?: unknown): boolean {\n\t\tif (typeof fn !== 'function') throw new TypeError(`${fn} is not a function`);\n\t\tif (thisArg !== undefined) fn = fn.bind(thisArg);\n\t\tfor (const [key, val] of this) {\n\t\t\tif (!fn(val, key, this)) return false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Applies a function to produce a single value. Identical in behavior to\n\t * {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce | Array.reduce()}.\n\t *\n\t * @param fn - Function used to reduce, taking four arguments; `accumulator`, `currentValue`, `currentKey`,\n\t * and `collection`\n\t * @param initialValue - Starting value for the accumulator\n\t * @example\n\t * ```ts\n\t * collection.reduce((acc, guild) => acc + guild.memberCount, 0);\n\t * ```\n\t */\n\tpublic reduce(\n\t\tfn: (accumulator: Value, value: Value, key: Key, collection: this) => Value,\n\t\tinitialValue?: Value,\n\t): Value;\n\tpublic reduce<InitialValue>(\n\t\tfn: (accumulator: InitialValue, value: Value, key: Key, collection: this) => InitialValue,\n\t\tinitialValue: InitialValue,\n\t): InitialValue;\n\tpublic reduce<InitialValue>(\n\t\tfn: (accumulator: InitialValue, value: Value, key: Key, collection: this) => InitialValue,\n\t\tinitialValue?: InitialValue,\n\t): InitialValue {\n\t\tif (typeof fn !== 'function') throw new TypeError(`${fn} is not a function`);\n\t\tlet accumulator!: InitialValue;\n\n\t\tconst iterator = this.entries();\n\t\tif (initialValue === undefined) {\n\t\t\tif (this.size === 0) throw new TypeError('Reduce of empty collection with no initial value');\n\t\t\taccumulator = iterator.next().value![1] as unknown as InitialValue;\n\t\t} else {\n\t\t\taccumulator = initialValue;\n\t\t}\n\n\t\tfor (const [key, value] of iterator) {\n\t\t\taccumulator = fn(accumulator, value, key, this);\n\t\t}\n\n\t\treturn accumulator;\n\t}\n\n\t/**\n\t * Applies a function to produce a single value. Identical in behavior to\n\t * {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduceRight | Array.reduceRight()}.\n\t *\n\t * @param fn - Function used to reduce, taking four arguments; `accumulator`, `value`, `key`, and `collection`\n\t * @param initialValue - Starting value for the accumulator\n\t */\n\tpublic reduceRight(\n\t\tfn: (accumulator: Value, value: Value, key: Key, collection: this) => Value,\n\t\tinitialValue?: Value,\n\t): Value;\n\tpublic reduceRight<InitialValue>(\n\t\tfn: (accumulator: InitialValue, value: Value, key: Key, collection: this) => InitialValue,\n\t\tinitialValue: InitialValue,\n\t): InitialValue;\n\tpublic reduceRight<InitialValue>(\n\t\tfn: (accumulator: InitialValue, value: Value, key: Key, collection: this) => InitialValue,\n\t\tinitialValue?: InitialValue,\n\t): InitialValue {\n\t\tif (typeof fn !== 'function') throw new TypeError(`${fn} is not a function`);\n\t\tconst entries = [...this.entries()];\n\t\tlet accumulator!: InitialValue;\n\n\t\tlet index: number;\n\t\tif (initialValue === undefined) {\n\t\t\tif (entries.length === 0) throw new TypeError('Reduce of empty collection with no initial value');\n\t\t\taccumulator = entries[entries.length - 1]![1] as unknown as InitialValue;\n\t\t\tindex = entries.length - 1;\n\t\t} else {\n\t\t\taccumulator = initialValue;\n\t\t\tindex = entries.length;\n\t\t}\n\n\t\twhile (--index >= 0) {\n\t\t\tconst key = entries[index]![0];\n\t\t\tconst val = entries[index]![1];\n\t\t\taccumulator = fn(accumulator, val, key, this);\n\t\t}\n\n\t\treturn accumulator;\n\t}\n\n\t/**\n\t * Identical to\n\t * {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map/forEach | Map.forEach()},\n\t * but returns the collection instead of undefined.\n\t *\n\t * @param fn - Function to execute for each element\n\t * @param thisArg - Value to use as `this` when executing the function\n\t * @example\n\t * ```ts\n\t * collection\n\t *  .each(user => console.log(user.username))\n\t *  .filter(user => user.bot)\n\t *  .each(user => console.log(user.username));\n\t * ```\n\t */\n\tpublic each(fn: (value: Value, key: Key, collection: this) => void): this;\n\tpublic each<This>(fn: (this: This, value: Value, key: Key, collection: this) => void, thisArg: This): this;\n\tpublic each(fn: (value: Value, key: Key, collection: this) => void, thisArg?: unknown): this {\n\t\tif (typeof fn !== 'function') throw new TypeError(`${fn} is not a function`);\n\t\tif (thisArg !== undefined) fn = fn.bind(thisArg);\n\n\t\tfor (const [key, value] of this) {\n\t\t\tfn(value, key, this);\n\t\t}\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * Runs a function on the collection and returns the collection.\n\t *\n\t * @param fn - Function to execute\n\t * @param thisArg - Value to use as `this` when executing the function\n\t * @example\n\t * ```ts\n\t * collection\n\t *  .tap(coll => console.log(coll.size))\n\t *  .filter(user => user.bot)\n\t *  .tap(coll => console.log(coll.size))\n\t * ```\n\t */\n\tpublic tap(fn: (collection: this) => void): this;\n\tpublic tap<This>(fn: (this: This, collection: this) => void, thisArg: This): this;\n\tpublic tap(fn: (collection: this) => void, thisArg?: unknown): this {\n\t\tif (typeof fn !== 'function') throw new TypeError(`${fn} is not a function`);\n\t\tif (thisArg !== undefined) fn = fn.bind(thisArg);\n\t\tfn(this);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Creates an identical shallow copy of this collection.\n\t *\n\t * @example\n\t * ```ts\n\t * const newColl = someColl.clone();\n\t * ```\n\t */\n\tpublic clone(): Collection<Key, Value> {\n\t\treturn new this.constructor[Symbol.species](this);\n\t}\n\n\t/**\n\t * Combines this collection with others into a new collection. None of the source collections are modified.\n\t *\n\t * @param collections - Collections to merge\n\t * @example\n\t * ```ts\n\t * const newColl = someColl.concat(someOtherColl, anotherColl, ohBoyAColl);\n\t * ```\n\t */\n\tpublic concat(...collections: ReadonlyCollection<Key, Value>[]) {\n\t\tconst newColl = this.clone();\n\t\tfor (const coll of collections) {\n\t\t\tfor (const [key, val] of coll) newColl.set(key, val);\n\t\t}\n\n\t\treturn newColl;\n\t}\n\n\t/**\n\t * Checks if this collection shares identical items with another.\n\t * This is different to checking for equality using equal-signs, because\n\t * the collections may be different objects, but contain the same data.\n\t *\n\t * @param collection - Collection to compare with\n\t * @returns Whether the collections have identical contents\n\t */\n\tpublic equals(collection: ReadonlyCollection<Key, Value>) {\n\t\tif (!collection) return false; // runtime check\n\t\tif (this === collection) return true;\n\t\tif (this.size !== collection.size) return false;\n\t\tfor (const [key, value] of this) {\n\t\t\tif (!collection.has(key) || value !== collection.get(key)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * The sort method sorts the items of a collection in place and returns it.\n\t * The sort is not necessarily stable in Node 10 or older.\n\t * The default sort order is according to string Unicode code points.\n\t *\n\t * @param compareFunction - Specifies a function that defines the sort order.\n\t * If omitted, the collection is sorted according to each character's Unicode code point value, according to the string conversion of each element.\n\t * @example\n\t * ```ts\n\t * collection.sort((userA, userB) => userA.createdTimestamp - userB.createdTimestamp);\n\t * ```\n\t */\n\tpublic sort(compareFunction: Comparator<Key, Value> = Collection.defaultSort) {\n\t\tconst entries = [...this.entries()];\n\t\tentries.sort((a, b): number => compareFunction(a[1], b[1], a[0], b[0]));\n\n\t\t// Perform clean-up\n\t\tsuper.clear();\n\n\t\t// Set the new entries\n\t\tfor (const [key, value] of entries) {\n\t\t\tsuper.set(key, value);\n\t\t}\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * The intersection method returns a new collection containing the items where the key is present in both collections.\n\t *\n\t * @param other - The other Collection to filter against\n\t * @example\n\t * ```ts\n\t * const col1 = new Collection([['a', 1], ['b', 2]]);\n\t * const col2 = new Collection([['a', 1], ['c', 3]]);\n\t * const intersection = col1.intersection(col2);\n\t * console.log(col1.intersection(col2));\n\t * // => Collection { 'a' => 1 }\n\t * ```\n\t */\n\tpublic intersection(other: ReadonlyCollection<Key, any>): Collection<Key, Value> {\n\t\tconst coll = new this.constructor[Symbol.species]<Key, Value>();\n\n\t\tfor (const [key, value] of this) {\n\t\t\tif (other.has(key)) coll.set(key, value);\n\t\t}\n\n\t\treturn coll;\n\t}\n\n\t/**\n\t * Returns a new collection containing the items where the key is present in either of the collections.\n\t *\n\t * @remarks\n\t *\n\t * If the collections have any items with the same key, the value from the first collection will be used.\n\t * @param other - The other Collection to filter against\n\t * @example\n\t * ```ts\n\t * const col1 = new Collection([['a', 1], ['b', 2]]);\n\t * const col2 = new Collection([['a', 1], ['b', 3], ['c', 3]]);\n\t * const union = col1.union(col2);\n\t * console.log(union);\n\t * // => Collection { 'a' => 1, 'b' => 2, 'c' => 3 }\n\t * ```\n\t */\n\tpublic union<OtherValue>(other: ReadonlyCollection<Key, OtherValue>): Collection<Key, OtherValue | Value> {\n\t\tconst coll = new this.constructor[Symbol.species]<Key, OtherValue | Value>(this);\n\n\t\tfor (const [key, value] of other) {\n\t\t\tif (!coll.has(key)) coll.set(key, value);\n\t\t}\n\n\t\treturn coll;\n\t}\n\n\t/**\n\t * Returns a new collection containing the items where the key is present in this collection but not the other.\n\t *\n\t * @param other - The other Collection to filter against\n\t * @example\n\t * ```ts\n\t * const col1 = new Collection([['a', 1], ['b', 2]]);\n\t * const col2 = new Collection([['a', 1], ['c', 3]]);\n\t * console.log(col1.difference(col2));\n\t * // => Collection { 'b' => 2 }\n\t * console.log(col2.difference(col1));\n\t * // => Collection { 'c' => 3 }\n\t * ```\n\t */\n\tpublic difference(other: ReadonlyCollection<Key, any>): Collection<Key, Value> {\n\t\tconst coll = new this.constructor[Symbol.species]<Key, Value>();\n\n\t\tfor (const [key, value] of this) {\n\t\t\tif (!other.has(key)) coll.set(key, value);\n\t\t}\n\n\t\treturn coll;\n\t}\n\n\t/**\n\t * Returns a new collection containing only the items where the keys are present in either collection, but not both.\n\t *\n\t * @param other - The other Collection to filter against\n\t * @example\n\t * ```ts\n\t * const col1 = new Collection([['a', 1], ['b', 2]]);\n\t * const col2 = new Collection([['a', 1], ['c', 3]]);\n\t * const symmetricDifference = col1.symmetricDifference(col2);\n\t * console.log(col1.symmetricDifference(col2));\n\t * // => Collection { 'b' => 2, 'c' => 3 }\n\t * ```\n\t */\n\tpublic symmetricDifference<OtherValue>(\n\t\tother: ReadonlyCollection<Key, OtherValue>,\n\t): Collection<Key, OtherValue | Value> {\n\t\tconst coll = new this.constructor[Symbol.species]<Key, OtherValue | Value>();\n\n\t\tfor (const [key, value] of this) {\n\t\t\tif (!other.has(key)) coll.set(key, value);\n\t\t}\n\n\t\tfor (const [key, value] of other) {\n\t\t\tif (!this.has(key)) coll.set(key, value);\n\t\t}\n\n\t\treturn coll;\n\t}\n\n\t/**\n\t * Merges two Collections together into a new Collection.\n\t *\n\t * @param other - The other Collection to merge with\n\t * @param whenInSelf - Function getting the result if the entry only exists in this Collection\n\t * @param whenInOther - Function getting the result if the entry only exists in the other Collection\n\t * @param whenInBoth - Function getting the result if the entry exists in both Collections\n\t * @example\n\t * ```ts\n\t * // Sums up the entries in two collections.\n\t * coll.merge(\n\t *  other,\n\t *  x => ({ keep: true, value: x }),\n\t *  y => ({ keep: true, value: y }),\n\t *  (x, y) => ({ keep: true, value: x + y }),\n\t * );\n\t * ```\n\t * @example\n\t * ```ts\n\t * // Intersects two collections in a left-biased manner.\n\t * coll.merge(\n\t *  other,\n\t *  x => ({ keep: false }),\n\t *  y => ({ keep: false }),\n\t *  (x, _) => ({ keep: true, value: x }),\n\t * );\n\t * ```\n\t */\n\tpublic merge<OtherValue, ResultValue>(\n\t\tother: ReadonlyCollection<Key, OtherValue>,\n\t\twhenInSelf: (value: Value, key: Key) => Keep<ResultValue>,\n\t\twhenInOther: (valueOther: OtherValue, key: Key) => Keep<ResultValue>,\n\t\twhenInBoth: (value: Value, valueOther: OtherValue, key: Key) => Keep<ResultValue>,\n\t): Collection<Key, ResultValue> {\n\t\tconst coll = new this.constructor[Symbol.species]<Key, ResultValue>();\n\t\tconst keys = new Set([...this.keys(), ...other.keys()]);\n\n\t\tfor (const key of keys) {\n\t\t\tconst hasInSelf = this.has(key);\n\t\t\tconst hasInOther = other.has(key);\n\n\t\t\tif (hasInSelf && hasInOther) {\n\t\t\t\tconst result = whenInBoth(this.get(key)!, other.get(key)!, key);\n\t\t\t\tif (result.keep) coll.set(key, result.value);\n\t\t\t} else if (hasInSelf) {\n\t\t\t\tconst result = whenInSelf(this.get(key)!, key);\n\t\t\t\tif (result.keep) coll.set(key, result.value);\n\t\t\t} else if (hasInOther) {\n\t\t\t\tconst result = whenInOther(other.get(key)!, key);\n\t\t\t\tif (result.keep) coll.set(key, result.value);\n\t\t\t}\n\t\t}\n\n\t\treturn coll;\n\t}\n\n\t/**\n\t * Identical to {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/toReversed | Array.toReversed()}\n\t * but returns a Collection instead of an Array.\n\t */\n\tpublic toReversed() {\n\t\treturn new this.constructor[Symbol.species](this).reverse();\n\t}\n\n\t/**\n\t * The sorted method sorts the items of a collection and returns it.\n\t * The sort is not necessarily stable in Node 10 or older.\n\t * The default sort order is according to string Unicode code points.\n\t *\n\t * @param compareFunction - Specifies a function that defines the sort order.\n\t * If omitted, the collection is sorted according to each character's Unicode code point value,\n\t * according to the string conversion of each element.\n\t * @example\n\t * ```ts\n\t * collection.sorted((userA, userB) => userA.createdTimestamp - userB.createdTimestamp);\n\t * ```\n\t */\n\tpublic toSorted(compareFunction: Comparator<Key, Value> = Collection.defaultSort) {\n\t\treturn new this.constructor[Symbol.species](this).sort((av, bv, ak, bk) => compareFunction(av, bv, ak, bk));\n\t}\n\n\tpublic toJSON() {\n\t\t// toJSON is called recursively by JSON.stringify.\n\t\treturn [...this.entries()];\n\t}\n\n\tprivate static defaultSort<Value>(firstValue: Value, secondValue: Value): number {\n\t\treturn Number(firstValue > secondValue) || Number(firstValue === secondValue) - 1;\n\t}\n\n\t/**\n\t * Creates a Collection from a list of entries.\n\t *\n\t * @param entries - The list of entries\n\t * @param combine - Function to combine an existing entry with a new one\n\t * @example\n\t * ```ts\n\t * Collection.combineEntries([[\"a\", 1], [\"b\", 2], [\"a\", 2]], (x, y) => x + y);\n\t * // returns Collection { \"a\" => 3, \"b\" => 2 }\n\t * ```\n\t */\n\tpublic static combineEntries<Key, Value>(\n\t\tentries: Iterable<[Key, Value]>,\n\t\tcombine: (firstValue: Value, secondValue: Value, key: Key) => Value,\n\t): Collection<Key, Value> {\n\t\tconst coll = new Collection<Key, Value>();\n\t\tfor (const [key, value] of entries) {\n\t\t\tif (coll.has(key)) {\n\t\t\t\tcoll.set(key, combine(coll.get(key)!, value, key));\n\t\t\t} else {\n\t\t\t\tcoll.set(key, value);\n\t\t\t}\n\t\t}\n\n\t\treturn coll;\n\t}\n}\n\n/**\n * @internal\n */\nexport type Keep<Value> = { keep: false } | { keep: true; value: Value };\n\n/**\n * @internal\n */\nexport type Comparator<Key, Value> = (firstValue: Value, secondValue: Value, firstKey: Key, secondKey: Key) => number;\n", "module.exports = Object.create(new Proxy({}, {\n  get(_, key) {\n    if (\n      key !== '__esModule' &&\n      key !== '__proto__' &&\n      key !== 'constructor' &&\n      key !== 'splice'\n    ) {\n      console.warn(`Module \"timers\" has been externalized for browser compatibility. Cannot access \"timers.${key}\" in client code. See https://vite.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`)\n    }\n  }\n}))", "module.exports = Object.create(new Proxy({}, {\n  get(_, key) {\n    if (\n      key !== '__esModule' &&\n      key !== '__proto__' &&\n      key !== 'constructor' &&\n      key !== 'splice'\n    ) {\n      console.warn(`Module \"timers/promises\" has been externalized for browser compatibility. Cannot access \"timers/promises.${key}\" in client code. See https://vite.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`)\n    }\n  }\n}))", "module.exports = Object.create(new Proxy({}, {\n  get(_, key) {\n    if (\n      key !== '__esModule' &&\n      key !== '__proto__' &&\n      key !== 'constructor' &&\n      key !== 'splice'\n    ) {\n      console.warn(`Module \"url\" has been externalized for browser compatibility. Cannot access \"url.${key}\" in client code. See https://vite.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`)\n    }\n  }\n}))", "module.exports = Object.create(new Proxy({}, {\n  get(_, key) {\n    if (\n      key !== '__esModule' &&\n      key !== '__proto__' &&\n      key !== 'constructor' &&\n      key !== 'splice'\n    ) {\n      console.warn(`Module \"zlib\" has been externalized for browser compatibility. Cannot access \"zlib.${key}\" in client code. See https://vite.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`)\n    }\n  }\n}))", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=common.js.map", null, null, null, null, null, null, null, null, null, null, "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=attachment.js.map", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=base.js.map", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=boolean.js.map", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=channel.js.map", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=integer.js.map", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=mentionable.js.map", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=number.js.map", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=role.js.map", null, "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=string.js.map", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=subcommand.js.map", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=subcommandGroup.js.map", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=user.js.map", null, "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=contextMenu.js.map", null, null, "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=autocomplete.js.map", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=base.js.map", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=messageComponents.js.map", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=modalSubmit.js.map", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=ping.js.map", null, null, null, null, null, null, null, null, null, null, null, null, null, null, "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=application.js.map", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=auditLog.js.map", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=autoModeration.js.map", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=channel.js.map", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=emoji.js.map", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=gateway.js.map", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=guild.js.map", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=guildScheduledEvent.js.map", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=interactions.js.map", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=invite.js.map", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=oauth2.js.map", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=poll.js.map", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=stageInstance.js.map", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=sticker.js.map", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=template.js.map", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=user.js.map", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=voice.js.map", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=webhook.js.map", null, null, null, null, null, null, "export * from './strategies/context/IContextFetchingStrategy.js';\nexport * from './strategies/context/SimpleContextFetchingStrategy.js';\nexport * from './strategies/context/WorkerContextFetchingStrategy.js';\n\nexport * from './strategies/sharding/IShardingStrategy.js';\nexport * from './strategies/sharding/SimpleShardingStrategy.js';\nexport * from './strategies/sharding/WorkerShardingStrategy.js';\n\nexport * from './throttling/IIdentifyThrottler.js';\nexport * from './throttling/SimpleIdentifyThrottler.js';\n\nexport * from './utils/constants.js';\nexport * from './utils/WorkerBootstrapper.js';\n\nexport * from './ws/WebSocketManager.js';\nexport * from './ws/WebSocketShard.js';\n\n/**\n * The {@link https://github.com/discordjs/discord.js/blob/main/packages/ws#readme | @discordjs/ws} version\n * that you are currently using.\n */\n// This needs to explicitly be `string` so it is not typed as a \"const string\" that gets injected by esbuild\nexport const version = '1.1.1' as string;\n", "import type { Awaitable } from '@discordjs/util';\nimport type { APIGatewayBotInfo } from 'discord-api-types/v10';\nimport type { SessionInfo, WebSocketManager, WebSocketManagerOptions } from '../../ws/WebSocketManager.js';\n\nexport interface FetchingStrategyOptions\n\textends Omit<\n\t\tWebSocketManagerOptions,\n\t\t| 'buildIdentifyThrottler'\n\t\t| 'buildStrategy'\n\t\t| 'rest'\n\t\t| 'retrieveSessionInfo'\n\t\t| 'shardCount'\n\t\t| 'shardIds'\n\t\t| 'updateSessionInfo'\n\t> {\n\treadonly gatewayInformation: APIGatewayBotInfo;\n\treadonly shardCount: number;\n}\n\n/**\n * Strategies responsible solely for making manager information accessible\n */\nexport interface IContextFetchingStrategy {\n\treadonly options: FetchingStrategyOptions;\n\tretrieveSessionInfo(shardId: number): Awaitable<SessionInfo | null>;\n\tupdateSessionInfo(shardId: number, sessionInfo: SessionInfo | null): Awaitable<void>;\n\t/**\n\t * Resolves once the given shard should be allowed to identify\n\t * This should correctly handle the signal and reject with an abort error if the operation is aborted.\n\t * Other errors will cause the shard to reconnect.\n\t */\n\twaitForIdentify(shardId: number, signal: AbortSignal): Promise<void>;\n}\n\nexport async function managerToFetchingStrategyOptions(manager: WebSocketManager): Promise<FetchingStrategyOptions> {\n\t/* eslint-disable @typescript-eslint/unbound-method */\n\tconst {\n\t\tbuildIdentifyThrottler,\n\t\tbuildStrategy,\n\t\tretrieveSessionInfo,\n\t\tupdateSessionInfo,\n\t\tshardCount,\n\t\tshardIds,\n\t\trest,\n\t\t...managerOptions\n\t} = manager.options;\n\t/* eslint-enable @typescript-eslint/unbound-method */\n\n\treturn {\n\t\t...managerOptions,\n\t\tgatewayInformation: await manager.fetchGatewayInformation(),\n\t\tshardCount: await manager.getShardCount(),\n\t};\n}\n", "import type { IIdentifyThrottler } from '../../throttling/IIdentifyThrottler.js';\nimport type { SessionInfo, WebSocketManager } from '../../ws/WebSocketManager.js';\nimport type { FetchingStrategyOptions, IContextFetchingStrategy } from './IContextFetchingStrategy.js';\n\nexport class SimpleContextFetchingStrategy implements IContextFetchingStrategy {\n\t// This strategy assumes every shard is running under the same process - therefore we need a single\n\t// IdentifyThrottler per manager.\n\tprivate static throttlerCache = new WeakMap<WebSocketManager, IIdentifyThrottler>();\n\n\tprivate static async ensureThrottler(manager: WebSocketManager): Promise<IIdentifyThrottler> {\n\t\tconst throttler = SimpleContextFetchingStrategy.throttlerCache.get(manager);\n\t\tif (throttler) {\n\t\t\treturn throttler;\n\t\t}\n\n\t\tconst newThrottler = await manager.options.buildIdentifyThrottler(manager);\n\t\tSimpleContextFetchingStrategy.throttlerCache.set(manager, newThrottler);\n\n\t\treturn newThrottler;\n\t}\n\n\tpublic constructor(\n\t\tprivate readonly manager: WebSocketManager,\n\t\tpublic readonly options: FetchingStrategyOptions,\n\t) {}\n\n\tpublic async retrieveSessionInfo(shardId: number): Promise<SessionInfo | null> {\n\t\treturn this.manager.options.retrieveSessionInfo(shardId);\n\t}\n\n\tpublic updateSessionInfo(shardId: number, sessionInfo: SessionInfo | null) {\n\t\treturn this.manager.options.updateSessionInfo(shardId, sessionInfo);\n\t}\n\n\tpublic async waitForIdentify(shardId: number, signal: AbortSignal): Promise<void> {\n\t\tconst throttler = await SimpleContextFetchingStrategy.ensureThrottler(this.manager);\n\t\tawait throttler.waitForIdentify(shardId, signal);\n\t}\n}\n", "import { isMainThread, parentPort } from 'node:worker_threads';\nimport { Collection } from '@discordjs/collection';\nimport type { SessionInfo } from '../../ws/WebSocketManager.js';\nimport {\n\tWorkerReceivePayloadOp,\n\tWorkerSendPayloadOp,\n\ttype WorkerReceivePayload,\n\ttype WorkerSendPayload,\n} from '../sharding/WorkerShardingStrategy.js';\nimport type { FetchingStrategyOptions, IContextFetchingStrategy } from './IContextFetchingStrategy.js';\n\nexport class WorkerContextFetchingStrategy implements IContextFetchingStrategy {\n\tprivate readonly sessionPromises = new Collection<number, (session: SessionInfo | null) => void>();\n\n\tprivate readonly waitForIdentifyPromises = new Collection<\n\t\tnumber,\n\t\t{ reject(error: unknown): void; resolve(): void; signal: AbortSignal }\n\t>();\n\n\tpublic constructor(public readonly options: FetchingStrategyOptions) {\n\t\tif (isMainThread) {\n\t\t\tthrow new Error('Cannot instantiate WorkerContextFetchingStrategy on the main thread');\n\t\t}\n\n\t\tparentPort!.on('message', (payload: WorkerSendPayload) => {\n\t\t\tif (payload.op === WorkerSendPayloadOp.SessionInfoResponse) {\n\t\t\t\tthis.sessionPromises.get(payload.nonce)?.(payload.session);\n\t\t\t\tthis.sessionPromises.delete(payload.nonce);\n\t\t\t}\n\n\t\t\tif (payload.op === WorkerSendPayloadOp.ShardIdentifyResponse) {\n\t\t\t\tconst promise = this.waitForIdentifyPromises.get(payload.nonce);\n\t\t\t\tif (payload.ok) {\n\t\t\t\t\tpromise?.resolve();\n\t\t\t\t} else {\n\t\t\t\t\t// We need to make sure we reject with an abort error\n\t\t\t\t\tpromise?.reject(promise.signal.reason);\n\t\t\t\t}\n\n\t\t\t\tthis.waitForIdentifyPromises.delete(payload.nonce);\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic async retrieveSessionInfo(shardId: number): Promise<SessionInfo | null> {\n\t\tconst nonce = Math.random();\n\t\tconst payload: WorkerReceivePayload = {\n\t\t\top: WorkerReceivePayloadOp.RetrieveSessionInfo,\n\t\t\tshardId,\n\t\t\tnonce,\n\t\t};\n\t\t// eslint-disable-next-line no-promise-executor-return\n\t\tconst promise = new Promise<SessionInfo | null>((resolve) => this.sessionPromises.set(nonce, resolve));\n\t\tparentPort!.postMessage(payload);\n\t\treturn promise;\n\t}\n\n\tpublic updateSessionInfo(shardId: number, sessionInfo: SessionInfo | null) {\n\t\tconst payload: WorkerReceivePayload = {\n\t\t\top: WorkerReceivePayloadOp.UpdateSessionInfo,\n\t\t\tshardId,\n\t\t\tsession: sessionInfo,\n\t\t};\n\t\tparentPort!.postMessage(payload);\n\t}\n\n\tpublic async waitForIdentify(shardId: number, signal: AbortSignal): Promise<void> {\n\t\tconst nonce = Math.random();\n\n\t\tconst payload: WorkerReceivePayload = {\n\t\t\top: WorkerReceivePayloadOp.WaitForIdentify,\n\t\t\tnonce,\n\t\t\tshardId,\n\t\t};\n\t\tconst promise = new Promise<void>((resolve, reject) =>\n\t\t\t// eslint-disable-next-line no-promise-executor-return\n\t\t\tthis.waitForIdentifyPromises.set(nonce, { signal, resolve, reject }),\n\t\t);\n\n\t\tparentPort!.postMessage(payload);\n\n\t\tconst listener = () => {\n\t\t\tconst payload: WorkerReceivePayload = {\n\t\t\t\top: WorkerReceivePayloadOp.CancelIdentify,\n\t\t\t\tnonce,\n\t\t\t};\n\n\t\t\tparentPort!.postMessage(payload);\n\t\t};\n\n\t\tsignal.addEventListener('abort', listener);\n\n\t\ttry {\n\t\t\tawait promise;\n\t\t} finally {\n\t\t\tsignal.removeEventListener('abort', listener);\n\t\t}\n\t}\n}\n", "import { once } from 'node:events';\nimport { join, isAbsolute, resolve } from 'node:path';\nimport { Worker } from 'node:worker_threads';\nimport { Collection } from '@discordjs/collection';\nimport type { GatewaySendPayload } from 'discord-api-types/v10';\nimport type { IIdentifyThrottler } from '../../throttling/IIdentifyThrottler.js';\nimport type { SessionInfo, WebSocketManager } from '../../ws/WebSocketManager.js';\nimport type {\n\tWebSocketShardDestroyOptions,\n\tWebSocketShardEvents,\n\tWebSocketShardStatus,\n} from '../../ws/WebSocketShard.js';\nimport { managerToFetchingStrategyOptions, type FetchingStrategyOptions } from '../context/IContextFetchingStrategy.js';\nimport type { IShardingStrategy } from './IShardingStrategy.js';\n\nexport interface WorkerData extends FetchingStrategyOptions {\n\tshardIds: number[];\n}\n\nexport enum WorkerSendPayloadOp {\n\tConnect,\n\tDestroy,\n\tSend,\n\tSessionInfoResponse,\n\tShardIdentifyResponse,\n\tFetchStatus,\n}\n\nexport type WorkerSendPayload =\n\t| { nonce: number; ok: boolean; op: WorkerSendPayloadOp.ShardIdentifyResponse }\n\t| { nonce: number; op: WorkerSendPayloadOp.FetchStatus; shardId: number }\n\t| { nonce: number; op: WorkerSendPayloadOp.SessionInfoResponse; session: SessionInfo | null }\n\t| { op: WorkerSendPayloadOp.Connect; shardId: number }\n\t| { op: WorkerSendPayloadOp.Destroy; options?: WebSocketShardDestroyOptions; shardId: number }\n\t| { op: WorkerSendPayloadOp.Send; payload: GatewaySendPayload; shardId: number };\n\nexport enum WorkerReceivePayloadOp {\n\tConnected,\n\tDestroyed,\n\tEvent,\n\tRetrieveSessionInfo,\n\tUpdateSessionInfo,\n\tWaitForIdentify,\n\tFetchStatusResponse,\n\tWorkerReady,\n\tCancelIdentify,\n}\n\nexport type WorkerReceivePayload =\n\t// Can't seem to get a type-safe union based off of the event, so I'm sadly leaving data as any for now\n\t| { data: any; event: WebSocketShardEvents; op: WorkerReceivePayloadOp.Event; shardId: number }\n\t| { nonce: number; op: WorkerReceivePayloadOp.CancelIdentify }\n\t| { nonce: number; op: WorkerReceivePayloadOp.FetchStatusResponse; status: WebSocketShardStatus }\n\t| { nonce: number; op: WorkerReceivePayloadOp.RetrieveSessionInfo; shardId: number }\n\t| { nonce: number; op: WorkerReceivePayloadOp.WaitForIdentify; shardId: number }\n\t| { op: WorkerReceivePayloadOp.Connected; shardId: number }\n\t| { op: WorkerReceivePayloadOp.Destroyed; shardId: number }\n\t| { op: WorkerReceivePayloadOp.UpdateSessionInfo; session: SessionInfo | null; shardId: number }\n\t| { op: WorkerReceivePayloadOp.WorkerReady };\n\n/**\n * Options for a {@link WorkerShardingStrategy}\n */\nexport interface WorkerShardingStrategyOptions {\n\t/**\n\t * Dictates how many shards should be spawned per worker thread.\n\t */\n\tshardsPerWorker: number | 'all';\n\t/**\n\t * Handles a payload not recognized by the handler.\n\t */\n\tunknownPayloadHandler?(payload: any): unknown;\n\t/**\n\t * Path to the worker file to use. The worker requires quite a bit of setup, it is recommended you leverage the {@link WorkerBootstrapper} class.\n\t */\n\tworkerPath?: string;\n}\n\n/**\n * Strategy used to spawn threads in worker_threads\n */\nexport class WorkerShardingStrategy implements IShardingStrategy {\n\tprivate readonly manager: WebSocketManager;\n\n\tprivate readonly options: WorkerShardingStrategyOptions;\n\n\t#workers: Worker[] = [];\n\n\treadonly #workerByShardId = new Collection<number, Worker>();\n\n\tprivate readonly connectPromises = new Collection<number, () => void>();\n\n\tprivate readonly destroyPromises = new Collection<number, () => void>();\n\n\tprivate readonly fetchStatusPromises = new Collection<number, (status: WebSocketShardStatus) => void>();\n\n\tprivate readonly waitForIdentifyControllers = new Collection<number, AbortController>();\n\n\tprivate throttler?: IIdentifyThrottler;\n\n\tpublic constructor(manager: WebSocketManager, options: WorkerShardingStrategyOptions) {\n\t\tthis.manager = manager;\n\t\tthis.options = options;\n\t}\n\n\t/**\n\t * {@inheritDoc IShardingStrategy.spawn}\n\t */\n\tpublic async spawn(shardIds: number[]) {\n\t\tconst shardsPerWorker = this.options.shardsPerWorker === 'all' ? shardIds.length : this.options.shardsPerWorker;\n\t\tconst strategyOptions = await managerToFetchingStrategyOptions(this.manager);\n\n\t\tconst loops = Math.ceil(shardIds.length / shardsPerWorker);\n\t\tconst promises: Promise<void>[] = [];\n\n\t\tfor (let idx = 0; idx < loops; idx++) {\n\t\t\tconst slice = shardIds.slice(idx * shardsPerWorker, (idx + 1) * shardsPerWorker);\n\t\t\tconst workerData: WorkerData = {\n\t\t\t\t...strategyOptions,\n\t\t\t\tshardIds: slice,\n\t\t\t};\n\n\t\t\tpromises.push(this.setupWorker(workerData));\n\t\t}\n\n\t\tawait Promise.all(promises);\n\t}\n\n\t/**\n\t * {@inheritDoc IShardingStrategy.connect}\n\t */\n\tpublic async connect() {\n\t\tconst promises = [];\n\n\t\tfor (const [shardId, worker] of this.#workerByShardId.entries()) {\n\t\t\tconst payload: WorkerSendPayload = {\n\t\t\t\top: WorkerSendPayloadOp.Connect,\n\t\t\t\tshardId,\n\t\t\t};\n\n\t\t\t// eslint-disable-next-line no-promise-executor-return\n\t\t\tconst promise = new Promise<void>((resolve) => this.connectPromises.set(shardId, resolve));\n\t\t\tworker.postMessage(payload);\n\t\t\tpromises.push(promise);\n\t\t}\n\n\t\tawait Promise.all(promises);\n\t}\n\n\t/**\n\t * {@inheritDoc IShardingStrategy.destroy}\n\t */\n\tpublic async destroy(options: Omit<WebSocketShardDestroyOptions, 'recover'> = {}) {\n\t\tconst promises = [];\n\n\t\tfor (const [shardId, worker] of this.#workerByShardId.entries()) {\n\t\t\tconst payload: WorkerSendPayload = {\n\t\t\t\top: WorkerSendPayloadOp.Destroy,\n\t\t\t\tshardId,\n\t\t\t\toptions,\n\t\t\t};\n\n\t\t\tpromises.push(\n\t\t\t\t// eslint-disable-next-line no-promise-executor-return, promise/prefer-await-to-then\n\t\t\t\tnew Promise<void>((resolve) => this.destroyPromises.set(shardId, resolve)).then(async () => worker.terminate()),\n\t\t\t);\n\t\t\tworker.postMessage(payload);\n\t\t}\n\n\t\tthis.#workers = [];\n\t\tthis.#workerByShardId.clear();\n\n\t\tawait Promise.all(promises);\n\t}\n\n\t/**\n\t * {@inheritDoc IShardingStrategy.send}\n\t */\n\tpublic send(shardId: number, data: GatewaySendPayload) {\n\t\tconst worker = this.#workerByShardId.get(shardId);\n\t\tif (!worker) {\n\t\t\tthrow new Error(`No worker found for shard ${shardId}`);\n\t\t}\n\n\t\tconst payload: WorkerSendPayload = {\n\t\t\top: WorkerSendPayloadOp.Send,\n\t\t\tshardId,\n\t\t\tpayload: data,\n\t\t};\n\t\tworker.postMessage(payload);\n\t}\n\n\t/**\n\t * {@inheritDoc IShardingStrategy.fetchStatus}\n\t */\n\tpublic async fetchStatus() {\n\t\tconst statuses = new Collection<number, WebSocketShardStatus>();\n\n\t\tfor (const [shardId, worker] of this.#workerByShardId.entries()) {\n\t\t\tconst nonce = Math.random();\n\t\t\tconst payload: WorkerSendPayload = {\n\t\t\t\top: WorkerSendPayloadOp.FetchStatus,\n\t\t\t\tshardId,\n\t\t\t\tnonce,\n\t\t\t};\n\n\t\t\t// eslint-disable-next-line no-promise-executor-return\n\t\t\tconst promise = new Promise<WebSocketShardStatus>((resolve) => this.fetchStatusPromises.set(nonce, resolve));\n\t\t\tworker.postMessage(payload);\n\n\t\t\tconst status = await promise;\n\t\t\tstatuses.set(shardId, status);\n\t\t}\n\n\t\treturn statuses;\n\t}\n\n\tprivate async setupWorker(workerData: WorkerData) {\n\t\tconst worker = new Worker(this.resolveWorkerPath(), { workerData });\n\n\t\tawait once(worker, 'online');\n\t\t// We do this in case the user has any potentially long running code in their worker\n\t\tawait this.waitForWorkerReady(worker);\n\n\t\tworker\n\t\t\t.on('error', (err) => {\n\t\t\t\tthrow err;\n\t\t\t})\n\t\t\t.on('messageerror', (err) => {\n\t\t\t\tthrow err;\n\t\t\t})\n\t\t\t.on('message', async (payload: any) => {\n\t\t\t\tif ('op' in payload) {\n\t\t\t\t\tawait this.onMessage(worker, payload);\n\t\t\t\t} else {\n\t\t\t\t\tawait this.options.unknownPayloadHandler?.(payload);\n\t\t\t\t}\n\t\t\t});\n\n\t\tthis.#workers.push(worker);\n\t\tfor (const shardId of workerData.shardIds) {\n\t\t\tthis.#workerByShardId.set(shardId, worker);\n\t\t}\n\t}\n\n\tprivate resolveWorkerPath(): string {\n\t\tconst path = this.options.workerPath;\n\n\t\tif (!path) {\n\t\t\treturn join(__dirname, 'defaultWorker.js');\n\t\t}\n\n\t\tif (isAbsolute(path)) {\n\t\t\treturn path;\n\t\t}\n\n\t\tif (/^\\.\\.?[/\\\\]/.test(path)) {\n\t\t\treturn resolve(path);\n\t\t}\n\n\t\ttry {\n\t\t\treturn require.resolve(path);\n\t\t} catch {\n\t\t\treturn resolve(path);\n\t\t}\n\t}\n\n\tprivate async waitForWorkerReady(worker: Worker): Promise<void> {\n\t\treturn new Promise((resolve) => {\n\t\t\tconst handler = (payload: WorkerReceivePayload) => {\n\t\t\t\tif (payload.op === WorkerReceivePayloadOp.WorkerReady) {\n\t\t\t\t\tresolve();\n\t\t\t\t\tworker.off('message', handler);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tworker.on('message', handler);\n\t\t});\n\t}\n\n\tprivate async onMessage(worker: Worker, payload: WorkerReceivePayload) {\n\t\tswitch (payload.op) {\n\t\t\tcase WorkerReceivePayloadOp.Connected: {\n\t\t\t\tthis.connectPromises.get(payload.shardId)?.();\n\t\t\t\tthis.connectPromises.delete(payload.shardId);\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tcase WorkerReceivePayloadOp.Destroyed: {\n\t\t\t\tthis.destroyPromises.get(payload.shardId)?.();\n\t\t\t\tthis.destroyPromises.delete(payload.shardId);\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tcase WorkerReceivePayloadOp.Event: {\n\t\t\t\tthis.manager.emit(payload.event, { ...payload.data, shardId: payload.shardId });\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tcase WorkerReceivePayloadOp.RetrieveSessionInfo: {\n\t\t\t\tconst session = await this.manager.options.retrieveSessionInfo(payload.shardId);\n\t\t\t\tconst response: WorkerSendPayload = {\n\t\t\t\t\top: WorkerSendPayloadOp.SessionInfoResponse,\n\t\t\t\t\tnonce: payload.nonce,\n\t\t\t\t\tsession,\n\t\t\t\t};\n\t\t\t\tworker.postMessage(response);\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tcase WorkerReceivePayloadOp.UpdateSessionInfo: {\n\t\t\t\tawait this.manager.options.updateSessionInfo(payload.shardId, payload.session);\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tcase WorkerReceivePayloadOp.WaitForIdentify: {\n\t\t\t\tconst throttler = await this.ensureThrottler();\n\n\t\t\t\t// If this rejects it means we aborted, in which case we reply elsewhere.\n\t\t\t\ttry {\n\t\t\t\t\tconst controller = new AbortController();\n\t\t\t\t\tthis.waitForIdentifyControllers.set(payload.nonce, controller);\n\t\t\t\t\tawait throttler.waitForIdentify(payload.shardId, controller.signal);\n\t\t\t\t} catch {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst response: WorkerSendPayload = {\n\t\t\t\t\top: WorkerSendPayloadOp.ShardIdentifyResponse,\n\t\t\t\t\tnonce: payload.nonce,\n\t\t\t\t\tok: true,\n\t\t\t\t};\n\t\t\t\tworker.postMessage(response);\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tcase WorkerReceivePayloadOp.FetchStatusResponse: {\n\t\t\t\tthis.fetchStatusPromises.get(payload.nonce)?.(payload.status);\n\t\t\t\tthis.fetchStatusPromises.delete(payload.nonce);\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tcase WorkerReceivePayloadOp.WorkerReady: {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tcase WorkerReceivePayloadOp.CancelIdentify: {\n\t\t\t\tthis.waitForIdentifyControllers.get(payload.nonce)?.abort();\n\t\t\t\tthis.waitForIdentifyControllers.delete(payload.nonce);\n\n\t\t\t\tconst response: WorkerSendPayload = {\n\t\t\t\t\top: WorkerSendPayloadOp.ShardIdentifyResponse,\n\t\t\t\t\tnonce: payload.nonce,\n\t\t\t\t\tok: false,\n\t\t\t\t};\n\t\t\t\tworker.postMessage(response);\n\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tdefault: {\n\t\t\t\tawait this.options.unknownPayloadHandler?.(payload);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate async ensureThrottler(): Promise<IIdentifyThrottler> {\n\t\tthis.throttler ??= await this.manager.options.buildIdentifyThrottler(this.manager);\n\t\treturn this.throttler;\n\t}\n}\n", "import { Collection } from '@discordjs/collection';\nimport type { GatewaySendPayload } from 'discord-api-types/v10';\nimport type { WebSocketManager } from '../../ws/WebSocketManager.js';\nimport { WebSocketShard, WebSocketShardEvents, type WebSocketShardDestroyOptions } from '../../ws/WebSocketShard.js';\nimport { managerToFetchingStrategyOptions } from '../context/IContextFetchingStrategy.js';\nimport { SimpleContextFetchingStrategy } from '../context/SimpleContextFetchingStrategy.js';\nimport type { IShardingStrategy } from './IShardingStrategy.js';\n\n/**\n * Simple strategy that just spawns shards in the current process\n */\nexport class SimpleShardingStrategy implements IShardingStrategy {\n\tprivate readonly manager: WebSocketManager;\n\n\tprivate readonly shards = new Collection<number, WebSocketShard>();\n\n\tpublic constructor(manager: WebSocketManager) {\n\t\tthis.manager = manager;\n\t}\n\n\t/**\n\t * {@inheritDoc IShardingStrategy.spawn}\n\t */\n\tpublic async spawn(shardIds: number[]) {\n\t\tconst strategyOptions = await managerToFetchingStrategyOptions(this.manager);\n\n\t\tfor (const shardId of shardIds) {\n\t\t\tconst strategy = new SimpleContextFetchingStrategy(this.manager, strategyOptions);\n\t\t\tconst shard = new WebSocketShard(strategy, shardId);\n\t\t\tfor (const event of Object.values(WebSocketShardEvents)) {\n\t\t\t\t// @ts-expect-error: Intentional\n\t\t\t\tshard.on(event, (payload) => this.manager.emit(event, { ...payload, shardId }));\n\t\t\t}\n\n\t\t\tthis.shards.set(shardId, shard);\n\t\t}\n\t}\n\n\t/**\n\t * {@inheritDoc IShardingStrategy.connect}\n\t */\n\tpublic async connect() {\n\t\tconst promises = [];\n\n\t\tfor (const shard of this.shards.values()) {\n\t\t\tpromises.push(shard.connect());\n\t\t}\n\n\t\tawait Promise.all(promises);\n\t}\n\n\t/**\n\t * {@inheritDoc IShardingStrategy.destroy}\n\t */\n\tpublic async destroy(options?: Omit<WebSocketShardDestroyOptions, 'recover'>) {\n\t\tconst promises = [];\n\n\t\tfor (const shard of this.shards.values()) {\n\t\t\tpromises.push(shard.destroy(options));\n\t\t}\n\n\t\tawait Promise.all(promises);\n\t\tthis.shards.clear();\n\t}\n\n\t/**\n\t * {@inheritDoc IShardingStrategy.send}\n\t */\n\tpublic async send(shardId: number, payload: GatewaySendPayload) {\n\t\tconst shard = this.shards.get(shardId);\n\t\tif (!shard) {\n\t\t\tthrow new RangeError(`Shard ${shardId} not found`);\n\t\t}\n\n\t\treturn shard.send(payload);\n\t}\n\n\t/**\n\t * {@inheritDoc IShardingStrategy.fetchStatus}\n\t */\n\tpublic async fetchStatus() {\n\t\treturn this.shards.mapValues((shard) => shard.status);\n\t}\n}\n", "/* eslint-disable id-length */\nimport { Buffer } from 'node:buffer';\nimport { once } from 'node:events';\nimport { clearInterval, clearTimeout, setInterval, setTimeout } from 'node:timers';\nimport { setTimeout as sleep } from 'node:timers/promises';\nimport { URLSearchParams } from 'node:url';\nimport { TextDecoder } from 'node:util';\nimport { inflate } from 'node:zlib';\nimport { Collection } from '@discordjs/collection';\nimport { lazy, shouldUseGlobalFetchAndWebSocket } from '@discordjs/util';\nimport { AsyncQueue } from '@sapphire/async-queue';\nimport { AsyncEventEmitter } from '@vladfrangu/async_event_emitter';\nimport {\n\tGatewayCloseCodes,\n\tGatewayDispatchEvents,\n\tGatewayOpcodes,\n\ttype GatewayDispatchPayload,\n\ttype GatewayIdentifyData,\n\ttype GatewayReadyDispatchData,\n\ttype GatewayReceivePayload,\n\ttype GatewaySendPayload,\n} from 'discord-api-types/v10';\nimport { WebSocket, type Data } from 'ws';\nimport type { Inflate } from 'zlib-sync';\nimport type { IContextFetchingStrategy } from '../strategies/context/IContextFetchingStrategy.js';\nimport { ImportantGatewayOpcodes, getInitialSendRateLimitState } from '../utils/constants.js';\nimport type { SessionInfo } from './WebSocketManager.js';\n\n// eslint-disable-next-line promise/prefer-await-to-then\nconst getZlibSync = lazy(async () => import('zlib-sync').then((mod) => mod.default).catch(() => null));\n\nexport enum WebSocketShardEvents {\n\tClosed = 'closed',\n\tDebug = 'debug',\n\tDispatch = 'dispatch',\n\tError = 'error',\n\tHeartbeatComplete = 'heartbeat',\n\tHello = 'hello',\n\tReady = 'ready',\n\tResumed = 'resumed',\n}\n\nexport enum WebSocketShardStatus {\n\tIdle,\n\tConnecting,\n\tResuming,\n\tReady,\n}\n\nexport enum WebSocketShardDestroyRecovery {\n\tReconnect,\n\tResume,\n}\n\nexport interface WebSocketShardEventsMap {\n\t[WebSocketShardEvents.Closed]: [{ code: number }];\n\t[WebSocketShardEvents.Debug]: [payload: { message: string }];\n\t[WebSocketShardEvents.Dispatch]: [payload: { data: GatewayDispatchPayload }];\n\t[WebSocketShardEvents.Error]: [payload: { error: Error }];\n\t[WebSocketShardEvents.Hello]: [];\n\t[WebSocketShardEvents.Ready]: [payload: { data: GatewayReadyDispatchData }];\n\t[WebSocketShardEvents.Resumed]: [];\n\t[WebSocketShardEvents.HeartbeatComplete]: [payload: { ackAt: number; heartbeatAt: number; latency: number }];\n}\n\nexport interface WebSocketShardDestroyOptions {\n\tcode?: number;\n\treason?: string;\n\trecover?: WebSocketShardDestroyRecovery;\n}\n\nexport enum CloseCodes {\n\tNormal = 1_000,\n\tResuming = 4_200,\n}\n\nexport interface SendRateLimitState {\n\tresetAt: number;\n\tsent: number;\n}\n\nconst WebSocketConstructor: typeof WebSocket = shouldUseGlobalFetchAndWebSocket()\n\t? (globalThis as any).WebSocket\n\t: WebSocket;\n\nexport class WebSocketShard extends AsyncEventEmitter<WebSocketShardEventsMap> {\n\tprivate connection: WebSocket | null = null;\n\n\tprivate useIdentifyCompress = false;\n\n\tprivate inflate: Inflate | null = null;\n\n\tprivate readonly textDecoder = new TextDecoder();\n\n\tprivate replayedEvents = 0;\n\n\tprivate isAck = true;\n\n\tprivate sendRateLimitState: SendRateLimitState = getInitialSendRateLimitState();\n\n\tprivate initialHeartbeatTimeoutController: AbortController | null = null;\n\n\tprivate heartbeatInterval: NodeJS.Timer | null = null;\n\n\tprivate lastHeartbeatAt = -1;\n\n\t// Indicates whether the shard has already resolved its original connect() call\n\tprivate initialConnectResolved = false;\n\n\t// Indicates if we failed to connect to the ws url (ECONNREFUSED/ECONNRESET)\n\tprivate failedToConnectDueToNetworkError = false;\n\n\tprivate readonly sendQueue = new AsyncQueue();\n\n\tprivate readonly timeoutAbortControllers = new Collection<WebSocketShardEvents, AbortController>();\n\n\tprivate readonly strategy: IContextFetchingStrategy;\n\n\tpublic readonly id: number;\n\n\t#status: WebSocketShardStatus = WebSocketShardStatus.Idle;\n\n\tpublic get status(): WebSocketShardStatus {\n\t\treturn this.#status;\n\t}\n\n\tpublic constructor(strategy: IContextFetchingStrategy, id: number) {\n\t\tsuper();\n\t\tthis.strategy = strategy;\n\t\tthis.id = id;\n\t}\n\n\tpublic async connect() {\n\t\tconst controller = new AbortController();\n\t\tlet promise;\n\n\t\tif (!this.initialConnectResolved) {\n\t\t\t// Sleep for the remaining time, but if the connection closes in the meantime, we shouldn't wait the remainder to avoid blocking the new conn\n\t\t\tpromise = Promise.race([\n\t\t\t\tonce(this, WebSocketShardEvents.Ready, { signal: controller.signal }),\n\t\t\t\tonce(this, WebSocketShardEvents.Resumed, { signal: controller.signal }),\n\t\t\t]);\n\t\t}\n\n\t\tvoid this.internalConnect();\n\n\t\ttry {\n\t\t\tawait promise;\n\t\t} catch ({ error }: any) {\n\t\t\tthrow error;\n\t\t} finally {\n\t\t\t// cleanup hanging listeners\n\t\t\tcontroller.abort();\n\t\t}\n\n\t\tthis.initialConnectResolved = true;\n\t}\n\n\tprivate async internalConnect() {\n\t\tif (this.#status !== WebSocketShardStatus.Idle) {\n\t\t\tthrow new Error(\"Tried to connect a shard that wasn't idle\");\n\t\t}\n\n\t\tconst { version, encoding, compression } = this.strategy.options;\n\t\tconst params = new URLSearchParams({ v: version, encoding });\n\t\tif (compression) {\n\t\t\tconst zlib = await getZlibSync();\n\t\t\tif (zlib) {\n\t\t\t\tparams.append('compress', compression);\n\t\t\t\tthis.inflate = new zlib.Inflate({\n\t\t\t\t\tchunkSize: 65_535,\n\t\t\t\t\tto: 'string',\n\t\t\t\t});\n\t\t\t} else if (!this.useIdentifyCompress) {\n\t\t\t\tthis.useIdentifyCompress = true;\n\t\t\t\tconsole.warn(\n\t\t\t\t\t'WebSocketShard: Compression is enabled but zlib-sync is not installed, falling back to identify compress',\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\tconst session = await this.strategy.retrieveSessionInfo(this.id);\n\n\t\tconst url = `${session?.resumeURL ?? this.strategy.options.gatewayInformation.url}?${params.toString()}`;\n\n\t\tthis.debug([`Connecting to ${url}`]);\n\n\t\tconst connection = new WebSocketConstructor(url, [], {\n\t\t\thandshakeTimeout: this.strategy.options.handshakeTimeout ?? undefined,\n\t\t});\n\n\t\tconnection.binaryType = 'arraybuffer';\n\n\t\tconnection.onmessage = (event) => {\n\t\t\tvoid this.onMessage(event.data, event.data instanceof ArrayBuffer);\n\t\t};\n\n\t\tconnection.onerror = (event) => {\n\t\t\tthis.onError(event.error);\n\t\t};\n\n\t\tconnection.onclose = (event) => {\n\t\t\tvoid this.onClose(event.code);\n\t\t};\n\n\t\tconnection.onopen = () => {\n\t\t\tthis.sendRateLimitState = getInitialSendRateLimitState();\n\t\t};\n\n\t\tthis.connection = connection;\n\n\t\tthis.#status = WebSocketShardStatus.Connecting;\n\n\t\tconst { ok } = await this.waitForEvent(WebSocketShardEvents.Hello, this.strategy.options.helloTimeout);\n\t\tif (!ok) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (session?.shardCount === this.strategy.options.shardCount) {\n\t\t\tawait this.resume(session);\n\t\t} else {\n\t\t\tawait this.identify();\n\t\t}\n\t}\n\n\tpublic async destroy(options: WebSocketShardDestroyOptions = {}) {\n\t\tif (this.#status === WebSocketShardStatus.Idle) {\n\t\t\tthis.debug(['Tried to destroy a shard that was idle']);\n\t\t\treturn;\n\t\t}\n\n\t\tif (!options.code) {\n\t\t\toptions.code = options.recover === WebSocketShardDestroyRecovery.Resume ? CloseCodes.Resuming : CloseCodes.Normal;\n\t\t}\n\n\t\tthis.debug([\n\t\t\t'Destroying shard',\n\t\t\t`Reason: ${options.reason ?? 'none'}`,\n\t\t\t`Code: ${options.code}`,\n\t\t\t`Recover: ${options.recover === undefined ? 'none' : WebSocketShardDestroyRecovery[options.recover]!}`,\n\t\t]);\n\n\t\t// Reset state\n\t\tthis.isAck = true;\n\t\tif (this.heartbeatInterval) {\n\t\t\tclearInterval(this.heartbeatInterval);\n\t\t}\n\n\t\tif (this.initialHeartbeatTimeoutController) {\n\t\t\tthis.initialHeartbeatTimeoutController.abort();\n\t\t\tthis.initialHeartbeatTimeoutController = null;\n\t\t}\n\n\t\tthis.lastHeartbeatAt = -1;\n\n\t\tfor (const controller of this.timeoutAbortControllers.values()) {\n\t\t\tcontroller.abort();\n\t\t}\n\n\t\tthis.timeoutAbortControllers.clear();\n\n\t\tthis.failedToConnectDueToNetworkError = false;\n\n\t\t// Clear session state if applicable\n\t\tif (options.recover !== WebSocketShardDestroyRecovery.Resume) {\n\t\t\tawait this.strategy.updateSessionInfo(this.id, null);\n\t\t}\n\n\t\tif (this.connection) {\n\t\t\t// No longer need to listen to messages\n\t\t\tthis.connection.onmessage = null;\n\t\t\t// Prevent a reconnection loop by unbinding the main close event\n\t\t\tthis.connection.onclose = null;\n\n\t\t\tconst shouldClose = this.connection.readyState === WebSocket.OPEN;\n\n\t\t\tthis.debug([\n\t\t\t\t'Connection status during destroy',\n\t\t\t\t`Needs closing: ${shouldClose}`,\n\t\t\t\t`Ready state: ${this.connection.readyState}`,\n\t\t\t]);\n\n\t\t\tif (shouldClose) {\n\t\t\t\tlet outerResolve: () => void;\n\t\t\t\tconst promise = new Promise<void>((resolve) => {\n\t\t\t\t\touterResolve = resolve;\n\t\t\t\t});\n\n\t\t\t\tthis.connection.onclose = outerResolve!;\n\n\t\t\t\tthis.connection.close(options.code, options.reason);\n\n\t\t\t\tawait promise;\n\t\t\t\tthis.emit(WebSocketShardEvents.Closed, { code: options.code });\n\t\t\t}\n\n\t\t\t// Lastly, remove the error event.\n\t\t\t// Doing this earlier would cause a hard crash in case an error event fired on our `close` call\n\t\t\tthis.connection.onerror = null;\n\t\t} else {\n\t\t\tthis.debug(['Destroying a shard that has no connection; please open an issue on GitHub']);\n\t\t}\n\n\t\tthis.#status = WebSocketShardStatus.Idle;\n\n\t\tif (options.recover !== undefined) {\n\t\t\t// There's cases (like no internet connection) where we immediately fail to connect,\n\t\t\t// causing a very fast and draining reconnection loop.\n\t\t\tawait sleep(500);\n\t\t\treturn this.internalConnect();\n\t\t}\n\t}\n\n\tprivate async waitForEvent(event: WebSocketShardEvents, timeoutDuration?: number | null): Promise<{ ok: boolean }> {\n\t\tthis.debug([`Waiting for event ${event} ${timeoutDuration ? `for ${timeoutDuration}ms` : 'indefinitely'}`]);\n\t\tconst timeoutController = new AbortController();\n\t\tconst timeout = timeoutDuration ? setTimeout(() => timeoutController.abort(), timeoutDuration).unref() : null;\n\n\t\tthis.timeoutAbortControllers.set(event, timeoutController);\n\n\t\tconst closeController = new AbortController();\n\n\t\ttry {\n\t\t\t// If the first promise resolves, all is well. If the 2nd promise resolves,\n\t\t\t// the shard has meanwhile closed. In that case, a destroy is already ongoing, so we just need to\n\t\t\t// return false. Meanwhile, if something rejects (error event) or the first controller is aborted,\n\t\t\t// we enter the catch block and trigger a destroy there.\n\t\t\tconst closed = await Promise.race<boolean>([\n\t\t\t\tonce(this, event, { signal: timeoutController.signal }).then(() => false),\n\t\t\t\tonce(this, WebSocketShardEvents.Closed, { signal: closeController.signal }).then(() => true),\n\t\t\t]);\n\n\t\t\treturn { ok: !closed };\n\t\t} catch {\n\t\t\t// If we're here because of other reasons, we need to destroy the shard\n\t\t\tvoid this.destroy({\n\t\t\t\tcode: CloseCodes.Normal,\n\t\t\t\treason: 'Something timed out or went wrong while waiting for an event',\n\t\t\t\trecover: WebSocketShardDestroyRecovery.Reconnect,\n\t\t\t});\n\n\t\t\treturn { ok: false };\n\t\t} finally {\n\t\t\tif (timeout) {\n\t\t\t\tclearTimeout(timeout);\n\t\t\t}\n\n\t\t\tthis.timeoutAbortControllers.delete(event);\n\n\t\t\t// Clean up the close listener to not leak memory\n\t\t\tif (!closeController.signal.aborted) {\n\t\t\t\tcloseController.abort();\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic async send(payload: GatewaySendPayload): Promise<void> {\n\t\tif (!this.connection) {\n\t\t\tthrow new Error(\"WebSocketShard wasn't connected\");\n\t\t}\n\n\t\t// Generally, the way we treat payloads is 115/60 seconds. The actual limit is 120/60, so we have a bit of leeway.\n\t\t// We use that leeway for those special payloads that we just fire with no checking, since there's no shot we ever\n\t\t// send more than 5 of those in a 60 second interval. This way we can avoid more complex queueing logic.\n\n\t\tif (ImportantGatewayOpcodes.has(payload.op)) {\n\t\t\tthis.connection.send(JSON.stringify(payload));\n\t\t\treturn;\n\t\t}\n\n\t\tif (this.#status !== WebSocketShardStatus.Ready && !ImportantGatewayOpcodes.has(payload.op)) {\n\t\t\tthis.debug(['Tried to send a non-crucial payload before the shard was ready, waiting']);\n\t\t\t// This will throw if the shard throws an error event in the meantime, just requeue the payload\n\t\t\ttry {\n\t\t\t\tawait once(this, WebSocketShardEvents.Ready);\n\t\t\t} catch {\n\t\t\t\treturn this.send(payload);\n\t\t\t}\n\t\t}\n\n\t\tawait this.sendQueue.wait();\n\n\t\tconst now = Date.now();\n\t\tif (now >= this.sendRateLimitState.resetAt) {\n\t\t\tthis.sendRateLimitState = getInitialSendRateLimitState();\n\t\t}\n\n\t\tif (this.sendRateLimitState.sent + 1 >= 115) {\n\t\t\t// Sprinkle in a little randomness just in case.\n\t\t\tconst sleepFor = this.sendRateLimitState.resetAt - now + Math.random() * 1_500;\n\n\t\t\tthis.debug([`Was about to hit the send rate limit, sleeping for ${sleepFor}ms`]);\n\t\t\tconst controller = new AbortController();\n\n\t\t\t// Sleep for the remaining time, but if the connection closes in the meantime, we shouldn't wait the remainder to avoid blocking the new conn\n\t\t\tconst interrupted = await Promise.race([\n\t\t\t\tsleep(sleepFor).then(() => false),\n\t\t\t\tonce(this, WebSocketShardEvents.Closed, { signal: controller.signal }).then(() => true),\n\t\t\t]);\n\n\t\t\tif (interrupted) {\n\t\t\t\tthis.debug(['Connection closed while waiting for the send rate limit to reset, re-queueing payload']);\n\t\t\t\tthis.sendQueue.shift();\n\t\t\t\treturn this.send(payload);\n\t\t\t}\n\n\t\t\t// This is so the listener from the `once` call is removed\n\t\t\tcontroller.abort();\n\t\t}\n\n\t\tthis.sendRateLimitState.sent++;\n\n\t\tthis.sendQueue.shift();\n\t\tthis.connection.send(JSON.stringify(payload));\n\t}\n\n\tprivate async identify() {\n\t\tthis.debug(['Waiting for identify throttle']);\n\n\t\tconst controller = new AbortController();\n\t\tconst closeHandler = () => {\n\t\t\tcontroller.abort();\n\t\t};\n\n\t\tthis.on(WebSocketShardEvents.Closed, closeHandler);\n\n\t\ttry {\n\t\t\tawait this.strategy.waitForIdentify(this.id, controller.signal);\n\t\t} catch {\n\t\t\tif (controller.signal.aborted) {\n\t\t\t\tthis.debug(['Was waiting for an identify, but the shard closed in the meantime']);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.debug([\n\t\t\t\t'IContextFetchingStrategy#waitForIdentify threw an unknown error.',\n\t\t\t\t\"If you're using a custom strategy, this is probably nothing to worry about.\",\n\t\t\t\t\"If you're not, please open an issue on GitHub.\",\n\t\t\t]);\n\n\t\t\tawait this.destroy({\n\t\t\t\treason: 'Identify throttling logic failed',\n\t\t\t\trecover: WebSocketShardDestroyRecovery.Resume,\n\t\t\t});\n\t\t} finally {\n\t\t\tthis.off(WebSocketShardEvents.Closed, closeHandler);\n\t\t}\n\n\t\tthis.debug([\n\t\t\t'Identifying',\n\t\t\t`shard id: ${this.id.toString()}`,\n\t\t\t`shard count: ${this.strategy.options.shardCount}`,\n\t\t\t`intents: ${this.strategy.options.intents}`,\n\t\t\t`compression: ${this.inflate ? 'zlib-stream' : this.useIdentifyCompress ? 'identify' : 'none'}`,\n\t\t]);\n\n\t\tconst d: GatewayIdentifyData = {\n\t\t\ttoken: this.strategy.options.token,\n\t\t\tproperties: this.strategy.options.identifyProperties,\n\t\t\tintents: this.strategy.options.intents,\n\t\t\tcompress: this.useIdentifyCompress,\n\t\t\tshard: [this.id, this.strategy.options.shardCount],\n\t\t};\n\n\t\tif (this.strategy.options.largeThreshold) {\n\t\t\td.large_threshold = this.strategy.options.largeThreshold;\n\t\t}\n\n\t\tif (this.strategy.options.initialPresence) {\n\t\t\td.presence = this.strategy.options.initialPresence;\n\t\t}\n\n\t\tawait this.send({\n\t\t\top: GatewayOpcodes.Identify,\n\t\t\td,\n\t\t});\n\n\t\tawait this.waitForEvent(WebSocketShardEvents.Ready, this.strategy.options.readyTimeout);\n\t}\n\n\tprivate async resume(session: SessionInfo) {\n\t\tthis.debug([\n\t\t\t'Resuming session',\n\t\t\t`resume url: ${session.resumeURL}`,\n\t\t\t`sequence: ${session.sequence}`,\n\t\t\t`shard id: ${this.id.toString()}`,\n\t\t]);\n\n\t\tthis.#status = WebSocketShardStatus.Resuming;\n\t\tthis.replayedEvents = 0;\n\t\treturn this.send({\n\t\t\top: GatewayOpcodes.Resume,\n\t\t\td: {\n\t\t\t\ttoken: this.strategy.options.token,\n\t\t\t\tseq: session.sequence,\n\t\t\t\tsession_id: session.sessionId,\n\t\t\t},\n\t\t});\n\t}\n\n\tprivate async heartbeat(requested = false) {\n\t\tif (!this.isAck && !requested) {\n\t\t\treturn this.destroy({ reason: 'Zombie connection', recover: WebSocketShardDestroyRecovery.Resume });\n\t\t}\n\n\t\tconst session = await this.strategy.retrieveSessionInfo(this.id);\n\n\t\tawait this.send({\n\t\t\top: GatewayOpcodes.Heartbeat,\n\t\t\td: session?.sequence ?? null,\n\t\t});\n\n\t\tthis.lastHeartbeatAt = Date.now();\n\t\tthis.isAck = false;\n\t}\n\n\tprivate async unpackMessage(data: Data, isBinary: boolean): Promise<GatewayReceivePayload | null> {\n\t\t// Deal with no compression\n\t\tif (!isBinary) {\n\t\t\ttry {\n\t\t\t\treturn JSON.parse(data as string) as GatewayReceivePayload;\n\t\t\t} catch {\n\t\t\t\t// This is a non-JSON payload / (at the time of writing this comment) emitted by bun wrongly interpreting custom close codes https://github.com/oven-sh/bun/issues/3392\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}\n\n\t\tconst decompressable = new Uint8Array(data as ArrayBuffer);\n\n\t\t// Deal with identify compress\n\t\tif (this.useIdentifyCompress) {\n\t\t\treturn new Promise((resolve, reject) => {\n\t\t\t\t// eslint-disable-next-line promise/prefer-await-to-callbacks\n\t\t\t\tinflate(decompressable, { chunkSize: 65_535 }, (err, result) => {\n\t\t\t\t\tif (err) {\n\t\t\t\t\t\treject(err);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tresolve(JSON.parse(this.textDecoder.decode(result)) as GatewayReceivePayload);\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\n\t\t// Deal with gw wide zlib-stream compression\n\t\tif (this.inflate) {\n\t\t\tconst l = decompressable.length;\n\t\t\tconst flush =\n\t\t\t\tl >= 4 &&\n\t\t\t\tdecompressable[l - 4] === 0x00 &&\n\t\t\t\tdecompressable[l - 3] === 0x00 &&\n\t\t\t\tdecompressable[l - 2] === 0xff &&\n\t\t\t\tdecompressable[l - 1] === 0xff;\n\n\t\t\tconst zlib = (await getZlibSync())!;\n\t\t\tthis.inflate.push(Buffer.from(decompressable), flush ? zlib.Z_SYNC_FLUSH : zlib.Z_NO_FLUSH);\n\n\t\t\tif (this.inflate.err) {\n\t\t\t\tthis.emit(WebSocketShardEvents.Error, {\n\t\t\t\t\terror: new Error(`${this.inflate.err}${this.inflate.msg ? `: ${this.inflate.msg}` : ''}`),\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tif (!flush) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tconst { result } = this.inflate;\n\t\t\tif (!result) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\treturn JSON.parse(typeof result === 'string' ? result : this.textDecoder.decode(result)) as GatewayReceivePayload;\n\t\t}\n\n\t\tthis.debug([\n\t\t\t'Received a message we were unable to decompress',\n\t\t\t`isBinary: ${isBinary.toString()}`,\n\t\t\t`useIdentifyCompress: ${this.useIdentifyCompress.toString()}`,\n\t\t\t`inflate: ${Boolean(this.inflate).toString()}`,\n\t\t]);\n\n\t\treturn null;\n\t}\n\n\tprivate async onMessage(data: Data, isBinary: boolean) {\n\t\tconst payload = await this.unpackMessage(data, isBinary);\n\t\tif (!payload) {\n\t\t\treturn;\n\t\t}\n\n\t\tswitch (payload.op) {\n\t\t\tcase GatewayOpcodes.Dispatch: {\n\t\t\t\tif (this.#status === WebSocketShardStatus.Resuming) {\n\t\t\t\t\tthis.replayedEvents++;\n\t\t\t\t}\n\n\t\t\t\t// eslint-disable-next-line sonarjs/no-nested-switch\n\t\t\t\tswitch (payload.t) {\n\t\t\t\t\tcase GatewayDispatchEvents.Ready: {\n\t\t\t\t\t\tthis.#status = WebSocketShardStatus.Ready;\n\n\t\t\t\t\t\tconst session = {\n\t\t\t\t\t\t\tsequence: payload.s,\n\t\t\t\t\t\t\tsessionId: payload.d.session_id,\n\t\t\t\t\t\t\tshardId: this.id,\n\t\t\t\t\t\t\tshardCount: this.strategy.options.shardCount,\n\t\t\t\t\t\t\tresumeURL: payload.d.resume_gateway_url,\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tawait this.strategy.updateSessionInfo(this.id, session);\n\n\t\t\t\t\t\tthis.emit(WebSocketShardEvents.Ready, { data: payload.d });\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tcase GatewayDispatchEvents.Resumed: {\n\t\t\t\t\t\tthis.#status = WebSocketShardStatus.Ready;\n\t\t\t\t\t\tthis.debug([`Resumed and replayed ${this.replayedEvents} events`]);\n\t\t\t\t\t\tthis.emit(WebSocketShardEvents.Resumed);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tdefault: {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tconst session = await this.strategy.retrieveSessionInfo(this.id);\n\t\t\t\tif (session) {\n\t\t\t\t\tif (payload.s > session.sequence) {\n\t\t\t\t\t\tawait this.strategy.updateSessionInfo(this.id, { ...session, sequence: payload.s });\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tthis.debug([\n\t\t\t\t\t\t`Received a ${payload.t} event but no session is available. Session information cannot be re-constructed in this state without a full reconnect`,\n\t\t\t\t\t]);\n\t\t\t\t}\n\n\t\t\t\tthis.emit(WebSocketShardEvents.Dispatch, { data: payload });\n\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tcase GatewayOpcodes.Heartbeat: {\n\t\t\t\tawait this.heartbeat(true);\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tcase GatewayOpcodes.Reconnect: {\n\t\t\t\tawait this.destroy({\n\t\t\t\t\treason: 'Told to reconnect by Discord',\n\t\t\t\t\trecover: WebSocketShardDestroyRecovery.Resume,\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tcase GatewayOpcodes.InvalidSession: {\n\t\t\t\tthis.debug([`Invalid session; will attempt to resume: ${payload.d.toString()}`]);\n\t\t\t\tconst session = await this.strategy.retrieveSessionInfo(this.id);\n\t\t\t\tif (payload.d && session) {\n\t\t\t\t\tawait this.resume(session);\n\t\t\t\t} else {\n\t\t\t\t\tawait this.destroy({\n\t\t\t\t\t\treason: 'Invalid session',\n\t\t\t\t\t\trecover: WebSocketShardDestroyRecovery.Reconnect,\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tcase GatewayOpcodes.Hello: {\n\t\t\t\tthis.emit(WebSocketShardEvents.Hello);\n\t\t\t\tconst jitter = Math.random();\n\t\t\t\tconst firstWait = Math.floor(payload.d.heartbeat_interval * jitter);\n\t\t\t\tthis.debug([`Preparing first heartbeat of the connection with a jitter of ${jitter}; waiting ${firstWait}ms`]);\n\n\t\t\t\ttry {\n\t\t\t\t\tconst controller = new AbortController();\n\t\t\t\t\tthis.initialHeartbeatTimeoutController = controller;\n\t\t\t\t\tawait sleep(firstWait, undefined, { signal: controller.signal });\n\t\t\t\t} catch {\n\t\t\t\t\tthis.debug(['Cancelled initial heartbeat due to #destroy being called']);\n\t\t\t\t\treturn;\n\t\t\t\t} finally {\n\t\t\t\t\tthis.initialHeartbeatTimeoutController = null;\n\t\t\t\t}\n\n\t\t\t\tawait this.heartbeat();\n\n\t\t\t\tthis.debug([`First heartbeat sent, starting to beat every ${payload.d.heartbeat_interval}ms`]);\n\t\t\t\tthis.heartbeatInterval = setInterval(() => void this.heartbeat(), payload.d.heartbeat_interval);\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tcase GatewayOpcodes.HeartbeatAck: {\n\t\t\t\tthis.isAck = true;\n\n\t\t\t\tconst ackAt = Date.now();\n\t\t\t\tthis.emit(WebSocketShardEvents.HeartbeatComplete, {\n\t\t\t\t\tackAt,\n\t\t\t\t\theartbeatAt: this.lastHeartbeatAt,\n\t\t\t\t\tlatency: ackAt - this.lastHeartbeatAt,\n\t\t\t\t});\n\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate onError(error: Error) {\n\t\tif ('code' in error && ['ECONNRESET', 'ECONNREFUSED'].includes(error.code as string)) {\n\t\t\tthis.debug(['Failed to connect to the gateway URL specified due to a network error']);\n\t\t\tthis.failedToConnectDueToNetworkError = true;\n\t\t\treturn;\n\t\t}\n\n\t\tthis.emit(WebSocketShardEvents.Error, { error });\n\t}\n\n\tprivate async onClose(code: number) {\n\t\tthis.emit(WebSocketShardEvents.Closed, { code });\n\n\t\tswitch (code) {\n\t\t\tcase CloseCodes.Normal: {\n\t\t\t\treturn this.destroy({\n\t\t\t\t\tcode,\n\t\t\t\t\treason: 'Got disconnected by Discord',\n\t\t\t\t\trecover: WebSocketShardDestroyRecovery.Reconnect,\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tcase CloseCodes.Resuming: {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tcase GatewayCloseCodes.UnknownError: {\n\t\t\t\tthis.debug([`An unknown error occurred: ${code}`]);\n\t\t\t\treturn this.destroy({ code, recover: WebSocketShardDestroyRecovery.Resume });\n\t\t\t}\n\n\t\t\tcase GatewayCloseCodes.UnknownOpcode: {\n\t\t\t\tthis.debug(['An invalid opcode was sent to Discord.']);\n\t\t\t\treturn this.destroy({ code, recover: WebSocketShardDestroyRecovery.Resume });\n\t\t\t}\n\n\t\t\tcase GatewayCloseCodes.DecodeError: {\n\t\t\t\tthis.debug(['An invalid payload was sent to Discord.']);\n\t\t\t\treturn this.destroy({ code, recover: WebSocketShardDestroyRecovery.Resume });\n\t\t\t}\n\n\t\t\tcase GatewayCloseCodes.NotAuthenticated: {\n\t\t\t\tthis.debug(['A request was somehow sent before the identify/resume payload.']);\n\t\t\t\treturn this.destroy({ code, recover: WebSocketShardDestroyRecovery.Reconnect });\n\t\t\t}\n\n\t\t\tcase GatewayCloseCodes.AuthenticationFailed: {\n\t\t\t\tthis.emit(WebSocketShardEvents.Error, {\n\t\t\t\t\terror: new Error('Authentication failed'),\n\t\t\t\t});\n\t\t\t\treturn this.destroy({ code });\n\t\t\t}\n\n\t\t\tcase GatewayCloseCodes.AlreadyAuthenticated: {\n\t\t\t\tthis.debug(['More than one auth payload was sent.']);\n\t\t\t\treturn this.destroy({ code, recover: WebSocketShardDestroyRecovery.Reconnect });\n\t\t\t}\n\n\t\t\tcase GatewayCloseCodes.InvalidSeq: {\n\t\t\t\tthis.debug(['An invalid sequence was sent.']);\n\t\t\t\treturn this.destroy({ code, recover: WebSocketShardDestroyRecovery.Reconnect });\n\t\t\t}\n\n\t\t\tcase GatewayCloseCodes.RateLimited: {\n\t\t\t\tthis.debug(['The WebSocket rate limit has been hit, this should never happen']);\n\t\t\t\treturn this.destroy({ code, recover: WebSocketShardDestroyRecovery.Reconnect });\n\t\t\t}\n\n\t\t\tcase GatewayCloseCodes.SessionTimedOut: {\n\t\t\t\tthis.debug(['Session timed out.']);\n\t\t\t\treturn this.destroy({ code, recover: WebSocketShardDestroyRecovery.Resume });\n\t\t\t}\n\n\t\t\tcase GatewayCloseCodes.InvalidShard: {\n\t\t\t\tthis.emit(WebSocketShardEvents.Error, {\n\t\t\t\t\terror: new Error('Invalid shard'),\n\t\t\t\t});\n\t\t\t\treturn this.destroy({ code });\n\t\t\t}\n\n\t\t\tcase GatewayCloseCodes.ShardingRequired: {\n\t\t\t\tthis.emit(WebSocketShardEvents.Error, {\n\t\t\t\t\terror: new Error('Sharding is required'),\n\t\t\t\t});\n\t\t\t\treturn this.destroy({ code });\n\t\t\t}\n\n\t\t\tcase GatewayCloseCodes.InvalidAPIVersion: {\n\t\t\t\tthis.emit(WebSocketShardEvents.Error, {\n\t\t\t\t\terror: new Error('Used an invalid API version'),\n\t\t\t\t});\n\t\t\t\treturn this.destroy({ code });\n\t\t\t}\n\n\t\t\tcase GatewayCloseCodes.InvalidIntents: {\n\t\t\t\tthis.emit(WebSocketShardEvents.Error, {\n\t\t\t\t\terror: new Error('Used invalid intents'),\n\t\t\t\t});\n\t\t\t\treturn this.destroy({ code });\n\t\t\t}\n\n\t\t\tcase GatewayCloseCodes.DisallowedIntents: {\n\t\t\t\tthis.emit(WebSocketShardEvents.Error, {\n\t\t\t\t\terror: new Error('Used disallowed intents'),\n\t\t\t\t});\n\t\t\t\treturn this.destroy({ code });\n\t\t\t}\n\n\t\t\tdefault: {\n\t\t\t\tthis.debug([\n\t\t\t\t\t`The gateway closed with an unexpected code ${code}, attempting to ${\n\t\t\t\t\t\tthis.failedToConnectDueToNetworkError ? 'reconnect' : 'resume'\n\t\t\t\t\t}.`,\n\t\t\t\t]);\n\t\t\t\treturn this.destroy({\n\t\t\t\t\tcode,\n\t\t\t\t\trecover: this.failedToConnectDueToNetworkError\n\t\t\t\t\t\t? WebSocketShardDestroyRecovery.Reconnect\n\t\t\t\t\t\t: WebSocketShardDestroyRecovery.Resume,\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate debug(messages: [string, ...string[]]) {\n\t\tconst message = `${messages[0]}${\n\t\t\tmessages.length > 1\n\t\t\t\t? `\\n${messages\n\t\t\t\t\t\t.slice(1)\n\t\t\t\t\t\t.map((m) => `\t${m}`)\n\t\t\t\t\t\t.join('\\n')}`\n\t\t\t\t: ''\n\t\t}`;\n\n\t\tthis.emit(WebSocketShardEvents.Debug, { message });\n\t}\n}\n", "import process from 'node:process';\nimport { Collection } from '@discordjs/collection';\nimport { lazy } from '@discordjs/util';\nimport { APIVersion, GatewayOpcodes } from 'discord-api-types/v10';\nimport { SimpleShardingStrategy } from '../strategies/sharding/SimpleShardingStrategy.js';\nimport { SimpleIdentifyThrottler } from '../throttling/SimpleIdentifyThrottler.js';\nimport type { SessionInfo, OptionalWebSocketManagerOptions, WebSocketManager } from '../ws/WebSocketManager.js';\nimport type { SendRateLimitState } from '../ws/WebSocketShard.js';\n\n/**\n * Valid encoding types\n */\nexport enum Encoding {\n\tJSON = 'json',\n}\n\n/**\n * Valid compression methods\n */\nexport enum CompressionMethod {\n\tZlibStream = 'zlib-stream',\n}\n\nexport const DefaultDeviceProperty = `@discordjs/ws 1.1.1` as `@discordjs/ws ${string}`;\n\nconst getDefaultSessionStore = lazy(() => new Collection<number, SessionInfo | null>());\n\n/**\n * Default options used by the manager\n */\nexport const DefaultWebSocketManagerOptions = {\n\tasync buildIdentifyThrottler(manager: WebSocketManager) {\n\t\tconst info = await manager.fetchGatewayInformation();\n\t\treturn new SimpleIdentifyThrottler(info.session_start_limit.max_concurrency);\n\t},\n\tbuildStrategy: (manager) => new SimpleShardingStrategy(manager),\n\tshardCount: null,\n\tshardIds: null,\n\tlargeThreshold: null,\n\tinitialPresence: null,\n\tidentifyProperties: {\n\t\tbrowser: DefaultDeviceProperty,\n\t\tdevice: DefaultDeviceProperty,\n\t\tos: process.platform,\n\t},\n\tversion: APIVersion,\n\tencoding: Encoding.JSON,\n\tcompression: null,\n\tretrieveSessionInfo(shardId) {\n\t\tconst store = getDefaultSessionStore();\n\t\treturn store.get(shardId) ?? null;\n\t},\n\tupdateSessionInfo(shardId: number, info: SessionInfo | null) {\n\t\tconst store = getDefaultSessionStore();\n\t\tif (info) {\n\t\t\tstore.set(shardId, info);\n\t\t} else {\n\t\t\tstore.delete(shardId);\n\t\t}\n\t},\n\thandshakeTimeout: 30_000,\n\thelloTimeout: 60_000,\n\treadyTimeout: 15_000,\n} as const satisfies OptionalWebSocketManagerOptions;\n\nexport const ImportantGatewayOpcodes = new Set([\n\tGatewayOpcodes.Heartbeat,\n\tGatewayOpcodes.Identify,\n\tGatewayOpcodes.Resume,\n]);\n\nexport function getInitialSendRateLimitState(): SendRateLimitState {\n\treturn {\n\t\tsent: 0,\n\t\tresetAt: Date.now() + 60_000,\n\t};\n}\n", "import { setTimeout as sleep } from 'node:timers/promises';\nimport { Collection } from '@discordjs/collection';\nimport { AsyncQueue } from '@sapphire/async-queue';\nimport type { IIdentifyThrottler } from './IIdentifyThrottler.js';\n\n/**\n * The state of a rate limit key's identify queue.\n */\nexport interface IdentifyState {\n\tqueue: AsyncQueue;\n\tresetsAt: number;\n}\n\n/**\n * Local, in-memory identify throttler.\n */\nexport class SimpleIdentifyThrottler implements IIdentifyThrottler {\n\tprivate readonly states = new Collection<number, IdentifyState>();\n\n\tpublic constructor(private readonly maxConcurrency: number) {}\n\n\t/**\n\t * {@inheritDoc IIdentifyThrottler.waitForIdentify}\n\t */\n\tpublic async waitForIdentify(shardId: number, signal: AbortSignal): Promise<void> {\n\t\tconst key = shardId % this.maxConcurrency;\n\n\t\tconst state = this.states.ensure(key, () => {\n\t\t\treturn {\n\t\t\t\tqueue: new AsyncQueue(),\n\t\t\t\tresetsAt: Number.POSITIVE_INFINITY,\n\t\t\t};\n\t\t});\n\n\t\tawait state.queue.wait({ signal });\n\n\t\ttry {\n\t\t\tconst diff = state.resetsAt - Date.now();\n\t\t\tif (diff <= 5_000) {\n\t\t\t\t// To account for the latency the IDENTIFY payload goes through, we add a bit more wait time\n\t\t\t\tconst time = diff + Math.random() * 1_500;\n\t\t\t\tawait sleep(time);\n\t\t\t}\n\n\t\t\tstate.resetsAt = Date.now() + 5_000;\n\t\t} finally {\n\t\t\tstate.queue.shift();\n\t\t}\n\t}\n}\n", "import { isMainThread, parentPort, workerData } from 'node:worker_threads';\nimport { Collection } from '@discordjs/collection';\nimport type { Awaitable } from '@discordjs/util';\nimport { WorkerContextFetchingStrategy } from '../strategies/context/WorkerContextFetchingStrategy.js';\nimport {\n\tWorkerReceivePayloadOp,\n\tWorkerSendPayloadOp,\n\ttype WorkerData,\n\ttype WorkerReceivePayload,\n\ttype WorkerSendPayload,\n} from '../strategies/sharding/WorkerShardingStrategy.js';\nimport type { WebSocketShardDestroyOptions } from '../ws/WebSocketShard.js';\nimport { WebSocketShardEvents, WebSocketShard } from '../ws/WebSocketShard.js';\n\n/**\n * Options for bootstrapping the worker\n */\nexport interface BootstrapOptions {\n\t/**\n\t * Shard events to just arbitrarily forward to the parent thread for the manager to emit\n\t * Note: By default, this will include ALL events\n\t * you most likely want to handle dispatch within the worker itself\n\t */\n\tforwardEvents?: WebSocketShardEvents[];\n\t/**\n\t * Function to call when a shard is created for additional setup\n\t */\n\tshardCallback?(shard: WebSocketShard): Awaitable<void>;\n}\n\n/**\n * Utility class for bootstrapping a worker thread to be used for sharding\n */\nexport class WorkerBootstrapper {\n\t/**\n\t * The data passed to the worker thread\n\t */\n\tprotected readonly data = workerData as WorkerData;\n\n\t/**\n\t * The shards that are managed by this worker\n\t */\n\tprotected readonly shards = new Collection<number, WebSocketShard>();\n\n\tpublic constructor() {\n\t\tif (isMainThread) {\n\t\t\tthrow new Error('Expected WorkerBootstrap to not be used within the main thread');\n\t\t}\n\t}\n\n\t/**\n\t * Helper method to initiate a shard's connection process\n\t */\n\tprotected async connect(shardId: number): Promise<void> {\n\t\tconst shard = this.shards.get(shardId);\n\t\tif (!shard) {\n\t\t\tthrow new RangeError(`Shard ${shardId} does not exist`);\n\t\t}\n\n\t\tawait shard.connect();\n\t}\n\n\t/**\n\t * Helper method to destroy a shard\n\t */\n\tprotected async destroy(shardId: number, options?: WebSocketShardDestroyOptions): Promise<void> {\n\t\tconst shard = this.shards.get(shardId);\n\t\tif (!shard) {\n\t\t\tthrow new RangeError(`Shard ${shardId} does not exist`);\n\t\t}\n\n\t\tawait shard.destroy(options);\n\t}\n\n\t/**\n\t * Helper method to attach event listeners to the parentPort\n\t */\n\tprotected setupThreadEvents(): void {\n\t\tparentPort!\n\t\t\t.on('messageerror', (err) => {\n\t\t\t\tthrow err;\n\t\t\t})\n\t\t\t.on('message', async (payload: WorkerSendPayload) => {\n\t\t\t\tswitch (payload.op) {\n\t\t\t\t\tcase WorkerSendPayloadOp.Connect: {\n\t\t\t\t\t\tawait this.connect(payload.shardId);\n\t\t\t\t\t\tconst response: WorkerReceivePayload = {\n\t\t\t\t\t\t\top: WorkerReceivePayloadOp.Connected,\n\t\t\t\t\t\t\tshardId: payload.shardId,\n\t\t\t\t\t\t};\n\t\t\t\t\t\tparentPort!.postMessage(response);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tcase WorkerSendPayloadOp.Destroy: {\n\t\t\t\t\t\tawait this.destroy(payload.shardId, payload.options);\n\t\t\t\t\t\tconst response: WorkerReceivePayload = {\n\t\t\t\t\t\t\top: WorkerReceivePayloadOp.Destroyed,\n\t\t\t\t\t\t\tshardId: payload.shardId,\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tparentPort!.postMessage(response);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tcase WorkerSendPayloadOp.Send: {\n\t\t\t\t\t\tconst shard = this.shards.get(payload.shardId);\n\t\t\t\t\t\tif (!shard) {\n\t\t\t\t\t\t\tthrow new RangeError(`Shard ${payload.shardId} does not exist`);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tawait shard.send(payload.payload);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tcase WorkerSendPayloadOp.SessionInfoResponse: {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tcase WorkerSendPayloadOp.ShardIdentifyResponse: {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tcase WorkerSendPayloadOp.FetchStatus: {\n\t\t\t\t\t\tconst shard = this.shards.get(payload.shardId);\n\t\t\t\t\t\tif (!shard) {\n\t\t\t\t\t\t\tthrow new Error(`Shard ${payload.shardId} does not exist`);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst response: WorkerReceivePayload = {\n\t\t\t\t\t\t\top: WorkerReceivePayloadOp.FetchStatusResponse,\n\t\t\t\t\t\t\tstatus: shard.status,\n\t\t\t\t\t\t\tnonce: payload.nonce,\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tparentPort!.postMessage(response);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\t/**\n\t * Bootstraps the worker thread with the provided options\n\t */\n\tpublic async bootstrap(options: Readonly<BootstrapOptions> = {}): Promise<void> {\n\t\t// Start by initializing the shards\n\t\tfor (const shardId of this.data.shardIds) {\n\t\t\tconst shard = new WebSocketShard(new WorkerContextFetchingStrategy(this.data), shardId);\n\t\t\tfor (const event of options.forwardEvents ?? Object.values(WebSocketShardEvents)) {\n\t\t\t\t// @ts-expect-error: Event types incompatible\n\t\t\t\tshard.on(event, (data) => {\n\t\t\t\t\tconst payload: WorkerReceivePayload = {\n\t\t\t\t\t\top: WorkerReceivePayloadOp.Event,\n\t\t\t\t\t\tevent,\n\t\t\t\t\t\tdata,\n\t\t\t\t\t\tshardId,\n\t\t\t\t\t};\n\t\t\t\t\tparentPort!.postMessage(payload);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// Any additional setup the user might want to do\n\t\t\tawait options.shardCallback?.(shard);\n\t\t\tthis.shards.set(shardId, shard);\n\t\t}\n\n\t\t// Lastly, start listening to messages from the parent thread\n\t\tthis.setupThreadEvents();\n\n\t\tconst message: WorkerReceivePayload = {\n\t\t\top: WorkerReceivePayloadOp.WorkerReady,\n\t\t};\n\t\tparentPort!.postMessage(message);\n\t}\n}\n", "import type { REST } from '@discordjs/rest';\nimport { range, type Awaitable } from '@discordjs/util';\nimport { polyfillDispose } from '@discordjs/util';\nimport { AsyncEventEmitter } from '@vladfrangu/async_event_emitter';\nimport {\n\tRoutes,\n\ttype APIGatewayBotInfo,\n\ttype GatewayIdentifyProperties,\n\ttype GatewayPresenceUpdateData,\n\ttype RESTGetAPIGatewayBotResult,\n\ttype GatewayIntentBits,\n\ttype GatewaySendPayload,\n\ttype GatewayDispatchPayload,\n\ttype GatewayReadyDispatchData,\n} from 'discord-api-types/v10';\nimport type { IShardingStrategy } from '../strategies/sharding/IShardingStrategy.js';\nimport type { IIdentifyThrottler } from '../throttling/IIdentifyThrottler.js';\nimport { DefaultWebSocketManagerOptions, type CompressionMethod, type Encoding } from '../utils/constants.js';\nimport type { WebSocketShardDestroyOptions, WebSocketShardEvents } from './WebSocketShard.js';\n\n// We put this here because in index.ts WebSocketManager seems to be outputted before polyfillDispose() is called from tsup.\npolyfillDispose();\n\n/**\n * Represents a range of shard ids\n */\nexport interface ShardRange {\n\tend: number;\n\tstart: number;\n}\n\n/**\n * Session information for a given shard, used to resume a session\n */\nexport interface SessionInfo {\n\t/**\n\t * URL to use when resuming\n\t */\n\tresumeURL: string;\n\t/**\n\t * The sequence number of the last message sent by the shard\n\t */\n\tsequence: number;\n\t/**\n\t * Session id for this shard\n\t */\n\tsessionId: string;\n\t/**\n\t * The total number of shards at the time of this shard identifying\n\t */\n\tshardCount: number;\n\t/**\n\t * The id of the shard\n\t */\n\tshardId: number;\n}\n\n/**\n * Required options for the WebSocketManager\n */\nexport interface RequiredWebSocketManagerOptions {\n\t/**\n\t * The intents to request\n\t */\n\tintents: GatewayIntentBits | 0;\n\t/**\n\t * The REST instance to use for fetching gateway information\n\t */\n\trest: REST;\n\t/**\n\t * The token to use for identifying with the gateway\n\t */\n\ttoken: string;\n}\n\n/**\n * Optional additional configuration for the WebSocketManager\n */\nexport interface OptionalWebSocketManagerOptions {\n\t/**\n\t * Builds an identify throttler to use for this manager's shards\n\t */\n\tbuildIdentifyThrottler(manager: WebSocketManager): Awaitable<IIdentifyThrottler>;\n\t/**\n\t * Builds the strategy to use for sharding\n\t *\n\t * @example\n\t * ```ts\n\t * const manager = new WebSocketManager({\n\t *  token: process.env.DISCORD_TOKEN,\n\t *  intents: 0, // for no intents\n\t *  rest,\n\t *  buildStrategy: (manager) => new WorkerShardingStrategy(manager, { shardsPerWorker: 2 }),\n\t * });\n\t * ```\n\t */\n\tbuildStrategy(manager: WebSocketManager): IShardingStrategy;\n\t/**\n\t * The compression method to use\n\t *\n\t * @defaultValue `null` (no compression)\n\t */\n\tcompression: CompressionMethod | null;\n\t/**\n\t * The encoding to use\n\t *\n\t * @defaultValue `'json'`\n\t */\n\tencoding: Encoding;\n\t/**\n\t * How long to wait for a shard to connect before giving up\n\t */\n\thandshakeTimeout: number | null;\n\t/**\n\t * How long to wait for a shard's HELLO packet before giving up\n\t */\n\thelloTimeout: number | null;\n\t/**\n\t * Properties to send to the gateway when identifying\n\t */\n\tidentifyProperties: GatewayIdentifyProperties;\n\t/**\n\t * Initial presence data to send to the gateway when identifying\n\t */\n\tinitialPresence: GatewayPresenceUpdateData | null;\n\t/**\n\t * Value between 50 and 250, total number of members where the gateway will stop sending offline members in the guild member list\n\t */\n\tlargeThreshold: number | null;\n\t/**\n\t * How long to wait for a shard's READY packet before giving up\n\t */\n\treadyTimeout: number | null;\n\t/**\n\t * Function used to retrieve session information (and attempt to resume) for a given shard\n\t *\n\t * @example\n\t * ```ts\n\t * const manager = new WebSocketManager({\n\t *   async retrieveSessionInfo(shardId): Awaitable<SessionInfo | null> {\n\t *     // Fetch this info from redis or similar\n\t *     return { sessionId: string, sequence: number };\n\t *     // Return null if no information is found\n\t *   },\n\t * });\n\t * ```\n\t */\n\tretrieveSessionInfo(shardId: number): Awaitable<SessionInfo | null>;\n\t/**\n\t * The total number of shards across all WebsocketManagers you intend to instantiate.\n\t * Use `null` to use Discord's recommended shard count\n\t */\n\tshardCount: number | null;\n\t/**\n\t * The ids of the shards this WebSocketManager should manage.\n\t * Use `null` to simply spawn 0 through `shardCount - 1`\n\t *\n\t * @example\n\t * ```ts\n\t * const manager = new WebSocketManager({\n\t *   shardIds: [1, 3, 7], // spawns shard 1, 3, and 7, nothing else\n\t * });\n\t * ```\n\t * @example\n\t * ```ts\n\t * const manager = new WebSocketManager({\n\t *   shardIds: {\n\t *     start: 3,\n\t *     end: 6,\n\t *   }, // spawns shards 3, 4, 5, and 6\n\t * });\n\t * ```\n\t */\n\tshardIds: number[] | ShardRange | null;\n\t/**\n\t * Function used to store session information for a given shard\n\t */\n\tupdateSessionInfo(shardId: number, sessionInfo: SessionInfo | null): Awaitable<void>;\n\t/**\n\t * The gateway version to use\n\t *\n\t * @defaultValue `'10'`\n\t */\n\tversion: string;\n}\n\nexport interface WebSocketManagerOptions extends OptionalWebSocketManagerOptions, RequiredWebSocketManagerOptions {}\n\nexport interface CreateWebSocketManagerOptions\n\textends Partial<OptionalWebSocketManagerOptions>,\n\t\tRequiredWebSocketManagerOptions {}\n\nexport interface ManagerShardEventsMap {\n\t[WebSocketShardEvents.Closed]: [{ code: number; shardId: number }];\n\t[WebSocketShardEvents.Debug]: [payload: { message: string; shardId: number }];\n\t[WebSocketShardEvents.Dispatch]: [payload: { data: GatewayDispatchPayload; shardId: number }];\n\t[WebSocketShardEvents.Error]: [payload: { error: Error; shardId: number }];\n\t[WebSocketShardEvents.Hello]: [{ shardId: number }];\n\t[WebSocketShardEvents.Ready]: [payload: { data: GatewayReadyDispatchData; shardId: number }];\n\t[WebSocketShardEvents.Resumed]: [{ shardId: number }];\n\t[WebSocketShardEvents.HeartbeatComplete]: [\n\t\tpayload: { ackAt: number; heartbeatAt: number; latency: number; shardId: number },\n\t];\n}\n\nexport class WebSocketManager extends AsyncEventEmitter<ManagerShardEventsMap> implements AsyncDisposable {\n\t/**\n\t * The options being used by this manager\n\t */\n\tpublic readonly options: WebSocketManagerOptions;\n\n\t/**\n\t * Internal cache for a GET /gateway/bot result\n\t */\n\tprivate gatewayInformation: {\n\t\tdata: APIGatewayBotInfo;\n\t\texpiresAt: number;\n\t} | null = null;\n\n\t/**\n\t * Internal cache for the shard ids\n\t */\n\tprivate shardIds: number[] | null = null;\n\n\t/**\n\t * Strategy used to manage shards\n\t *\n\t * @defaultValue `SimpleShardingStrategy`\n\t */\n\tprivate readonly strategy: IShardingStrategy;\n\n\tpublic constructor(options: CreateWebSocketManagerOptions) {\n\t\tsuper();\n\t\tthis.options = { ...DefaultWebSocketManagerOptions, ...options };\n\t\tthis.strategy = this.options.buildStrategy(this);\n\t}\n\n\t/**\n\t * Fetches the gateway information from Discord - or returns it from cache if available\n\t *\n\t * @param force - Whether to ignore the cache and force a fresh fetch\n\t */\n\tpublic async fetchGatewayInformation(force = false) {\n\t\tif (this.gatewayInformation) {\n\t\t\tif (this.gatewayInformation.expiresAt <= Date.now()) {\n\t\t\t\tthis.gatewayInformation = null;\n\t\t\t} else if (!force) {\n\t\t\t\treturn this.gatewayInformation.data;\n\t\t\t}\n\t\t}\n\n\t\tconst data = (await this.options.rest.get(Routes.gatewayBot())) as RESTGetAPIGatewayBotResult;\n\n\t\t// For single sharded bots session_start_limit.reset_after will be 0, use 5 seconds as a minimum expiration time\n\t\tthis.gatewayInformation = { data, expiresAt: Date.now() + (data.session_start_limit.reset_after || 5_000) };\n\t\treturn this.gatewayInformation.data;\n\t}\n\n\t/**\n\t * Updates your total shard count on-the-fly, spawning shards as needed\n\t *\n\t * @param shardCount - The new shard count to use\n\t */\n\tpublic async updateShardCount(shardCount: number | null) {\n\t\tawait this.strategy.destroy({ reason: 'User is adjusting their shards' });\n\t\tthis.options.shardCount = shardCount;\n\n\t\tconst shardIds = await this.getShardIds(true);\n\t\tawait this.strategy.spawn(shardIds);\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * Yields the total number of shards across for your bot, accounting for Discord recommendations\n\t */\n\tpublic async getShardCount(): Promise<number> {\n\t\tif (this.options.shardCount) {\n\t\t\treturn this.options.shardCount;\n\t\t}\n\n\t\tconst shardIds = await this.getShardIds();\n\t\treturn Math.max(...shardIds) + 1;\n\t}\n\n\t/**\n\t * Yields the ids of the shards this manager should manage\n\t */\n\tpublic async getShardIds(force = false): Promise<number[]> {\n\t\tif (this.shardIds && !force) {\n\t\t\treturn this.shardIds;\n\t\t}\n\n\t\tlet shardIds: number[];\n\t\tif (this.options.shardIds) {\n\t\t\tif (Array.isArray(this.options.shardIds)) {\n\t\t\t\tshardIds = this.options.shardIds;\n\t\t\t} else {\n\t\t\t\tconst { start, end } = this.options.shardIds;\n\t\t\t\tshardIds = [...range({ start, end: end + 1 })];\n\t\t\t}\n\t\t} else {\n\t\t\tconst data = await this.fetchGatewayInformation();\n\t\t\tshardIds = [...range(this.options.shardCount ?? data.shards)];\n\t\t}\n\n\t\tthis.shardIds = shardIds;\n\t\treturn shardIds;\n\t}\n\n\tpublic async connect() {\n\t\tconst shardCount = await this.getShardCount();\n\t\t// Spawn shards and adjust internal state\n\t\tawait this.updateShardCount(shardCount);\n\n\t\tconst shardIds = await this.getShardIds();\n\t\tconst data = await this.fetchGatewayInformation();\n\n\t\tif (data.session_start_limit.remaining < shardIds.length) {\n\t\t\tthrow new Error(\n\t\t\t\t`Not enough sessions remaining to spawn ${shardIds.length} shards; only ${\n\t\t\t\t\tdata.session_start_limit.remaining\n\t\t\t\t} remaining; resets at ${new Date(Date.now() + data.session_start_limit.reset_after).toISOString()}`,\n\t\t\t);\n\t\t}\n\n\t\tawait this.strategy.connect();\n\t}\n\n\tpublic destroy(options?: Omit<WebSocketShardDestroyOptions, 'recover'>) {\n\t\treturn this.strategy.destroy(options);\n\t}\n\n\tpublic send(shardId: number, payload: GatewaySendPayload) {\n\t\treturn this.strategy.send(shardId, payload);\n\t}\n\n\tpublic fetchStatus() {\n\t\treturn this.strategy.fetchStatus();\n\t}\n\n\tpublic async [Symbol.asyncDispose]() {\n\t\tawait this.destroy();\n\t}\n}\n", "'use strict';\n\n/**\n * @typedef {Object} WebSocketShardEvents\n * @property {string} Close close\n * @property {string} Destroyed destroyed\n * @property {string} InvalidSession invalidSession\n * @property {string} Ready ready\n * @property {string} Resumed resumed\n * @property {string} AllReady allReady\n */\n\n// JSDoc for IntelliSense purposes\n/**\n * @type {WebSocketShardEvents}\n * @ignore\n */\nmodule.exports = {\n  Close: 'close',\n  Destroyed: 'destroyed',\n  InvalidSession: 'invalidSession',\n  Ready: 'ready',\n  Resumed: 'resumed',\n  AllReady: 'allReady',\n};\n", "'use strict';\n\nconst EventEmitter = require('node:events');\nconst process = require('node:process');\nconst { setTimeout, clearTimeout } = require('node:timers');\nconst { GatewayIntentBits } = require('discord-api-types/v10');\nconst Status = require('../../util/Status');\nconst WebSocketShardEvents = require('../../util/WebSocketShardEvents');\n\nlet deprecationEmittedForImportant = false;\n/**\n * Represents a Shard's WebSocket connection\n * @extends {EventEmitter}\n */\nclass WebSocketShard extends EventEmitter {\n  constructor(manager, id) {\n    super();\n\n    /**\n     * The WebSocketManager of the shard\n     * @type {WebSocketManager}\n     */\n    this.manager = manager;\n\n    /**\n     * The shard's id\n     * @type {number}\n     */\n    this.id = id;\n\n    /**\n     * The current status of the shard\n     * @type {Status}\n     */\n    this.status = Status.Idle;\n\n    /**\n     * The sequence of the shard after close\n     * @type {number}\n     * @private\n     */\n    this.closeSequence = 0;\n\n    /**\n     * The previous heartbeat ping of the shard\n     * @type {number}\n     */\n    this.ping = -1;\n\n    /**\n     * The last time a ping was sent (a timestamp)\n     * @type {number}\n     */\n    this.lastPingTimestamp = -1;\n\n    /**\n     * A set of guild ids this shard expects to receive\n     * @name WebSocketShard#expectedGuilds\n     * @type {?Set<string>}\n     * @private\n     */\n    Object.defineProperty(this, 'expectedGuilds', { value: null, writable: true });\n\n    /**\n     * The ready timeout\n     * @name WebSocketShard#readyTimeout\n     * @type {?NodeJS.Timeout}\n     * @private\n     */\n    Object.defineProperty(this, 'readyTimeout', { value: null, writable: true });\n\n    /**\n     * @external SessionInfo\n     * @see {@link https://discord.js.org/docs/packages/ws/stable/SessionInfo:Interface}\n     */\n\n    /**\n     * The session info used by `@discordjs/ws` package.\n     * @name WebSocketShard#sessionInfo\n     * @type {?SessionInfo}\n     * @private\n     */\n    Object.defineProperty(this, 'sessionInfo', { value: null, writable: true });\n  }\n\n  /**\n   * Emits a debug event.\n   * @param {string[]} messages The debug message\n   * @private\n   */\n  debug(messages) {\n    this.manager.debug(messages, this.id);\n  }\n\n  /**\n   * @external CloseEvent\n   * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/CloseEvent}\n   */\n\n  /**\n   * This method is responsible to emit close event for this shard.\n   * This method helps the shard reconnect.\n   * @param {CloseEvent} [event] Close event that was received\n   * @deprecated\n   */\n  emitClose(\n    event = {\n      code: 1011,\n      reason: 'INTERNAL_ERROR',\n      wasClean: false,\n    },\n  ) {\n    this.debug([\n      '[CLOSE]',\n      `Event Code: ${event.code}`,\n      `Clean     : ${event.wasClean}`,\n      `Reason    : ${event.reason ?? 'No reason received'}`,\n    ]);\n\n    /**\n     * Emitted when a shard's WebSocket closes.\n     * @private\n     * @event WebSocketShard#close\n     * @param {CloseEvent} event The received event\n     */\n    this.emit(WebSocketShardEvents.Close, event);\n  }\n\n  /**\n   * Called when the shard receives the READY payload.\n   * @param {Object} packet The received packet\n   * @private\n   */\n  onReadyPacket(packet) {\n    if (!packet) {\n      this.debug([`Received broken packet: '${packet}'.`]);\n      return;\n    }\n\n    /**\n     * Emitted when the shard receives the READY payload and is now waiting for guilds\n     * @event WebSocketShard#ready\n     */\n    this.emit(WebSocketShardEvents.Ready);\n\n    this.expectedGuilds = new Set(packet.guilds.map(guild => guild.id));\n    this.status = Status.WaitingForGuilds;\n  }\n\n  /**\n   * Called when a GuildCreate or GuildDelete for this shard was sent after READY payload was received,\n   * but before we emitted the READY event.\n   * @param {Snowflake} guildId the id of the Guild sent in the payload\n   * @private\n   */\n  gotGuild(guildId) {\n    this.expectedGuilds.delete(guildId);\n    this.checkReady();\n  }\n\n  /**\n   * Checks if the shard can be marked as ready\n   * @private\n   */\n  checkReady() {\n    // Step 0. Clear the ready timeout, if it exists\n    if (this.readyTimeout) {\n      clearTimeout(this.readyTimeout);\n      this.readyTimeout = null;\n    }\n    // Step 1. If we don't have any other guilds pending, we are ready\n    if (!this.expectedGuilds.size) {\n      this.debug(['Shard received all its guilds. Marking as fully ready.']);\n      this.status = Status.Ready;\n\n      /**\n       * Emitted when the shard is fully ready.\n       * This event is emitted if:\n       * * all guilds were received by this shard\n       * * the ready timeout expired, and some guilds are unavailable\n       * @event WebSocketShard#allReady\n       * @param {?Set<string>} unavailableGuilds Set of unavailable guilds, if any\n       */\n      this.emit(WebSocketShardEvents.AllReady);\n      return;\n    }\n    const hasGuildsIntent = this.manager.client.options.intents.has(GatewayIntentBits.Guilds);\n    // Step 2. Create a timeout that will mark the shard as ready if there are still unavailable guilds\n    // * The timeout is 15 seconds by default\n    // * This can be optionally changed in the client options via the `waitGuildTimeout` option\n    // * a timeout time of zero will skip this timeout, which potentially could cause the Client to miss guilds.\n\n    const { waitGuildTimeout } = this.manager.client.options;\n\n    this.readyTimeout = setTimeout(\n      () => {\n        this.debug([\n          hasGuildsIntent\n            ? `Shard did not receive any guild packets in ${waitGuildTimeout} ms.`\n            : 'Shard will not receive anymore guild packets.',\n          `Unavailable guild count: ${this.expectedGuilds.size}`,\n        ]);\n\n        this.readyTimeout = null;\n        this.status = Status.Ready;\n\n        this.emit(WebSocketShardEvents.AllReady, this.expectedGuilds);\n      },\n      hasGuildsIntent ? waitGuildTimeout : 0,\n    ).unref();\n  }\n\n  /**\n   * Adds a packet to the queue to be sent to the gateway.\n   * <warn>If you use this method, make sure you understand that you need to provide\n   * a full [Payload](https://discord.com/developers/docs/topics/gateway#commands-and-events-gateway-commands).\n   * Do not use this method if you don't know what you're doing.</warn>\n   * @param {Object} data The full packet to send\n   * @param {boolean} [important=false] If this packet should be added first in queue\n   * <warn>This parameter is **deprecated**. Important payloads are determined by their opcode instead.</warn>\n   */\n  send(data, important = false) {\n    if (important && !deprecationEmittedForImportant) {\n      process.emitWarning(\n        'Sending important payloads explicitly is deprecated. They are determined by their opcode implicitly now.',\n        'DeprecationWarning',\n      );\n      deprecationEmittedForImportant = true;\n    }\n    this.manager._ws.send(this.id, data);\n  }\n}\n\nmodule.exports = WebSocketShard;\n", "'use strict';\n\nmodule.exports = (client, packet) => {\n  client.actions.ApplicationCommandPermissionsUpdate.handle(packet.d);\n};\n", "'use strict';\n\nmodule.exports = (client, packet) => {\n  client.actions.AutoModerationActionExecution.handle(packet.d);\n};\n", "'use strict';\n\nmodule.exports = (client, packet) => {\n  client.actions.AutoModerationRuleCreate.handle(packet.d);\n};\n", "'use strict';\n\nmodule.exports = (client, packet) => {\n  client.actions.AutoModerationRuleDelete.handle(packet.d);\n};\n", "'use strict';\n\nmodule.exports = (client, packet) => {\n  client.actions.AutoModerationRuleUpdate.handle(packet.d);\n};\n", "'use strict';\n\nmodule.exports = (client, packet) => {\n  client.actions.ChannelCreate.handle(packet.d);\n};\n", "'use strict';\n\nmodule.exports = (client, packet) => {\n  client.actions.ChannelDelete.handle(packet.d);\n};\n", "'use strict';\n\nconst Events = require('../../../util/Events');\n\nmodule.exports = (client, { d: data }) => {\n  const channel = client.channels.cache.get(data.channel_id);\n  const time = data.last_pin_timestamp ? Date.parse(data.last_pin_timestamp) : null;\n\n  if (channel) {\n    // Discord sends null for last_pin_timestamp if the last pinned message was removed\n    channel.lastPinTimestamp = time;\n\n    /**\n     * Emitted whenever the pins of a channel are updated. Due to the nature of the WebSocket event,\n     * not much information can be provided easily here - you need to manually check the pins yourself.\n     * @event Client#channelPinsUpdate\n     * @param {TextBasedChannels} channel The channel that the pins update occurred in\n     * @param {Date} time The time of the pins update\n     */\n    client.emit(Events.ChannelPinsUpdate, channel, time);\n  }\n};\n", "'use strict';\n\nconst Events = require('../../../util/Events');\n\nmodule.exports = (client, packet) => {\n  const { old, updated } = client.actions.ChannelUpdate.handle(packet.d);\n  if (old && updated) {\n    /**\n     * Emitted whenever a channel is updated - e.g. name change, topic change, channel type change.\n     * @event Client#channelUpdate\n     * @param {DMChannel|GuildChannel} oldChannel The channel before the update\n     * @param {DMChannel|GuildChannel} newChannel The channel after the update\n     */\n    client.emit(Events.ChannelUpdate, old, updated);\n  }\n};\n", "'use strict';\n\nmodule.exports = (client, packet) => {\n  client.actions.EntitlementCreate.handle(packet.d);\n};\n", "'use strict';\n\nmodule.exports = (client, packet) => {\n  client.actions.EntitlementDelete.handle(packet.d);\n};\n", "'use strict';\n\nmodule.exports = (client, packet) => {\n  client.actions.EntitlementUpdate.handle(packet.d);\n};\n", "'use strict';\n\nmodule.exports = (client, packet) => {\n  client.actions.GuildAuditLogEntryCreate.handle(packet.d);\n};\n", "'use strict';\n\nmodule.exports = (client, packet) => {\n  client.actions.GuildBanAdd.handle(packet.d);\n};\n", "'use strict';\n\nmodule.exports = (client, packet) => {\n  client.actions.GuildBanRemove.handle(packet.d);\n};\n", "'use strict';\n\nconst Events = require('../../../util/Events');\nconst Status = require('../../../util/Status');\n\nmodule.exports = (client, { d: data }, shard) => {\n  let guild = client.guilds.cache.get(data.id);\n  if (guild) {\n    if (!guild.available && !data.unavailable) {\n      // A newly available guild\n      guild._patch(data);\n\n      /**\n       * Emitted whenever a guild becomes available.\n       * @event Client#guildAvailable\n       * @param {Guild} guild The guild that became available\n       */\n      client.emit(Events.GuildAvailable, guild);\n    }\n  } else {\n    // A new guild\n    data.shardId = shard.id;\n    guild = client.guilds._add(data);\n    if (client.ws.status === Status.Ready) {\n      /**\n       * Emitted whenever the client joins a guild.\n       * @event Client#guildCreate\n       * @param {Guild} guild The created guild\n       */\n      client.emit(Events.GuildCreate, guild);\n    }\n  }\n};\n", "'use strict';\n\nmodule.exports = (client, packet) => {\n  client.actions.GuildDelete.handle(packet.d);\n};\n", "'use strict';\n\nmodule.exports = (client, packet) => {\n  client.actions.GuildEmojisUpdate.handle(packet.d);\n};\n", "'use strict';\n\nmodule.exports = (client, packet) => {\n  client.actions.GuildIntegrationsUpdate.handle(packet.d);\n};\n", "'use strict';\n\nconst { Collection } = require('@discordjs/collection');\nconst Events = require('../../../util/Events');\n\nmodule.exports = (client, { d: data }) => {\n  const guild = client.guilds.cache.get(data.guild_id);\n  if (!guild) return;\n  const members = new Collection();\n\n  for (const member of data.members) members.set(member.user.id, guild.members._add(member));\n  if (data.presences) {\n    for (const presence of data.presences) guild.presences._add(Object.assign(presence, { guild }));\n  }\n\n  /**\n   * Represents the properties of a guild members chunk\n   * @typedef {Object} GuildMembersChunk\n   * @property {number} index Index of the received chunk\n   * @property {number} count Number of chunks the client should receive\n   * @property {Array<*>} notFound An array of whatever could not be found\n   * when using {@link GatewayOpcodes.RequestGuildMembers}\n   * @property {?string} nonce Nonce for this chunk\n   */\n\n  /**\n   * Emitted whenever a chunk of guild members is received (all members come from the same guild).\n   * @event Client#guildMembersChunk\n   * @param {Collection<Snowflake, GuildMember>} members The members in the chunk\n   * @param {Guild} guild The guild related to the member chunk\n   * @param {GuildMembersChunk} chunk Properties of the received chunk\n   */\n  client.emit(Events.GuildMembersChunk, members, guild, {\n    index: data.chunk_index,\n    count: data.chunk_count,\n    notFound: data.not_found,\n    nonce: data.nonce,\n  });\n};\n", "'use strict';\n\nconst Events = require('../../../util/Events');\nconst Status = require('../../../util/Status');\n\nmodule.exports = (client, { d: data }, shard) => {\n  const guild = client.guilds.cache.get(data.guild_id);\n  if (guild) {\n    guild.memberCount++;\n    const member = guild.members._add(data);\n    if (shard.status === Status.Ready) {\n      /**\n       * Emitted whenever a user joins a guild.\n       * @event Client#guildMemberAdd\n       * @param {GuildMember} member The member that has joined a guild\n       */\n      client.emit(Events.GuildMemberAdd, member);\n    }\n  }\n};\n", "'use strict';\n\nmodule.exports = (client, packet, shard) => {\n  client.actions.GuildMemberRemove.handle(packet.d, shard);\n};\n", "'use strict';\n\nmodule.exports = (client, packet, shard) => {\n  client.actions.GuildMemberUpdate.handle(packet.d, shard);\n};\n", "'use strict';\n\nmodule.exports = (client, packet) => {\n  client.actions.GuildRoleCreate.handle(packet.d);\n};\n", "'use strict';\n\nmodule.exports = (client, packet) => {\n  client.actions.GuildRoleDelete.handle(packet.d);\n};\n", "'use strict';\n\nmodule.exports = (client, packet) => {\n  client.actions.GuildRoleUpdate.handle(packet.d);\n};\n", "'use strict';\n\nmodule.exports = (client, packet) => {\n  client.actions.GuildScheduledEventCreate.handle(packet.d);\n};\n", "'use strict';\n\nmodule.exports = (client, packet) => {\n  client.actions.GuildScheduledEventDelete.handle(packet.d);\n};\n", "'use strict';\n\nmodule.exports = (client, packet) => {\n  client.actions.GuildScheduledEventUpdate.handle(packet.d);\n};\n", "'use strict';\n\nmodule.exports = (client, packet) => {\n  client.actions.GuildScheduledEventUserAdd.handle(packet.d);\n};\n", "'use strict';\n\nmodule.exports = (client, packet) => {\n  client.actions.GuildScheduledEventUserRemove.handle(packet.d);\n};\n", "'use strict';\n\nmodule.exports = (client, packet) => {\n  client.actions.GuildStickersUpdate.handle(packet.d);\n};\n", "'use strict';\n\nmodule.exports = (client, packet) => {\n  client.actions.GuildUpdate.handle(packet.d);\n};\n", "'use strict';\n\nmodule.exports = (client, packet) => {\n  client.actions.InteractionCreate.handle(packet.d);\n};\n", "'use strict';\n\nmodule.exports = (client, packet) => {\n  client.actions.InviteCreate.handle(packet.d);\n};\n", "'use strict';\n\nmodule.exports = (client, packet) => {\n  client.actions.InviteDelete.handle(packet.d);\n};\n", "'use strict';\n\nmodule.exports = (client, packet) => {\n  client.actions.MessageCreate.handle(packet.d);\n};\n", "'use strict';\n\nmodule.exports = (client, packet) => {\n  client.actions.MessageDelete.handle(packet.d);\n};\n", "'use strict';\n\nmodule.exports = (client, packet) => {\n  client.actions.MessageDeleteBulk.handle(packet.d);\n};\n", "'use strict';\n\nmodule.exports = (client, packet) => {\n  client.actions.MessagePollVoteAdd.handle(packet.d);\n};\n", "'use strict';\n\nmodule.exports = (client, packet) => {\n  client.actions.MessagePollVoteRemove.handle(packet.d);\n};\n", "'use strict';\n\nmodule.exports = (client, packet) => {\n  client.actions.MessageReactionAdd.handle(packet.d);\n};\n", "'use strict';\n\nmodule.exports = (client, packet) => {\n  client.actions.MessageReactionRemove.handle(packet.d);\n};\n", "'use strict';\n\nmodule.exports = (client, packet) => {\n  client.actions.MessageReactionRemoveAll.handle(packet.d);\n};\n", "'use strict';\n\nmodule.exports = (client, packet) => {\n  client.actions.MessageReactionRemoveEmoji.handle(packet.d);\n};\n", "'use strict';\n\nconst Events = require('../../../util/Events');\n\nmodule.exports = (client, packet) => {\n  const { old, updated } = client.actions.MessageUpdate.handle(packet.d);\n  if (old && updated) {\n    /**\n     * Emitted whenever a message is updated - e.g. embed or content change.\n     * @event Client#messageUpdate\n     * @param {Message} oldMessage The message before the update\n     * @param {Message} newMessage The message after the update\n     */\n    client.emit(Events.MessageUpdate, old, updated);\n  }\n};\n", "'use strict';\n\nmodule.exports = (client, packet) => {\n  client.actions.PresenceUpdate.handle(packet.d);\n};\n", "'use strict';\n\nconst { Routes } = require('discord-api-types/v10');\nconst User = require('./User');\nconst { resolveImage } = require('../util/DataResolver');\n\n/**\n * Represents the logged in client's Discord user.\n * @extends {User}\n */\nclass ClientUser extends User {\n  _patch(data) {\n    super._patch(data);\n\n    if ('verified' in data) {\n      /**\n       * Whether or not this account has been verified\n       * @type {boolean}\n       */\n      this.verified = data.verified;\n    }\n\n    if ('mfa_enabled' in data) {\n      /**\n       * If the bot's {@link ClientApplication#owner Owner} has MFA enabled on their account\n       * @type {?boolean}\n       */\n      this.mfaEnabled = typeof data.mfa_enabled === 'boolean' ? data.mfa_enabled : null;\n    } else {\n      this.mfaEnabled ??= null;\n    }\n\n    if ('token' in data) this.client.token = data.token;\n  }\n\n  /**\n   * Represents the client user's presence\n   * @type {ClientPresence}\n   * @readonly\n   */\n  get presence() {\n    return this.client.presence;\n  }\n\n  /**\n   * Data used to edit the logged in client\n   * @typedef {Object} ClientUserEditOptions\n   * @property {string} [username] The new username\n   * @property {?(BufferResolvable|Base64Resolvable)} [avatar] The new avatar\n   * @property {?(BufferResolvable|Base64Resolvable)} [banner] The new banner\n   */\n\n  /**\n   * Edits the logged in client.\n   * @param {ClientUserEditOptions} options The options to provide\n   * @returns {Promise<ClientUser>}\n   */\n  async edit({ username, avatar, banner }) {\n    const data = await this.client.rest.patch(Routes.user(), {\n      body: {\n        username,\n        avatar: avatar && (await resolveImage(avatar)),\n        banner: banner && (await resolveImage(banner)),\n      },\n    });\n\n    this.client.token = data.token;\n    this.client.rest.setToken(data.token);\n    const { updated } = this.client.actions.UserUpdate.handle(data);\n    return updated ?? this;\n  }\n\n  /**\n   * Sets the username of the logged in client.\n   * <info>Changing usernames in Discord is heavily rate limited, with only 2 requests\n   * every hour. Use this sparingly!</info>\n   * @param {string} username The new username\n   * @returns {Promise<ClientUser>}\n   * @example\n   * // Set username\n   * client.user.setUsername('discordjs')\n   *   .then(user => console.log(`My new username is ${user.username}`))\n   *   .catch(console.error);\n   */\n  setUsername(username) {\n    return this.edit({ username });\n  }\n\n  /**\n   * Sets the avatar of the logged in client.\n   * @param {?(BufferResolvable|Base64Resolvable)} avatar The new avatar\n   * @returns {Promise<ClientUser>}\n   * @example\n   * // Set avatar\n   * client.user.setAvatar('./avatar.png')\n   *   .then(user => console.log(`New avatar set!`))\n   *   .catch(console.error);\n   */\n  setAvatar(avatar) {\n    return this.edit({ avatar });\n  }\n\n  /**\n   * Sets the banner of the logged in client.\n   * @param {?(BufferResolvable|Base64Resolvable)} banner The new banner\n   * @returns {Promise<ClientUser>}\n   * @example\n   * // Set banner\n   * client.user.setBanner('./banner.png')\n   *   .then(user => console.log(`New banner set!`))\n   *   .catch(console.error);\n   */\n  setBanner(banner) {\n    return this.edit({ banner });\n  }\n\n  /**\n   * Options for setting activities\n   * @typedef {Object} ActivitiesOptions\n   * @property {string} name Name of the activity\n   * @property {string} [state] State of the activity\n   * @property {ActivityType} [type] Type of the activity\n   * @property {string} [url] Twitch / YouTube stream URL\n   */\n\n  /**\n   * Data resembling a raw Discord presence.\n   * @typedef {Object} PresenceData\n   * @property {PresenceStatusData} [status] Status of the user\n   * @property {boolean} [afk] Whether the user is AFK\n   * @property {ActivitiesOptions[]} [activities] Activity the user is playing\n   * @property {number|number[]} [shardId] Shard id(s) to have the activity set on\n   */\n\n  /**\n   * Sets the full presence of the client user.\n   * @param {PresenceData} data Data for the presence\n   * @returns {ClientPresence}\n   * @example\n   * // Set the client user's presence\n   * client.user.setPresence({ activities: [{ name: 'with discord.js' }], status: 'idle' });\n   */\n  setPresence(data) {\n    return this.client.presence.set(data);\n  }\n\n  /**\n   * A user's status. Must be one of:\n   * * `online`\n   * * `idle`\n   * * `invisible`\n   * * `dnd` (do not disturb)\n   * @typedef {string} PresenceStatusData\n   */\n\n  /**\n   * Sets the status of the client user.\n   * @param {PresenceStatusData} status Status to change to\n   * @param {number|number[]} [shardId] Shard id(s) to have the activity set on\n   * @returns {ClientPresence}\n   * @example\n   * // Set the client user's status\n   * client.user.setStatus('idle');\n   */\n  setStatus(status, shardId) {\n    return this.setPresence({ status, shardId });\n  }\n\n  /**\n   * Options for setting an activity.\n   * @typedef {Object} ActivityOptions\n   * @property {string} name Name of the activity\n   * @property {string} [state] State of the activity\n   * @property {string} [url] Twitch / YouTube stream URL\n   * @property {ActivityType} [type] Type of the activity\n   * @property {number|number[]} [shardId] Shard Id(s) to have the activity set on\n   */\n\n  /**\n   * Sets the activity the client user is playing.\n   * @param {string|ActivityOptions} name Activity being played, or options for setting the activity\n   * @param {ActivityOptions} [options] Options for setting the activity\n   * @returns {ClientPresence}\n   * @example\n   * // Set the client user's activity\n   * client.user.setActivity('discord.js', { type: ActivityType.Watching });\n   */\n  setActivity(name, options = {}) {\n    if (!name) return this.setPresence({ activities: [], shardId: options.shardId });\n\n    const activity = Object.assign({}, options, typeof name === 'object' ? name : { name });\n    return this.setPresence({ activities: [activity], shardId: activity.shardId });\n  }\n\n  /**\n   * Sets/removes the AFK flag for the client user.\n   * @param {boolean} [afk=true] Whether or not the user is AFK\n   * @param {number|number[]} [shardId] Shard Id(s) to have the AFK flag set on\n   * @returns {ClientPresence}\n   */\n  setAFK(afk = true, shardId) {\n    return this.setPresence({ afk, shardId });\n  }\n}\n\nmodule.exports = ClientUser;\n", "'use strict';\n\nconst ClientApplication = require('../../../structures/ClientApplication');\nlet ClientUser;\n\nmodule.exports = (client, { d: data }, shard) => {\n  if (client.user) {\n    client.user._patch(data.user);\n  } else {\n    ClientUser ??= require('../../../structures/ClientUser');\n    client.user = new ClientUser(client, data.user);\n    client.users.cache.set(client.user.id, client.user);\n  }\n\n  for (const guild of data.guilds) {\n    guild.shardId = shard.id;\n    client.guilds._add(guild);\n  }\n\n  if (client.application) {\n    client.application._patch(data.application);\n  } else {\n    client.application = new ClientApplication(client, data.application);\n  }\n\n  shard.checkReady();\n};\n", "'use strict';\n\nconst Events = require('../../../util/Events');\n\nmodule.exports = (client, packet, shard) => {\n  const replayed = shard.sessionInfo.sequence - shard.closeSequence;\n  /**\n   * Emitted when a shard resumes successfully.\n   * @event Client#shardResume\n   * @param {number} id The shard id that resumed\n   * @param {number} replayedEvents The amount of replayed events\n   */\n  client.emit(Events.ShardResume, shard.id, replayed);\n};\n", "'use strict';\n\nmodule.exports = (client, packet) => {\n  client.actions.StageInstanceCreate.handle(packet.d);\n};\n", "'use strict';\n\nmodule.exports = (client, packet) => {\n  client.actions.StageInstanceDelete.handle(packet.d);\n};\n", "'use strict';\n\nmodule.exports = (client, packet) => {\n  client.actions.StageInstanceUpdate.handle(packet.d);\n};\n", "'use strict';\n\nmodule.exports = (client, packet) => {\n  client.actions.ThreadCreate.handle(packet.d);\n};\n", "'use strict';\n\nmodule.exports = (client, packet) => {\n  client.actions.ThreadDelete.handle(packet.d);\n};\n", "'use strict';\n\nmodule.exports = (client, packet) => {\n  client.actions.ThreadListSync.handle(packet.d);\n};\n", "'use strict';\n\nmodule.exports = (client, packet) => {\n  client.actions.ThreadMembersUpdate.handle(packet.d);\n};\n", "'use strict';\n\nmodule.exports = (client, packet) => {\n  client.actions.ThreadMemberUpdate.handle(packet.d);\n};\n", "'use strict';\n\nconst Events = require('../../../util/Events');\n\nmodule.exports = (client, packet) => {\n  const { old, updated } = client.actions.ChannelUpdate.handle(packet.d);\n  if (old && updated) {\n    /**\n     * Emitted whenever a thread is updated - e.g. name change, archive state change, locked state change.\n     * @event Client#threadUpdate\n     * @param {ThreadChannel} oldThread The thread before the update\n     * @param {ThreadChannel} newThread The thread after the update\n     */\n    client.emit(Events.ThreadUpdate, old, updated);\n  }\n};\n", "'use strict';\n\nmodule.exports = (client, packet) => {\n  client.actions.TypingStart.handle(packet.d);\n};\n", "'use strict';\n\nmodule.exports = (client, packet) => {\n  client.actions.UserUpdate.handle(packet.d);\n};\n", "'use strict';\n\nmodule.exports = (client, packet) => {\n  client.emit('debug', `[VOICE] received voice server: ${JSON.stringify(packet)}`);\n  client.voice.onVoiceServer(packet.d);\n};\n", "'use strict';\n\nmodule.exports = (client, packet) => {\n  client.actions.VoiceStateUpdate.handle(packet.d);\n};\n", "'use strict';\n\nmodule.exports = (client, packet) => {\n  client.actions.WebhooksUpdate.handle(packet.d);\n};\n", "'use strict';\n\nconst handlers = Object.fromEntries([\n  ['APPLICATION_COMMAND_PERMISSIONS_UPDATE', require('./APPLICATION_COMMAND_PERMISSIONS_UPDATE')],\n  ['AUTO_MODERATION_ACTION_EXECUTION', require('./AUTO_MODERATION_ACTION_EXECUTION')],\n  ['AUTO_MODERATION_RULE_CREATE', require('./AUTO_MODERATION_RULE_CREATE')],\n  ['AUTO_MODERATION_RULE_DELETE', require('./AUTO_MODERATION_RULE_DELETE')],\n  ['AUTO_MODERATION_RULE_UPDATE', require('./AUTO_MODERATION_RULE_UPDATE')],\n  ['CHANNEL_CREATE', require('./CHANNEL_CREATE')],\n  ['CHANNEL_DELETE', require('./CHANNEL_DELETE')],\n  ['CHANNEL_PINS_UPDATE', require('./CHANNEL_PINS_UPDATE')],\n  ['CHANNEL_UPDATE', require('./CHANNEL_UPDATE')],\n  ['ENTITLEMENT_CREATE', require('./ENTITLEMENT_CREATE')],\n  ['ENTITLEMENT_DELETE', require('./ENTITLEMENT_DELETE')],\n  ['ENTITLEMENT_UPDATE', require('./ENTITLEMENT_UPDATE')],\n  ['GUILD_AUDIT_LOG_ENTRY_CREATE', require('./GUILD_AUDIT_LOG_ENTRY_CREATE')],\n  ['GUILD_BAN_ADD', require('./GUILD_BAN_ADD')],\n  ['GUILD_BAN_REMOVE', require('./GUILD_BAN_REMOVE')],\n  ['GUILD_CREATE', require('./GUILD_CREATE')],\n  ['GUILD_DELETE', require('./GUILD_DELETE')],\n  ['GUILD_EMOJIS_UPDATE', require('./GUILD_EMOJIS_UPDATE')],\n  ['GUILD_INTEGRATIONS_UPDATE', require('./GUILD_INTEGRATIONS_UPDATE')],\n  ['GUILD_MEMBERS_CHUNK', require('./GUILD_MEMBERS_CHUNK')],\n  ['GUILD_MEMBER_ADD', require('./GUILD_MEMBER_ADD')],\n  ['GUILD_MEMBER_REMOVE', require('./GUILD_MEMBER_REMOVE')],\n  ['GUILD_MEMBER_UPDATE', require('./GUILD_MEMBER_UPDATE')],\n  ['GUILD_ROLE_CREATE', require('./GUILD_ROLE_CREATE')],\n  ['GUILD_ROLE_DELETE', require('./GUILD_ROLE_DELETE')],\n  ['GUILD_ROLE_UPDATE', require('./GUILD_ROLE_UPDATE')],\n  ['GUILD_SCHEDULED_EVENT_CREATE', require('./GUILD_SCHEDULED_EVENT_CREATE')],\n  ['GUILD_SCHEDULED_EVENT_DELETE', require('./GUILD_SCHEDULED_EVENT_DELETE')],\n  ['GUILD_SCHEDULED_EVENT_UPDATE', require('./GUILD_SCHEDULED_EVENT_UPDATE')],\n  ['GUILD_SCHEDULED_EVENT_USER_ADD', require('./GUILD_SCHEDULED_EVENT_USER_ADD')],\n  ['GUILD_SCHEDULED_EVENT_USER_REMOVE', require('./GUILD_SCHEDULED_EVENT_USER_REMOVE')],\n  ['GUILD_STICKERS_UPDATE', require('./GUILD_STICKERS_UPDATE')],\n  ['GUILD_UPDATE', require('./GUILD_UPDATE')],\n  ['INTERACTION_CREATE', require('./INTERACTION_CREATE')],\n  ['INVITE_CREATE', require('./INVITE_CREATE')],\n  ['INVITE_DELETE', require('./INVITE_DELETE')],\n  ['MESSAGE_CREATE', require('./MESSAGE_CREATE')],\n  ['MESSAGE_DELETE', require('./MESSAGE_DELETE')],\n  ['MESSAGE_DELETE_BULK', require('./MESSAGE_DELETE_BULK')],\n  ['MESSAGE_POLL_VOTE_ADD', require('./MESSAGE_POLL_VOTE_ADD')],\n  ['MESSAGE_POLL_VOTE_REMOVE', require('./MESSAGE_POLL_VOTE_REMOVE')],\n  ['MESSAGE_REACTION_ADD', require('./MESSAGE_REACTION_ADD')],\n  ['MESSAGE_REACTION_REMOVE', require('./MESSAGE_REACTION_REMOVE')],\n  ['MESSAGE_REACTION_REMOVE_ALL', require('./MESSAGE_REACTION_REMOVE_ALL')],\n  ['MESSAGE_REACTION_REMOVE_EMOJI', require('./MESSAGE_REACTION_REMOVE_EMOJI')],\n  ['MESSAGE_UPDATE', require('./MESSAGE_UPDATE')],\n  ['PRESENCE_UPDATE', require('./PRESENCE_UPDATE')],\n  ['READY', require('./READY')],\n  ['RESUMED', require('./RESUMED')],\n  ['STAGE_INSTANCE_CREATE', require('./STAGE_INSTANCE_CREATE')],\n  ['STAGE_INSTANCE_DELETE', require('./STAGE_INSTANCE_DELETE')],\n  ['STAGE_INSTANCE_UPDATE', require('./STAGE_INSTANCE_UPDATE')],\n  ['THREAD_CREATE', require('./THREAD_CREATE')],\n  ['THREAD_DELETE', require('./THREAD_DELETE')],\n  ['THREAD_LIST_SYNC', require('./THREAD_LIST_SYNC')],\n  ['THREAD_MEMBERS_UPDATE', require('./THREAD_MEMBERS_UPDATE')],\n  ['THREAD_MEMBER_UPDATE', require('./THREAD_MEMBER_UPDATE')],\n  ['THREAD_UPDATE', require('./THREAD_UPDATE')],\n  ['TYPING_START', require('./TYPING_START')],\n  ['USER_UPDATE', require('./USER_UPDATE')],\n  ['VOICE_SERVER_UPDATE', require('./VOICE_SERVER_UPDATE')],\n  ['VOICE_STATE_UPDATE', require('./VOICE_STATE_UPDATE')],\n  ['WEBHOOKS_UPDATE', require('./WEBHOOKS_UPDATE')],\n]);\n\nmodule.exports = handlers;\n", "'use strict';\n\nconst EventEmitter = require('node:events');\nconst process = require('node:process');\nconst { setImmediate } = require('node:timers');\nconst { Collection } = require('@discordjs/collection');\nconst {\n  WebSocketManager: WSWebSocketManager,\n  WebSocketShardEvents: WSWebSocketShardEvents,\n  CompressionMethod,\n  CloseCodes,\n} = require('@discordjs/ws');\nconst { GatewayCloseCodes, GatewayDispatchEvents } = require('discord-api-types/v10');\nconst WebSocketShard = require('./WebSocketShard');\nconst PacketHandlers = require('./handlers');\nconst { DiscordjsError, ErrorCodes } = require('../../errors');\nconst Events = require('../../util/Events');\nconst Status = require('../../util/Status');\nconst WebSocketShardEvents = require('../../util/WebSocketShardEvents');\n\nlet zlib;\n\ntry {\n  zlib = require('zlib-sync');\n} catch {} // eslint-disable-line no-empty\n\nconst BeforeReadyWhitelist = [\n  GatewayDispatchEvents.Ready,\n  GatewayDispatchEvents.Resumed,\n  GatewayDispatchEvents.GuildCreate,\n  GatewayDispatchEvents.GuildDelete,\n  GatewayDispatchEvents.GuildMembersChunk,\n  GatewayDispatchEvents.GuildMemberAdd,\n  GatewayDispatchEvents.GuildMemberRemove,\n];\n\nconst WaitingForGuildEvents = [GatewayDispatchEvents.GuildCreate, GatewayDispatchEvents.GuildDelete];\n\nconst UNRESUMABLE_CLOSE_CODES = [\n  CloseCodes.Normal,\n  GatewayCloseCodes.AlreadyAuthenticated,\n  GatewayCloseCodes.InvalidSeq,\n];\n\nconst reasonIsDeprecated = 'the reason property is deprecated, use the code property to determine the reason';\nlet deprecationEmittedForInvalidSessionEvent = false;\nlet deprecationEmittedForDestroyedEvent = false;\n\n/**\n * The WebSocket manager for this client.\n * <info>This class forwards raw dispatch events,\n * read more about it here {@link https://discord.com/developers/docs/topics/gateway}</info>\n * @extends {EventEmitter}\n */\nclass WebSocketManager extends EventEmitter {\n  constructor(client) {\n    super();\n\n    /**\n     * The client that instantiated this WebSocketManager\n     * @type {Client}\n     * @readonly\n     * @name WebSocketManager#client\n     */\n    Object.defineProperty(this, 'client', { value: client });\n\n    /**\n     * The gateway this manager uses\n     * @type {?string}\n     */\n    this.gateway = null;\n\n    /**\n     * A collection of all shards this manager handles\n     * @type {Collection<number, WebSocketShard>}\n     */\n    this.shards = new Collection();\n\n    /**\n     * An array of queued events before this WebSocketManager became ready\n     * @type {Object[]}\n     * @private\n     * @name WebSocketManager#packetQueue\n     */\n    Object.defineProperty(this, 'packetQueue', { value: [] });\n\n    /**\n     * The current status of this WebSocketManager\n     * @type {Status}\n     */\n    this.status = Status.Idle;\n\n    /**\n     * If this manager was destroyed. It will prevent shards from reconnecting\n     * @type {boolean}\n     * @private\n     */\n    this.destroyed = false;\n\n    /**\n     * The internal WebSocketManager from `@discordjs/ws`.\n     * @type {WSWebSocketManager}\n     * @private\n     */\n    this._ws = null;\n  }\n\n  /**\n   * The average ping of all WebSocketShards\n   * @type {number}\n   * @readonly\n   */\n  get ping() {\n    const sum = this.shards.reduce((a, b) => a + b.ping, 0);\n    return sum / this.shards.size;\n  }\n\n  /**\n   * Emits a debug message.\n   * @param {string[]} messages The debug message\n   * @param {?number} [shardId] The id of the shard that emitted this message, if any\n   * @private\n   */\n  debug(messages, shardId) {\n    this.client.emit(\n      Events.Debug,\n      `[WS => ${typeof shardId === 'number' ? `Shard ${shardId}` : 'Manager'}] ${messages.join('\\n\\t')}`,\n    );\n  }\n\n  /**\n   * Connects this manager to the gateway.\n   * @private\n   */\n  async connect() {\n    const invalidToken = new DiscordjsError(ErrorCodes.TokenInvalid);\n    const { shards, shardCount, intents, ws } = this.client.options;\n    if (this._ws && this._ws.options.token !== this.client.token) {\n      await this._ws.destroy({ code: CloseCodes.Normal, reason: 'Login with differing token requested' });\n      this._ws = null;\n    }\n    if (!this._ws) {\n      const wsOptions = {\n        intents: intents.bitfield,\n        rest: this.client.rest,\n        token: this.client.token,\n        largeThreshold: ws.large_threshold,\n        version: ws.version,\n        shardIds: shards === 'auto' ? null : shards,\n        shardCount: shards === 'auto' ? null : shardCount,\n        initialPresence: ws.presence,\n        retrieveSessionInfo: shardId => this.shards.get(shardId).sessionInfo,\n        updateSessionInfo: (shardId, sessionInfo) => {\n          this.shards.get(shardId).sessionInfo = sessionInfo;\n        },\n        compression: zlib ? CompressionMethod.ZlibStream : null,\n      };\n      if (ws.buildIdentifyThrottler) wsOptions.buildIdentifyThrottler = ws.buildIdentifyThrottler;\n      if (ws.buildStrategy) wsOptions.buildStrategy = ws.buildStrategy;\n      this._ws = new WSWebSocketManager(wsOptions);\n      this.attachEvents();\n    }\n\n    const {\n      url: gatewayURL,\n      shards: recommendedShards,\n      session_start_limit: sessionStartLimit,\n    } = await this._ws.fetchGatewayInformation().catch(error => {\n      throw error.status === 401 ? invalidToken : error;\n    });\n\n    const { total, remaining } = sessionStartLimit;\n    this.debug(['Fetched Gateway Information', `URL: ${gatewayURL}`, `Recommended Shards: ${recommendedShards}`]);\n    this.debug(['Session Limit Information', `Total: ${total}`, `Remaining: ${remaining}`]);\n    this.gateway = `${gatewayURL}/`;\n\n    this.client.options.shardCount = await this._ws.getShardCount();\n    this.client.options.shards = await this._ws.getShardIds();\n    this.totalShards = this.client.options.shards.length;\n    for (const id of this.client.options.shards) {\n      if (!this.shards.has(id)) {\n        const shard = new WebSocketShard(this, id);\n        this.shards.set(id, shard);\n\n        shard.on(WebSocketShardEvents.AllReady, unavailableGuilds => {\n          /**\n           * Emitted when a shard turns ready.\n           * @event Client#shardReady\n           * @param {number} id The shard id that turned ready\n           * @param {?Set<Snowflake>} unavailableGuilds Set of unavailable guild ids, if any\n           */\n          this.client.emit(Events.ShardReady, shard.id, unavailableGuilds);\n\n          this.checkShardsReady();\n        });\n        shard.status = Status.Connecting;\n      }\n    }\n\n    await this._ws.connect();\n\n    this.shards.forEach(shard => {\n      if (shard.listenerCount(WebSocketShardEvents.InvalidSession) > 0 && !deprecationEmittedForInvalidSessionEvent) {\n        process.emitWarning(\n          'The WebSocketShard#invalidSession event is deprecated and will never emit.',\n          'DeprecationWarning',\n        );\n\n        deprecationEmittedForInvalidSessionEvent = true;\n      }\n      if (shard.listenerCount(WebSocketShardEvents.Destroyed) > 0 && !deprecationEmittedForDestroyedEvent) {\n        process.emitWarning(\n          'The WebSocketShard#destroyed event is deprecated and will never emit.',\n          'DeprecationWarning',\n        );\n\n        deprecationEmittedForDestroyedEvent = true;\n      }\n    });\n  }\n\n  /**\n   * Attaches event handlers to the internal WebSocketShardManager from `@discordjs/ws`.\n   * @private\n   */\n  attachEvents() {\n    this._ws.on(WSWebSocketShardEvents.Debug, ({ message, shardId }) => this.debug([message], shardId));\n    this._ws.on(WSWebSocketShardEvents.Dispatch, ({ data, shardId }) => {\n      this.client.emit(Events.Raw, data, shardId);\n      this.emit(data.t, data.d, shardId);\n      const shard = this.shards.get(shardId);\n      this.handlePacket(data, shard);\n      if (shard.status === Status.WaitingForGuilds && WaitingForGuildEvents.includes(data.t)) {\n        shard.gotGuild(data.d.id);\n      }\n    });\n\n    this._ws.on(WSWebSocketShardEvents.Ready, ({ data, shardId }) => {\n      this.shards.get(shardId).onReadyPacket(data);\n    });\n\n    this._ws.on(WSWebSocketShardEvents.Closed, ({ code, shardId }) => {\n      const shard = this.shards.get(shardId);\n      shard.emit(WebSocketShardEvents.Close, { code, reason: reasonIsDeprecated, wasClean: true });\n      if (UNRESUMABLE_CLOSE_CODES.includes(code) && this.destroyed) {\n        shard.status = Status.Disconnected;\n        /**\n         * Emitted when a shard's WebSocket disconnects and will no longer reconnect.\n         * @event Client#shardDisconnect\n         * @param {CloseEvent} event The WebSocket close event\n         * @param {number} id The shard id that disconnected\n         */\n        this.client.emit(Events.ShardDisconnect, { code, reason: reasonIsDeprecated, wasClean: true }, shardId);\n        this.debug([`Shard not resumable: ${code} (${GatewayCloseCodes[code] ?? CloseCodes[code]})`], shardId);\n        return;\n      }\n\n      this.shards.get(shardId).status = Status.Connecting;\n      /**\n       * Emitted when a shard is attempting to reconnect or re-identify.\n       * @event Client#shardReconnecting\n       * @param {number} id The shard id that is attempting to reconnect\n       */\n      this.client.emit(Events.ShardReconnecting, shardId);\n    });\n    this._ws.on(WSWebSocketShardEvents.Hello, ({ shardId }) => {\n      const shard = this.shards.get(shardId);\n      if (shard.sessionInfo) {\n        shard.closeSequence = shard.sessionInfo.sequence;\n        shard.status = Status.Resuming;\n      } else {\n        shard.status = Status.Identifying;\n      }\n    });\n\n    this._ws.on(WSWebSocketShardEvents.Resumed, ({ shardId }) => {\n      const shard = this.shards.get(shardId);\n      shard.status = Status.Ready;\n      /**\n       * Emitted when the shard resumes successfully\n       * @event WebSocketShard#resumed\n       */\n      shard.emit(WebSocketShardEvents.Resumed);\n    });\n\n    this._ws.on(WSWebSocketShardEvents.HeartbeatComplete, ({ heartbeatAt, latency, shardId }) => {\n      this.debug([`Heartbeat acknowledged, latency of ${latency}ms.`], shardId);\n      const shard = this.shards.get(shardId);\n      shard.lastPingTimestamp = heartbeatAt;\n      shard.ping = latency;\n    });\n\n    this._ws.on(WSWebSocketShardEvents.Error, ({ error, shardId }) => {\n      /**\n       * Emitted whenever a shard's WebSocket encounters a connection error.\n       * @event Client#shardError\n       * @param {Error} error The encountered error\n       * @param {number} shardId The shard that encountered this error\n       */\n      this.client.emit(Events.ShardError, error, shardId);\n    });\n  }\n\n  /**\n   * Broadcasts a packet to every shard this manager handles.\n   * @param {Object} packet The packet to send\n   * @private\n   */\n  broadcast(packet) {\n    for (const shardId of this.shards.keys()) this._ws.send(shardId, packet);\n  }\n\n  /**\n   * Destroys this manager and all its shards.\n   * @private\n   */\n  async destroy() {\n    if (this.destroyed) return;\n    // TODO: Make a util for getting a stack\n    this.debug([Object.assign(new Error(), { name: 'Manager was destroyed:' }).stack]);\n    this.destroyed = true;\n    await this._ws?.destroy({ code: CloseCodes.Normal, reason: 'Manager was destroyed' });\n  }\n\n  /**\n   * Processes a packet and queues it if this WebSocketManager is not ready.\n   * @param {Object} [packet] The packet to be handled\n   * @param {WebSocketShard} [shard] The shard that will handle this packet\n   * @returns {boolean}\n   * @private\n   */\n  handlePacket(packet, shard) {\n    if (packet && this.status !== Status.Ready) {\n      if (!BeforeReadyWhitelist.includes(packet.t)) {\n        this.packetQueue.push({ packet, shard });\n        return false;\n      }\n    }\n\n    if (this.packetQueue.length) {\n      const item = this.packetQueue.shift();\n      setImmediate(() => {\n        this.handlePacket(item.packet, item.shard);\n      }).unref();\n    }\n\n    if (packet && PacketHandlers[packet.t]) {\n      PacketHandlers[packet.t](this.client, packet, shard);\n    }\n\n    return true;\n  }\n\n  /**\n   * Checks whether the client is ready to be marked as ready.\n   * @private\n   */\n  checkShardsReady() {\n    if (this.status === Status.Ready) return;\n    if (this.shards.size !== this.totalShards || this.shards.some(shard => shard.status !== Status.Ready)) {\n      return;\n    }\n\n    this.triggerClientReady();\n  }\n\n  /**\n   * Causes the client to be marked as ready and emits the ready event.\n   * @private\n   */\n  triggerClientReady() {\n    this.status = Status.Ready;\n\n    this.client.readyTimestamp = Date.now();\n\n    /**\n     * Emitted when the client becomes ready to start working.\n     * @event Client#ready\n     * @param {Client} client The client\n     */\n    this.client.emit(Events.ClientReady, this.client);\n\n    this.handlePacket();\n  }\n}\n\nmodule.exports = WebSocketManager;\n", "'use strict';\n\nconst CachedManager = require('./CachedManager');\nconst GuildEmoji = require('../structures/GuildEmoji');\nconst ReactionEmoji = require('../structures/ReactionEmoji');\nconst { parseEmoji } = require('../util/Util');\n\n/**\n * Holds methods to resolve GuildEmojis and stores their cache.\n * @extends {CachedManager}\n */\nclass BaseGuildEmojiManager extends CachedManager {\n  constructor(client, iterable) {\n    super(client, GuildEmoji, iterable);\n  }\n\n  /**\n   * The cache of GuildEmojis\n   * @type {Collection<Snowflake, GuildEmoji>}\n   * @name BaseGuildEmojiManager#cache\n   */\n\n  /**\n   * Data that can be resolved into a GuildEmoji object. This can be:\n   * * A Snowflake\n   * * A GuildEmoji object\n   * * A ReactionEmoji object\n   * @typedef {Snowflake|GuildEmoji|ReactionEmoji} EmojiResolvable\n   */\n\n  /**\n   * Resolves an EmojiResolvable to an Emoji object.\n   * @param {EmojiResolvable} emoji The Emoji resolvable to identify\n   * @returns {?GuildEmoji}\n   */\n  resolve(emoji) {\n    if (emoji instanceof ReactionEmoji) return super.resolve(emoji.id);\n    return super.resolve(emoji);\n  }\n\n  /**\n   * Resolves an EmojiResolvable to an Emoji id string.\n   * @param {EmojiResolvable} emoji The Emoji resolvable to identify\n   * @returns {?Snowflake}\n   */\n  resolveId(emoji) {\n    if (emoji instanceof ReactionEmoji) return emoji.id;\n    return super.resolveId(emoji);\n  }\n\n  /**\n   * Data that can be resolved to give an emoji identifier. This can be:\n   * * An EmojiResolvable\n   * * The `<a:name:id>`, `<:name:id>`, `a:name:id` or `name:id` emoji identifier string of an emoji\n   * * The Unicode representation of an emoji\n   * @typedef {string|EmojiResolvable} EmojiIdentifierResolvable\n   */\n\n  /**\n   * Resolves an EmojiResolvable to an emoji identifier.\n   * @param {EmojiIdentifierResolvable} emoji The emoji resolvable to resolve\n   * @returns {?string}\n   */\n  resolveIdentifier(emoji) {\n    const emojiResolvable = this.resolve(emoji);\n    if (emojiResolvable) return emojiResolvable.identifier;\n    if (emoji instanceof ReactionEmoji) return emoji.identifier;\n    if (typeof emoji === 'string') {\n      const res = parseEmoji(emoji);\n      if (res?.name.length) {\n        emoji = `${res.animated ? 'a:' : ''}${res.name}${res.id ? `:${res.id}` : ''}`;\n      }\n      if (!emoji.includes('%')) return encodeURIComponent(emoji);\n      return emoji;\n    }\n    return null;\n  }\n}\n\nmodule.exports = BaseGuildEmojiManager;\n", "'use strict';\n\nconst process = require('node:process');\nconst { Routes } = require('discord-api-types/v10');\nconst CachedManager = require('./CachedManager');\nconst { BaseChannel } = require('../structures/BaseChannel');\nconst { createChannel } = require('../util/Channels');\nconst { ThreadChannelTypes } = require('../util/Constants');\nconst Events = require('../util/Events');\n\nlet cacheWarningEmitted = false;\n\n/**\n * A manager of channels belonging to a client\n * @extends {CachedManager}\n */\nclass ChannelManager extends CachedManager {\n  constructor(client, iterable) {\n    super(client, BaseChannel, iterable);\n    const defaultCaching =\n      this._cache.constructor.name === 'Collection' ||\n      this._cache.maxSize === undefined ||\n      this._cache.maxSize === Infinity;\n    if (!cacheWarningEmitted && !defaultCaching) {\n      cacheWarningEmitted = true;\n      process.emitWarning(\n        `Overriding the cache handling for ${this.constructor.name} is unsupported and breaks functionality.`,\n        'UnsupportedCacheOverwriteWarning',\n      );\n    }\n  }\n\n  /**\n   * The cache of Channels\n   * @type {Collection<Snowflake, BaseChannel>}\n   * @name ChannelManager#cache\n   */\n\n  _add(data, guild, { cache = true, allowUnknownGuild = false } = {}) {\n    const existing = this.cache.get(data.id);\n    if (existing) {\n      if (cache) existing._patch(data);\n      guild?.channels?._add(existing);\n      if (ThreadChannelTypes.includes(existing.type)) {\n        existing.parent?.threads?._add(existing);\n      }\n      return existing;\n    }\n\n    const channel = createChannel(this.client, data, guild, { allowUnknownGuild });\n\n    if (!channel) {\n      this.client.emit(Events.Debug, `Failed to find guild, or unknown type for channel ${data.id} ${data.type}`);\n      return null;\n    }\n\n    if (cache && !allowUnknownGuild) this.cache.set(channel.id, channel);\n\n    return channel;\n  }\n\n  _remove(id) {\n    const channel = this.cache.get(id);\n    channel?.guild?.channels.cache.delete(id);\n\n    for (const [code, invite] of channel?.guild?.invites.cache ?? []) {\n      if (invite.channelId === id) channel.guild.invites.cache.delete(code);\n    }\n\n    channel?.parent?.threads?.cache.delete(id);\n    this.cache.delete(id);\n  }\n\n  /**\n   * Data that can be resolved to give a Channel object. This can be:\n   * * A Channel object\n   * * A Snowflake\n   * @typedef {BaseChannel|Snowflake} ChannelResolvable\n   */\n\n  /**\n   * Resolves a ChannelResolvable to a Channel object.\n   * @method resolve\n   * @memberof ChannelManager\n   * @instance\n   * @param {ChannelResolvable} channel The channel resolvable to resolve\n   * @returns {?BaseChannel}\n   */\n\n  /**\n   * Resolves a ChannelResolvable to a channel id string.\n   * @method resolveId\n   * @memberof ChannelManager\n   * @instance\n   * @param {ChannelResolvable} channel The channel resolvable to resolve\n   * @returns {?Snowflake}\n   */\n\n  /**\n   * Options for fetching a channel from Discord\n   * @typedef {BaseFetchOptions} FetchChannelOptions\n   * @property {boolean} [allowUnknownGuild=false] Allows the channel to be returned even if the guild is not in cache,\n   * it will not be cached. <warn>Many of the properties and methods on the returned channel will throw errors</warn>\n   */\n\n  /**\n   * Obtains a channel from Discord, or the channel cache if it's already available.\n   * @param {Snowflake} id The channel's id\n   * @param {FetchChannelOptions} [options] Additional options for this fetch\n   * @returns {Promise<?BaseChannel>}\n   * @example\n   * // Fetch a channel by its id\n   * client.channels.fetch('222109930545610754')\n   *   .then(channel => console.log(channel.name))\n   *   .catch(console.error);\n   */\n  async fetch(id, { allowUnknownGuild = false, cache = true, force = false } = {}) {\n    if (!force) {\n      const existing = this.cache.get(id);\n      if (existing && !existing.partial) return existing;\n    }\n\n    const data = await this.client.rest.get(Routes.channel(id));\n    return this._add(data, null, { cache, allowUnknownGuild });\n  }\n}\n\nmodule.exports = ChannelManager;\n", "'use strict';\n\nconst process = require('node:process');\nconst { calculateShardId } = require('@discordjs/util');\nconst { DiscordjsError, DiscordjsTypeError, ErrorCodes } = require('../errors');\nconst Events = require('../util/Events');\nconst { makeError, makePlainError } = require('../util/Util');\n\n/**\n * Helper class for sharded clients spawned as a child process/worker, such as from a {@link ShardingManager}.\n * Utilises IPC to send and receive data to/from the master process and other shards.\n */\nclass ShardClientUtil {\n  constructor(client, mode) {\n    /**\n     * Client for the shard\n     * @type {Client}\n     */\n    this.client = client;\n\n    /**\n     * Mode the shard was spawned with\n     * @type {ShardingManagerMode}\n     */\n    this.mode = mode;\n\n    /**\n     * Message port for the master process (only when {@link ShardClientUtil#mode} is `worker`)\n     * @type {?MessagePort}\n     */\n    this.parentPort = null;\n\n    switch (mode) {\n      case 'process':\n        process.on('message', this._handleMessage.bind(this));\n        client.on(Events.ShardReady, () => {\n          process.send({ _ready: true });\n        });\n        client.on(Events.ShardDisconnect, () => {\n          process.send({ _disconnect: true });\n        });\n        client.on(Events.ShardReconnecting, () => {\n          process.send({ _reconnecting: true });\n        });\n        client.on(Events.ShardResume, () => {\n          process.send({ _resume: true });\n        });\n        break;\n      case 'worker':\n        this.parentPort = require('node:worker_threads').parentPort;\n        this.parentPort.on('message', this._handleMessage.bind(this));\n        client.on(Events.ShardReady, () => {\n          this.parentPort.postMessage({ _ready: true });\n        });\n        client.on(Events.ShardDisconnect, () => {\n          this.parentPort.postMessage({ _disconnect: true });\n        });\n        client.on(Events.ShardReconnecting, () => {\n          this.parentPort.postMessage({ _reconnecting: true });\n        });\n        client.on(Events.ShardResume, () => {\n          this.parentPort.postMessage({ _resume: true });\n        });\n        break;\n    }\n  }\n\n  /**\n   * Array of shard ids of this client\n   * @type {number[]}\n   * @readonly\n   */\n  get ids() {\n    return this.client.options.shards;\n  }\n\n  /**\n   * Total number of shards\n   * @type {number}\n   * @readonly\n   */\n  get count() {\n    return this.client.options.shardCount;\n  }\n\n  /**\n   * Sends a message to the master process.\n   * @param {*} message Message to send\n   * @returns {Promise<void>}\n   * @emits Shard#message\n   */\n  send(message) {\n    return new Promise((resolve, reject) => {\n      switch (this.mode) {\n        case 'process':\n          process.send(message, err => {\n            if (err) reject(err);\n            else resolve();\n          });\n          break;\n        case 'worker':\n          this.parentPort.postMessage(message);\n          resolve();\n          break;\n      }\n    });\n  }\n\n  /**\n   * Fetches a client property value of each shard, or a given shard.\n   * @param {string} prop Name of the client property to get, using periods for nesting\n   * @param {number} [shard] Shard to fetch property from, all if undefined\n   * @returns {Promise<*|Array<*>>}\n   * @example\n   * client.shard.fetchClientValues('guilds.cache.size')\n   *   .then(results => console.log(`${results.reduce((prev, val) => prev + val, 0)} total guilds`))\n   *   .catch(console.error);\n   * @see {@link ShardingManager#fetchClientValues}\n   */\n  fetchClientValues(prop, shard) {\n    return new Promise((resolve, reject) => {\n      const parent = this.parentPort ?? process;\n\n      const listener = message => {\n        if (message?._sFetchProp !== prop || message._sFetchPropShard !== shard) return;\n        parent.removeListener('message', listener);\n        this.decrementMaxListeners(parent);\n        if (!message._error) resolve(message._result);\n        else reject(makeError(message._error));\n      };\n      this.incrementMaxListeners(parent);\n      parent.on('message', listener);\n\n      this.send({ _sFetchProp: prop, _sFetchPropShard: shard }).catch(err => {\n        parent.removeListener('message', listener);\n        this.decrementMaxListeners(parent);\n        reject(err);\n      });\n    });\n  }\n\n  /**\n   * Evaluates a script or function on all shards, or a given shard, in the context of the {@link Client}s.\n   * @param {Function} script JavaScript to run on each shard\n   * @param {BroadcastEvalOptions} [options={}] The options for the broadcast\n   * @returns {Promise<*|Array<*>>} Results of the script execution\n   * @example\n   * client.shard.broadcastEval(client => client.guilds.cache.size)\n   *   .then(results => console.log(`${results.reduce((prev, val) => prev + val, 0)} total guilds`))\n   *   .catch(console.error);\n   * @see {@link ShardingManager#broadcastEval}\n   */\n  broadcastEval(script, options = {}) {\n    return new Promise((resolve, reject) => {\n      const parent = this.parentPort ?? process;\n      if (typeof script !== 'function') {\n        reject(new DiscordjsTypeError(ErrorCodes.ShardingInvalidEvalBroadcast));\n        return;\n      }\n      script = `(${script})(this, ${JSON.stringify(options.context)})`;\n\n      const listener = message => {\n        if (message?._sEval !== script || message._sEvalShard !== options.shard) return;\n        parent.removeListener('message', listener);\n        this.decrementMaxListeners(parent);\n        if (!message._error) resolve(message._result);\n        else reject(makeError(message._error));\n      };\n      this.incrementMaxListeners(parent);\n      parent.on('message', listener);\n      this.send({ _sEval: script, _sEvalShard: options.shard }).catch(err => {\n        parent.removeListener('message', listener);\n        this.decrementMaxListeners(parent);\n        reject(err);\n      });\n    });\n  }\n\n  /**\n   * Requests a respawn of all shards.\n   * @param {MultipleShardRespawnOptions} [options] Options for respawning shards\n   * @returns {Promise<void>} Resolves upon the message being sent\n   * @see {@link ShardingManager#respawnAll}\n   */\n  respawnAll({ shardDelay = 5_000, respawnDelay = 500, timeout = 30_000 } = {}) {\n    return this.send({ _sRespawnAll: { shardDelay, respawnDelay, timeout } });\n  }\n\n  /**\n   * Handles an IPC message.\n   * @param {*} message Message received\n   * @private\n   */\n  async _handleMessage(message) {\n    if (!message) return;\n    if (message._fetchProp) {\n      try {\n        const props = message._fetchProp.split('.');\n        let value = this.client;\n        for (const prop of props) value = value[prop];\n        this._respond('fetchProp', { _fetchProp: message._fetchProp, _result: value });\n      } catch (err) {\n        this._respond('fetchProp', { _fetchProp: message._fetchProp, _error: makePlainError(err) });\n      }\n    } else if (message._eval) {\n      try {\n        this._respond('eval', { _eval: message._eval, _result: await this.client._eval(message._eval) });\n      } catch (err) {\n        this._respond('eval', { _eval: message._eval, _error: makePlainError(err) });\n      }\n    }\n  }\n\n  /**\n   * Sends a message to the master process, emitting an error from the client upon failure.\n   * @param {string} type Type of response to send\n   * @param {*} message Message to send\n   * @private\n   */\n  _respond(type, message) {\n    this.send(message).catch(err => {\n      const error = new Error(`Error when sending ${type} response to master process: ${err.message}`);\n      error.stack = err.stack;\n      /**\n       * Emitted when the client encounters an error.\n       * <warn>Errors thrown within this event do not have a catch handler, it is\n       * recommended to not use async functions as `error` event handlers. See the\n       * [Node.js docs](https://nodejs.org/api/events.html#capture-rejections-of-promises) for details.</warn>\n       * @event Client#error\n       * @param {Error} error The error encountered\n       */\n      this.client.emit(Events.Error, error);\n    });\n  }\n\n  /**\n   * Creates/gets the singleton of this class.\n   * @param {Client} client The client to use\n   * @param {ShardingManagerMode} mode Mode the shard was spawned with\n   * @returns {ShardClientUtil}\n   */\n  static singleton(client, mode) {\n    if (!this._singleton) {\n      this._singleton = new this(client, mode);\n    } else {\n      client.emit(\n        Events.Warn,\n        'Multiple clients created in child process/worker; only the first will handle sharding helpers.',\n      );\n    }\n    return this._singleton;\n  }\n\n  /**\n   * Get the shard id for a given guild id.\n   * @param {Snowflake} guildId Snowflake guild id to get shard id for\n   * @param {number} shardCount Number of shards\n   * @returns {number}\n   */\n  static shardIdForGuildId(guildId, shardCount) {\n    const shard = calculateShardId(guildId, shardCount);\n    if (shard < 0) throw new DiscordjsError(ErrorCodes.ShardingShardMiscalculation, shard, guildId, shardCount);\n    return shard;\n  }\n\n  /**\n   * Increments max listeners by one for a given emitter, if they are not zero.\n   * @param {EventEmitter|process} emitter The emitter that emits the events.\n   * @private\n   */\n  incrementMaxListeners(emitter) {\n    const maxListeners = emitter.getMaxListeners();\n    if (maxListeners !== 0) {\n      emitter.setMaxListeners(maxListeners + 1);\n    }\n  }\n\n  /**\n   * Decrements max listeners by one for a given emitter, if they are not zero.\n   * @param {EventEmitter|process} emitter The emitter that emits the events.\n   * @private\n   */\n  decrementMaxListeners(emitter) {\n    const maxListeners = emitter.getMaxListeners();\n    if (maxListeners !== 0) {\n      emitter.setMaxListeners(maxListeners - 1);\n    }\n  }\n}\n\nmodule.exports = ShardClientUtil;\n", "'use strict';\n\nconst { Collection } = require('@discordjs/collection');\nconst ApplicationCommand = require('./ApplicationCommand');\nconst GuildAuditLogsEntry = require('./GuildAuditLogsEntry');\nconst Integration = require('./Integration');\nconst Webhook = require('./Webhook');\nconst { flatten } = require('../util/Util');\n\n/**\n * Audit logs entries are held in this class.\n */\nclass GuildAuditLogs {\n  constructor(guild, data) {\n    if (data.users) for (const user of data.users) guild.client.users._add(user);\n    if (data.threads) for (const thread of data.threads) guild.client.channels._add(thread, guild);\n    /**\n     * Cached webhooks\n     * @type {Collection<Snowflake, Webhook>}\n     * @private\n     */\n    this.webhooks = new Collection();\n    if (data.webhooks) {\n      for (const hook of data.webhooks) {\n        this.webhooks.set(hook.id, new Webhook(guild.client, hook));\n      }\n    }\n\n    /**\n     * Cached integrations\n     * @type {Collection<Snowflake|string, Integration>}\n     * @private\n     */\n    this.integrations = new Collection();\n    if (data.integrations) {\n      for (const integration of data.integrations) {\n        this.integrations.set(integration.id, new Integration(guild.client, integration, guild));\n      }\n    }\n\n    /**\n     * Cached {@link GuildScheduledEvent}s.\n     * @type {Collection<Snowflake, GuildScheduledEvent>}\n     * @private\n     */\n    this.guildScheduledEvents = data.guild_scheduled_events.reduce(\n      (guildScheduledEvents, guildScheduledEvent) =>\n        guildScheduledEvents.set(guildScheduledEvent.id, guild.scheduledEvents._add(guildScheduledEvent)),\n      new Collection(),\n    );\n\n    /**\n     * Cached application commands, includes application commands from other applications\n     * @type {Collection<Snowflake, ApplicationCommand>}\n     * @private\n     */\n    this.applicationCommands = new Collection();\n    if (data.application_commands) {\n      for (const command of data.application_commands) {\n        this.applicationCommands.set(command.id, new ApplicationCommand(guild.client, command, guild));\n      }\n    }\n\n    /**\n     * Cached auto moderation rules.\n     * @type {Collection<Snowflake, AutoModerationRule>}\n     * @private\n     */\n    this.autoModerationRules = data.auto_moderation_rules.reduce(\n      (autoModerationRules, autoModerationRule) =>\n        autoModerationRules.set(autoModerationRule.id, guild.autoModerationRules._add(autoModerationRule)),\n      new Collection(),\n    );\n\n    /**\n     * The entries for this guild's audit logs\n     * @type {Collection<Snowflake, GuildAuditLogsEntry>}\n     */\n    this.entries = new Collection();\n    for (const item of data.audit_log_entries) {\n      const entry = new GuildAuditLogsEntry(guild, item, this);\n      this.entries.set(entry.id, entry);\n    }\n  }\n\n  toJSON() {\n    return flatten(this);\n  }\n}\n\nmodule.exports = GuildAuditLogs;\n", "'use strict';\n\nconst { Collection } = require('@discordjs/collection');\nconst Base = require('./Base');\nconst { GuildOnboardingPrompt } = require('./GuildOnboardingPrompt');\n\n/**\n * Represents the onboarding data of a guild.\n * @extends {Base}\n */\nclass GuildOnboarding extends Base {\n  constructor(client, data) {\n    super(client);\n\n    /**\n     * The id of the guild this onboarding data is for\n     * @type {Snowflake}\n     */\n    this.guildId = data.guild_id;\n\n    const guild = this.guild;\n\n    /**\n     * The prompts shown during onboarding and in customize community\n     * @type {Collection<Snowflake, GuildOnboardingPrompt>}\n     */\n    this.prompts = data.prompts.reduce(\n      (prompts, prompt) => prompts.set(prompt.id, new GuildOnboardingPrompt(client, prompt, this.guildId)),\n      new Collection(),\n    );\n\n    /**\n     * The ids of the channels that new members get opted into automatically\n     * @type {Collection<Snowflake, GuildChannel>}\n     */\n    this.defaultChannels = data.default_channel_ids.reduce(\n      (channels, channelId) => channels.set(channelId, guild.channels.cache.get(channelId)),\n      new Collection(),\n    );\n\n    /**\n     * Whether onboarding is enabled\n     * @type {boolean}\n     */\n    this.enabled = data.enabled;\n\n    /**\n     * The mode of this onboarding\n     * @type {GuildOnboardingMode}\n     */\n    this.mode = data.mode;\n  }\n\n  /**\n   * The guild this onboarding is from\n   * @type {Guild}\n   * @readonly\n   */\n  get guild() {\n    return this.client.guilds.cache.get(this.guildId);\n  }\n}\n\nexports.GuildOnboarding = GuildOnboarding;\n", "'use strict';\n\nconst BaseGuildEmoji = require('./BaseGuildEmoji');\n\n/**\n * Represents an instance of an emoji belonging to a public guild obtained through Discord's preview endpoint.\n * @extends {BaseGuildEmoji}\n */\nclass GuildPreviewEmoji extends BaseGuildEmoji {\n  /**\n   * The public guild this emoji is part of\n   * @type {GuildPreview}\n   * @name GuildPreviewEmoji#guild\n   */\n\n  constructor(client, data, guild) {\n    super(client, data, guild);\n\n    /**\n     * The roles this emoji is active for\n     * @type {Snowflake[]}\n     */\n    this.roles = data.roles;\n  }\n}\n\nmodule.exports = GuildPreviewEmoji;\n", "'use strict';\n\nconst { Collection } = require('@discordjs/collection');\nconst { DiscordSnowflake } = require('@sapphire/snowflake');\nconst { Routes } = require('discord-api-types/v10');\nconst Base = require('./Base');\nconst GuildPreviewEmoji = require('./GuildPreviewEmoji');\nconst { Sticker } = require('./Sticker');\n\n/**\n * Represents the data about the guild any bot can preview, connected to the specified guild.\n * @extends {Base}\n */\nclass GuildPreview extends Base {\n  constructor(client, data) {\n    super(client);\n\n    if (!data) return;\n\n    this._patch(data);\n  }\n\n  _patch(data) {\n    /**\n     * The id of this guild\n     * @type {string}\n     */\n    this.id = data.id;\n\n    if ('name' in data) {\n      /**\n       * The name of this guild\n       * @type {string}\n       */\n      this.name = data.name;\n    }\n\n    if ('icon' in data) {\n      /**\n       * The icon of this guild\n       * @type {?string}\n       */\n      this.icon = data.icon;\n    }\n\n    if ('splash' in data) {\n      /**\n       * The splash icon of this guild\n       * @type {?string}\n       */\n      this.splash = data.splash;\n    }\n\n    if ('discovery_splash' in data) {\n      /**\n       * The discovery splash icon of this guild\n       * @type {?string}\n       */\n      this.discoverySplash = data.discovery_splash;\n    }\n\n    if ('features' in data) {\n      /**\n       * An array of enabled guild features\n       * @type {GuildFeature[]}\n       */\n      this.features = data.features;\n    }\n\n    if ('approximate_member_count' in data) {\n      /**\n       * The approximate count of members in this guild\n       * @type {number}\n       */\n      this.approximateMemberCount = data.approximate_member_count;\n    }\n\n    if ('approximate_presence_count' in data) {\n      /**\n       * The approximate count of online members in this guild\n       * @type {number}\n       */\n      this.approximatePresenceCount = data.approximate_presence_count;\n    }\n\n    if ('description' in data) {\n      /**\n       * The description for this guild\n       * @type {?string}\n       */\n      this.description = data.description;\n    } else {\n      this.description ??= null;\n    }\n\n    if (!this.emojis) {\n      /**\n       * Collection of emojis belonging to this guild\n       * @type {Collection<Snowflake, GuildPreviewEmoji>}\n       */\n      this.emojis = new Collection();\n    } else {\n      this.emojis.clear();\n    }\n    for (const emoji of data.emojis) {\n      this.emojis.set(emoji.id, new GuildPreviewEmoji(this.client, emoji, this));\n    }\n\n    /**\n     * Collection of stickers belonging to this guild\n     * @type {Collection<Snowflake, Sticker>}\n     */\n    this.stickers = data.stickers.reduce(\n      (stickers, sticker) => stickers.set(sticker.id, new Sticker(this.client, sticker)),\n      new Collection(),\n    );\n  }\n\n  /**\n   * The timestamp this guild was created at\n   * @type {number}\n   * @readonly\n   */\n  get createdTimestamp() {\n    return DiscordSnowflake.timestampFrom(this.id);\n  }\n\n  /**\n   * The time this guild was created at\n   * @type {Date}\n   * @readonly\n   */\n  get createdAt() {\n    return new Date(this.createdTimestamp);\n  }\n\n  /**\n   * The URL to this guild's splash.\n   * @param {ImageURLOptions} [options={}] Options for the image URL\n   * @returns {?string}\n   */\n  splashURL(options = {}) {\n    return this.splash && this.client.rest.cdn.splash(this.id, this.splash, options);\n  }\n\n  /**\n   * The URL to this guild's discovery splash.\n   * @param {ImageURLOptions} [options={}] Options for the image URL\n   * @returns {?string}\n   */\n  discoverySplashURL(options = {}) {\n    return this.discoverySplash && this.client.rest.cdn.discoverySplash(this.id, this.discoverySplash, options);\n  }\n\n  /**\n   * The URL to this guild's icon.\n   * @param {ImageURLOptions} [options={}] Options for the image URL\n   * @returns {?string}\n   */\n  iconURL(options = {}) {\n    return this.icon && this.client.rest.cdn.icon(this.id, this.icon, options);\n  }\n\n  /**\n   * Fetches this guild.\n   * @returns {Promise<GuildPreview>}\n   */\n  async fetch() {\n    const data = await this.client.rest.get(Routes.guildPreview(this.id));\n    this._patch(data);\n    return this;\n  }\n\n  /**\n   * When concatenated with a string, this automatically returns the guild's name instead of the Guild object.\n   * @returns {string}\n   * @example\n   * // Logs: Hello from My Guild!\n   * console.log(`Hello from ${previewGuild}!`);\n   */\n  toString() {\n    return this.name;\n  }\n\n  toJSON() {\n    const json = super.toJSON();\n    json.iconURL = this.iconURL();\n    json.splashURL = this.splashURL();\n    return json;\n  }\n}\n\nmodule.exports = GuildPreview;\n", "'use strict';\n\nconst { Collection } = require('@discordjs/collection');\nconst { Routes } = require('discord-api-types/v10');\nconst CachedManager = require('./CachedManager');\nconst AutoModerationRule = require('../structures/AutoModerationRule');\n\n/**\n * Manages API methods for auto moderation rules and stores their cache.\n * @extends {CachedManager}\n */\nclass AutoModerationRuleManager extends CachedManager {\n  constructor(guild, iterable) {\n    super(guild.client, AutoModerationRule, iterable);\n\n    /**\n     * The guild this manager belongs to.\n     * @type {Guild}\n     */\n    this.guild = guild;\n  }\n\n  /**\n   * The cache of this manager\n   * @type {Collection<Snowflake, AutoModerationRule>}\n   * @name AutoModerationRuleManager#cache\n   */\n\n  /**\n   * Resolves an {@link AutoModerationRuleResolvable} to an {@link AutoModerationRule} object.\n   * @method resolve\n   * @memberof AutoModerationRuleManager\n   * @instance\n   * @param {AutoModerationRuleResolvable} autoModerationRule The AutoModerationRule resolvable to resolve\n   * @returns {?AutoModerationRule}\n   */\n\n  /**\n   * Resolves an {@link AutoModerationRuleResolvable} to a {@link AutoModerationRule} id.\n   * @method resolveId\n   * @memberof AutoModerationRuleManager\n   * @instance\n   * @param {AutoModerationRuleResolvable} autoModerationRule The AutoModerationRule resolvable to resolve\n   * @returns {?Snowflake}\n   */\n\n  _add(data, cache) {\n    return super._add(data, cache, { extras: [this.guild] });\n  }\n\n  /**\n   * Options used to set the trigger metadata of an auto moderation rule.\n   * @typedef {Object} AutoModerationTriggerMetadataOptions\n   * @property {string[]} [keywordFilter] The substrings that will be searched for in the content\n   * @property {string[]} [regexPatterns] The regular expression patterns which will be matched against the content\n   * <info>Only Rust-flavored regular expressions are supported.</info>\n   * @property {AutoModerationRuleKeywordPresetType[]} [presets]\n   * The internally pre-defined wordsets which will be searched for in the content\n   * @property {string[]} [allowList] The substrings that will be exempt from triggering\n   * {@link AutoModerationRuleTriggerType.Keyword},\n   * {@link AutoModerationRuleTriggerType.KeywordPreset},\n   * and {@link AutoModerationRuleTriggerType.MemberProfile}\n   * @property {?number} [mentionTotalLimit] The total number of role & user mentions allowed per message\n   * @property {boolean} [mentionRaidProtectionEnabled] Whether to automatically detect mention raids\n   */\n\n  /**\n   * Options used to set the actions of an auto moderation rule.\n   * @typedef {Object} AutoModerationActionOptions\n   * @property {AutoModerationActionType} type The type of this auto moderation rule action\n   * @property {AutoModerationActionMetadataOptions} [metadata] Additional metadata needed during execution\n   * <info>This property is required if using a `type` of\n   * {@link AutoModerationActionType.SendAlertMessage} or {@link AutoModerationActionType.Timeout}.</info>\n   */\n\n  /**\n   * Options used to set the metadata of an auto moderation rule action.\n   * @typedef {Object} AutoModerationActionMetadataOptions\n   * @property {GuildTextChannelResolvable|ThreadChannel} [channel] The channel to which content will be logged\n   * @property {number} [durationSeconds] The timeout duration in seconds\n   * @property {string} [customMessage] The custom message that is shown whenever a message is blocked\n   */\n\n  /**\n   * Options used to create an auto moderation rule.\n   * @typedef {Object} AutoModerationRuleCreateOptions\n   * @property {string} name The name of the auto moderation rule\n   * @property {AutoModerationRuleEventType} eventType The event type of the auto moderation rule\n   * @property {AutoModerationRuleTriggerType} triggerType The trigger type of the auto moderation rule\n   * @property {AutoModerationTriggerMetadataOptions} [triggerMetadata] The trigger metadata of the auto moderation rule\n   * <info>This property is required if using a `triggerType` of\n   * {@link AutoModerationRuleTriggerType.Keyword},\n   * {@link AutoModerationRuleTriggerType.KeywordPreset},\n   * {@link AutoModerationRuleTriggerType.MentionSpam},\n   * or {@link AutoModerationRuleTriggerType.MemberProfile}.</info>\n   * @property {AutoModerationActionOptions[]} actions\n   * The actions that will execute when the auto moderation rule is triggered\n   * @property {boolean} [enabled] Whether the auto moderation rule should be enabled\n   * @property {Collection<Snowflake, Role>|RoleResolvable[]} [exemptRoles]\n   * The roles that should not be affected by the auto moderation rule\n   * @property {Collection<Snowflake, GuildChannel|ThreadChannel>|GuildChannelResolvable[]} [exemptChannels]\n   * The channels that should not be affected by the auto moderation rule\n   * @property {string} [reason] The reason for creating the auto moderation rule\n   */\n\n  /**\n   * Creates a new auto moderation rule.\n   * @param {AutoModerationRuleCreateOptions} options Options for creating the auto moderation rule\n   * @returns {Promise<AutoModerationRule>}\n   */\n  async create({\n    name,\n    eventType,\n    triggerType,\n    triggerMetadata,\n    actions,\n    enabled,\n    exemptRoles,\n    exemptChannels,\n    reason,\n  }) {\n    const data = await this.client.rest.post(Routes.guildAutoModerationRules(this.guild.id), {\n      body: {\n        name,\n        event_type: eventType,\n        trigger_type: triggerType,\n        trigger_metadata: triggerMetadata && {\n          keyword_filter: triggerMetadata.keywordFilter,\n          regex_patterns: triggerMetadata.regexPatterns,\n          presets: triggerMetadata.presets,\n          allow_list: triggerMetadata.allowList,\n          mention_total_limit: triggerMetadata.mentionTotalLimit,\n          mention_raid_protection_enabled: triggerMetadata.mentionRaidProtectionEnabled,\n        },\n        actions: actions.map(action => ({\n          type: action.type,\n          metadata: {\n            duration_seconds: action.metadata?.durationSeconds,\n            channel_id: action.metadata?.channel && this.guild.channels.resolveId(action.metadata.channel),\n            custom_message: action.metadata?.customMessage,\n          },\n        })),\n        enabled,\n        exempt_roles: exemptRoles?.map(exemptRole => this.guild.roles.resolveId(exemptRole)),\n        exempt_channels: exemptChannels?.map(exemptChannel => this.guild.channels.resolveId(exemptChannel)),\n      },\n      reason,\n    });\n\n    return this._add(data);\n  }\n\n  /**\n   * Options used to edit an auto moderation rule.\n   * @typedef {Object} AutoModerationRuleEditOptions\n   * @property {string} [name] The name of the auto moderation rule\n   * @property {AutoModerationRuleEventType} [eventType] The event type of the auto moderation rule\n   * @property {AutoModerationTriggerMetadataOptions} [triggerMetadata] The trigger metadata of the auto moderation rule\n   * @property {AutoModerationActionOptions[]} [actions]\n   * The actions that will execute when the auto moderation rule is triggered\n   * @property {boolean} [enabled] Whether the auto moderation rule should be enabled\n   * @property {Collection<Snowflake, Role>|RoleResolvable[]} [exemptRoles]\n   * The roles that should not be affected by the auto moderation rule\n   * @property {Collection<Snowflake, GuildChannel|ThreadChannel>|GuildChannelResolvable[]} [exemptChannels]\n   * The channels that should not be affected by the auto moderation rule\n   * @property {string} [reason] The reason for creating the auto moderation rule\n   */\n\n  /**\n   * Edits an auto moderation rule.\n   * @param {AutoModerationRuleResolvable} autoModerationRule The auto moderation rule to edit\n   * @param {AutoModerationRuleEditOptions} options Options for editing the auto moderation rule\n   * @returns {Promise<AutoModerationRule>}\n   */\n  async edit(\n    autoModerationRule,\n    { name, eventType, triggerMetadata, actions, enabled, exemptRoles, exemptChannels, reason },\n  ) {\n    const autoModerationRuleId = this.resolveId(autoModerationRule);\n\n    const data = await this.client.rest.patch(Routes.guildAutoModerationRule(this.guild.id, autoModerationRuleId), {\n      body: {\n        name,\n        event_type: eventType,\n        trigger_metadata: triggerMetadata && {\n          keyword_filter: triggerMetadata.keywordFilter,\n          regex_patterns: triggerMetadata.regexPatterns,\n          presets: triggerMetadata.presets,\n          allow_list: triggerMetadata.allowList,\n          mention_total_limit: triggerMetadata.mentionTotalLimit,\n          mention_raid_protection_enabled: triggerMetadata.mentionRaidProtectionEnabled,\n        },\n        actions: actions?.map(action => ({\n          type: action.type,\n          metadata: {\n            duration_seconds: action.metadata?.durationSeconds,\n            channel_id: action.metadata?.channel && this.guild.channels.resolveId(action.metadata.channel),\n            custom_message: action.metadata?.customMessage,\n          },\n        })),\n        enabled,\n        exempt_roles: exemptRoles?.map(exemptRole => this.guild.roles.resolveId(exemptRole)),\n        exempt_channels: exemptChannels?.map(exemptChannel => this.guild.channels.resolveId(exemptChannel)),\n      },\n      reason,\n    });\n\n    return this._add(data);\n  }\n\n  /**\n   * Data that can be resolved to give an AutoModerationRule object. This can be:\n   * * An AutoModerationRule\n   * * A Snowflake\n   * @typedef {AutoModerationRule|Snowflake} AutoModerationRuleResolvable\n   */\n\n  /**\n   * Options used to fetch a single auto moderation rule from a guild.\n   * @typedef {BaseFetchOptions} FetchAutoModerationRuleOptions\n   * @property {AutoModerationRuleResolvable} autoModerationRule The auto moderation rule to fetch\n   */\n\n  /**\n   * Options used to fetch all auto moderation rules from a guild.\n   * @typedef {Object} FetchAutoModerationRulesOptions\n   * @property {boolean} [cache] Whether to cache the fetched auto moderation rules\n   */\n\n  /**\n   * Fetches auto moderation rules from Discord.\n   * @param {AutoModerationRuleResolvable|FetchAutoModerationRuleOptions|FetchAutoModerationRulesOptions} [options]\n   * Options for fetching auto moderation rule(s)\n   * @returns {Promise<AutoModerationRule|Collection<Snowflake, AutoModerationRule>>}\n   * @example\n   * // Fetch all auto moderation rules from a guild without caching\n   * guild.autoModerationRules.fetch({ cache: false })\n   *   .then(console.log)\n   *   .catch(console.error);\n   * @example\n   * // Fetch a single auto moderation rule\n   * guild.autoModerationRules.fetch('979083472868098119')\n   *   .then(console.log)\n   *   .catch(console.error);\n   * @example\n   * // Fetch a single auto moderation rule without checking cache and without caching\n   * guild.autoModerationRules.fetch({ autoModerationRule: '979083472868098119', cache: false, force: true })\n   *   .then(console.log)\n   *   .catch(console.error)\n   */\n  fetch(options) {\n    if (!options) return this._fetchMany();\n    const { autoModerationRule, cache, force } = options;\n    const resolvedAutoModerationRule = this.resolveId(autoModerationRule ?? options);\n    if (resolvedAutoModerationRule) {\n      return this._fetchSingle({ autoModerationRule: resolvedAutoModerationRule, cache, force });\n    }\n    return this._fetchMany(options);\n  }\n\n  async _fetchSingle({ autoModerationRule, cache, force = false }) {\n    if (!force) {\n      const existing = this.cache.get(autoModerationRule);\n      if (existing) return existing;\n    }\n\n    const data = await this.client.rest.get(Routes.guildAutoModerationRule(this.guild.id, autoModerationRule));\n    return this._add(data, cache);\n  }\n\n  async _fetchMany(options = {}) {\n    const data = await this.client.rest.get(Routes.guildAutoModerationRules(this.guild.id));\n\n    return data.reduce(\n      (col, autoModerationRule) => col.set(autoModerationRule.id, this._add(autoModerationRule, options.cache)),\n      new Collection(),\n    );\n  }\n\n  /**\n   * Deletes an auto moderation rule.\n   * @param {AutoModerationRuleResolvable} autoModerationRule The auto moderation rule to delete\n   * @param {string} [reason] The reason for deleting the auto moderation rule\n   * @returns {Promise<void>}\n   */\n  async delete(autoModerationRule, reason) {\n    const autoModerationRuleId = this.resolveId(autoModerationRule);\n    await this.client.rest.delete(Routes.guildAutoModerationRule(this.guild.id, autoModerationRuleId), { reason });\n  }\n}\n\nmodule.exports = AutoModerationRuleManager;\n", "'use strict';\n\nconst ApplicationCommandManager = require('./ApplicationCommandManager');\nconst ApplicationCommandPermissionsManager = require('./ApplicationCommandPermissionsManager');\n\n/**\n * An extension for guild-specific application commands.\n * @extends {ApplicationCommandManager}\n */\nclass GuildApplicationCommandManager extends ApplicationCommandManager {\n  constructor(guild, iterable) {\n    super(guild.client, iterable);\n\n    /**\n     * The guild that this manager belongs to\n     * @type {Guild}\n     */\n    this.guild = guild;\n\n    /**\n     * The manager for permissions of arbitrary commands on this guild\n     * @type {ApplicationCommandPermissionsManager}\n     */\n    this.permissions = new ApplicationCommandPermissionsManager(this);\n  }\n}\n\nmodule.exports = GuildApplicationCommandManager;\n", "'use strict';\n\nconst process = require('node:process');\nconst { Collection } = require('@discordjs/collection');\nconst { makeURLSearchParams } = require('@discordjs/rest');\nconst { Routes } = require('discord-api-types/v10');\nconst CachedManager = require('./CachedManager');\nconst { DiscordjsTypeError, DiscordjsError, ErrorCodes } = require('../errors');\nconst GuildBan = require('../structures/GuildBan');\nconst { GuildMember } = require('../structures/GuildMember');\n\nlet deprecationEmittedForDeleteMessageDays = false;\n\n/**\n * Manages API methods for guild bans and stores their cache.\n * @extends {CachedManager}\n */\nclass GuildBanManager extends CachedManager {\n  constructor(guild, iterable) {\n    super(guild.client, GuildBan, iterable);\n\n    /**\n     * The guild this Manager belongs to\n     * @type {Guild}\n     */\n    this.guild = guild;\n  }\n\n  /**\n   * The cache of this Manager\n   * @type {Collection<Snowflake, GuildBan>}\n   * @name GuildBanManager#cache\n   */\n\n  _add(data, cache) {\n    return super._add(data, cache, { id: data.user.id, extras: [this.guild] });\n  }\n\n  /**\n   * Data that resolves to give a GuildBan object. This can be:\n   * * A GuildBan object\n   * * A User resolvable\n   * @typedef {GuildBan|UserResolvable} GuildBanResolvable\n   */\n\n  /**\n   * Resolves a GuildBanResolvable to a GuildBan object.\n   * @param {GuildBanResolvable} ban The ban that is in the guild\n   * @returns {?GuildBan}\n   */\n  resolve(ban) {\n    return super.resolve(ban) ?? super.resolve(this.client.users.resolveId(ban));\n  }\n\n  /**\n   * Options used to fetch a single ban from a guild.\n   * @typedef {BaseFetchOptions} FetchBanOptions\n   * @property {UserResolvable} user The ban to fetch\n   */\n\n  /**\n   * Options used to fetch multiple bans from a guild.\n   * @typedef {Object} FetchBansOptions\n   * @property {number} [limit] The maximum number of bans to return\n   * @property {Snowflake} [before] Consider only bans before this id\n   * @property {Snowflake} [after] Consider only bans after this id\n   * @property {boolean} [cache] Whether to cache the fetched bans\n   */\n\n  /**\n   * Fetches ban(s) from Discord.\n   * @param {UserResolvable|FetchBanOptions|FetchBansOptions} [options] Options for fetching guild ban(s)\n   * @returns {Promise<GuildBan|Collection<Snowflake, GuildBan>>}\n   * @example\n   * // Fetch multiple bans from a guild\n   * guild.bans.fetch()\n   *   .then(console.log)\n   *   .catch(console.error);\n   * @example\n   * // Fetch a maximum of 5 bans from a guild without caching\n   * guild.bans.fetch({ limit: 5, cache: false })\n   *   .then(console.log)\n   *   .catch(console.error);\n   * @example\n   * // Fetch a single ban\n   * guild.bans.fetch('351871113346809860')\n   *   .then(console.log)\n   *   .catch(console.error);\n   * @example\n   * // Fetch a single ban without checking cache\n   * guild.bans.fetch({ user, force: true })\n   *   .then(console.log)\n   *   .catch(console.error)\n   * @example\n   * // Fetch a single ban without caching\n   * guild.bans.fetch({ user, cache: false })\n   *   .then(console.log)\n   *   .catch(console.error);\n   */\n  fetch(options) {\n    if (!options) return this._fetchMany();\n    const { user, cache, force, limit, before, after } = options;\n    const resolvedUser = this.client.users.resolveId(user ?? options);\n    if (resolvedUser) return this._fetchSingle({ user: resolvedUser, cache, force });\n\n    if (!before && !after && !limit && cache === undefined) {\n      return Promise.reject(new DiscordjsError(ErrorCodes.FetchBanResolveId));\n    }\n\n    return this._fetchMany(options);\n  }\n\n  async _fetchSingle({ user, cache, force = false }) {\n    if (!force) {\n      const existing = this.cache.get(user);\n      if (existing && !existing.partial) return existing;\n    }\n\n    const data = await this.client.rest.get(Routes.guildBan(this.guild.id, user));\n    return this._add(data, cache);\n  }\n\n  async _fetchMany(options = {}) {\n    const data = await this.client.rest.get(Routes.guildBans(this.guild.id), {\n      query: makeURLSearchParams(options),\n    });\n\n    return data.reduce((col, ban) => col.set(ban.user.id, this._add(ban, options.cache)), new Collection());\n  }\n\n  /**\n   * Options used to ban a user from a guild.\n   * @typedef {Object} BanOptions\n   * @property {number} [deleteMessageDays] Number of days of messages to delete, must be between 0 and 7, inclusive\n   * <warn>This property is deprecated. Use `deleteMessageSeconds` instead.</warn>\n   * @property {number} [deleteMessageSeconds] Number of seconds of messages to delete,\n   * must be between 0 and 604800 (7 days), inclusive\n   * @property {string} [reason] The reason for the ban\n   */\n\n  /**\n   * Bans a user from the guild.\n   * @param {UserResolvable} user The user to ban\n   * @param {BanOptions} [options] Options for the ban\n   * @returns {Promise<GuildMember|User|Snowflake>} Result object will be resolved as specifically as possible.\n   * If the GuildMember cannot be resolved, the User will instead be attempted to be resolved. If that also cannot\n   * be resolved, the user id will be the result.\n   * @example\n   * // Ban a user by id (or with a user/guild member object)\n   * guild.bans.create('84484653687267328')\n   *   .then(banInfo => console.log(`Banned ${banInfo.user?.tag ?? banInfo.tag ?? banInfo}`))\n   *   .catch(console.error);\n   */\n  async create(user, options = {}) {\n    if (typeof options !== 'object') throw new DiscordjsTypeError(ErrorCodes.InvalidType, 'options', 'object', true);\n    const id = this.client.users.resolveId(user);\n    if (!id) throw new DiscordjsError(ErrorCodes.BanResolveId, true);\n\n    if (options.deleteMessageDays !== undefined && !deprecationEmittedForDeleteMessageDays) {\n      process.emitWarning(\n        // eslint-disable-next-line max-len\n        'The deleteMessageDays option for GuildBanManager#create() is deprecated. Use the deleteMessageSeconds option instead.',\n        'DeprecationWarning',\n      );\n\n      deprecationEmittedForDeleteMessageDays = true;\n    }\n\n    await this.client.rest.put(Routes.guildBan(this.guild.id, id), {\n      body: {\n        delete_message_seconds:\n          options.deleteMessageSeconds ??\n          (options.deleteMessageDays ? options.deleteMessageDays * 24 * 60 * 60 : undefined),\n      },\n      reason: options.reason,\n    });\n    if (user instanceof GuildMember) return user;\n    const _user = this.client.users.resolve(id);\n    if (_user) {\n      return this.guild.members.resolve(_user) ?? _user;\n    }\n    return id;\n  }\n\n  /**\n   * Unbans a user from the guild.\n   * @param {UserResolvable} user The user to unban\n   * @param {string} [reason] Reason for unbanning user\n   * @returns {Promise<?User>}\n   * @example\n   * // Unban a user by id (or with a user/guild member object)\n   * guild.bans.remove('84484653687267328')\n   *   .then(user => console.log(`Unbanned ${user.username} from ${guild.name}`))\n   *   .catch(console.error);\n   */\n  async remove(user, reason) {\n    const id = this.client.users.resolveId(user);\n    if (!id) throw new DiscordjsError(ErrorCodes.BanResolveId);\n    await this.client.rest.delete(Routes.guildBan(this.guild.id, id), { reason });\n    return this.client.users.resolve(user);\n  }\n\n  /**\n   * Options used for bulk banning users from a guild.\n   * @typedef {Object} BulkBanOptions\n   * @property {number} [deleteMessageSeconds] Number of seconds of messages to delete,\n   * must be between 0 and 604800 (7 days), inclusive\n   * @property {string} [reason] The reason for the bans\n   */\n\n  /**\n   * Result of bulk banning users from a guild.\n   * @typedef {Object} BulkBanResult\n   * @property {Snowflake[]} bannedUsers IDs of the banned users\n   * @property {Snowflake[]} failedUsers IDs of the users that could not be banned or were already banned\n   */\n\n  /**\n   * Bulk ban users from a guild, and optionally delete previous messages sent by them.\n   * @param {Collection<Snowflake, UserResolvable>|UserResolvable[]} users The users to ban\n   * @param {BulkBanOptions} [options] The options for bulk banning users\n   * @returns {Promise<BulkBanResult>} Returns an object with `bannedUsers` key containing the IDs of the banned users\n   * and the key `failedUsers` with the IDs that could not be banned or were already banned.\n   * @example\n   * // Bulk ban users by ids (or with user/guild member objects) and delete all their messages from the past 7 days\n   * guild.bans.bulkCreate(['84484653687267328'], { deleteMessageSeconds: 7 * 24 * 60 * 60 })\n   *   .then(result => {\n   *     console.log(`Banned ${result.bannedUsers.length} users, failed to ban ${result.failedUsers.length} users.`)\n   *   })\n   *   .catch(console.error);\n   */\n  async bulkCreate(users, options = {}) {\n    if (!users || !(Array.isArray(users) || users instanceof Collection)) {\n      throw new DiscordjsTypeError(ErrorCodes.InvalidType, 'users', 'Array or Collection of UserResolvable', true);\n    }\n    if (typeof options !== 'object') throw new DiscordjsTypeError(ErrorCodes.InvalidType, 'options', 'object', true);\n\n    const userIds = users.map(user => this.client.users.resolveId(user));\n    if (userIds.length === 0) throw new DiscordjsError(ErrorCodes.BulkBanUsersOptionEmpty);\n\n    const result = await this.client.rest.post(Routes.guildBulkBan(this.guild.id), {\n      body: { delete_message_seconds: options.deleteMessageSeconds, user_ids: userIds },\n      reason: options.reason,\n    });\n    return { bannedUsers: result.banned_users, failedUsers: result.failed_users };\n  }\n}\n\nmodule.exports = GuildBanManager;\n", "'use strict';\n\nconst process = require('node:process');\nconst { Collection } = require('@discordjs/collection');\nconst { ChannelType, Routes } = require('discord-api-types/v10');\nconst CachedManager = require('./CachedManager');\nconst GuildTextThreadManager = require('./GuildTextThreadManager');\nconst { DiscordjsError, DiscordjsTypeError, ErrorCodes } = require('../errors');\nconst GuildChannel = require('../structures/GuildChannel');\nconst PermissionOverwrites = require('../structures/PermissionOverwrites');\nconst ThreadChannel = require('../structures/ThreadChannel');\nconst Webhook = require('../structures/Webhook');\nconst ChannelFlagsBitField = require('../util/ChannelFlagsBitField');\nconst { transformGuildForumTag, transformGuildDefaultReaction } = require('../util/Channels');\nconst { ThreadChannelTypes } = require('../util/Constants');\nconst { resolveImage } = require('../util/DataResolver');\nconst { setPosition } = require('../util/Util');\n\nlet cacheWarningEmitted = false;\n\n/**\n * Manages API methods for GuildChannels and stores their cache.\n * @extends {CachedManager}\n */\nclass GuildChannelManager extends CachedManager {\n  constructor(guild, iterable) {\n    super(guild.client, GuildChannel, iterable);\n    const defaultCaching =\n      this._cache.constructor.name === 'Collection' ||\n      this._cache.maxSize === undefined ||\n      this._cache.maxSize === Infinity;\n    if (!cacheWarningEmitted && !defaultCaching) {\n      cacheWarningEmitted = true;\n      process.emitWarning(\n        `Overriding the cache handling for ${this.constructor.name} is unsupported and breaks functionality.`,\n        'UnsupportedCacheOverwriteWarning',\n      );\n    }\n\n    /**\n     * The guild this Manager belongs to\n     * @type {Guild}\n     */\n    this.guild = guild;\n  }\n\n  /**\n   * The number of channels in this managers cache excluding thread channels\n   * that do not count towards a guild's maximum channels restriction.\n   * @type {number}\n   * @readonly\n   */\n  get channelCountWithoutThreads() {\n    return this.cache.reduce((acc, channel) => {\n      if (ThreadChannelTypes.includes(channel.type)) return acc;\n      return ++acc;\n    }, 0);\n  }\n\n  /**\n   * The cache of this Manager\n   * @type {Collection<Snowflake, GuildChannel|ThreadChannel>}\n   * @name GuildChannelManager#cache\n   */\n\n  _add(channel) {\n    const existing = this.cache.get(channel.id);\n    if (existing) return existing;\n    this.cache.set(channel.id, channel);\n    return channel;\n  }\n\n  /**\n   * Data that can be resolved to give a Guild Channel object. This can be:\n   * * A GuildChannel object\n   * * A ThreadChannel object\n   * * A Snowflake\n   * @typedef {GuildChannel|ThreadChannel|Snowflake} GuildChannelResolvable\n   */\n\n  /**\n   * Resolves a GuildChannelResolvable to a Channel object.\n   * @param {GuildChannelResolvable} channel The GuildChannel resolvable to resolve\n   * @returns {?(GuildChannel|ThreadChannel)}\n   */\n  resolve(channel) {\n    if (channel instanceof ThreadChannel) return super.resolve(channel.id);\n    return super.resolve(channel);\n  }\n\n  /**\n   * Resolves a GuildChannelResolvable to a channel id.\n   * @param {GuildChannelResolvable} channel The GuildChannel resolvable to resolve\n   * @returns {?Snowflake}\n   */\n  resolveId(channel) {\n    if (channel instanceof ThreadChannel) return super.resolveId(channel.id);\n    return super.resolveId(channel);\n  }\n\n  /**\n   * Data that can be resolved to a News Channel object. This can be:\n   * * A NewsChannel object\n   * * A Snowflake\n   * @typedef {NewsChannel|Snowflake} NewsChannelResolvable\n   */\n\n  /**\n   * Adds the target channel to a channel's followers.\n   * @param {NewsChannelResolvable} channel The channel to follow\n   * @param {TextChannelResolvable} targetChannel The channel where published announcements will be posted at\n   * @param {string} [reason] Reason for creating the webhook\n   * @returns {Promise<Snowflake>} Returns created target webhook id.\n   */\n  async addFollower(channel, targetChannel, reason) {\n    const channelId = this.resolveId(channel);\n    if (!channelId) {\n      throw new DiscordjsTypeError(ErrorCodes.InvalidType, 'channel', 'NewsChannelResolvable');\n    }\n    const targetChannelId = this.resolveId(targetChannel);\n    if (!targetChannelId) {\n      throw new DiscordjsTypeError(ErrorCodes.InvalidType, 'targetChannel', 'TextChannelResolvable');\n    }\n    const { webhook_id } = await this.client.rest.post(Routes.channelFollowers(channelId), {\n      body: { webhook_channel_id: targetChannelId },\n      reason,\n    });\n    return webhook_id;\n  }\n\n  /**\n   * Options used to create a new channel in a guild.\n   * @typedef {CategoryCreateChannelOptions} GuildChannelCreateOptions\n   * @property {?CategoryChannelResolvable} [parent] Parent of the new channel\n   */\n\n  /**\n   * Creates a new channel in the guild.\n   * @param {GuildChannelCreateOptions} options Options for creating the new channel\n   * @returns {Promise<GuildChannel>}\n   * @example\n   * // Create a new text channel\n   * guild.channels.create({ name: 'new-general', reason: 'Needed a cool new channel' })\n   *   .then(console.log)\n   *   .catch(console.error);\n   * @example\n   * // Create a new channel with permission overwrites\n   * guild.channels.create({\n   *   name: 'new-general',\n   *   type: ChannelType.GuildVoice,\n   *   permissionOverwrites: [\n   *      {\n   *        id: message.author.id,\n   *        deny: [PermissionFlagsBits.ViewChannel],\n   *     },\n   *   ],\n   * })\n   */\n  async create({\n    name,\n    type,\n    topic,\n    nsfw,\n    bitrate,\n    userLimit,\n    parent,\n    permissionOverwrites,\n    position,\n    rateLimitPerUser,\n    rtcRegion,\n    videoQualityMode,\n    defaultThreadRateLimitPerUser,\n    availableTags,\n    defaultReactionEmoji,\n    defaultAutoArchiveDuration,\n    defaultSortOrder,\n    defaultForumLayout,\n    reason,\n  }) {\n    parent &&= this.client.channels.resolveId(parent);\n    permissionOverwrites &&= permissionOverwrites.map(overwrite => PermissionOverwrites.resolve(overwrite, this.guild));\n\n    const data = await this.client.rest.post(Routes.guildChannels(this.guild.id), {\n      body: {\n        name,\n        topic,\n        type,\n        nsfw,\n        bitrate,\n        user_limit: userLimit,\n        parent_id: parent,\n        position,\n        permission_overwrites: permissionOverwrites,\n        rate_limit_per_user: rateLimitPerUser,\n        rtc_region: rtcRegion,\n        video_quality_mode: videoQualityMode,\n        default_thread_rate_limit_per_user: defaultThreadRateLimitPerUser,\n        available_tags: availableTags?.map(availableTag => transformGuildForumTag(availableTag)),\n        default_reaction_emoji: defaultReactionEmoji && transformGuildDefaultReaction(defaultReactionEmoji),\n        default_auto_archive_duration: defaultAutoArchiveDuration,\n        default_sort_order: defaultSortOrder,\n        default_forum_layout: defaultForumLayout,\n      },\n      reason,\n    });\n    return this.client.actions.ChannelCreate.handle(data).channel;\n  }\n\n  /**\n   * @typedef {ChannelWebhookCreateOptions} WebhookCreateOptions\n   * @property {TextChannel|NewsChannel|VoiceChannel|StageChannel|ForumChannel|MediaChannel|Snowflake} channel\n   * The channel to create the webhook for\n   */\n\n  /**\n   * Creates a webhook for the channel.\n   * @param {WebhookCreateOptions} options Options for creating the webhook\n   * @returns {Promise<Webhook>} Returns the created Webhook\n   * @example\n   * // Create a webhook for the current channel\n   * guild.channels.createWebhook({\n   *   channel: '222197033908436994',\n   *   name: 'Snek',\n   *   avatar: 'https://i.imgur.com/mI8XcpG.jpg',\n   *   reason: 'Needed a cool new Webhook'\n   * })\n   *   .then(console.log)\n   *   .catch(console.error)\n   */\n  async createWebhook({ channel, name, avatar, reason }) {\n    const id = this.resolveId(channel);\n    if (!id) throw new DiscordjsTypeError(ErrorCodes.InvalidType, 'channel', 'GuildChannelResolvable');\n    if (typeof avatar === 'string' && !avatar.startsWith('data:')) {\n      avatar = await resolveImage(avatar);\n    }\n    const data = await this.client.rest.post(Routes.channelWebhooks(id), {\n      body: {\n        name,\n        avatar,\n      },\n      reason,\n    });\n    return new Webhook(this.client, data);\n  }\n\n  /**\n   * Options used to edit a guild channel.\n   * @typedef {Object} GuildChannelEditOptions\n   * @property {string} [name] The name of the channel\n   * @property {ChannelType} [type] The type of the channel (only conversion between text and news is supported)\n   * @property {number} [position] The position of the channel\n   * @property {?string} [topic] The topic of the text channel\n   * @property {boolean} [nsfw] Whether the channel is NSFW\n   * @property {number} [bitrate] The bitrate of the voice channel\n   * @property {number} [userLimit] The user limit of the voice channel\n   * @property {?CategoryChannelResolvable} [parent] The parent of the channel\n   * @property {boolean} [lockPermissions]\n   * Lock the permissions of the channel to what the parent's permissions are\n   * @property {OverwriteResolvable[]|Collection<Snowflake, OverwriteResolvable>} [permissionOverwrites]\n   * Permission overwrites for the channel\n   * @property {number} [rateLimitPerUser] The rate limit per user (slowmode) for the channel in seconds\n   * @property {ThreadAutoArchiveDuration} [defaultAutoArchiveDuration]\n   * The default auto archive duration for all new threads in this channel\n   * @property {?string} [rtcRegion] The RTC region of the channel\n   * @property {?VideoQualityMode} [videoQualityMode] The camera video quality mode of the channel\n   * @property {GuildForumTagData[]} [availableTags] The tags to set as available in a forum channel\n   * @property {?DefaultReactionEmoji} [defaultReactionEmoji] The emoji to set as the default reaction emoji\n   * @property {number} [defaultThreadRateLimitPerUser] The rate limit per user (slowmode) to set on forum posts\n   * @property {ChannelFlagsResolvable} [flags] The flags to set on the channel\n   * @property {?SortOrderType} [defaultSortOrder] The default sort order mode to set on the channel\n   * @property {ForumLayoutType} [defaultForumLayout] The default forum layout to set on the channel\n   * @property {string} [reason] Reason for editing this channel\n   */\n\n  /**\n   * Edits the channel.\n   * @param {GuildChannelResolvable} channel The channel to edit\n   * @param {GuildChannelEditOptions} options Options for editing the channel\n   * @returns {Promise<GuildChannel>}\n   * @example\n   * // Edit a channel\n   * guild.channels.edit('222197033908436994', { name: 'new-channel' })\n   *   .then(console.log)\n   *   .catch(console.error);\n   */\n  async edit(channel, options) {\n    const resolvedChannel = this.resolve(channel);\n    if (!resolvedChannel) throw new DiscordjsTypeError(ErrorCodes.InvalidType, 'channel', 'GuildChannelResolvable');\n\n    const parent = options.parent && this.client.channels.resolveId(options.parent);\n\n    if (options.position !== undefined) {\n      await this.setPosition(resolvedChannel, options.position, { position: options.position, reason: options.reason });\n    }\n\n    let permission_overwrites = options.permissionOverwrites?.map(overwrite =>\n      PermissionOverwrites.resolve(overwrite, this.guild),\n    );\n\n    if (options.lockPermissions) {\n      if (parent) {\n        const newParent = this.guild.channels.resolve(parent);\n        if (newParent?.type === ChannelType.GuildCategory) {\n          permission_overwrites = newParent.permissionOverwrites.cache.map(overwrite =>\n            PermissionOverwrites.resolve(overwrite, this.guild),\n          );\n        }\n      } else if (resolvedChannel.parent) {\n        permission_overwrites = resolvedChannel.parent.permissionOverwrites.cache.map(overwrite =>\n          PermissionOverwrites.resolve(overwrite, this.guild),\n        );\n      }\n    }\n\n    const newData = await this.client.rest.patch(Routes.channel(resolvedChannel.id), {\n      body: {\n        name: options.name,\n        type: options.type,\n        topic: options.topic,\n        nsfw: options.nsfw,\n        bitrate: options.bitrate,\n        user_limit: options.userLimit,\n        rtc_region: options.rtcRegion,\n        video_quality_mode: options.videoQualityMode,\n        parent_id: parent,\n        lock_permissions: options.lockPermissions,\n        rate_limit_per_user: options.rateLimitPerUser,\n        default_auto_archive_duration: options.defaultAutoArchiveDuration,\n        permission_overwrites,\n        available_tags: options.availableTags?.map(availableTag => transformGuildForumTag(availableTag)),\n        default_reaction_emoji:\n          options.defaultReactionEmoji && transformGuildDefaultReaction(options.defaultReactionEmoji),\n        default_thread_rate_limit_per_user: options.defaultThreadRateLimitPerUser,\n        flags: 'flags' in options ? ChannelFlagsBitField.resolve(options.flags) : undefined,\n        default_sort_order: options.defaultSortOrder,\n        default_forum_layout: options.defaultForumLayout,\n      },\n      reason: options.reason,\n    });\n\n    return this.client.actions.ChannelUpdate.handle(newData).updated;\n  }\n\n  /**\n   * Sets a new position for the guild channel.\n   * @param {GuildChannelResolvable} channel The channel to set the position for\n   * @param {number} position The new position for the guild channel\n   * @param {SetChannelPositionOptions} options Options for setting position\n   * @returns {Promise<GuildChannel>}\n   * @example\n   * // Set a new channel position\n   * guild.channels.setPosition('222078374472843266', 2)\n   *   .then(newChannel => console.log(`Channel's new position is ${newChannel.position}`))\n   *   .catch(console.error);\n   */\n  async setPosition(channel, position, { relative, reason } = {}) {\n    channel = this.resolve(channel);\n    if (!channel) throw new DiscordjsTypeError(ErrorCodes.InvalidType, 'channel', 'GuildChannelResolvable');\n    const updatedChannels = await setPosition(\n      channel,\n      position,\n      relative,\n      this.guild._sortedChannels(channel),\n      this.client,\n      Routes.guildChannels(this.guild.id),\n      reason,\n    );\n\n    this.client.actions.GuildChannelsPositionUpdate.handle({\n      guild_id: this.guild.id,\n      channels: updatedChannels,\n    });\n    return channel;\n  }\n\n  /**\n   * Obtains one or more guild channels from Discord, or the channel cache if they're already available.\n   * @param {Snowflake} [id] The channel's id\n   * @param {BaseFetchOptions} [options] Additional options for this fetch\n   * @returns {Promise<?GuildChannel|ThreadChannel|Collection<Snowflake, ?GuildChannel>>}\n   * @example\n   * // Fetch all channels from the guild (excluding threads)\n   * message.guild.channels.fetch()\n   *   .then(channels => console.log(`There are ${channels.size} channels.`))\n   *   .catch(console.error);\n   * @example\n   * // Fetch a single channel\n   * message.guild.channels.fetch('222197033908436994')\n   *   .then(channel => console.log(`The channel name is: ${channel.name}`))\n   *   .catch(console.error);\n   */\n  async fetch(id, { cache = true, force = false } = {}) {\n    if (id && !force) {\n      const existing = this.cache.get(id);\n      if (existing) return existing;\n    }\n\n    if (id) {\n      const data = await this.client.rest.get(Routes.channel(id));\n      // Since this is the guild manager, throw if on a different guild\n      if (this.guild.id !== data.guild_id) throw new DiscordjsError(ErrorCodes.GuildChannelUnowned);\n      return this.client.channels._add(data, this.guild, { cache });\n    }\n\n    const data = await this.client.rest.get(Routes.guildChannels(this.guild.id));\n    const channels = new Collection();\n    for (const channel of data) channels.set(channel.id, this.client.channels._add(channel, this.guild, { cache }));\n    return channels;\n  }\n\n  /**\n   * Fetches all webhooks for the channel.\n   * @param {GuildChannelResolvable} channel The channel to fetch webhooks for\n   * @returns {Promise<Collection<Snowflake, Webhook>>}\n   * @example\n   * // Fetch webhooks\n   * guild.channels.fetchWebhooks('769862166131245066')\n   *   .then(hooks => console.log(`This channel has ${hooks.size} hooks`))\n   *   .catch(console.error);\n   */\n  async fetchWebhooks(channel) {\n    const id = this.resolveId(channel);\n    if (!id) throw new DiscordjsTypeError(ErrorCodes.InvalidType, 'channel', 'GuildChannelResolvable');\n    const data = await this.client.rest.get(Routes.channelWebhooks(id));\n    return data.reduce((hooks, hook) => hooks.set(hook.id, new Webhook(this.client, hook)), new Collection());\n  }\n\n  /**\n   * Data that can be resolved to give a Category Channel object. This can be:\n   * * A CategoryChannel object\n   * * A Snowflake\n   * @typedef {CategoryChannel|Snowflake} CategoryChannelResolvable\n   */\n\n  /**\n   * The data needed for updating a channel's position.\n   * @typedef {Object} ChannelPosition\n   * @property {GuildChannel|Snowflake} channel Channel to update\n   * @property {number} [position] New position for the channel\n   * @property {CategoryChannelResolvable} [parent] Parent channel for this channel\n   * @property {boolean} [lockPermissions] If the overwrites should be locked to the parents overwrites\n   */\n\n  /**\n   * Batch-updates the guild's channels' positions.\n   * <info>Only one channel's parent can be changed at a time</info>\n   * @param {ChannelPosition[]} channelPositions Channel positions to update\n   * @returns {Promise<Guild>}\n   * @example\n   * guild.channels.setPositions([{ channel: channelId, position: newChannelIndex }])\n   *   .then(guild => console.log(`Updated channel positions for ${guild}`))\n   *   .catch(console.error);\n   */\n  async setPositions(channelPositions) {\n    channelPositions = channelPositions.map(channelPosition => ({\n      id: this.client.channels.resolveId(channelPosition.channel),\n      position: channelPosition.position,\n      lock_permissions: channelPosition.lockPermissions,\n      parent_id: channelPosition.parent !== undefined ? this.resolveId(channelPosition.parent) : undefined,\n    }));\n\n    await this.client.rest.patch(Routes.guildChannels(this.guild.id), { body: channelPositions });\n    return this.client.actions.GuildChannelsPositionUpdate.handle({\n      guild_id: this.guild.id,\n      channels: channelPositions,\n    }).guild;\n  }\n\n  /**\n   * Data returned from fetching threads.\n   * @typedef {Object} FetchedThreads\n   * @property {Collection<Snowflake, ThreadChannel>} threads The threads that were fetched\n   * @property {Collection<Snowflake, ThreadMember>} members The thread members in the received threads\n   */\n\n  /**\n   * Obtains all active thread channels in the guild.\n   * @param {boolean} [cache=true] Whether to cache the fetched data\n   * @returns {Promise<FetchedThreads>}\n   * @example\n   * // Fetch all threads from the guild\n   * message.guild.channels.fetchActiveThreads()\n   *   .then(fetched => console.log(`There are ${fetched.threads.size} threads.`))\n   *   .catch(console.error);\n   */\n  async fetchActiveThreads(cache = true) {\n    const data = await this.rawFetchGuildActiveThreads();\n    return GuildTextThreadManager._mapThreads(data, this.client, { guild: this.guild, cache });\n  }\n\n  /**\n   * `GET /guilds/{guild.id}/threads/active`\n   * @private\n   * @returns {Promise<RESTGetAPIGuildThreadsResult>}\n   */\n  rawFetchGuildActiveThreads() {\n    return this.client.rest.get(Routes.guildActiveThreads(this.guild.id));\n  }\n\n  /**\n   * Deletes the channel.\n   * @param {GuildChannelResolvable} channel The channel to delete\n   * @param {string} [reason] Reason for deleting this channel\n   * @returns {Promise<void>}\n   * @example\n   * // Delete the channel\n   * guild.channels.delete('858850993013260338', 'making room for new channels')\n   *   .then(console.log)\n   *   .catch(console.error);\n   */\n  async delete(channel, reason) {\n    const id = this.resolveId(channel);\n    if (!id) throw new DiscordjsTypeError(ErrorCodes.InvalidType, 'channel', 'GuildChannelResolvable');\n    await this.client.rest.delete(Routes.channel(id), { reason });\n    this.client.actions.ChannelDelete.handle({ id });\n  }\n}\n\nmodule.exports = GuildChannelManager;\n", "'use strict';\n\nconst { Collection } = require('@discordjs/collection');\nconst { Routes, PermissionFlagsBits } = require('discord-api-types/v10');\nconst BaseGuildEmojiManager = require('./BaseGuildEmojiManager');\nconst { DiscordjsError, DiscordjsTypeError, ErrorCodes } = require('../errors');\nconst { resolveImage } = require('../util/DataResolver');\n\n/**\n * Manages API methods for GuildEmojis and stores their cache.\n * @extends {BaseGuildEmojiManager}\n */\nclass GuildEmojiManager extends BaseGuildEmojiManager {\n  constructor(guild, iterable) {\n    super(guild.client, iterable);\n\n    /**\n     * The guild this manager belongs to\n     * @type {Guild}\n     */\n    this.guild = guild;\n  }\n\n  _add(data, cache) {\n    return super._add(data, cache, { extras: [this.guild] });\n  }\n\n  /**\n   * Options used for creating an emoji in a guild.\n   * @typedef {Object} GuildEmojiCreateOptions\n   * @property {BufferResolvable|Base64Resolvable} attachment The image for the emoji\n   * @property {string} name The name for the emoji\n   * @property {Collection<Snowflake, Role>|RoleResolvable[]} [roles] The roles to limit the emoji to\n   * @property {string} [reason] The reason for creating the emoji\n   */\n\n  /**\n   * Creates a new custom emoji in the guild.\n   * @param {GuildEmojiCreateOptions} options Options for creating the emoji\n   * @returns {Promise<Emoji>} The created emoji\n   * @example\n   * // Create a new emoji from a URL\n   * guild.emojis.create({ attachment: 'https://i.imgur.com/w3duR07.png', name: 'rip' })\n   *   .then(emoji => console.log(`Created new emoji with name ${emoji.name}!`))\n   *   .catch(console.error);\n   * @example\n   * // Create a new emoji from a file on your computer\n   * guild.emojis.create({ attachment: './memes/banana.png', name: 'banana' })\n   *   .then(emoji => console.log(`Created new emoji with name ${emoji.name}!`))\n   *   .catch(console.error);\n   */\n  async create({ attachment, name, roles, reason }) {\n    attachment = await resolveImage(attachment);\n    if (!attachment) throw new DiscordjsTypeError(ErrorCodes.ReqResourceType);\n\n    const body = { image: attachment, name };\n    if (roles) {\n      if (!Array.isArray(roles) && !(roles instanceof Collection)) {\n        throw new DiscordjsTypeError(\n          ErrorCodes.InvalidType,\n          'options.roles',\n          'Array or Collection of Roles or Snowflakes',\n          true,\n        );\n      }\n      body.roles = [];\n      for (const role of roles.values()) {\n        const resolvedRole = this.guild.roles.resolveId(role);\n        if (!resolvedRole) {\n          throw new DiscordjsTypeError(ErrorCodes.InvalidElement, 'Array or Collection', 'options.roles', role);\n        }\n        body.roles.push(resolvedRole);\n      }\n    }\n\n    const emoji = await this.client.rest.post(Routes.guildEmojis(this.guild.id), { body, reason });\n    return this.client.actions.GuildEmojiCreate.handle(this.guild, emoji).emoji;\n  }\n\n  /**\n   * Obtains one or more emojis from Discord, or the emoji cache if they're already available.\n   * @param {Snowflake} [id] The emoji's id\n   * @param {BaseFetchOptions} [options] Additional options for this fetch\n   * @returns {Promise<GuildEmoji|Collection<Snowflake, GuildEmoji>>}\n   * @example\n   * // Fetch all emojis from the guild\n   * message.guild.emojis.fetch()\n   *   .then(emojis => console.log(`There are ${emojis.size} emojis.`))\n   *   .catch(console.error);\n   * @example\n   * // Fetch a single emoji\n   * message.guild.emojis.fetch('222078108977594368')\n   *   .then(emoji => console.log(`The emoji name is: ${emoji.name}`))\n   *   .catch(console.error);\n   */\n  async fetch(id, { cache = true, force = false } = {}) {\n    if (id) {\n      if (!force) {\n        const existing = this.cache.get(id);\n        if (existing) return existing;\n      }\n      const emoji = await this.client.rest.get(Routes.guildEmoji(this.guild.id, id));\n      return this._add(emoji, cache);\n    }\n\n    const data = await this.client.rest.get(Routes.guildEmojis(this.guild.id));\n    const emojis = new Collection();\n    for (const emoji of data) emojis.set(emoji.id, this._add(emoji, cache));\n    return emojis;\n  }\n\n  /**\n   * Deletes an emoji.\n   * @param {EmojiResolvable} emoji The Emoji resolvable to delete\n   * @param {string} [reason] Reason for deleting the emoji\n   * @returns {Promise<void>}\n   */\n  async delete(emoji, reason) {\n    const id = this.resolveId(emoji);\n    if (!id) throw new DiscordjsTypeError(ErrorCodes.InvalidType, 'emoji', 'EmojiResolvable', true);\n    await this.client.rest.delete(Routes.guildEmoji(this.guild.id, id), { reason });\n  }\n\n  /**\n   * Edits an emoji.\n   * @param {EmojiResolvable} emoji The Emoji resolvable to edit\n   * @param {GuildEmojiEditOptions} options The options to provide\n   * @returns {Promise<GuildEmoji>}\n   */\n  async edit(emoji, options) {\n    const id = this.resolveId(emoji);\n    if (!id) throw new DiscordjsTypeError(ErrorCodes.InvalidType, 'emoji', 'EmojiResolvable', true);\n    const roles = options.roles?.map(role => this.guild.roles.resolveId(role));\n    const newData = await this.client.rest.patch(Routes.guildEmoji(this.guild.id, id), {\n      body: {\n        name: options.name,\n        roles,\n      },\n      reason: options.reason,\n    });\n    const existing = this.cache.get(id);\n    if (existing) {\n      const clone = existing._clone();\n      clone._patch(newData);\n      return clone;\n    }\n    return this._add(newData);\n  }\n\n  /**\n   * Fetches the author for this emoji\n   * @param {EmojiResolvable} emoji The emoji to fetch the author of\n   * @returns {Promise<User>}\n   */\n  async fetchAuthor(emoji) {\n    emoji = this.resolve(emoji);\n    if (!emoji) throw new DiscordjsTypeError(ErrorCodes.InvalidType, 'emoji', 'EmojiResolvable', true);\n    if (emoji.managed) {\n      throw new DiscordjsError(ErrorCodes.EmojiManaged);\n    }\n\n    const { me } = this.guild.members;\n    if (!me) throw new DiscordjsError(ErrorCodes.GuildUncachedMe);\n    if (!me.permissions.has(PermissionFlagsBits.ManageGuildExpressions)) {\n      throw new DiscordjsError(ErrorCodes.MissingManageGuildExpressionsPermission, this.guild);\n    }\n\n    const data = await this.client.rest.get(Routes.guildEmoji(this.guild.id, emoji.id));\n    emoji._patch(data);\n    return emoji.author;\n  }\n}\n\nmodule.exports = GuildEmojiManager;\n", "'use strict';\n\nconst { Collection } = require('@discordjs/collection');\nconst { Routes } = require('discord-api-types/v10');\nconst CachedManager = require('./CachedManager');\nconst { DiscordjsError, ErrorCodes } = require('../errors');\nconst Invite = require('../structures/Invite');\nconst { resolveInviteCode } = require('../util/DataResolver');\n\n/**\n * Manages API methods for GuildInvites and stores their cache.\n * @extends {CachedManager}\n */\nclass GuildInviteManager extends CachedManager {\n  constructor(guild, iterable) {\n    super(guild.client, Invite, iterable);\n\n    /**\n     * The guild this Manager belongs to\n     * @type {Guild}\n     */\n    this.guild = guild;\n  }\n\n  /**\n   * The cache of this Manager\n   * @type {Collection<string, Invite>}\n   * @name GuildInviteManager#cache\n   */\n\n  _add(data, cache) {\n    return super._add(data, cache, { id: data.code, extras: [this.guild] });\n  }\n\n  /**\n   * Data that resolves to give an Invite object. This can be:\n   * * An invite code\n   * * An invite URL\n   * @typedef {string} InviteResolvable\n   */\n\n  /**\n   * Data that can be resolved to a channel that an invite can be created on. This can be:\n   * * TextChannel\n   * * VoiceChannel\n   * * NewsChannel\n   * * StageChannel\n   * * ForumChannel\n   * * MediaChannel\n   * * Snowflake\n   * @typedef {TextChannel|VoiceChannel|NewsChannel|StageChannel|ForumChannel|MediaChannel|Snowflake}\n   * GuildInvitableChannelResolvable\n   */\n\n  /**\n   * Resolves an InviteResolvable to an Invite object.\n   * @method resolve\n   * @memberof GuildInviteManager\n   * @instance\n   * @param {InviteResolvable} invite The invite resolvable to resolve\n   * @returns {?Invite}\n   */\n\n  /**\n   * Resolves an InviteResolvable to an invite code string.\n   * @method resolveId\n   * @memberof GuildInviteManager\n   * @instance\n   * @param {InviteResolvable} invite The invite resolvable to resolve\n   * @returns {?string}\n   */\n\n  /**\n   * Options used to fetch a single invite from a guild.\n   * @typedef {Object} FetchInviteOptions\n   * @property {InviteResolvable} code The invite to fetch\n   * @property {boolean} [cache=true] Whether or not to cache the fetched invite\n   * @property {boolean} [force=false] Whether to skip the cache check and request the API\n   */\n\n  /**\n   * Options used to fetch all invites from a guild.\n   * @typedef {Object} FetchInvitesOptions\n   * @property {GuildInvitableChannelResolvable} [channelId]\n   * The channel to fetch all invites from\n   * @property {boolean} [cache=true] Whether or not to cache the fetched invites\n   */\n\n  /**\n   * Fetches invite(s) from Discord.\n   * @param {InviteResolvable|FetchInviteOptions|FetchInvitesOptions} [options] Options for fetching guild invite(s)\n   * @returns {Promise<Invite|Collection<string, Invite>>}\n   * @example\n   * // Fetch all invites from a guild\n   * guild.invites.fetch()\n   *   .then(console.log)\n   *   .catch(console.error);\n   * @example\n   * // Fetch all invites from a guild without caching\n   * guild.invites.fetch({ cache: false })\n   *   .then(console.log)\n   *   .catch(console.error);\n   * @example\n   * // Fetch all invites from a channel\n   * guild.invites.fetch({ channelId: '222197033908436994' })\n   *   .then(console.log)\n   *   .catch(console.error);\n   * @example\n   * // Fetch a single invite\n   * guild.invites.fetch('bRCvFy9')\n   *   .then(console.log)\n   *   .catch(console.error);\n   * @example\n   * // Fetch a single invite without checking cache\n   * guild.invites.fetch({ code: 'bRCvFy9', force: true })\n   *   .then(console.log)\n   *   .catch(console.error)\n   * @example\n   * // Fetch a single invite without caching\n   * guild.invites.fetch({ code: 'bRCvFy9', cache: false })\n   *   .then(console.log)\n   *   .catch(console.error);\n   */\n  fetch(options) {\n    if (!options) return this._fetchMany();\n    if (typeof options === 'string') {\n      const code = resolveInviteCode(options);\n      if (!code) return Promise.reject(new DiscordjsError(ErrorCodes.InviteResolveCode));\n      return this._fetchSingle({ code, cache: true });\n    }\n    if (!options.code) {\n      if (options.channelId) {\n        const id = this.guild.channels.resolveId(options.channelId);\n        if (!id) return Promise.reject(new DiscordjsError(ErrorCodes.GuildChannelResolve));\n        return this._fetchChannelMany(id, options.cache);\n      }\n\n      if ('cache' in options) return this._fetchMany(options.cache);\n      return Promise.reject(new DiscordjsError(ErrorCodes.InviteResolveCode));\n    }\n    return this._fetchSingle({\n      ...options,\n      code: resolveInviteCode(options.code),\n    });\n  }\n\n  async _fetchSingle({ code, cache, force = false }) {\n    if (!force) {\n      const existing = this.cache.get(code);\n      if (existing) return existing;\n    }\n\n    const invites = await this._fetchMany(cache);\n    const invite = invites.get(code);\n    if (!invite) throw new DiscordjsError(ErrorCodes.InviteNotFound);\n    return invite;\n  }\n\n  async _fetchMany(cache) {\n    const data = await this.client.rest.get(Routes.guildInvites(this.guild.id));\n    return data.reduce((col, invite) => col.set(invite.code, this._add(invite, cache)), new Collection());\n  }\n\n  async _fetchChannelMany(channelId, cache) {\n    const data = await this.client.rest.get(Routes.channelInvites(channelId));\n    return data.reduce((col, invite) => col.set(invite.code, this._add(invite, cache)), new Collection());\n  }\n\n  /**\n   * Create an invite to the guild from the provided channel.\n   * @param {GuildInvitableChannelResolvable} channel The options for creating the invite from a channel.\n   * @param {InviteCreateOptions} [options={}] The options for creating the invite from a channel.\n   * @returns {Promise<Invite>}\n   * @example\n   * // Create an invite to a selected channel\n   * guild.invites.create('599942732013764608')\n   *   .then(console.log)\n   *   .catch(console.error);\n   */\n  async create(\n    channel,\n    { temporary, maxAge, maxUses, unique, targetUser, targetApplication, targetType, reason } = {},\n  ) {\n    const id = this.guild.channels.resolveId(channel);\n    if (!id) throw new DiscordjsError(ErrorCodes.GuildChannelResolve);\n\n    const invite = await this.client.rest.post(Routes.channelInvites(id), {\n      body: {\n        temporary,\n        max_age: maxAge,\n        max_uses: maxUses,\n        unique,\n        target_user_id: this.client.users.resolveId(targetUser),\n        target_application_id: targetApplication?.id ?? targetApplication?.applicationId ?? targetApplication,\n        target_type: targetType,\n      },\n      reason,\n    });\n    return new Invite(this.client, invite);\n  }\n\n  /**\n   * Deletes an invite.\n   * @param {InviteResolvable} invite The invite to delete\n   * @param {string} [reason] Reason for deleting the invite\n   * @returns {Promise<void>}\n   */\n  async delete(invite, reason) {\n    const code = resolveInviteCode(invite);\n\n    await this.client.rest.delete(Routes.invite(code), { reason });\n  }\n}\n\nmodule.exports = GuildInviteManager;\n", "'use strict';\n\nconst { setTimeout, clearTimeout } = require('node:timers');\nconst { Collection } = require('@discordjs/collection');\nconst { makeURLSearchParams } = require('@discordjs/rest');\nconst { DiscordSnowflake } = require('@sapphire/snowflake');\nconst { Routes, GatewayOpcodes } = require('discord-api-types/v10');\nconst CachedManager = require('./CachedManager');\nconst { DiscordjsError, DiscordjsTypeError, DiscordjsRangeError, ErrorCodes } = require('../errors');\nconst BaseGuildVoiceChannel = require('../structures/BaseGuildVoiceChannel');\nconst { GuildMember } = require('../structures/GuildMember');\nconst { Role } = require('../structures/Role');\nconst Events = require('../util/Events');\nconst { GuildMemberFlagsBitField } = require('../util/GuildMemberFlagsBitField');\nconst Partials = require('../util/Partials');\n\n/**\n * Manages API methods for GuildMembers and stores their cache.\n * @extends {CachedManager}\n */\nclass GuildMemberManager extends CachedManager {\n  constructor(guild, iterable) {\n    super(guild.client, GuildMember, iterable);\n\n    /**\n     * The guild this manager belongs to\n     * @type {Guild}\n     */\n    this.guild = guild;\n  }\n\n  /**\n   * The cache of this Manager\n   * @type {Collection<Snowflake, GuildMember>}\n   * @name GuildMemberManager#cache\n   */\n\n  _add(data, cache = true) {\n    return super._add(data, cache, { id: data.user.id, extras: [this.guild] });\n  }\n\n  /**\n   * Data that resolves to give a GuildMember object. This can be:\n   * * A GuildMember object\n   * * A User resolvable\n   * @typedef {GuildMember|UserResolvable} GuildMemberResolvable\n   */\n\n  /**\n   * Resolves a {@link GuildMemberResolvable} to a {@link GuildMember} object.\n   * @param {GuildMemberResolvable} member The user that is part of the guild\n   * @returns {?GuildMember}\n   */\n  resolve(member) {\n    const memberResolvable = super.resolve(member);\n    if (memberResolvable) return memberResolvable;\n    const userResolvable = this.client.users.resolveId(member);\n    if (userResolvable) return super.resolve(userResolvable);\n    return null;\n  }\n\n  /**\n   * Resolves a {@link GuildMemberResolvable} to a member id.\n   * @param {GuildMemberResolvable} member The user that is part of the guild\n   * @returns {?Snowflake}\n   */\n  resolveId(member) {\n    const memberResolvable = super.resolveId(member);\n    if (memberResolvable) return memberResolvable;\n    const userResolvable = this.client.users.resolveId(member);\n    return this.cache.has(userResolvable) ? userResolvable : null;\n  }\n\n  /**\n   * Options used to add a user to a guild using OAuth2.\n   * @typedef {Object} AddGuildMemberOptions\n   * @property {string} accessToken An OAuth2 access token for the user with the {@link OAuth2Scopes.GuildsJoin}\n   * scope granted to the bot's application\n   * @property {string} [nick] The nickname to give to the member\n   * <info>This property requires the {@link PermissionFlagsBits.ManageNicknames} permission.</info>\n   * @property {Collection<Snowflake, Role>|RoleResolvable[]} [roles] The roles to add to the member\n   * <info>This property requires the {@link PermissionFlagsBits.ManageRoles} permission.</info>\n   * @property {boolean} [mute] Whether the member should be muted\n   * <info>This property requires the {@link PermissionFlagsBits.MuteMembers} permission.</info>\n   * @property {boolean} [deaf] Whether the member should be deafened\n   * <info>This property requires the {@link PermissionFlagsBits.MuteMembers} permission.</info>\n   * @property {boolean} [force] Whether to skip the cache check and request the API directly\n   * @property {boolean} [fetchWhenExisting=true] Whether to fetch the user if not cached and already a member\n   */\n\n  /**\n   * Adds a user to the guild using OAuth2.\n   * <info>This method requires the {@link PermissionFlagsBits.CreateInstantInvite} permission.\n   * @param {UserResolvable} user The user to add to the guild\n   * @param {AddGuildMemberOptions} options Options for adding the user to the guild\n   * @returns {Promise<?GuildMember>}\n   */\n  async add(user, options) {\n    const userId = this.client.users.resolveId(user);\n    if (!userId) throw new DiscordjsTypeError(ErrorCodes.InvalidType, 'user', 'UserResolvable');\n    if (!options.force) {\n      const cachedUser = this.cache.get(userId);\n      if (cachedUser) return cachedUser;\n    }\n    const resolvedOptions = {\n      access_token: options.accessToken,\n      nick: options.nick,\n      mute: options.mute,\n      deaf: options.deaf,\n    };\n    if (options.roles) {\n      if (!Array.isArray(options.roles) && !(options.roles instanceof Collection)) {\n        throw new DiscordjsTypeError(\n          ErrorCodes.InvalidType,\n          'options.roles',\n          'Array or Collection of Roles or Snowflakes',\n          true,\n        );\n      }\n      const resolvedRoles = [];\n      for (const role of options.roles.values()) {\n        const resolvedRole = this.guild.roles.resolveId(role);\n        if (!resolvedRole) {\n          throw new DiscordjsTypeError(ErrorCodes.InvalidElement, 'Array or Collection', 'options.roles', role);\n        }\n        resolvedRoles.push(resolvedRole);\n      }\n      resolvedOptions.roles = resolvedRoles;\n    }\n    const data = await this.client.rest.put(Routes.guildMember(this.guild.id, userId), { body: resolvedOptions });\n\n    // Data is an empty array buffer if the member is already part of the guild.\n    return data instanceof ArrayBuffer\n      ? options.fetchWhenExisting === false\n        ? null\n        : this.fetch(userId)\n      : this._add(data);\n  }\n\n  /**\n   * The client user as a GuildMember of this guild\n   * @type {?GuildMember}\n   * @readonly\n   */\n  get me() {\n    return (\n      this.resolve(this.client.user.id) ??\n      (this.client.options.partials.includes(Partials.GuildMember)\n        ? this._add({ user: { id: this.client.user.id } }, true)\n        : null)\n    );\n  }\n\n  /**\n   * Options used to fetch a single member from a guild.\n   * @typedef {BaseFetchOptions} FetchMemberOptions\n   * @property {UserResolvable} user The user to fetch\n   */\n\n  /**\n   * Options used to fetch multiple members from a guild.\n   * @typedef {Object} FetchMembersOptions\n   * @property {UserResolvable|UserResolvable[]} [user] The user(s) to fetch\n   * @property {?string} [query] Limit fetch to members with similar usernames\n   * @property {number} [limit=0] Maximum number of members to request\n   * @property {boolean} [withPresences=false] Whether to include the presences\n   * @property {number} [time=120e3] Timeout for receipt of members\n   * @property {?string} [nonce] Nonce for this request (32 characters max - default to base 16 now timestamp)\n   */\n\n  /**\n   * Fetches member(s) from a guild.\n   * @param {UserResolvable|FetchMemberOptions|FetchMembersOptions} [options] Options for fetching member(s).\n   * Omitting the parameter or providing `undefined` will fetch all members.\n   * @returns {Promise<GuildMember|Collection<Snowflake, GuildMember>>}\n   * @example\n   * // Fetch all members from a guild\n   * guild.members.fetch()\n   *   .then(console.log)\n   *   .catch(console.error);\n   * @example\n   * // Fetch a single member\n   * guild.members.fetch('66564597481480192')\n   *   .then(console.log)\n   *   .catch(console.error);\n   * @example\n   * // Fetch a single member without checking cache\n   * guild.members.fetch({ user, force: true })\n   *   .then(console.log)\n   *   .catch(console.error)\n   * @example\n   * // Fetch a single member without caching\n   * guild.members.fetch({ user, cache: false })\n   *   .then(console.log)\n   *   .catch(console.error);\n   * @example\n   * // Fetch by an array of users including their presences\n   * guild.members.fetch({ user: ['66564597481480192', '191615925336670208'], withPresences: true })\n   *   .then(console.log)\n   *   .catch(console.error);\n   * @example\n   * // Fetch by query\n   * guild.members.fetch({ query: 'hydra', limit: 1 })\n   *   .then(console.log)\n   *   .catch(console.error);\n   */\n  fetch(options) {\n    if (!options) return this._fetchMany();\n    const { user: users, limit, withPresences, cache, force } = options;\n    const resolvedUser = this.client.users.resolveId(users ?? options);\n    if (resolvedUser && !limit && !withPresences) return this._fetchSingle({ user: resolvedUser, cache, force });\n    const resolvedUsers = users?.map?.(user => this.client.users.resolveId(user)) ?? resolvedUser ?? undefined;\n    return this._fetchMany({ ...options, users: resolvedUsers });\n  }\n\n  async _fetchSingle({ user, cache, force = false }) {\n    if (!force) {\n      const existing = this.cache.get(user);\n      if (existing && !existing.partial) return existing;\n    }\n\n    const data = await this.client.rest.get(Routes.guildMember(this.guild.id, user));\n    return this._add(data, cache);\n  }\n\n  _fetchMany({\n    limit = 0,\n    withPresences: presences,\n    users,\n    query,\n    time = 120e3,\n    nonce = DiscordSnowflake.generate().toString(),\n  } = {}) {\n    if (nonce.length > 32) return Promise.reject(new DiscordjsRangeError(ErrorCodes.MemberFetchNonceLength));\n\n    return new Promise((resolve, reject) => {\n      if (!query && !users) query = '';\n      this.guild.shard.send({\n        op: GatewayOpcodes.RequestGuildMembers,\n        d: {\n          guild_id: this.guild.id,\n          presences,\n          user_ids: users,\n          query,\n          nonce,\n          limit,\n        },\n      });\n      const fetchedMembers = new Collection();\n      let i = 0;\n      const handler = (members, _, chunk) => {\n        if (chunk.nonce !== nonce) return;\n        timeout.refresh();\n        i++;\n        for (const member of members.values()) {\n          fetchedMembers.set(member.id, member);\n        }\n        if (members.size < 1_000 || (limit && fetchedMembers.size >= limit) || i === chunk.count) {\n          clearTimeout(timeout);\n          this.client.removeListener(Events.GuildMembersChunk, handler);\n          this.client.decrementMaxListeners();\n          resolve(users && !Array.isArray(users) && fetchedMembers.size ? fetchedMembers.first() : fetchedMembers);\n        }\n      };\n      const timeout = setTimeout(() => {\n        this.client.removeListener(Events.GuildMembersChunk, handler);\n        this.client.decrementMaxListeners();\n        reject(new DiscordjsError(ErrorCodes.GuildMembersTimeout));\n      }, time).unref();\n      this.client.incrementMaxListeners();\n      this.client.on(Events.GuildMembersChunk, handler);\n    });\n  }\n\n  /**\n   * Fetches the client user as a GuildMember of the guild.\n   * @param {BaseFetchOptions} [options] The options for fetching the member\n   * @returns {Promise<GuildMember>}\n   */\n  fetchMe(options) {\n    return this.fetch({ ...options, user: this.client.user.id });\n  }\n\n  /**\n   * Options used for searching guild members.\n   * @typedef {Object} GuildSearchMembersOptions\n   * @property {string} query Filter members whose username or nickname start with this query\n   * @property {number} [limit] Maximum number of members to search\n   * @property {boolean} [cache=true] Whether or not to cache the fetched member(s)\n   */\n\n  /**\n   * Searches for members in the guild based on a query.\n   * @param {GuildSearchMembersOptions} options Options for searching members\n   * @returns {Promise<Collection<Snowflake, GuildMember>>}\n   */\n  async search({ query, limit, cache = true } = {}) {\n    const data = await this.client.rest.get(Routes.guildMembersSearch(this.guild.id), {\n      query: makeURLSearchParams({ query, limit }),\n    });\n    return data.reduce((col, member) => col.set(member.user.id, this._add(member, cache)), new Collection());\n  }\n\n  /**\n   * Options used for listing guild members.\n   * @typedef {Object} GuildListMembersOptions\n   * @property {Snowflake} [after] Limit fetching members to those with an id greater than the supplied id\n   * @property {number} [limit] Maximum number of members to list\n   * @property {boolean} [cache=true] Whether or not to cache the fetched member(s)\n   */\n\n  /**\n   * Lists up to 1000 members of the guild.\n   * @param {GuildListMembersOptions} [options] Options for listing members\n   * @returns {Promise<Collection<Snowflake, GuildMember>>}\n   */\n  async list({ after, limit, cache = true } = {}) {\n    const query = makeURLSearchParams({ limit, after });\n    const data = await this.client.rest.get(Routes.guildMembers(this.guild.id), { query });\n    return data.reduce((col, member) => col.set(member.user.id, this._add(member, cache)), new Collection());\n  }\n\n  /**\n   * The data for editing a guild member.\n   * @typedef {Object} GuildMemberEditOptions\n   * @property {?string} [nick] The nickname to set for the member\n   * @property {Collection<Snowflake, Role>|RoleResolvable[]} [roles] The roles or role ids to apply\n   * @property {boolean} [mute] Whether or not the member should be muted\n   * @property {boolean} [deaf] Whether or not the member should be deafened\n   * @property {?GuildVoiceChannelResolvable} [channel] Channel to move the member to\n   * (if they are connected to voice), or `null` if you want to disconnect them from voice\n   * @property {?DateResolvable} [communicationDisabledUntil] The date or timestamp\n   * for the member's communication to be disabled until. Provide `null` to enable communication again.\n   * @property {GuildMemberFlagsResolvable} [flags] The flags to set for the member\n   * @property {string} [reason] Reason for editing this user\n   */\n\n  /**\n   * Edits a member of the guild.\n   * <info>The user must be a member of the guild</info>\n   * @param {UserResolvable} user The member to edit\n   * @param {GuildMemberEditOptions} options The options to provide\n   * @returns {Promise<GuildMember>}\n   */\n  async edit(user, { reason, ...options }) {\n    const id = this.client.users.resolveId(user);\n    if (!id) throw new DiscordjsTypeError(ErrorCodes.InvalidType, 'user', 'UserResolvable');\n\n    if (options.channel) {\n      options.channel = this.guild.channels.resolve(options.channel);\n      if (!(options.channel instanceof BaseGuildVoiceChannel)) {\n        throw new DiscordjsError(ErrorCodes.GuildVoiceChannelResolve);\n      }\n      options.channel_id = options.channel.id;\n      options.channel = undefined;\n    } else if (options.channel === null) {\n      options.channel_id = null;\n      options.channel = undefined;\n    }\n    options.roles &&= options.roles.map(role => (role instanceof Role ? role.id : role));\n\n    if (options.communicationDisabledUntil !== undefined) {\n      options.communication_disabled_until =\n        // eslint-disable-next-line eqeqeq\n        options.communicationDisabledUntil != null\n          ? new Date(options.communicationDisabledUntil).toISOString()\n          : options.communicationDisabledUntil;\n    }\n\n    if (options.flags !== undefined) {\n      options.flags = GuildMemberFlagsBitField.resolve(options.flags);\n    }\n\n    let endpoint;\n    if (id === this.client.user.id) {\n      const keys = Object.keys(options);\n      if (keys.length === 1 && keys[0] === 'nick') endpoint = Routes.guildMember(this.guild.id);\n      else endpoint = Routes.guildMember(this.guild.id, id);\n    } else {\n      endpoint = Routes.guildMember(this.guild.id, id);\n    }\n    const d = await this.client.rest.patch(endpoint, { body: options, reason });\n\n    const clone = this.cache.get(id)?._clone();\n    clone?._patch(d);\n    return clone ?? this._add(d, false);\n  }\n\n  /**\n   * Options used for pruning guild members.\n   * <info>It's recommended to set {@link GuildPruneMembersOptions#count options.count}\n   * to `false` for large guilds.</info>\n   * @typedef {Object} GuildPruneMembersOptions\n   * @property {number} [days] Number of days of inactivity required to kick\n   * @property {boolean} [dry=false] Get the number of users that will be kicked, without actually kicking them\n   * @property {boolean} [count] Whether or not to return the number of users that have been kicked.\n   * @property {RoleResolvable[]} [roles] Array of roles to bypass the \"...and no roles\" constraint when pruning\n   * @property {string} [reason] Reason for this prune\n   */\n\n  /**\n   * Prunes members from the guild based on how long they have been inactive.\n   * @param {GuildPruneMembersOptions} [options] Options for pruning\n   * @returns {Promise<?number>} The number of members that were/will be kicked\n   * @example\n   * // See how many members will be pruned\n   * guild.members.prune({ dry: true })\n   *   .then(pruned => console.log(`This will prune ${pruned} people!`))\n   *   .catch(console.error);\n   * @example\n   * // Actually prune the members\n   * guild.members.prune({ days: 1, reason: 'too many people!' })\n   *   .then(pruned => console.log(`I just pruned ${pruned} people!`))\n   *   .catch(console.error);\n   * @example\n   * // Include members with a specified role\n   * guild.members.prune({ days: 7, roles: ['657259391652855808'] })\n   *    .then(pruned => console.log(`I just pruned ${pruned} people!`))\n   *    .catch(console.error);\n   */\n  async prune({ days, dry = false, count: compute_prune_count, roles = [], reason } = {}) {\n    if (typeof days !== 'number') throw new DiscordjsTypeError(ErrorCodes.PruneDaysType);\n\n    const query = { days };\n    const resolvedRoles = [];\n\n    for (const role of roles) {\n      const resolvedRole = this.guild.roles.resolveId(role);\n      if (!resolvedRole) {\n        throw new DiscordjsTypeError(ErrorCodes.InvalidElement, 'Array', 'options.roles', role);\n      }\n      resolvedRoles.push(resolvedRole);\n    }\n\n    if (resolvedRoles.length) {\n      query.include_roles = dry ? resolvedRoles.join(',') : resolvedRoles;\n    }\n\n    const endpoint = Routes.guildPrune(this.guild.id);\n\n    const { pruned } = await (dry\n      ? this.client.rest.get(endpoint, { query: makeURLSearchParams(query), reason })\n      : this.client.rest.post(endpoint, { body: { ...query, compute_prune_count }, reason }));\n\n    return pruned;\n  }\n\n  /**\n   * Kicks a user from the guild.\n   * <info>The user must be a member of the guild</info>\n   * @param {UserResolvable} user The member to kick\n   * @param {string} [reason] Reason for kicking\n   * @returns {Promise<GuildMember|User|Snowflake>} Result object will be resolved as specifically as possible.\n   * If the GuildMember cannot be resolved, the User will instead be attempted to be resolved. If that also cannot\n   * be resolved, the user's id will be the result.\n   * @example\n   * // Kick a user by id (or with a user/guild member object)\n   * guild.members.kick('84484653687267328')\n   *   .then(kickInfo => console.log(`Kicked ${kickInfo.user?.tag ?? kickInfo.tag ?? kickInfo}`))\n   *   .catch(console.error);\n   */\n  async kick(user, reason) {\n    const id = this.client.users.resolveId(user);\n    if (!id) return Promise.reject(new DiscordjsTypeError(ErrorCodes.InvalidType, 'user', 'UserResolvable'));\n\n    await this.client.rest.delete(Routes.guildMember(this.guild.id, id), { reason });\n\n    return this.resolve(user) ?? this.client.users.resolve(user) ?? id;\n  }\n\n  /**\n   * Bans a user from the guild.\n   * @param {UserResolvable} user The user to ban\n   * @param {BanOptions} [options] Options for the ban\n   * @returns {Promise<GuildMember|User|Snowflake>} Result object will be resolved as specifically as possible.\n   * If the GuildMember cannot be resolved, the User will instead be attempted to be resolved. If that also cannot\n   * be resolved, the user id will be the result.\n   * Internally calls the GuildBanManager#create method.\n   * @example\n   * // Ban a user by id (or with a user/guild member object)\n   * guild.members.ban('84484653687267328')\n   *   .then(banInfo => console.log(`Banned ${banInfo.user?.tag ?? banInfo.tag ?? banInfo}`))\n   *   .catch(console.error);\n   */\n  ban(user, options) {\n    return this.guild.bans.create(user, options);\n  }\n\n  /**\n   * Unbans a user from the guild. Internally calls the {@link GuildBanManager#remove} method.\n   * @param {UserResolvable} user The user to unban\n   * @param {string} [reason] Reason for unbanning user\n   * @returns {Promise<?User>} The user that was unbanned\n   * @example\n   * // Unban a user by id (or with a user/guild member object)\n   * guild.members.unban('84484653687267328')\n   *   .then(user => console.log(`Unbanned ${user.username} from ${guild.name}`))\n   *   .catch(console.error);\n   */\n  unban(user, reason) {\n    return this.guild.bans.remove(user, reason);\n  }\n\n  /**\n   * Bulk ban users from a guild, and optionally delete previous messages sent by them.\n   * @param {Collection<Snowflake, UserResolvable>|UserResolvable[]} users The users to ban\n   * @param {BulkBanOptions} [options] The options for bulk banning users\n   * @returns {Promise<BulkBanResult>} Returns an object with `bannedUsers` key containing the IDs of the banned users\n   * and the key `failedUsers` with the IDs that could not be banned or were already banned.\n   * Internally calls the GuildBanManager#bulkCreate method.\n   * @example\n   * // Bulk ban users by ids (or with user/guild member objects) and delete all their messages from the past 7 days\n   * guild.members.bulkBan(['84484653687267328'], { deleteMessageSeconds: 7 * 24 * 60 * 60 })\n   *   .then(result => {\n   *     console.log(`Banned ${result.bannedUsers.length} users, failed to ban ${result.failedUsers.length} users.`)\n   *   })\n   *   .catch(console.error);\n   */\n  bulkBan(users, options = {}) {\n    return this.guild.bans.bulkCreate(users, options);\n  }\n\n  /**\n   * Options used for adding or removing a role from a member.\n   * @typedef {Object} AddOrRemoveGuildMemberRoleOptions\n   * @property {GuildMemberResolvable} user The user to add/remove the role from\n   * @property {RoleResolvable} role The role to add/remove\n   * @property {string} [reason] Reason for adding/removing the role\n   */\n\n  /**\n   * Adds a role to a member.\n   * @param {AddOrRemoveGuildMemberRoleOptions} options Options for adding the role\n   * @returns {Promise<GuildMember|User|Snowflake>}\n   */\n  async addRole(options) {\n    const { user, role, reason } = options;\n    const userId = this.guild.members.resolveId(user);\n    const roleId = this.guild.roles.resolveId(role);\n    await this.client.rest.put(Routes.guildMemberRole(this.guild.id, userId, roleId), { reason });\n\n    return this.resolve(user) ?? this.client.users.resolve(user) ?? userId;\n  }\n\n  /**\n   * Removes a role from a member.\n   * @param {AddOrRemoveGuildMemberRoleOptions} options Options for removing the role\n   * @returns {Promise<GuildMember|User|Snowflake>}\n   */\n  async removeRole(options) {\n    const { user, role, reason } = options;\n    const userId = this.guild.members.resolveId(user);\n    const roleId = this.guild.roles.resolveId(role);\n    await this.client.rest.delete(Routes.guildMemberRole(this.guild.id, userId, roleId), { reason });\n\n    return this.resolve(user) ?? this.client.users.resolve(user) ?? userId;\n  }\n}\n\nmodule.exports = GuildMemberManager;\n", "'use strict';\n\nconst { Collection } = require('@discordjs/collection');\nconst { makeURLSearchParams } = require('@discordjs/rest');\nconst { GuildScheduledEventEntityType, Routes } = require('discord-api-types/v10');\nconst CachedManager = require('./CachedManager');\nconst { DiscordjsTypeError, DiscordjsError, ErrorCodes } = require('../errors');\nconst { GuildScheduledEvent } = require('../structures/GuildScheduledEvent');\nconst { resolveImage } = require('../util/DataResolver');\n\n/**\n * Manages API methods for GuildScheduledEvents and stores their cache.\n * @extends {CachedManager}\n */\nclass GuildScheduledEventManager extends CachedManager {\n  constructor(guild, iterable) {\n    super(guild.client, GuildScheduledEvent, iterable);\n\n    /**\n     * The guild this manager belongs to\n     * @type {Guild}\n     */\n    this.guild = guild;\n  }\n\n  /**\n   * The cache of this manager\n   * @type {Collection<Snowflake, GuildScheduledEvent>}\n   * @name GuildScheduledEventManager#cache\n   */\n\n  /**\n   * Data that resolves to give a GuildScheduledEvent object. This can be:\n   * * A Snowflake\n   * * A GuildScheduledEvent object\n   * @typedef {Snowflake|GuildScheduledEvent} GuildScheduledEventResolvable\n   */\n\n  /**\n   * Options used to create a guild scheduled event.\n   * @typedef {Object} GuildScheduledEventCreateOptions\n   * @property {string} name The name of the guild scheduled event\n   * @property {DateResolvable} scheduledStartTime The time to schedule the event at\n   * @property {DateResolvable} [scheduledEndTime] The time to end the event at\n   * <warn>This is required if `entityType` is {@link GuildScheduledEventEntityType.External}</warn>\n   * @property {GuildScheduledEventPrivacyLevel} privacyLevel The privacy level of the guild scheduled event\n   * @property {GuildScheduledEventEntityType} entityType The scheduled entity type of the event\n   * @property {string} [description] The description of the guild scheduled event\n   * @property {GuildVoiceChannelResolvable} [channel] The channel of the guild scheduled event\n   * <warn>This is required if `entityType` is {@link GuildScheduledEventEntityType.StageInstance} or\n   * {@link GuildScheduledEventEntityType.Voice}</warn>\n   * @property {GuildScheduledEventEntityMetadataOptions} [entityMetadata] The entity metadata of the\n   * guild scheduled event\n   * <warn>This is required if `entityType` is {@link GuildScheduledEventEntityType.External}</warn>\n   * @property {?(BufferResolvable|Base64Resolvable)} [image] The cover image of the guild scheduled event\n   * @property {string} [reason] The reason for creating the guild scheduled event\n   */\n\n  /**\n   * Options used to set entity metadata of a guild scheduled event.\n   * @typedef {Object} GuildScheduledEventEntityMetadataOptions\n   * @property {string} [location] The location of the guild scheduled event\n   * <warn>This is required if `entityType` is {@link GuildScheduledEventEntityType.External}</warn>\n   */\n\n  /**\n   * Creates a new guild scheduled event.\n   * @param {GuildScheduledEventCreateOptions} options Options for creating the guild scheduled event\n   * @returns {Promise<GuildScheduledEvent>}\n   */\n  async create(options) {\n    if (typeof options !== 'object') throw new DiscordjsTypeError(ErrorCodes.InvalidType, 'options', 'object', true);\n    let {\n      privacyLevel,\n      entityType,\n      channel,\n      name,\n      scheduledStartTime,\n      description,\n      scheduledEndTime,\n      entityMetadata,\n      reason,\n      image,\n    } = options;\n\n    let entity_metadata, channel_id;\n    if (entityType === GuildScheduledEventEntityType.External) {\n      channel_id = channel === undefined ? channel : null;\n      entity_metadata = { location: entityMetadata?.location };\n    } else {\n      channel_id = this.guild.channels.resolveId(channel);\n      if (!channel_id) throw new DiscordjsError(ErrorCodes.GuildVoiceChannelResolve);\n      entity_metadata = entityMetadata === undefined ? entityMetadata : null;\n    }\n\n    const data = await this.client.rest.post(Routes.guildScheduledEvents(this.guild.id), {\n      body: {\n        channel_id,\n        name,\n        privacy_level: privacyLevel,\n        scheduled_start_time: new Date(scheduledStartTime).toISOString(),\n        scheduled_end_time: scheduledEndTime ? new Date(scheduledEndTime).toISOString() : scheduledEndTime,\n        description,\n        entity_type: entityType,\n        entity_metadata,\n        image: image && (await resolveImage(image)),\n      },\n      reason,\n    });\n\n    return this._add(data);\n  }\n\n  /**\n   * Options used to fetch a single guild scheduled event from a guild.\n   * @typedef {BaseFetchOptions} FetchGuildScheduledEventOptions\n   * @property {GuildScheduledEventResolvable} guildScheduledEvent The guild scheduled event to fetch\n   * @property {boolean} [withUserCount=true] Whether to fetch the number of users subscribed to the scheduled event\n   */\n\n  /**\n   * Options used to fetch multiple guild scheduled events from a guild.\n   * @typedef {Object} FetchGuildScheduledEventsOptions\n   * @property {boolean} [cache] Whether or not to cache the fetched guild scheduled events\n   * @property {boolean} [withUserCount=true] Whether to fetch the number of users subscribed to each scheduled event\n   * should be returned\n   */\n\n  /**\n   * Obtains one or more guild scheduled events from Discord, or the guild cache if it's already available.\n   * @param {GuildScheduledEventResolvable|FetchGuildScheduledEventOptions|FetchGuildScheduledEventsOptions} [options]\n   * The id of the guild scheduled event or options\n   * @returns {Promise<GuildScheduledEvent|Collection<Snowflake, GuildScheduledEvent>>}\n   */\n  async fetch(options = {}) {\n    const id = this.resolveId(options.guildScheduledEvent ?? options);\n\n    if (id) {\n      if (!options.force) {\n        const existing = this.cache.get(id);\n        if (existing) return existing;\n      }\n\n      const data = await this.client.rest.get(Routes.guildScheduledEvent(this.guild.id, id), {\n        query: makeURLSearchParams({ with_user_count: options.withUserCount ?? true }),\n      });\n      return this._add(data, options.cache);\n    }\n\n    const data = await this.client.rest.get(Routes.guildScheduledEvents(this.guild.id), {\n      query: makeURLSearchParams({ with_user_count: options.withUserCount ?? true }),\n    });\n\n    return data.reduce(\n      (coll, rawGuildScheduledEventData) =>\n        coll.set(\n          rawGuildScheduledEventData.id,\n          this.guild.scheduledEvents._add(rawGuildScheduledEventData, options.cache),\n        ),\n      new Collection(),\n    );\n  }\n\n  /**\n   * Options used to edit a guild scheduled event.\n   * @typedef {Object} GuildScheduledEventEditOptions\n   * @property {string} [name] The name of the guild scheduled event\n   * @property {DateResolvable} [scheduledStartTime] The time to schedule the event at\n   * @property {DateResolvable} [scheduledEndTime] The time to end the event at\n   * @property {GuildScheduledEventPrivacyLevel} [privacyLevel] The privacy level of the guild scheduled event\n   * @property {GuildScheduledEventEntityType} [entityType] The scheduled entity type of the event\n   * @property {string} [description] The description of the guild scheduled event\n   * @property {?GuildVoiceChannelResolvable} [channel] The channel of the guild scheduled event\n   * @property {GuildScheduledEventStatus} [status] The status of the guild scheduled event\n   * @property {GuildScheduledEventEntityMetadataOptions} [entityMetadata] The entity metadata of the\n   * guild scheduled event\n   * <warn>This can be modified only if `entityType` of the `GuildScheduledEvent` to be edited is\n   * {@link GuildScheduledEventEntityType.External}</warn>\n   * @property {?(BufferResolvable|Base64Resolvable)} [image] The cover image of the guild scheduled event\n   * @property {string} [reason] The reason for editing the guild scheduled event\n   */\n\n  /**\n   * Edits a guild scheduled event.\n   * @param {GuildScheduledEventResolvable} guildScheduledEvent The guild scheduled event to edit\n   * @param {GuildScheduledEventEditOptions} options Options to edit the guild scheduled event\n   * @returns {Promise<GuildScheduledEvent>}\n   */\n  async edit(guildScheduledEvent, options) {\n    const guildScheduledEventId = this.resolveId(guildScheduledEvent);\n    if (!guildScheduledEventId) throw new DiscordjsError(ErrorCodes.GuildScheduledEventResolve);\n\n    if (typeof options !== 'object') throw new DiscordjsTypeError(ErrorCodes.InvalidType, 'options', 'object', true);\n    let {\n      privacyLevel,\n      entityType,\n      channel,\n      status,\n      name,\n      scheduledStartTime,\n      description,\n      scheduledEndTime,\n      entityMetadata,\n      reason,\n      image,\n    } = options;\n\n    let entity_metadata;\n    if (entityMetadata) {\n      entity_metadata = {\n        location: entityMetadata.location,\n      };\n    }\n\n    const data = await this.client.rest.patch(Routes.guildScheduledEvent(this.guild.id, guildScheduledEventId), {\n      body: {\n        channel_id: channel === undefined ? channel : this.guild.channels.resolveId(channel),\n        name,\n        privacy_level: privacyLevel,\n        scheduled_start_time: scheduledStartTime ? new Date(scheduledStartTime).toISOString() : undefined,\n        scheduled_end_time: scheduledEndTime ? new Date(scheduledEndTime).toISOString() : scheduledEndTime,\n        description,\n        entity_type: entityType,\n        status,\n        image: image && (await resolveImage(image)),\n        entity_metadata,\n      },\n      reason,\n    });\n\n    return this._add(data);\n  }\n\n  /**\n   * Deletes a guild scheduled event.\n   * @param {GuildScheduledEventResolvable} guildScheduledEvent The guild scheduled event to delete\n   * @returns {Promise<void>}\n   */\n  async delete(guildScheduledEvent) {\n    const guildScheduledEventId = this.resolveId(guildScheduledEvent);\n    if (!guildScheduledEventId) throw new DiscordjsError(ErrorCodes.GuildScheduledEventResolve);\n\n    await this.client.rest.delete(Routes.guildScheduledEvent(this.guild.id, guildScheduledEventId));\n  }\n\n  /**\n   * Options used to fetch subscribers of a guild scheduled event\n   * @typedef {Object} FetchGuildScheduledEventSubscribersOptions\n   * @property {number} [limit] The maximum numbers of users to fetch\n   * @property {boolean} [withMember] Whether to fetch guild member data of the users\n   * @property {Snowflake} [before] Consider only users before this user id\n   * @property {Snowflake} [after] Consider only users after this user id\n   * <warn>If both `before` and `after` are provided, only `before` is respected</warn>\n   */\n\n  /**\n   * Represents a subscriber of a {@link GuildScheduledEvent}\n   * @typedef {Object} GuildScheduledEventUser\n   * @property {Snowflake} guildScheduledEventId The id of the guild scheduled event which the user subscribed to\n   * @property {User} user The user that subscribed to the guild scheduled event\n   * @property {?GuildMember} member The guild member associated with the user, if any\n   */\n\n  /**\n   * Fetches subscribers of a guild scheduled event.\n   * @param {GuildScheduledEventResolvable} guildScheduledEvent The guild scheduled event to fetch subscribers of\n   * @param {FetchGuildScheduledEventSubscribersOptions} [options={}] Options for fetching the subscribers\n   * @returns {Promise<Collection<Snowflake, GuildScheduledEventUser>>}\n   */\n  async fetchSubscribers(guildScheduledEvent, options = {}) {\n    const guildScheduledEventId = this.resolveId(guildScheduledEvent);\n    if (!guildScheduledEventId) throw new DiscordjsError(ErrorCodes.GuildScheduledEventResolve);\n\n    const query = makeURLSearchParams({\n      limit: options.limit,\n      with_member: options.withMember,\n      before: options.before,\n      after: options.after,\n    });\n\n    const data = await this.client.rest.get(Routes.guildScheduledEventUsers(this.guild.id, guildScheduledEventId), {\n      query,\n    });\n\n    return data.reduce(\n      (coll, rawData) =>\n        coll.set(rawData.user.id, {\n          guildScheduledEventId: rawData.guild_scheduled_event_id,\n          user: this.client.users._add(rawData.user),\n          member: rawData.member ? this.guild.members._add({ ...rawData.member, user: rawData.user }) : null,\n        }),\n      new Collection(),\n    );\n  }\n}\n\nmodule.exports = GuildScheduledEventManager;\n", "'use strict';\n\nconst { Collection } = require('@discordjs/collection');\nconst { Routes } = require('discord-api-types/v10');\nconst CachedManager = require('./CachedManager');\nconst { DiscordjsTypeError, ErrorCodes } = require('../errors');\nconst MessagePayload = require('../structures/MessagePayload');\nconst { Sticker } = require('../structures/Sticker');\n\n/**\n * Manages API methods for Guild Stickers and stores their cache.\n * @extends {CachedManager}\n */\nclass GuildStickerManager extends CachedManager {\n  constructor(guild, iterable) {\n    super(guild.client, Sticker, iterable);\n\n    /**\n     * The guild this manager belongs to\n     * @type {Guild}\n     */\n    this.guild = guild;\n  }\n\n  /**\n   * The cache of Guild Stickers\n   * @type {Collection<Snowflake, Sticker>}\n   * @name GuildStickerManager#cache\n   */\n\n  _add(data, cache) {\n    return super._add(data, cache, { extras: [this.guild] });\n  }\n\n  /**\n   * Options used to create a guild sticker.\n   * @typedef {Object} GuildStickerCreateOptions\n   * @property {AttachmentPayload|BufferResolvable|Stream} file The file for the sticker\n   * @property {string} name The name for the sticker\n   * @property {string} tags The Discord name of a unicode emoji representing the sticker's expression\n   * @property {?string} [description] The description for the sticker\n   * @property {string} [reason] Reason for creating the sticker\n   */\n\n  /**\n   * Creates a new custom sticker in the guild.\n   * @param {GuildStickerCreateOptions} options Options for creating a guild sticker\n   * @returns {Promise<Sticker>} The created sticker\n   * @example\n   * // Create a new sticker from a URL\n   * guild.stickers.create({ file: 'https://i.imgur.com/w3duR07.png', name: 'rip', tags: 'headstone' })\n   *   .then(sticker => console.log(`Created new sticker with name ${sticker.name}!`))\n   *   .catch(console.error);\n   * @example\n   * // Create a new sticker from a file on your computer\n   * guild.stickers.create({ file: './memes/banana.png', name: 'banana', tags: 'banana' })\n   *   .then(sticker => console.log(`Created new sticker with name ${sticker.name}!`))\n   *   .catch(console.error);\n   */\n  async create({ file, name, tags, description, reason } = {}) {\n    const resolvedFile = await MessagePayload.resolveFile(file);\n    if (!resolvedFile) throw new DiscordjsTypeError(ErrorCodes.ReqResourceType);\n    file = { ...resolvedFile, key: 'file' };\n\n    const body = { name, tags, description: description ?? '' };\n\n    const sticker = await this.client.rest.post(Routes.guildStickers(this.guild.id), {\n      appendToFormData: true,\n      body,\n      files: [file],\n      reason,\n    });\n    return this.client.actions.GuildStickerCreate.handle(this.guild, sticker).sticker;\n  }\n\n  /**\n   * Data that resolves to give a Sticker object. This can be:\n   * * A Sticker object\n   * * A Snowflake\n   * @typedef {Sticker|Snowflake} StickerResolvable\n   */\n\n  /**\n   * Resolves a StickerResolvable to a Sticker object.\n   * @method resolve\n   * @memberof GuildStickerManager\n   * @instance\n   * @param {StickerResolvable} sticker The Sticker resolvable to identify\n   * @returns {?Sticker}\n   */\n\n  /**\n   * Resolves a StickerResolvable to a Sticker id string.\n   * @method resolveId\n   * @memberof GuildStickerManager\n   * @instance\n   * @param {StickerResolvable} sticker The Sticker resolvable to identify\n   * @returns {?Snowflake}\n   */\n\n  /**\n   * Edits a sticker.\n   * @param {StickerResolvable} sticker The sticker to edit\n   * @param {GuildStickerEditOptions} [options={}] The new data for the sticker\n   * @returns {Promise<Sticker>}\n   */\n  async edit(sticker, options = {}) {\n    const stickerId = this.resolveId(sticker);\n    if (!stickerId) throw new DiscordjsTypeError(ErrorCodes.InvalidType, 'sticker', 'StickerResolvable');\n\n    const d = await this.client.rest.patch(Routes.guildSticker(this.guild.id, stickerId), {\n      body: options,\n      reason: options.reason,\n    });\n\n    const existing = this.cache.get(stickerId);\n    if (existing) {\n      const clone = existing._clone();\n      clone._patch(d);\n      return clone;\n    }\n    return this._add(d);\n  }\n\n  /**\n   * Deletes a sticker.\n   * @param {StickerResolvable} sticker The sticker to delete\n   * @param {string} [reason] Reason for deleting this sticker\n   * @returns {Promise<void>}\n   */\n  async delete(sticker, reason) {\n    sticker = this.resolveId(sticker);\n    if (!sticker) throw new DiscordjsTypeError(ErrorCodes.InvalidType, 'sticker', 'StickerResolvable');\n\n    await this.client.rest.delete(Routes.guildSticker(this.guild.id, sticker), { reason });\n  }\n\n  /**\n   * Obtains one or more stickers from Discord, or the sticker cache if they're already available.\n   * @param {Snowflake} [id] The Sticker's id\n   * @param {BaseFetchOptions} [options] Additional options for this fetch\n   * @returns {Promise<Sticker|Collection<Snowflake, Sticker>>}\n   * @example\n   * // Fetch all stickers from the guild\n   * message.guild.stickers.fetch()\n   *   .then(stickers => console.log(`There are ${stickers.size} stickers.`))\n   *   .catch(console.error);\n   * @example\n   * // Fetch a single sticker\n   * message.guild.stickers.fetch('222078108977594368')\n   *   .then(sticker => console.log(`The sticker name is: ${sticker.name}`))\n   *   .catch(console.error);\n   */\n  async fetch(id, { cache = true, force = false } = {}) {\n    if (id) {\n      if (!force) {\n        const existing = this.cache.get(id);\n        if (existing) return existing;\n      }\n      const sticker = await this.client.rest.get(Routes.guildSticker(this.guild.id, id));\n      return this._add(sticker, cache);\n    }\n\n    const data = await this.client.rest.get(Routes.guildStickers(this.guild.id));\n    return new Collection(data.map(sticker => [sticker.id, this._add(sticker, cache)]));\n  }\n\n  /**\n   * Fetches the user who uploaded this sticker, if this is a guild sticker.\n   * @param {StickerResolvable} sticker The sticker to fetch the user for\n   * @returns {Promise<?User>}\n   */\n  async fetchUser(sticker) {\n    sticker = this.resolve(sticker);\n    if (!sticker) throw new DiscordjsTypeError(ErrorCodes.InvalidType, 'sticker', 'StickerResolvable');\n    const data = await this.client.rest.get(Routes.guildSticker(this.guild.id, sticker.id));\n    sticker._patch(data);\n    return sticker.user;\n  }\n}\n\nmodule.exports = GuildStickerManager;\n", "'use strict';\n\nconst { ActivityFlags } = require('discord-api-types/v10');\nconst BitField = require('./BitField');\n\n/**\n * Data structure that makes it easy to interact with an {@link Activity#flags} bitfield.\n * @extends {BitField}\n */\nclass ActivityFlagsBitField extends BitField {\n  /**\n   * Numeric activity flags.\n   * @type {ActivityFlags}\n   * @memberof ActivityFlagsBitField\n   */\n  static Flags = ActivityFlags;\n}\n\n/**\n * @name ActivityFlagsBitField\n * @kind constructor\n * @memberof ActivityFlagsBitField\n * @param {BitFieldResolvable} [bits=0] Bit(s) to read from\n */\n\nmodule.exports = ActivityFlagsBitField;\n", "'use strict';\n\nconst Base = require('./Base');\nconst { Emoji } = require('./Emoji');\nconst ActivityFlagsBitField = require('../util/ActivityFlagsBitField');\nconst { flatten } = require('../util/Util');\n\n/**\n * Activity sent in a message.\n * @typedef {Object} MessageActivity\n * @property {string} [partyId] Id of the party represented in activity\n * @property {MessageActivityType} type Type of activity sent\n */\n\n/**\n * The status of this presence:\n * * **`online`** - user is online\n * * **`idle`** - user is AFK\n * * **`offline`** - user is offline or invisible\n * * **`dnd`** - user is in Do Not Disturb\n * @typedef {string} PresenceStatus\n */\n\n/**\n * The status of this presence:\n * * **`online`** - user is online\n * * **`idle`** - user is AFK\n * * **`dnd`** - user is in Do Not Disturb\n * @typedef {string} ClientPresenceStatus\n */\n\n/**\n * Represents a user's presence.\n * @extends {Base}\n */\nclass Presence extends Base {\n  constructor(client, data = {}) {\n    super(client);\n\n    /**\n     * The presence's user id\n     * @type {Snowflake}\n     */\n    this.userId = data.user.id;\n\n    /**\n     * The guild this presence is in\n     * @type {?Guild}\n     */\n    this.guild = data.guild ?? null;\n\n    this._patch(data);\n  }\n\n  /**\n   * The user of this presence\n   * @type {?User}\n   * @readonly\n   */\n  get user() {\n    return this.client.users.resolve(this.userId);\n  }\n\n  /**\n   * The member of this presence\n   * @type {?GuildMember}\n   * @readonly\n   */\n  get member() {\n    return this.guild.members.resolve(this.userId);\n  }\n\n  _patch(data) {\n    if ('status' in data) {\n      /**\n       * The status of this presence\n       * @type {PresenceStatus}\n       */\n      this.status = data.status;\n    } else {\n      this.status ??= 'offline';\n    }\n\n    if ('activities' in data) {\n      /**\n       * The activities of this presence\n       * @type {Activity[]}\n       */\n      this.activities = data.activities.map(activity => new Activity(this, activity));\n    } else {\n      this.activities ??= [];\n    }\n\n    if ('client_status' in data) {\n      /**\n       * The devices this presence is on\n       * @type {?Object}\n       * @property {?ClientPresenceStatus} web The current presence in the web application\n       * @property {?ClientPresenceStatus} mobile The current presence in the mobile application\n       * @property {?ClientPresenceStatus} desktop The current presence in the desktop application\n       */\n      this.clientStatus = data.client_status;\n    } else {\n      this.clientStatus ??= null;\n    }\n\n    return this;\n  }\n\n  _clone() {\n    const clone = Object.assign(Object.create(this), this);\n    clone.activities = this.activities.map(activity => activity._clone());\n    return clone;\n  }\n\n  /**\n   * Whether this presence is equal to another.\n   * @param {Presence} presence The presence to compare with\n   * @returns {boolean}\n   */\n  equals(presence) {\n    return (\n      this === presence ||\n      (presence &&\n        this.status === presence.status &&\n        this.clientStatus?.web === presence.clientStatus?.web &&\n        this.clientStatus?.mobile === presence.clientStatus?.mobile &&\n        this.clientStatus?.desktop === presence.clientStatus?.desktop &&\n        this.activities.length === presence.activities.length &&\n        this.activities.every((activity, index) => activity.equals(presence.activities[index])))\n    );\n  }\n\n  toJSON() {\n    return flatten(this);\n  }\n}\n\n/**\n * Represents an activity that is part of a user's presence.\n */\nclass Activity {\n  constructor(presence, data) {\n    /**\n     * The presence of the Activity\n     * @type {Presence}\n     * @readonly\n     * @name Activity#presence\n     */\n    Object.defineProperty(this, 'presence', { value: presence });\n\n    /**\n     * The activity's name\n     * @type {string}\n     */\n    this.name = data.name;\n\n    /**\n     * The activity status's type\n     * @type {ActivityType}\n     */\n    this.type = data.type;\n\n    /**\n     * If the activity is being streamed, a link to the stream\n     * @type {?string}\n     */\n    this.url = data.url ?? null;\n\n    /**\n     * Details about the activity\n     * @type {?string}\n     */\n    this.details = data.details ?? null;\n\n    /**\n     * State of the activity\n     * @type {?string}\n     */\n    this.state = data.state ?? null;\n\n    /**\n     * The id of the application associated with this activity\n     * @type {?Snowflake}\n     */\n    this.applicationId = data.application_id ?? null;\n\n    /**\n     * Represents timestamps of an activity\n     * @typedef {Object} ActivityTimestamps\n     * @property {?Date} start When the activity started\n     * @property {?Date} end When the activity will end\n     */\n\n    /**\n     * Timestamps for the activity\n     * @type {?ActivityTimestamps}\n     */\n    this.timestamps = data.timestamps\n      ? {\n          start: data.timestamps.start ? new Date(Number(data.timestamps.start)) : null,\n          end: data.timestamps.end ? new Date(Number(data.timestamps.end)) : null,\n        }\n      : null;\n\n    /**\n     * Represents a party of an activity\n     * @typedef {Object} ActivityParty\n     * @property {?string} id The party's id\n     * @property {number[]} size Size of the party as `[current, max]`\n     */\n\n    /**\n     * Party of the activity\n     * @type {?ActivityParty}\n     */\n    this.party = data.party ?? null;\n\n    /**\n     * The sync id of the activity\n     * <info>This property is not documented by Discord and represents the track id in spotify activities.</info>\n     * @type {?string}\n     */\n    this.syncId = data.sync_id ?? null;\n\n    /**\n     * Assets for rich presence\n     * @type {?RichPresenceAssets}\n     */\n    this.assets = data.assets ? new RichPresenceAssets(this, data.assets) : null;\n\n    /**\n     * Flags that describe the activity\n     * @type {Readonly<ActivityFlagsBitField>}\n     */\n    this.flags = new ActivityFlagsBitField(data.flags).freeze();\n\n    /**\n     * Emoji for a custom activity\n     * @type {?Emoji}\n     */\n    this.emoji = data.emoji ? new Emoji(presence.client, data.emoji) : null;\n\n    /**\n     * The labels of the buttons of this rich presence\n     * @type {string[]}\n     */\n    this.buttons = data.buttons ?? [];\n\n    /**\n     * Creation date of the activity\n     * @type {number}\n     */\n    this.createdTimestamp = data.created_at;\n  }\n\n  /**\n   * Whether this activity is equal to another activity.\n   * @param {Activity} activity The activity to compare with\n   * @returns {boolean}\n   */\n  equals(activity) {\n    return (\n      this === activity ||\n      (activity &&\n        this.name === activity.name &&\n        this.type === activity.type &&\n        this.url === activity.url &&\n        this.state === activity.state &&\n        this.details === activity.details &&\n        this.emoji?.id === activity.emoji?.id &&\n        this.emoji?.name === activity.emoji?.name)\n    );\n  }\n\n  /**\n   * The time the activity was created at\n   * @type {Date}\n   * @readonly\n   */\n  get createdAt() {\n    return new Date(this.createdTimestamp);\n  }\n\n  /**\n   * When concatenated with a string, this automatically returns the activity's name instead of the Activity object.\n   * @returns {string}\n   */\n  toString() {\n    return this.name;\n  }\n\n  _clone() {\n    return Object.assign(Object.create(this), this);\n  }\n}\n\n/**\n * Assets for a rich presence\n */\nclass RichPresenceAssets {\n  constructor(activity, assets) {\n    /**\n     * The activity of the RichPresenceAssets\n     * @type {Activity}\n     * @readonly\n     * @name RichPresenceAssets#activity\n     */\n    Object.defineProperty(this, 'activity', { value: activity });\n\n    /**\n     * Hover text for the large image\n     * @type {?string}\n     */\n    this.largeText = assets.large_text ?? null;\n\n    /**\n     * Hover text for the small image\n     * @type {?string}\n     */\n    this.smallText = assets.small_text ?? null;\n\n    /**\n     * The large image asset's id\n     * @type {?Snowflake}\n     */\n    this.largeImage = assets.large_image ?? null;\n\n    /**\n     * The small image asset's id\n     * @type {?Snowflake}\n     */\n    this.smallImage = assets.small_image ?? null;\n  }\n\n  /**\n   * Gets the URL of the small image asset\n   * @param {ImageURLOptions} [options={}] Options for the image URL\n   * @returns {?string}\n   */\n  smallImageURL(options = {}) {\n    if (!this.smallImage) return null;\n    if (this.smallImage.includes(':')) {\n      const [platform, id] = this.smallImage.split(':');\n      switch (platform) {\n        case 'mp':\n          return `https://media.discordapp.net/${id}`;\n        default:\n          return null;\n      }\n    }\n\n    return this.activity.presence.client.rest.cdn.appAsset(this.activity.applicationId, this.smallImage, options);\n  }\n\n  /**\n   * Gets the URL of the large image asset\n   * @param {ImageURLOptions} [options={}] Options for the image URL\n   * @returns {?string}\n   */\n  largeImageURL(options = {}) {\n    if (!this.largeImage) return null;\n    if (this.largeImage.includes(':')) {\n      const [platform, id] = this.largeImage.split(':');\n      switch (platform) {\n        case 'mp':\n          return `https://media.discordapp.net/${id}`;\n        case 'spotify':\n          return `https://i.scdn.co/image/${id}`;\n        case 'youtube':\n          return `https://i.ytimg.com/vi/${id}/hqdefault_live.jpg`;\n        case 'twitch':\n          return `https://static-cdn.jtvnw.net/previews-ttv/live_user_${id}.png`;\n        default:\n          return null;\n      }\n    }\n\n    return this.activity.presence.client.rest.cdn.appAsset(this.activity.applicationId, this.largeImage, options);\n  }\n}\n\nexports.Presence = Presence;\nexports.Activity = Activity;\nexports.RichPresenceAssets = RichPresenceAssets;\n", "'use strict';\n\nconst CachedManager = require('./CachedManager');\nconst { Presence } = require('../structures/Presence');\n\n/**\n * Manages API methods for Presences and holds their cache.\n * @extends {CachedManager}\n */\nclass PresenceManager extends CachedManager {\n  constructor(client, iterable) {\n    super(client, Presence, iterable);\n  }\n\n  /**\n   * The cache of Presences\n   * @type {Collection<Snowflake, Presence>}\n   * @name PresenceManager#cache\n   */\n\n  _add(data, cache) {\n    return super._add(data, cache, { id: data.user.id });\n  }\n\n  /**\n   * Data that can be resolved to a Presence object. This can be:\n   * * A Presence\n   * * A UserResolvable\n   * * A Snowflake\n   * @typedef {Presence|UserResolvable|Snowflake} PresenceResolvable\n   */\n\n  /**\n   * Resolves a {@link PresenceResolvable} to a {@link Presence} object.\n   * @param {PresenceResolvable} presence The presence resolvable to resolve\n   * @returns {?Presence}\n   */\n  resolve(presence) {\n    const presenceResolvable = super.resolve(presence);\n    if (presenceResolvable) return presenceResolvable;\n    const UserResolvable = this.client.users.resolveId(presence);\n    return super.resolve(UserResolvable);\n  }\n\n  /**\n   * Resolves a {@link PresenceResolvable} to a {@link Presence} id.\n   * @param {PresenceResolvable} presence The presence resolvable to resolve\n   * @returns {?Snowflake}\n   */\n  resolveId(presence) {\n    const presenceResolvable = super.resolveId(presence);\n    if (presenceResolvable) return presenceResolvable;\n    const userResolvable = this.client.users.resolveId(presence);\n    return this.cache.has(userResolvable) ? userResolvable : null;\n  }\n}\n\nmodule.exports = PresenceManager;\n", "'use strict';\n\nconst process = require('node:process');\nconst { Collection } = require('@discordjs/collection');\nconst { DiscordAPIError } = require('@discordjs/rest');\nconst { RESTJSONErrorCodes, Routes } = require('discord-api-types/v10');\nconst CachedManager = require('./CachedManager');\nconst { DiscordjsTypeError, ErrorCodes } = require('../errors');\nconst { Role } = require('../structures/Role');\nconst { resolveImage } = require('../util/DataResolver');\nconst PermissionsBitField = require('../util/PermissionsBitField');\nconst { setPosition, resolveColor } = require('../util/Util');\n\nlet cacheWarningEmitted = false;\n\n/**\n * Manages API methods for roles and stores their cache.\n * @extends {CachedManager}\n */\nclass RoleManager extends CachedManager {\n  constructor(guild, iterable) {\n    super(guild.client, Role, iterable);\n    if (!cacheWarningEmitted && this._cache.constructor.name !== 'Collection') {\n      cacheWarningEmitted = true;\n      process.emitWarning(\n        `Overriding the cache handling for ${this.constructor.name} is unsupported and breaks functionality.`,\n        'UnsupportedCacheOverwriteWarning',\n      );\n    }\n\n    /**\n     * The guild belonging to this manager\n     * @type {Guild}\n     */\n    this.guild = guild;\n  }\n\n  /**\n   * The role cache of this manager\n   * @type {Collection<Snowflake, Role>}\n   * @name RoleManager#cache\n   */\n\n  _add(data, cache) {\n    return super._add(data, cache, { extras: [this.guild] });\n  }\n\n  /**\n   * Obtains a role from Discord, or the role cache if they're already available.\n   * @param {Snowflake} [id] The role's id\n   * @param {BaseFetchOptions} [options] Additional options for this fetch\n   * @returns {Promise<?Role|Collection<Snowflake, Role>>}\n   * @example\n   * // Fetch all roles from the guild\n   * message.guild.roles.fetch()\n   *   .then(roles => console.log(`There are ${roles.size} roles.`))\n   *   .catch(console.error);\n   * @example\n   * // Fetch a single role\n   * message.guild.roles.fetch('222078108977594368')\n   *   .then(role => console.log(`The role color is: ${role.color}`))\n   *   .catch(console.error);\n   */\n  async fetch(id, { cache = true, force = false } = {}) {\n    if (!id) {\n      const data = await this.client.rest.get(Routes.guildRoles(this.guild.id));\n      const roles = new Collection();\n      for (const role of data) roles.set(role.id, this._add(role, cache));\n      return roles;\n    }\n\n    if (!force) {\n      const existing = this.cache.get(id);\n      if (existing) return existing;\n    }\n\n    try {\n      const data = await this.client.rest.get(Routes.guildRole(this.guild.id, id));\n      return this._add(data, cache);\n    } catch (error) {\n      // TODO: Remove this catch in the next major version\n      if (error instanceof DiscordAPIError && error.code === RESTJSONErrorCodes.UnknownRole) {\n        return null;\n      }\n\n      throw error;\n    }\n  }\n\n  /**\n   * Data that can be resolved to a Role object. This can be:\n   * * A Role\n   * * A Snowflake\n   * @typedef {Role|Snowflake} RoleResolvable\n   */\n\n  /**\n   * Resolves a {@link RoleResolvable} to a {@link Role} object.\n   * @method resolve\n   * @memberof RoleManager\n   * @instance\n   * @param {RoleResolvable} role The role resolvable to resolve\n   * @returns {?Role}\n   */\n\n  /**\n   * Resolves a {@link RoleResolvable} to a {@link Role} id.\n   * @method resolveId\n   * @memberof RoleManager\n   * @instance\n   * @param {RoleResolvable} role The role resolvable to resolve\n   * @returns {?Snowflake}\n   */\n\n  /**\n   * Options used to create a new role.\n   * @typedef {Object} RoleCreateOptions\n   * @property {string} [name] The name of the new role\n   * @property {ColorResolvable} [color] The data to create the role with\n   * @property {boolean} [hoist] Whether or not the new role should be hoisted\n   * @property {PermissionResolvable} [permissions] The permissions for the new role\n   * @property {number} [position] The position of the new role\n   * @property {boolean} [mentionable] Whether or not the new role should be mentionable\n   * @property {?(BufferResolvable|Base64Resolvable|EmojiResolvable)} [icon] The icon for the role\n   * <warn>The `EmojiResolvable` should belong to the same guild as the role.\n   * If not, pass the emoji's URL directly</warn>\n   * @property {?string} [unicodeEmoji] The unicode emoji for the role\n   * @property {string} [reason] The reason for creating this role\n   */\n\n  /**\n   * Creates a new role in the guild with given information.\n   * <warn>The position will silently reset to 1 if an invalid one is provided, or none.</warn>\n   * @param {RoleCreateOptions} [options] Options for creating the new role\n   * @returns {Promise<Role>}\n   * @example\n   * // Create a new role\n   * guild.roles.create()\n   *   .then(console.log)\n   *   .catch(console.error);\n   * @example\n   * // Create a new role with data and a reason\n   * guild.roles.create({\n   *   name: 'Super Cool Blue People',\n   *   color: Colors.Blue,\n   *   reason: 'we needed a role for Super Cool People',\n   * })\n   *   .then(console.log)\n   *   .catch(console.error);\n   */\n  async create(options = {}) {\n    let { name, color, hoist, permissions, position, mentionable, reason, icon, unicodeEmoji } = options;\n    color &&= resolveColor(color);\n    if (permissions !== undefined) permissions = new PermissionsBitField(permissions);\n    if (icon) {\n      const guildEmojiURL = this.guild.emojis.resolve(icon)?.imageURL();\n      icon = guildEmojiURL ? await resolveImage(guildEmojiURL) : await resolveImage(icon);\n      if (typeof icon !== 'string') icon = undefined;\n    }\n\n    const data = await this.client.rest.post(Routes.guildRoles(this.guild.id), {\n      body: {\n        name,\n        color,\n        hoist,\n        permissions,\n        mentionable,\n        icon,\n        unicode_emoji: unicodeEmoji,\n      },\n      reason,\n    });\n    const { role } = this.client.actions.GuildRoleCreate.handle({\n      guild_id: this.guild.id,\n      role: data,\n    });\n    if (position) return this.setPosition(role, position, { reason });\n    return role;\n  }\n\n  /**\n   * Options for editing a role\n   * @typedef {RoleData} RoleEditOptions\n   * @property {string} [reason] The reason for editing this role\n   */\n\n  /**\n   * Edits a role of the guild.\n   * @param {RoleResolvable} role The role to edit\n   * @param {RoleEditOptions} options The options to provide\n   * @returns {Promise<Role>}\n   * @example\n   * // Edit a role\n   * guild.roles.edit('222079219327434752', { name: 'buddies' })\n   *   .then(updated => console.log(`Edited role name to ${updated.name}`))\n   *   .catch(console.error);\n   */\n  async edit(role, options) {\n    role = this.resolve(role);\n    if (!role) throw new DiscordjsTypeError(ErrorCodes.InvalidType, 'role', 'RoleResolvable');\n\n    if (typeof options.position === 'number') {\n      await this.setPosition(role, options.position, { reason: options.reason });\n    }\n\n    let icon = options.icon;\n    if (icon) {\n      const guildEmojiURL = this.guild.emojis.resolve(icon)?.imageURL();\n      icon = guildEmojiURL ? await resolveImage(guildEmojiURL) : await resolveImage(icon);\n      if (typeof icon !== 'string') icon = undefined;\n    }\n\n    const body = {\n      name: options.name,\n      color: options.color === undefined ? undefined : resolveColor(options.color),\n      hoist: options.hoist,\n      permissions: options.permissions === undefined ? undefined : new PermissionsBitField(options.permissions),\n      mentionable: options.mentionable,\n      icon,\n      unicode_emoji: options.unicodeEmoji,\n    };\n\n    const d = await this.client.rest.patch(Routes.guildRole(this.guild.id, role.id), { body, reason: options.reason });\n\n    const clone = role._clone();\n    clone._patch(d);\n    return clone;\n  }\n\n  /**\n   * Deletes a role.\n   * @param {RoleResolvable} role The role to delete\n   * @param {string} [reason] Reason for deleting the role\n   * @returns {Promise<void>}\n   * @example\n   * // Delete a role\n   * guild.roles.delete('222079219327434752', 'The role needed to go')\n   *   .then(() => console.log('Deleted the role'))\n   *   .catch(console.error);\n   */\n  async delete(role, reason) {\n    const id = this.resolveId(role);\n    await this.client.rest.delete(Routes.guildRole(this.guild.id, id), { reason });\n    this.client.actions.GuildRoleDelete.handle({ guild_id: this.guild.id, role_id: id });\n  }\n\n  /**\n   * Sets the new position of the role.\n   * @param {RoleResolvable} role The role to change the position of\n   * @param {number} position The new position for the role\n   * @param {SetRolePositionOptions} [options] Options for setting the position\n   * @returns {Promise<Role>}\n   * @example\n   * // Set the position of the role\n   * guild.roles.setPosition('222197033908436994', 1)\n   *   .then(updated => console.log(`Role position: ${updated.position}`))\n   *   .catch(console.error);\n   */\n  async setPosition(role, position, { relative, reason } = {}) {\n    role = this.resolve(role);\n    if (!role) throw new DiscordjsTypeError(ErrorCodes.InvalidType, 'role', 'RoleResolvable');\n    const updatedRoles = await setPosition(\n      role,\n      position,\n      relative,\n      this.guild._sortedRoles(),\n      this.client,\n      Routes.guildRoles(this.guild.id),\n      reason,\n    );\n\n    this.client.actions.GuildRolesPositionUpdate.handle({\n      guild_id: this.guild.id,\n      roles: updatedRoles,\n    });\n    return role;\n  }\n\n  /**\n   * The data needed for updating a guild role's position\n   * @typedef {Object} GuildRolePosition\n   * @property {RoleResolvable} role The role's id\n   * @property {number} position The position to update\n   */\n\n  /**\n   * Batch-updates the guild's role positions\n   * @param {GuildRolePosition[]} rolePositions Role positions to update\n   * @returns {Promise<Guild>}\n   * @example\n   * guild.roles.setPositions([{ role: roleId, position: updatedRoleIndex }])\n   *  .then(guild => console.log(`Role positions updated for ${guild}`))\n   *  .catch(console.error);\n   */\n  async setPositions(rolePositions) {\n    // Make sure rolePositions are prepared for API\n    rolePositions = rolePositions.map(rolePosition => ({\n      id: this.resolveId(rolePosition.role),\n      position: rolePosition.position,\n    }));\n\n    // Call the API to update role positions\n    await this.client.rest.patch(Routes.guildRoles(this.guild.id), { body: rolePositions });\n    return this.client.actions.GuildRolesPositionUpdate.handle({\n      guild_id: this.guild.id,\n      roles: rolePositions,\n    }).guild;\n  }\n\n  /**\n   * Compares the positions of two roles.\n   * @param {RoleResolvable} role1 First role to compare\n   * @param {RoleResolvable} role2 Second role to compare\n   * @returns {number} Negative number if the first role's position is lower (second role's is higher),\n   * positive number if the first's is higher (second's is lower), 0 if equal\n   */\n  comparePositions(role1, role2) {\n    const resolvedRole1 = this.resolve(role1);\n    const resolvedRole2 = this.resolve(role2);\n    if (!resolvedRole1 || !resolvedRole2) {\n      throw new DiscordjsTypeError(ErrorCodes.InvalidType, 'role', 'Role nor a Snowflake');\n    }\n\n    const role1Position = resolvedRole1.position;\n    const role2Position = resolvedRole2.position;\n\n    if (role1Position === role2Position) {\n      return Number(BigInt(resolvedRole2.id) - BigInt(resolvedRole1.id));\n    }\n\n    return role1Position - role2Position;\n  }\n\n  /**\n   * Gets the managed role a user created when joining the guild, if any\n   * <info>Only ever available for bots</info>\n   * @param {UserResolvable} user The user to access the bot role for\n   * @returns {?Role}\n   */\n  botRoleFor(user) {\n    const userId = this.client.users.resolveId(user);\n    if (!userId) return null;\n    return this.cache.find(role => role.tags?.botId === userId) ?? null;\n  }\n\n  /**\n   * The `@everyone` role of the guild\n   * @type {Role}\n   * @readonly\n   */\n  get everyone() {\n    return this.cache.get(this.guild.id);\n  }\n\n  /**\n   * The premium subscriber role of the guild, if any\n   * @type {?Role}\n   * @readonly\n   */\n  get premiumSubscriberRole() {\n    return this.cache.find(role => role.tags?.premiumSubscriberRole) ?? null;\n  }\n\n  /**\n   * The role with the highest position in the cache\n   * @type {Role}\n   * @readonly\n   */\n  get highest() {\n    return this.cache.reduce((prev, role) => (role.comparePositionTo(prev) > 0 ? role : prev), this.cache.first());\n  }\n}\n\nmodule.exports = RoleManager;\n", "'use strict';\n\nconst { Routes } = require('discord-api-types/v10');\nconst CachedManager = require('./CachedManager');\nconst { DiscordjsTypeError, DiscordjsError, ErrorCodes } = require('../errors');\nconst { StageInstance } = require('../structures/StageInstance');\n\n/**\n * Manages API methods for {@link StageInstance} objects and holds their cache.\n * @extends {CachedManager}\n */\nclass StageInstanceManager extends CachedManager {\n  constructor(guild, iterable) {\n    super(guild.client, StageInstance, iterable);\n\n    /**\n     * The guild this manager belongs to\n     * @type {Guild}\n     */\n    this.guild = guild;\n  }\n\n  /**\n   * The cache of this Manager\n   * @type {Collection<Snowflake, StageInstance>}\n   * @name StageInstanceManager#cache\n   */\n\n  /**\n   * Options used to create a stage instance.\n   * @typedef {Object} StageInstanceCreateOptions\n   * @property {string} topic The topic of the stage instance\n   * @property {StageInstancePrivacyLevel} [privacyLevel] The privacy level of the stage instance\n   * @property {boolean} [sendStartNotification] Whether to notify `@everyone` that the stage instance has started\n   * @property {GuildScheduledEventResolvable} [guildScheduledEvent]\n   * The guild scheduled event associated with the stage instance\n   */\n\n  /**\n   * Data that can be resolved to a Stage Channel object. This can be:\n   * * A StageChannel\n   * * A Snowflake\n   * @typedef {StageChannel|Snowflake} StageChannelResolvable\n   */\n\n  /**\n   * Creates a new stage instance.\n   * @param {StageChannelResolvable} channel The stage channel to associate the created stage instance to\n   * @param {StageInstanceCreateOptions} options The options to create the stage instance\n   * @returns {Promise<StageInstance>}\n   * @example\n   * // Create a stage instance\n   * guild.stageInstances.create('1234567890123456789', {\n   *  topic: 'A very creative topic',\n   *  privacyLevel: GuildPrivacyLevel.GuildOnly\n   * })\n   *  .then(stageInstance => console.log(stageInstance))\n   *  .catch(console.error);\n   */\n  async create(channel, options) {\n    const channelId = this.guild.channels.resolveId(channel);\n    if (!channelId) throw new DiscordjsError(ErrorCodes.StageChannelResolve);\n    if (typeof options !== 'object') throw new DiscordjsTypeError(ErrorCodes.InvalidType, 'options', 'object', true);\n    const { guildScheduledEvent, topic, privacyLevel, sendStartNotification } = options;\n\n    const guildScheduledEventId = guildScheduledEvent && this.resolveId(guildScheduledEvent);\n\n    const data = await this.client.rest.post(Routes.stageInstances(), {\n      body: {\n        channel_id: channelId,\n        topic,\n        privacy_level: privacyLevel,\n        send_start_notification: sendStartNotification,\n        guild_scheduled_event_id: guildScheduledEventId,\n      },\n    });\n\n    return this._add(data);\n  }\n\n  /**\n   * Fetches the stage instance associated with a stage channel, if it exists.\n   * @param {StageChannelResolvable} channel The stage channel whose associated stage instance is to be fetched\n   * @param {BaseFetchOptions} [options] Additional options for this fetch\n   * @returns {Promise<StageInstance>}\n   * @example\n   * // Fetch a stage instance\n   * guild.stageInstances.fetch('1234567890123456789')\n   *  .then(stageInstance => console.log(stageInstance))\n   *  .catch(console.error);\n   */\n  async fetch(channel, { cache = true, force = false } = {}) {\n    const channelId = this.guild.channels.resolveId(channel);\n    if (!channelId) throw new DiscordjsError(ErrorCodes.StageChannelResolve);\n\n    if (!force) {\n      const existing = this.cache.find(stageInstance => stageInstance.channelId === channelId);\n      if (existing) return existing;\n    }\n\n    const data = await this.client.rest.get(Routes.stageInstance(channelId));\n    return this._add(data, cache);\n  }\n\n  /**\n   * Options used to edit an existing stage instance.\n   * @typedef {Object} StageInstanceEditOptions\n   * @property {string} [topic] The new topic of the stage instance\n   * @property {StageInstancePrivacyLevel} [privacyLevel] The new privacy level of the stage instance\n   */\n\n  /**\n   * Edits an existing stage instance.\n   * @param {StageChannelResolvable} channel The stage channel whose associated stage instance is to be edited\n   * @param {StageInstanceEditOptions} options The options to edit the stage instance\n   * @returns {Promise<StageInstance>}\n   * @example\n   * // Edit a stage instance\n   * guild.stageInstances.edit('1234567890123456789', { topic: 'new topic' })\n   *  .then(stageInstance => console.log(stageInstance))\n   *  .catch(console.error);\n   */\n  async edit(channel, options) {\n    if (typeof options !== 'object') throw new DiscordjsTypeError(ErrorCodes.InvalidType, 'options', 'object', true);\n    const channelId = this.guild.channels.resolveId(channel);\n    if (!channelId) throw new DiscordjsError(ErrorCodes.StageChannelResolve);\n\n    let { topic, privacyLevel } = options;\n\n    const data = await this.client.rest.patch(Routes.stageInstance(channelId), {\n      body: {\n        topic,\n        privacy_level: privacyLevel,\n      },\n    });\n\n    if (this.cache.has(data.id)) {\n      const clone = this.cache.get(data.id)._clone();\n      clone._patch(data);\n      return clone;\n    }\n\n    return this._add(data);\n  }\n\n  /**\n   * Deletes an existing stage instance.\n   * @param {StageChannelResolvable} channel The stage channel whose associated stage instance is to be deleted\n   * @returns {Promise<void>}\n   */\n  async delete(channel) {\n    const channelId = this.guild.channels.resolveId(channel);\n    if (!channelId) throw new DiscordjsError(ErrorCodes.StageChannelResolve);\n\n    await this.client.rest.delete(Routes.stageInstance(channelId));\n  }\n}\n\nmodule.exports = StageInstanceManager;\n", "'use strict';\n\nconst { Routes } = require('discord-api-types/v10');\nconst CachedManager = require('./CachedManager');\nconst VoiceState = require('../structures/VoiceState');\n\n/**\n * Manages API methods for VoiceStates and stores their cache.\n * @extends {CachedManager}\n */\nclass VoiceStateManager extends CachedManager {\n  constructor(guild, iterable) {\n    super(guild.client, VoiceState, iterable);\n\n    /**\n     * The guild this manager belongs to\n     * @type {Guild}\n     */\n    this.guild = guild;\n  }\n\n  /**\n   * The cache of this manager\n   * @type {Collection<Snowflake, VoiceState>}\n   * @name VoiceStateManager#cache\n   */\n\n  _add(data, cache = true) {\n    const existing = this.cache.get(data.user_id);\n    if (existing) return existing._patch(data);\n\n    const entry = new this.holds(this.guild, data);\n    if (cache) this.cache.set(data.user_id, entry);\n    return entry;\n  }\n\n  /**\n   * Obtains a user's voice state from discord or from the cache if it's already available.\n   * @param {GuildMemberResolvable|'@me'} member The member whose voice state is to be fetched\n   * @param {BaseFetchOptions} [options] Additional options for this fetch\n   * @returns {Promise<VoiceState>}\n   * @example\n   * // Fetch a member's voice state\n   * guild.voiceStates.fetch(\"66564597481480192\")\n   *    .then(console.log)\n   *    .catch(console.error);\n   */\n  async fetch(member, { cache = true, force = false } = {}) {\n    const id = member === '@me' ? member : this.guild.members.resolveId(member);\n    if (!force) {\n      const existing = this.cache.get(id === '@me' ? this.client.user.id : id);\n      if (existing) return existing;\n    }\n    const data = await this.client.rest.get(Routes.guildVoiceState(this.guild.id, id));\n    return this._add(data, cache);\n  }\n}\n\nmodule.exports = VoiceStateManager;\n", "'use strict';\n\nconst { GuildSystemChannelFlags } = require('discord-api-types/v10');\nconst BitField = require('./BitField');\n\n/**\n * Data structure that makes it easy to interact with a {@link Guild#systemChannelFlags} bitfield.\n * <info>Note that all event message types are enabled by default,\n * and by setting their corresponding flags you are disabling them</info>\n * @extends {BitField}\n */\nclass SystemChannelFlagsBitField extends BitField {\n  /**\n   * Numeric system channel flags.\n   * @type {GuildSystemChannelFlags}\n   * @memberof SystemChannelFlagsBitField\n   */\n  static Flags = GuildSystemChannelFlags;\n}\n\n/**\n * @name SystemChannelFlagsBitField\n * @kind constructor\n * @memberof SystemChannelFlagsBitField\n * @param {SystemChannelFlagsResolvable} [bits=0] Bit(s) to read from\n */\n\n/**\n * Bitfield of the packed bits\n * @type {number}\n * @name SystemChannelFlagsBitField#bitfield\n */\n\n/**\n * Data that can be resolved to give a system channel flag bitfield. This can be:\n * * A string (see {@link SystemChannelFlagsBitField.Flags})\n * * A system channel flag\n * * An instance of SystemChannelFlagsBitField\n * * An Array of SystemChannelFlagsResolvable\n * @typedef {string|number|SystemChannelFlagsBitField|SystemChannelFlagsResolvable[]} SystemChannelFlagsResolvable\n */\n\nmodule.exports = SystemChannelFlagsBitField;\n", "'use strict';\n\nconst { Collection } = require('@discordjs/collection');\nconst { makeURLSearchParams } = require('@discordjs/rest');\nconst { DiscordSnowflake } = require('@sapphire/snowflake');\nconst { ChannelType, GuildPremiumTier, Routes, GuildFeature } = require('discord-api-types/v10');\nconst AnonymousGuild = require('./AnonymousGuild');\nconst GuildAuditLogs = require('./GuildAuditLogs');\nconst { GuildOnboarding } = require('./GuildOnboarding');\nconst GuildPreview = require('./GuildPreview');\nconst GuildTemplate = require('./GuildTemplate');\nconst Integration = require('./Integration');\nconst Webhook = require('./Webhook');\nconst WelcomeScreen = require('./WelcomeScreen');\nconst { DiscordjsError, DiscordjsTypeError, ErrorCodes } = require('../errors');\nconst AutoModerationRuleManager = require('../managers/AutoModerationRuleManager');\nconst GuildApplicationCommandManager = require('../managers/GuildApplicationCommandManager');\nconst GuildBanManager = require('../managers/GuildBanManager');\nconst GuildChannelManager = require('../managers/GuildChannelManager');\nconst GuildEmojiManager = require('../managers/GuildEmojiManager');\nconst GuildInviteManager = require('../managers/GuildInviteManager');\nconst GuildMemberManager = require('../managers/GuildMemberManager');\nconst GuildScheduledEventManager = require('../managers/GuildScheduledEventManager');\nconst GuildStickerManager = require('../managers/GuildStickerManager');\nconst PresenceManager = require('../managers/PresenceManager');\nconst RoleManager = require('../managers/RoleManager');\nconst StageInstanceManager = require('../managers/StageInstanceManager');\nconst VoiceStateManager = require('../managers/VoiceStateManager');\nconst { resolveImage } = require('../util/DataResolver');\nconst Status = require('../util/Status');\nconst SystemChannelFlagsBitField = require('../util/SystemChannelFlagsBitField');\nconst { discordSort, getSortableGroupTypes, resolvePartialEmoji } = require('../util/Util');\n\n/**\n * Represents a guild (or a server) on Discord.\n * <info>It's recommended to see if a guild is available before performing operations or reading data from it. You can\n * check this with {@link Guild#available}.</info>\n * @extends {AnonymousGuild}\n */\nclass Guild extends AnonymousGuild {\n  constructor(client, data) {\n    super(client, data, false);\n\n    /**\n     * A manager of the application commands belonging to this guild\n     * @type {GuildApplicationCommandManager}\n     */\n    this.commands = new GuildApplicationCommandManager(this);\n\n    /**\n     * A manager of the members belonging to this guild\n     * @type {GuildMemberManager}\n     */\n    this.members = new GuildMemberManager(this);\n\n    /**\n     * A manager of the channels belonging to this guild\n     * @type {GuildChannelManager}\n     */\n    this.channels = new GuildChannelManager(this);\n\n    /**\n     * A manager of the bans belonging to this guild\n     * @type {GuildBanManager}\n     */\n    this.bans = new GuildBanManager(this);\n\n    /**\n     * A manager of the roles belonging to this guild\n     * @type {RoleManager}\n     */\n    this.roles = new RoleManager(this);\n\n    /**\n     * A manager of the presences belonging to this guild\n     * @type {PresenceManager}\n     */\n    this.presences = new PresenceManager(this.client);\n\n    /**\n     * A manager of the voice states of this guild\n     * @type {VoiceStateManager}\n     */\n    this.voiceStates = new VoiceStateManager(this);\n\n    /**\n     * A manager of the stage instances of this guild\n     * @type {StageInstanceManager}\n     */\n    this.stageInstances = new StageInstanceManager(this);\n\n    /**\n     * A manager of the invites of this guild\n     * @type {GuildInviteManager}\n     */\n    this.invites = new GuildInviteManager(this);\n\n    /**\n     * A manager of the scheduled events of this guild\n     * @type {GuildScheduledEventManager}\n     */\n    this.scheduledEvents = new GuildScheduledEventManager(this);\n\n    /**\n     * A manager of the auto moderation rules of this guild.\n     * @type {AutoModerationRuleManager}\n     */\n    this.autoModerationRules = new AutoModerationRuleManager(this);\n\n    if (!data) return;\n    if (data.unavailable) {\n      /**\n       * Whether the guild is available to access. If it is not available, it indicates a server outage\n       * @type {boolean}\n       */\n      this.available = false;\n    } else {\n      this._patch(data);\n      if (!data.channels) this.available = false;\n    }\n\n    /**\n     * The id of the shard this Guild belongs to.\n     * @type {number}\n     */\n    this.shardId = data.shardId;\n  }\n\n  /**\n   * The Shard this Guild belongs to.\n   * @type {WebSocketShard}\n   * @readonly\n   */\n  get shard() {\n    return this.client.ws.shards.get(this.shardId);\n  }\n\n  _patch(data) {\n    super._patch(data);\n    this.id = data.id;\n    if ('name' in data) this.name = data.name;\n    if ('icon' in data) this.icon = data.icon;\n    if ('unavailable' in data) {\n      this.available = !data.unavailable;\n    } else {\n      this.available ??= true;\n    }\n\n    if ('discovery_splash' in data) {\n      /**\n       * The hash of the guild discovery splash image\n       * @type {?string}\n       */\n      this.discoverySplash = data.discovery_splash;\n    }\n\n    if ('member_count' in data) {\n      /**\n       * The full amount of members in this guild\n       * @type {number}\n       */\n      this.memberCount = data.member_count;\n    }\n\n    if ('large' in data) {\n      /**\n       * Whether the guild is \"large\" (has more than {@link WebSocketOptions large_threshold} members, 50 by default)\n       * @type {boolean}\n       */\n      this.large = Boolean(data.large);\n    }\n\n    if ('premium_progress_bar_enabled' in data) {\n      /**\n       * Whether this guild has its premium (boost) progress bar enabled\n       * @type {boolean}\n       */\n      this.premiumProgressBarEnabled = data.premium_progress_bar_enabled;\n    }\n\n    if ('application_id' in data) {\n      /**\n       * The id of the application that created this guild (if applicable)\n       * @type {?Snowflake}\n       */\n      this.applicationId = data.application_id;\n    }\n\n    if ('afk_timeout' in data) {\n      /**\n       * The time in seconds before a user is counted as \"away from keyboard\"\n       * @type {?number}\n       */\n      this.afkTimeout = data.afk_timeout;\n    }\n\n    if ('afk_channel_id' in data) {\n      /**\n       * The id of the voice channel where AFK members are moved\n       * @type {?Snowflake}\n       */\n      this.afkChannelId = data.afk_channel_id;\n    }\n\n    if ('system_channel_id' in data) {\n      /**\n       * The system channel's id\n       * @type {?Snowflake}\n       */\n      this.systemChannelId = data.system_channel_id;\n    }\n\n    if ('premium_tier' in data) {\n      /**\n       * The premium tier of this guild\n       * @type {GuildPremiumTier}\n       */\n      this.premiumTier = data.premium_tier;\n    }\n\n    if ('widget_enabled' in data) {\n      /**\n       * Whether widget images are enabled on this guild\n       * @type {?boolean}\n       */\n      this.widgetEnabled = data.widget_enabled;\n    } else {\n      this.widgetEnabled ??= null;\n    }\n\n    if ('widget_channel_id' in data) {\n      /**\n       * The widget channel's id, if enabled\n       * @type {?string}\n       */\n      this.widgetChannelId = data.widget_channel_id;\n    } else {\n      this.widgetChannelId ??= null;\n    }\n\n    if ('explicit_content_filter' in data) {\n      /**\n       * The explicit content filter level of the guild\n       * @type {GuildExplicitContentFilter}\n       */\n      this.explicitContentFilter = data.explicit_content_filter;\n    }\n\n    if ('mfa_level' in data) {\n      /**\n       * The required MFA level for this guild\n       * @type {GuildMFALevel}\n       */\n      this.mfaLevel = data.mfa_level;\n    }\n\n    if ('joined_at' in data) {\n      /**\n       * The timestamp the client user joined the guild at\n       * @type {number}\n       */\n      this.joinedTimestamp = Date.parse(data.joined_at);\n    }\n\n    if ('default_message_notifications' in data) {\n      /**\n       * The default message notification level of the guild\n       * @type {GuildDefaultMessageNotifications}\n       */\n      this.defaultMessageNotifications = data.default_message_notifications;\n    }\n\n    if ('system_channel_flags' in data) {\n      /**\n       * The value set for the guild's system channel flags\n       * @type {Readonly<SystemChannelFlagsBitField>}\n       */\n      this.systemChannelFlags = new SystemChannelFlagsBitField(data.system_channel_flags).freeze();\n    }\n\n    if ('max_members' in data) {\n      /**\n       * The maximum amount of members the guild can have\n       * @type {?number}\n       */\n      this.maximumMembers = data.max_members;\n    } else {\n      this.maximumMembers ??= null;\n    }\n\n    if ('max_presences' in data) {\n      /**\n       * The maximum amount of presences the guild can have (this is `null` for all but the largest of guilds)\n       * <info>You will need to fetch the guild using {@link BaseGuild#fetch} if you want to receive\n       * this parameter</info>\n       * @type {?number}\n       */\n      this.maximumPresences = data.max_presences;\n    } else {\n      this.maximumPresences ??= null;\n    }\n\n    if ('max_video_channel_users' in data) {\n      /**\n       * The maximum amount of users allowed in a video channel.\n       * @type {?number}\n       */\n      this.maxVideoChannelUsers = data.max_video_channel_users;\n    } else {\n      this.maxVideoChannelUsers ??= null;\n    }\n\n    if ('max_stage_video_channel_users' in data) {\n      /**\n       * The maximum amount of users allowed in a stage video channel.\n       * @type {?number}\n       */\n      this.maxStageVideoChannelUsers = data.max_stage_video_channel_users;\n    } else {\n      this.maxStageVideoChannelUsers ??= null;\n    }\n\n    if ('approximate_member_count' in data) {\n      /**\n       * The approximate amount of members the guild has\n       * <info>You will need to fetch the guild using {@link BaseGuild#fetch} if you want to receive\n       * this parameter</info>\n       * @type {?number}\n       */\n      this.approximateMemberCount = data.approximate_member_count;\n    } else {\n      this.approximateMemberCount ??= null;\n    }\n\n    if ('approximate_presence_count' in data) {\n      /**\n       * The approximate amount of presences the guild has\n       * <info>You will need to fetch the guild using {@link BaseGuild#fetch} if you want to receive\n       * this parameter</info>\n       * @type {?number}\n       */\n      this.approximatePresenceCount = data.approximate_presence_count;\n    } else {\n      this.approximatePresenceCount ??= null;\n    }\n\n    /**\n     * The use count of the vanity URL code of the guild, if any\n     * <info>You will need to fetch this parameter using {@link Guild#fetchVanityData} if you want to receive it</info>\n     * @type {?number}\n     */\n    this.vanityURLUses ??= null;\n\n    if ('rules_channel_id' in data) {\n      /**\n       * The rules channel's id for the guild\n       * @type {?Snowflake}\n       */\n      this.rulesChannelId = data.rules_channel_id;\n    }\n\n    if ('public_updates_channel_id' in data) {\n      /**\n       * The community updates channel's id for the guild\n       * @type {?Snowflake}\n       */\n      this.publicUpdatesChannelId = data.public_updates_channel_id;\n    }\n\n    if ('preferred_locale' in data) {\n      /**\n       * The preferred locale of the guild, defaults to `en-US`\n       * @type {Locale}\n       */\n      this.preferredLocale = data.preferred_locale;\n    }\n\n    if ('safety_alerts_channel_id' in data) {\n      /**\n       * The safety alerts channel's id for the guild\n       * @type {?Snowflake}\n       */\n      this.safetyAlertsChannelId = data.safety_alerts_channel_id;\n    } else {\n      this.safetyAlertsChannelId ??= null;\n    }\n\n    if (data.channels) {\n      this.channels.cache.clear();\n      for (const rawChannel of data.channels) {\n        this.client.channels._add(rawChannel, this);\n      }\n    }\n\n    if (data.threads) {\n      for (const rawThread of data.threads) {\n        this.client.channels._add(rawThread, this);\n      }\n    }\n\n    if (data.roles) {\n      this.roles.cache.clear();\n      for (const role of data.roles) this.roles._add(role);\n    }\n\n    if (data.members) {\n      this.members.cache.clear();\n      for (const guildUser of data.members) this.members._add(guildUser);\n    }\n\n    if ('owner_id' in data) {\n      /**\n       * The user id of this guild's owner\n       * @type {Snowflake}\n       */\n      this.ownerId = data.owner_id;\n    }\n\n    if (data.presences) {\n      for (const presence of data.presences) {\n        this.presences._add(Object.assign(presence, { guild: this }));\n      }\n    }\n\n    if (data.stage_instances) {\n      this.stageInstances.cache.clear();\n      for (const stageInstance of data.stage_instances) {\n        this.stageInstances._add(stageInstance);\n      }\n    }\n\n    if (data.guild_scheduled_events) {\n      this.scheduledEvents.cache.clear();\n      for (const scheduledEvent of data.guild_scheduled_events) {\n        this.scheduledEvents._add(scheduledEvent);\n      }\n    }\n\n    if (data.voice_states) {\n      this.voiceStates.cache.clear();\n      for (const voiceState of data.voice_states) {\n        this.voiceStates._add(voiceState);\n      }\n    }\n\n    if (!this.emojis) {\n      /**\n       * A manager of the emojis belonging to this guild\n       * @type {GuildEmojiManager}\n       */\n      this.emojis = new GuildEmojiManager(this);\n      if (data.emojis) for (const emoji of data.emojis) this.emojis._add(emoji);\n    } else if (data.emojis) {\n      this.client.actions.GuildEmojisUpdate.handle({\n        guild_id: this.id,\n        emojis: data.emojis,\n      });\n    }\n\n    if (!this.stickers) {\n      /**\n       * A manager of the stickers belonging to this guild\n       * @type {GuildStickerManager}\n       */\n      this.stickers = new GuildStickerManager(this);\n      if (data.stickers) for (const sticker of data.stickers) this.stickers._add(sticker);\n    } else if (data.stickers) {\n      this.client.actions.GuildStickersUpdate.handle({\n        guild_id: this.id,\n        stickers: data.stickers,\n      });\n    }\n  }\n\n  /**\n   * The time the client user joined the guild\n   * @type {Date}\n   * @readonly\n   */\n  get joinedAt() {\n    return new Date(this.joinedTimestamp);\n  }\n\n  /**\n   * The URL to this guild's discovery splash image.\n   * @param {ImageURLOptions} [options={}] Options for the image URL\n   * @returns {?string}\n   */\n  discoverySplashURL(options = {}) {\n    return this.discoverySplash && this.client.rest.cdn.discoverySplash(this.id, this.discoverySplash, options);\n  }\n\n  /**\n   * Fetches the owner of the guild.\n   * If the member object isn't needed, use {@link Guild#ownerId} instead.\n   * @param {BaseFetchOptions} [options] The options for fetching the member\n   * @returns {Promise<GuildMember>}\n   */\n  async fetchOwner(options) {\n    if (!this.ownerId) {\n      throw new DiscordjsError(ErrorCodes.FetchOwnerId, 'guild');\n    }\n    const member = await this.members.fetch({ ...options, user: this.ownerId });\n    return member;\n  }\n\n  /**\n   * AFK voice channel for this guild\n   * @type {?VoiceChannel}\n   * @readonly\n   */\n  get afkChannel() {\n    return this.client.channels.resolve(this.afkChannelId);\n  }\n\n  /**\n   * System channel for this guild\n   * @type {?TextChannel}\n   * @readonly\n   */\n  get systemChannel() {\n    return this.client.channels.resolve(this.systemChannelId);\n  }\n\n  /**\n   * Widget channel for this guild\n   * @type {?(TextChannel|NewsChannel|VoiceChannel|StageChannel|ForumChannel|MediaChannel)}\n   * @readonly\n   */\n  get widgetChannel() {\n    return this.client.channels.resolve(this.widgetChannelId);\n  }\n\n  /**\n   * Rules channel for this guild\n   * @type {?TextChannel}\n   * @readonly\n   */\n  get rulesChannel() {\n    return this.client.channels.resolve(this.rulesChannelId);\n  }\n\n  /**\n   * Public updates channel for this guild\n   * @type {?TextChannel}\n   * @readonly\n   */\n  get publicUpdatesChannel() {\n    return this.client.channels.resolve(this.publicUpdatesChannelId);\n  }\n\n  /**\n   * Safety alerts channel for this guild\n   * @type {?TextChannel}\n   * @readonly\n   */\n  get safetyAlertsChannel() {\n    return this.client.channels.resolve(this.safetyAlertsChannelId);\n  }\n\n  /**\n   * The maximum bitrate available for this guild\n   * @type {number}\n   * @readonly\n   */\n  get maximumBitrate() {\n    if (this.features.includes(GuildFeature.VIPRegions)) {\n      return 384_000;\n    }\n\n    switch (this.premiumTier) {\n      case GuildPremiumTier.Tier1:\n        return 128_000;\n      case GuildPremiumTier.Tier2:\n        return 256_000;\n      case GuildPremiumTier.Tier3:\n        return 384_000;\n      default:\n        return 96_000;\n    }\n  }\n\n  /**\n   * Fetches a collection of integrations to this guild.\n   * Resolves with a collection mapping integrations by their ids.\n   * @returns {Promise<Collection<Snowflake|string, Integration>>}\n   * @example\n   * // Fetch integrations\n   * guild.fetchIntegrations()\n   *   .then(integrations => console.log(`Fetched ${integrations.size} integrations`))\n   *   .catch(console.error);\n   */\n  async fetchIntegrations() {\n    const data = await this.client.rest.get(Routes.guildIntegrations(this.id));\n    return data.reduce(\n      (collection, integration) => collection.set(integration.id, new Integration(this.client, integration, this)),\n      new Collection(),\n    );\n  }\n\n  /**\n   * Fetches a collection of templates from this guild.\n   * Resolves with a collection mapping templates by their codes.\n   * @returns {Promise<Collection<string, GuildTemplate>>}\n   */\n  async fetchTemplates() {\n    const templates = await this.client.rest.get(Routes.guildTemplates(this.id));\n    return templates.reduce((col, data) => col.set(data.code, new GuildTemplate(this.client, data)), new Collection());\n  }\n\n  /**\n   * Fetches the welcome screen for this guild.\n   * @returns {Promise<WelcomeScreen>}\n   */\n  async fetchWelcomeScreen() {\n    const data = await this.client.rest.get(Routes.guildWelcomeScreen(this.id));\n    return new WelcomeScreen(this, data);\n  }\n\n  /**\n   * Creates a template for the guild.\n   * @param {string} name The name for the template\n   * @param {string} [description] The description for the template\n   * @returns {Promise<GuildTemplate>}\n   */\n  async createTemplate(name, description) {\n    const data = await this.client.rest.post(Routes.guildTemplates(this.id), { body: { name, description } });\n    return new GuildTemplate(this.client, data);\n  }\n\n  /**\n   * Obtains a guild preview for this guild from Discord.\n   * @returns {Promise<GuildPreview>}\n   */\n  async fetchPreview() {\n    const data = await this.client.rest.get(Routes.guildPreview(this.id));\n    return new GuildPreview(this.client, data);\n  }\n\n  /**\n   * An object containing information about a guild's vanity invite.\n   * @typedef {Object} Vanity\n   * @property {?string} code Vanity invite code\n   * @property {number} uses How many times this invite has been used\n   */\n\n  /**\n   * Fetches the vanity URL invite object to this guild.\n   * Resolves with an object containing the vanity URL invite code and the use count\n   * @returns {Promise<Vanity>}\n   * @example\n   * // Fetch invite data\n   * guild.fetchVanityData()\n   *   .then(res => {\n   *     console.log(`Vanity URL: https://discord.gg/${res.code} with ${res.uses} uses`);\n   *   })\n   *   .catch(console.error);\n   */\n  async fetchVanityData() {\n    const data = await this.client.rest.get(Routes.guildVanityUrl(this.id));\n    this.vanityURLCode = data.code;\n    this.vanityURLUses = data.uses;\n\n    return data;\n  }\n\n  /**\n   * Fetches all webhooks for the guild.\n   * @returns {Promise<Collection<Snowflake, Webhook>>}\n   * @example\n   * // Fetch webhooks\n   * guild.fetchWebhooks()\n   *   .then(webhooks => console.log(`Fetched ${webhooks.size} webhooks`))\n   *   .catch(console.error);\n   */\n  async fetchWebhooks() {\n    const apiHooks = await this.client.rest.get(Routes.guildWebhooks(this.id));\n    const hooks = new Collection();\n    for (const hook of apiHooks) hooks.set(hook.id, new Webhook(this.client, hook));\n    return hooks;\n  }\n\n  /**\n   * Fetches the guild widget data, requires the widget to be enabled.\n   * @returns {Promise<Widget>}\n   * @example\n   * // Fetches the guild widget data\n   * guild.fetchWidget()\n   *   .then(widget => console.log(`The widget shows ${widget.channels.size} channels`))\n   *   .catch(console.error);\n   */\n  fetchWidget() {\n    return this.client.fetchGuildWidget(this.id);\n  }\n\n  /**\n   * Data for the Guild Widget Settings object\n   * @typedef {Object} GuildWidgetSettings\n   * @property {boolean} enabled Whether the widget is enabled\n   * @property {?(TextChannel|NewsChannel|VoiceChannel|StageChannel|ForumChannel|MediaChannel)} channel\n   * The widget invite channel\n   */\n\n  /**\n   * The Guild Widget Settings object\n   * @typedef {Object} GuildWidgetSettingsData\n   * @property {boolean} enabled Whether the widget is enabled\n   * @property {?(TextChannel|NewsChannel|VoiceChannel|StageChannel|ForumChannel|MediaChannel|Snowflake)} channel\n   * The widget invite channel\n   */\n\n  /**\n   * Fetches the guild widget settings.\n   * @returns {Promise<GuildWidgetSettings>}\n   * @example\n   * // Fetches the guild widget settings\n   * guild.fetchWidgetSettings()\n   *   .then(widget => console.log(`The widget is ${widget.enabled ? 'enabled' : 'disabled'}`))\n   *   .catch(console.error);\n   */\n  async fetchWidgetSettings() {\n    const data = await this.client.rest.get(Routes.guildWidgetSettings(this.id));\n    this.widgetEnabled = data.enabled;\n    this.widgetChannelId = data.channel_id;\n    return {\n      enabled: data.enabled,\n      channel: data.channel_id ? this.channels.cache.get(data.channel_id) : null,\n    };\n  }\n\n  /**\n   * Returns a URL for the PNG widget of the guild.\n   * @param {GuildWidgetStyle} [style] The style for the widget image\n   * @returns {string}\n   */\n  widgetImageURL(style) {\n    return this.client.guilds.widgetImageURL(this.id, style);\n  }\n\n  /**\n   * Options used to fetch audit logs.\n   * @typedef {Object} GuildAuditLogsFetchOptions\n   * @property {Snowflake|GuildAuditLogsEntry} [before] Consider only entries before this entry\n   * @property {Snowflake|GuildAuditLogsEntry} [after] Consider only entries after this entry\n   * @property {number} [limit] The number of entries to return\n   * @property {UserResolvable} [user] Only return entries for actions made by this user\n   * @property {?AuditLogEvent} [type] Only return entries for this action type\n   */\n\n  /**\n   * Fetches audit logs for this guild.\n   * @param {GuildAuditLogsFetchOptions} [options={}] Options for fetching audit logs\n   * @returns {Promise<GuildAuditLogs>}\n   * @example\n   * // Output audit log entries\n   * guild.fetchAuditLogs()\n   *   .then(audit => console.log(audit.entries.first()))\n   *   .catch(console.error);\n   */\n  async fetchAuditLogs({ before, after, limit, user, type } = {}) {\n    const query = makeURLSearchParams({\n      before: before?.id ?? before,\n      after: after?.id ?? after,\n      limit,\n      action_type: type,\n    });\n\n    if (user) {\n      const userId = this.client.users.resolveId(user);\n      if (!userId) throw new DiscordjsTypeError(ErrorCodes.InvalidType, 'user', 'UserResolvable');\n      query.set('user_id', userId);\n    }\n\n    const data = await this.client.rest.get(Routes.guildAuditLog(this.id), { query });\n    return new GuildAuditLogs(this, data);\n  }\n\n  /**\n   * Fetches the guild onboarding data for this guild.\n   * @returns {Promise<GuildOnboarding>}\n   */\n  async fetchOnboarding() {\n    const data = await this.client.rest.get(Routes.guildOnboarding(this.id));\n    return new GuildOnboarding(this.client, data);\n  }\n\n  /**\n   * The data for editing a guild.\n   * @typedef {Object} GuildEditOptions\n   * @property {string} [name] The name of the guild\n   * @property {?GuildVerificationLevel} [verificationLevel] The verification level of the guild\n   * @property {?GuildDefaultMessageNotifications} [defaultMessageNotifications] The default message\n   * notification level of the guild\n   * @property {?GuildExplicitContentFilter} [explicitContentFilter] The level of the explicit content filter\n   * @property {?VoiceChannelResolvable} [afkChannel] The AFK channel of the guild\n   * @property {number} [afkTimeout] The AFK timeout of the guild\n   * @property {?(BufferResolvable|Base64Resolvable)} [icon] The icon of the guild\n   * @property {GuildMemberResolvable} [owner] The owner of the guild\n   * @property {?(BufferResolvable|Base64Resolvable)} [splash] The invite splash image of the guild\n   * @property {?(BufferResolvable|Base64Resolvable)} [discoverySplash] The discovery splash image of the guild\n   * @property {?(BufferResolvable|Base64Resolvable)} [banner] The banner of the guild\n   * @property {?TextChannelResolvable} [systemChannel] The system channel of the guild\n   * @property {SystemChannelFlagsResolvable} [systemChannelFlags] The system channel flags of the guild\n   * @property {?TextChannelResolvable} [rulesChannel] The rules channel of the guild\n   * @property {?TextChannelResolvable} [publicUpdatesChannel] The community updates channel of the guild\n   * @property {?TextChannelResolvable} [safetyAlertsChannel] The safety alerts channel of the guild\n   * @property {?string} [preferredLocale] The preferred locale of the guild\n   * @property {GuildFeature[]} [features] The features of the guild\n   * @property {?string} [description] The discovery description of the guild\n   * @property {boolean} [premiumProgressBarEnabled] Whether the guild's premium progress bar is enabled\n   * @property {string} [reason] Reason for editing this guild\n   */\n\n  /**\n   * Data that can be resolved to a Text Channel object. This can be:\n   * * A TextChannel\n   * * A Snowflake\n   * @typedef {TextChannel|Snowflake} TextChannelResolvable\n   */\n\n  /**\n   * Data that can be resolved to a Voice Channel object. This can be:\n   * * A VoiceChannel\n   * * A Snowflake\n   * @typedef {VoiceChannel|Snowflake} VoiceChannelResolvable\n   */\n\n  /**\n   * Updates the guild with new information - e.g. a new name.\n   * @param {GuildEditOptions} options The options to provide\n   * @returns {Promise<Guild>}\n   * @example\n   * // Set the guild name\n   * guild.edit({\n   *   name: 'Discord Guild',\n   * })\n   *   .then(updated => console.log(`New guild name ${updated}`))\n   *   .catch(console.error);\n   */\n  async edit({\n    verificationLevel,\n    defaultMessageNotifications,\n    explicitContentFilter,\n    afkChannel,\n    afkTimeout,\n    icon,\n    owner,\n    splash,\n    discoverySplash,\n    banner,\n    systemChannel,\n    systemChannelFlags,\n    rulesChannel,\n    publicUpdatesChannel,\n    preferredLocale,\n    premiumProgressBarEnabled,\n    safetyAlertsChannel,\n    ...options\n  }) {\n    const data = await this.client.rest.patch(Routes.guild(this.id), {\n      body: {\n        ...options,\n        verification_level: verificationLevel,\n        default_message_notifications: defaultMessageNotifications,\n        explicit_content_filter: explicitContentFilter,\n        afk_channel_id: afkChannel && this.client.channels.resolveId(afkChannel),\n        afk_timeout: afkTimeout,\n        icon: icon && (await resolveImage(icon)),\n        owner_id: owner && this.client.users.resolveId(owner),\n        splash: splash && (await resolveImage(splash)),\n        discovery_splash: discoverySplash && (await resolveImage(discoverySplash)),\n        banner: banner && (await resolveImage(banner)),\n        system_channel_id: systemChannel && this.client.channels.resolveId(systemChannel),\n        system_channel_flags:\n          systemChannelFlags === undefined ? undefined : SystemChannelFlagsBitField.resolve(systemChannelFlags),\n        rules_channel_id: rulesChannel && this.client.channels.resolveId(rulesChannel),\n        public_updates_channel_id: publicUpdatesChannel && this.client.channels.resolveId(publicUpdatesChannel),\n        preferred_locale: preferredLocale,\n        premium_progress_bar_enabled: premiumProgressBarEnabled,\n        safety_alerts_channel_id: safetyAlertsChannel && this.client.channels.resolveId(safetyAlertsChannel),\n      },\n      reason: options.reason,\n    });\n\n    return this.client.actions.GuildUpdate.handle(data).updated;\n  }\n\n  /**\n   * Options used to edit the guild onboarding.\n   * @typedef {Object} GuildOnboardingEditOptions\n   * @property {GuildOnboardingPromptData[]|Collection<Snowflake, GuildOnboardingPrompt>} [prompts]\n   * The prompts shown during onboarding and in customize community\n   * @property {ChannelResolvable[]|Collection<Snowflake, GuildChannel>} [defaultChannels]\n   * The channels that new members get opted into automatically\n   * @property {boolean} [enabled] Whether the onboarding is enabled\n   * @property {GuildOnboardingMode} [mode] The mode to edit the guild onboarding with\n   * @property {string} [reason] The reason for editing the guild onboarding\n   */\n\n  /**\n   * Data for editing a guild onboarding prompt.\n   * @typedef {Object} GuildOnboardingPromptData\n   * @property {Snowflake} [id] The id of the prompt\n   * @property {string} title The title for the prompt\n   * @property {boolean} [singleSelect] Whether users are limited to selecting one option for the prompt\n   * @property {boolean} [required] Whether the prompt is required before a user completes the onboarding flow\n   * @property {boolean} [inOnboarding] Whether the prompt is present in the onboarding flow\n   * @property {GuildOnboardingPromptType} [type] The type of the prompt\n   * @property {GuildOnboardingPromptOptionData[]|Collection<Snowflake, GuildOnboardingPrompt>} options\n   * The options available within the prompt\n   */\n\n  /**\n   * Data for editing a guild onboarding prompt option.\n   * @typedef {Object} GuildOnboardingPromptOptionData\n   * @property {?Snowflake} [id] The id of the option\n   * @property {ChannelResolvable[]|Collection<Snowflake, GuildChannel>} [channels]\n   * The channels a member is added to when the option is selected\n   * @property {RoleResolvable[]|Collection<Snowflake, Role>} [roles]\n   * The roles assigned to a member when the option is selected\n   * @property {string} title The title of the option\n   * @property {?string} [description] The description of the option\n   * @property {?(EmojiIdentifierResolvable|Emoji)} [emoji] The emoji of the option\n   */\n\n  /**\n   * Edits the guild onboarding data for this guild.\n   * @param {GuildOnboardingEditOptions} options The options to provide\n   * @returns {Promise<GuildOnboarding>}\n   */\n  async editOnboarding(options) {\n    const newData = await this.client.rest.put(Routes.guildOnboarding(this.id), {\n      body: {\n        prompts: options.prompts?.map(prompt => ({\n          // Currently, the prompt ids are required even for new ones (which won't be used)\n          id: prompt.id ?? DiscordSnowflake.generate().toString(),\n          title: prompt.title,\n          single_select: prompt.singleSelect,\n          required: prompt.required,\n          in_onboarding: prompt.inOnboarding,\n          type: prompt.type,\n          options: prompt.options.map(option => {\n            const emoji = resolvePartialEmoji(option.emoji);\n\n            return {\n              id: option.id,\n              channel_ids: option.channels?.map(channel => this.channels.resolveId(channel)),\n              role_ids: option.roles?.map(role => this.roles.resolveId(role)),\n              title: option.title,\n              description: option.description,\n              emoji_animated: emoji?.animated,\n              emoji_id: emoji?.id,\n              emoji_name: emoji?.name,\n            };\n          }),\n        })),\n        default_channel_ids: options.defaultChannels?.map(channel => this.channels.resolveId(channel)),\n        enabled: options.enabled,\n        mode: options.mode,\n      },\n      reason: options.reason,\n    });\n\n    return new GuildOnboarding(this.client, newData);\n  }\n\n  /**\n   * Welcome channel data\n   * @typedef {Object} WelcomeChannelData\n   * @property {string} description The description to show for this welcome channel\n   * @property {TextChannel|NewsChannel|ForumChannel|MediaChannel|Snowflake} channel\n   * The channel to link for this welcome channel\n   * @property {EmojiIdentifierResolvable} [emoji] The emoji to display for this welcome channel\n   */\n\n  /**\n   * Welcome screen edit data\n   * @typedef {Object} WelcomeScreenEditOptions\n   * @property {boolean} [enabled] Whether the welcome screen is enabled\n   * @property {string} [description] The description for the welcome screen\n   * @property {WelcomeChannelData[]} [welcomeChannels] The welcome channel data for the welcome screen\n   */\n\n  /**\n   * Data that can be resolved to a GuildTextChannel object. This can be:\n   * * A TextChannel\n   * * A NewsChannel\n   * * A Snowflake\n   * @typedef {TextChannel|NewsChannel|Snowflake} GuildTextChannelResolvable\n   */\n\n  /**\n   * Data that can be resolved to a GuildVoiceChannel object. This can be:\n   * * A VoiceChannel\n   * * A StageChannel\n   * * A Snowflake\n   * @typedef {VoiceChannel|StageChannel|Snowflake} GuildVoiceChannelResolvable\n   */\n\n  /**\n   * Updates the guild's welcome screen\n   * @param {WelcomeScreenEditOptions} options The options to provide\n   * @returns {Promise<WelcomeScreen>}\n   * @example\n   * guild.editWelcomeScreen({\n   *   description: 'Hello World',\n   *   enabled: true,\n   *   welcomeChannels: [\n   *     {\n   *       description: 'foobar',\n   *       channel: '222197033908436994',\n   *     }\n   *   ],\n   * })\n   */\n  async editWelcomeScreen(options) {\n    const { enabled, description, welcomeChannels } = options;\n    const welcome_channels = welcomeChannels?.map(welcomeChannelData => {\n      const emoji = this.emojis.resolve(welcomeChannelData.emoji);\n      return {\n        emoji_id: emoji?.id,\n        emoji_name: emoji?.name ?? welcomeChannelData.emoji,\n        channel_id: this.channels.resolveId(welcomeChannelData.channel),\n        description: welcomeChannelData.description,\n      };\n    });\n\n    const patchData = await this.client.rest.patch(Routes.guildWelcomeScreen(this.id), {\n      body: {\n        welcome_channels,\n        description,\n        enabled,\n      },\n    });\n    return new WelcomeScreen(this, patchData);\n  }\n\n  /**\n   * Edits the level of the explicit content filter.\n   * @param {?GuildExplicitContentFilter} explicitContentFilter The new level of the explicit content filter\n   * @param {string} [reason] Reason for changing the level of the guild's explicit content filter\n   * @returns {Promise<Guild>}\n   */\n  setExplicitContentFilter(explicitContentFilter, reason) {\n    return this.edit({ explicitContentFilter, reason });\n  }\n\n  /**\n   * Edits the setting of the default message notifications of the guild.\n   * @param {?GuildDefaultMessageNotifications} defaultMessageNotifications\n   * The new default message notification level of the guild\n   * @param {string} [reason] Reason for changing the setting of the default message notifications\n   * @returns {Promise<Guild>}\n   */\n  setDefaultMessageNotifications(defaultMessageNotifications, reason) {\n    return this.edit({ defaultMessageNotifications, reason });\n  }\n\n  /**\n   * Edits the flags of the default message notifications of the guild.\n   * @param {SystemChannelFlagsResolvable} systemChannelFlags The new flags for the default message notifications\n   * @param {string} [reason] Reason for changing the flags of the default message notifications\n   * @returns {Promise<Guild>}\n   */\n  setSystemChannelFlags(systemChannelFlags, reason) {\n    return this.edit({ systemChannelFlags, reason });\n  }\n\n  /**\n   * Edits the name of the guild.\n   * @param {string} name The new name of the guild\n   * @param {string} [reason] Reason for changing the guild's name\n   * @returns {Promise<Guild>}\n   * @example\n   * // Edit the guild name\n   * guild.setName('Discord Guild')\n   *  .then(updated => console.log(`Updated guild name to ${updated.name}`))\n   *  .catch(console.error);\n   */\n  setName(name, reason) {\n    return this.edit({ name, reason });\n  }\n\n  /**\n   * Edits the verification level of the guild.\n   * @param {?GuildVerificationLevel} verificationLevel The new verification level of the guild\n   * @param {string} [reason] Reason for changing the guild's verification level\n   * @returns {Promise<Guild>}\n   * @example\n   * // Edit the guild verification level\n   * guild.setVerificationLevel(1)\n   *  .then(updated => console.log(`Updated guild verification level to ${guild.verificationLevel}`))\n   *  .catch(console.error);\n   */\n  setVerificationLevel(verificationLevel, reason) {\n    return this.edit({ verificationLevel, reason });\n  }\n\n  /**\n   * Edits the AFK channel of the guild.\n   * @param {?VoiceChannelResolvable} afkChannel The new AFK channel\n   * @param {string} [reason] Reason for changing the guild's AFK channel\n   * @returns {Promise<Guild>}\n   * @example\n   * // Edit the guild AFK channel\n   * guild.setAFKChannel(channel)\n   *  .then(updated => console.log(`Updated guild AFK channel to ${guild.afkChannel.name}`))\n   *  .catch(console.error);\n   */\n  setAFKChannel(afkChannel, reason) {\n    return this.edit({ afkChannel, reason });\n  }\n\n  /**\n   * Edits the system channel of the guild.\n   * @param {?TextChannelResolvable} systemChannel The new system channel\n   * @param {string} [reason] Reason for changing the guild's system channel\n   * @returns {Promise<Guild>}\n   * @example\n   * // Edit the guild system channel\n   * guild.setSystemChannel(channel)\n   *  .then(updated => console.log(`Updated guild system channel to ${guild.systemChannel.name}`))\n   *  .catch(console.error);\n   */\n  setSystemChannel(systemChannel, reason) {\n    return this.edit({ systemChannel, reason });\n  }\n\n  /**\n   * Edits the AFK timeout of the guild.\n   * @param {number} afkTimeout The time in seconds that a user must be idle to be considered AFK\n   * @param {string} [reason] Reason for changing the guild's AFK timeout\n   * @returns {Promise<Guild>}\n   * @example\n   * // Edit the guild AFK channel\n   * guild.setAFKTimeout(60)\n   *  .then(updated => console.log(`Updated guild AFK timeout to ${guild.afkTimeout}`))\n   *  .catch(console.error);\n   */\n  setAFKTimeout(afkTimeout, reason) {\n    return this.edit({ afkTimeout, reason });\n  }\n\n  /**\n   * Sets a new guild icon.\n   * @param {?(Base64Resolvable|BufferResolvable)} icon The new icon of the guild\n   * @param {string} [reason] Reason for changing the guild's icon\n   * @returns {Promise<Guild>}\n   * @example\n   * // Edit the guild icon\n   * guild.setIcon('./icon.png')\n   *  .then(updated => console.log('Updated the guild icon'))\n   *  .catch(console.error);\n   */\n  setIcon(icon, reason) {\n    return this.edit({ icon, reason });\n  }\n\n  /**\n   * Sets a new owner of the guild.\n   * @param {GuildMemberResolvable} owner The new owner of the guild\n   * @param {string} [reason] Reason for setting the new owner\n   * @returns {Promise<Guild>}\n   * @example\n   * // Edit the guild owner\n   * guild.setOwner(guild.members.cache.first())\n   *  .then(guild => guild.fetchOwner())\n   *  .then(owner => console.log(`Updated the guild owner to ${owner.displayName}`))\n   *  .catch(console.error);\n   */\n  setOwner(owner, reason) {\n    return this.edit({ owner, reason });\n  }\n\n  /**\n   * Sets a new guild invite splash image.\n   * @param {?(Base64Resolvable|BufferResolvable)} splash The new invite splash image of the guild\n   * @param {string} [reason] Reason for changing the guild's invite splash image\n   * @returns {Promise<Guild>}\n   * @example\n   * // Edit the guild splash\n   * guild.setSplash('./splash.png')\n   *  .then(updated => console.log('Updated the guild splash'))\n   *  .catch(console.error);\n   */\n  setSplash(splash, reason) {\n    return this.edit({ splash, reason });\n  }\n\n  /**\n   * Sets a new guild discovery splash image.\n   * @param {?(Base64Resolvable|BufferResolvable)} discoverySplash The new discovery splash image of the guild\n   * @param {string} [reason] Reason for changing the guild's discovery splash image\n   * @returns {Promise<Guild>}\n   * @example\n   * // Edit the guild discovery splash\n   * guild.setDiscoverySplash('./discoverysplash.png')\n   *   .then(updated => console.log('Updated the guild discovery splash'))\n   *   .catch(console.error);\n   */\n  setDiscoverySplash(discoverySplash, reason) {\n    return this.edit({ discoverySplash, reason });\n  }\n\n  /**\n   * Sets a new guild banner.\n   * @param {?(Base64Resolvable|BufferResolvable)} banner The new banner of the guild\n   * @param {string} [reason] Reason for changing the guild's banner\n   * @returns {Promise<Guild>}\n   * @example\n   * guild.setBanner('./banner.png')\n   *  .then(updated => console.log('Updated the guild banner'))\n   *  .catch(console.error);\n   */\n  setBanner(banner, reason) {\n    return this.edit({ banner, reason });\n  }\n\n  /**\n   * Edits the rules channel of the guild.\n   * @param {?TextChannelResolvable} rulesChannel The new rules channel\n   * @param {string} [reason] Reason for changing the guild's rules channel\n   * @returns {Promise<Guild>}\n   * @example\n   * // Edit the guild rules channel\n   * guild.setRulesChannel(channel)\n   *  .then(updated => console.log(`Updated guild rules channel to ${guild.rulesChannel.name}`))\n   *  .catch(console.error);\n   */\n  setRulesChannel(rulesChannel, reason) {\n    return this.edit({ rulesChannel, reason });\n  }\n\n  /**\n   * Edits the community updates channel of the guild.\n   * @param {?TextChannelResolvable} publicUpdatesChannel The new community updates channel\n   * @param {string} [reason] Reason for changing the guild's community updates channel\n   * @returns {Promise<Guild>}\n   * @example\n   * // Edit the guild community updates channel\n   * guild.setPublicUpdatesChannel(channel)\n   *  .then(updated => console.log(`Updated guild community updates channel to ${guild.publicUpdatesChannel.name}`))\n   *  .catch(console.error);\n   */\n  setPublicUpdatesChannel(publicUpdatesChannel, reason) {\n    return this.edit({ publicUpdatesChannel, reason });\n  }\n\n  /**\n   * Edits the preferred locale of the guild.\n   * @param {?Locale} preferredLocale The new preferred locale of the guild\n   * @param {string} [reason] Reason for changing the guild's preferred locale\n   * @returns {Promise<Guild>}\n   * @example\n   * // Edit the guild preferred locale\n   * guild.setPreferredLocale('en-US')\n   *  .then(updated => console.log(`Updated guild preferred locale to ${guild.preferredLocale}`))\n   *  .catch(console.error);\n   */\n  setPreferredLocale(preferredLocale, reason) {\n    return this.edit({ preferredLocale, reason });\n  }\n\n  /**\n   * Edits the enabled state of the guild's premium progress bar\n   * @param {boolean} [enabled=true] The new enabled state of the guild's premium progress bar\n   * @param {string} [reason] Reason for changing the state of the guild's premium progress bar\n   * @returns {Promise<Guild>}\n   */\n  setPremiumProgressBarEnabled(enabled = true, reason) {\n    return this.edit({ premiumProgressBarEnabled: enabled, reason });\n  }\n\n  /**\n   * Edits the safety alerts channel of the guild.\n   * @param {?TextChannelResolvable} safetyAlertsChannel The new safety alerts channel\n   * @param {string} [reason] Reason for changing the guild's safety alerts channel\n   * @returns {Promise<Guild>}\n   * @example\n   * // Edit the guild safety alerts channel\n   * guild.setSafetyAlertsChannel(channel)\n   *  .then(updated => console.log(`Updated guild safety alerts channel to ${updated.safetyAlertsChannel.name}`))\n   *  .catch(console.error);\n   */\n  setSafetyAlertsChannel(safetyAlertsChannel, reason) {\n    return this.edit({ safetyAlertsChannel, reason });\n  }\n\n  /**\n   * Edits the guild's widget settings.\n   * @param {GuildWidgetSettingsData} settings The widget settings for the guild\n   * @param {string} [reason] Reason for changing the guild's widget settings\n   * @returns {Promise<Guild>}\n   */\n  async setWidgetSettings(settings, reason) {\n    await this.client.rest.patch(Routes.guildWidgetSettings(this.id), {\n      body: {\n        enabled: settings.enabled,\n        channel_id: this.channels.resolveId(settings.channel),\n      },\n      reason,\n    });\n    return this;\n  }\n\n  /**\n   * Sets the guild's MFA level\n   * <info>An elevated MFA level requires guild moderators to have 2FA enabled.</info>\n   * @param {GuildMFALevel} level The MFA level\n   * @param {string} [reason] Reason for changing the guild's MFA level\n   * @returns {Promise<Guild>}\n   * @example\n   * // Set the MFA level of the guild to Elevated\n   * guild.setMFALevel(GuildMFALevel.Elevated)\n   *   .then(guild => console.log(\"Set guild's MFA level to Elevated\"))\n   *   .catch(console.error);\n   */\n  async setMFALevel(level, reason) {\n    await this.client.rest.post(Routes.guildMFA(this.id), {\n      body: {\n        level,\n      },\n      reason,\n    });\n    return this;\n  }\n\n  /**\n   * Leaves the guild.\n   * @returns {Promise<Guild>}\n   * @example\n   * // Leave a guild\n   * guild.leave()\n   *   .then(guild => console.log(`Left the guild: ${guild.name}`))\n   *   .catch(console.error);\n   */\n  async leave() {\n    if (this.ownerId === this.client.user.id) throw new DiscordjsError(ErrorCodes.GuildOwned);\n    await this.client.rest.delete(Routes.userGuild(this.id));\n    return this;\n  }\n\n  /**\n   * Deletes the guild.\n   * @returns {Promise<Guild>}\n   * @example\n   * // Delete a guild\n   * guild.delete()\n   *   .then(guild => console.log(`Deleted the guild ${guild}`))\n   *   .catch(console.error);\n   */\n  async delete() {\n    await this.client.rest.delete(Routes.guild(this.id));\n    return this;\n  }\n\n  /**\n   * Sets whether this guild's invites are disabled.\n   * @param {boolean} [disabled=true] Whether the invites are disabled\n   * @returns {Promise<Guild>}\n   */\n  async disableInvites(disabled = true) {\n    const features = this.features.filter(feature => feature !== GuildFeature.InvitesDisabled);\n    if (disabled) features.push(GuildFeature.InvitesDisabled);\n    return this.edit({ features });\n  }\n\n  /**\n   * Whether this guild equals another guild. It compares all properties, so for most operations\n   * it is advisable to just compare `guild.id === guild2.id` as it is much faster and is often\n   * what most users need.\n   * @param {Guild} guild The guild to compare with\n   * @returns {boolean}\n   */\n  equals(guild) {\n    return (\n      guild &&\n      guild instanceof this.constructor &&\n      this.id === guild.id &&\n      this.available === guild.available &&\n      this.splash === guild.splash &&\n      this.discoverySplash === guild.discoverySplash &&\n      this.name === guild.name &&\n      this.memberCount === guild.memberCount &&\n      this.large === guild.large &&\n      this.icon === guild.icon &&\n      this.ownerId === guild.ownerId &&\n      this.verificationLevel === guild.verificationLevel &&\n      (this.features === guild.features ||\n        (this.features.length === guild.features.length &&\n          this.features.every((feat, i) => feat === guild.features[i])))\n    );\n  }\n\n  toJSON() {\n    const json = super.toJSON({\n      available: false,\n      createdTimestamp: true,\n      nameAcronym: true,\n      presences: false,\n      voiceStates: false,\n    });\n    json.iconURL = this.iconURL();\n    json.splashURL = this.splashURL();\n    json.discoverySplashURL = this.discoverySplashURL();\n    json.bannerURL = this.bannerURL();\n    return json;\n  }\n\n  /**\n   * The voice state adapter for this guild that can be used with `@discordjs/voice` to play audio in voice\n   * and stage channels.\n   * @type {Function}\n   * @readonly\n   */\n  get voiceAdapterCreator() {\n    return methods => {\n      this.client.voice.adapters.set(this.id, methods);\n      return {\n        sendPayload: data => {\n          if (this.shard.status !== Status.Ready) return false;\n          this.shard.send(data);\n          return true;\n        },\n        destroy: () => {\n          this.client.voice.adapters.delete(this.id);\n        },\n      };\n    };\n  }\n\n  /**\n   * Creates a collection of this guild's roles, sorted by their position and ids.\n   * @returns {Collection<Snowflake, Role>}\n   * @private\n   */\n  _sortedRoles() {\n    return discordSort(this.roles.cache);\n  }\n\n  /**\n   * Creates a collection of this guild's or a specific category's channels, sorted by their position and ids.\n   * @param {GuildChannel} [channel] Category to get the channels of\n   * @returns {Collection<Snowflake, GuildChannel>}\n   * @private\n   */\n  _sortedChannels(channel) {\n    const channelIsCategory = channel.type === ChannelType.GuildCategory;\n    const types = getSortableGroupTypes(channel.type);\n    return discordSort(\n      this.channels.cache.filter(\n        ({ parentId, type }) => types.includes(type) && (channelIsCategory || parentId === channel.parentId),\n      ),\n    );\n  }\n}\n\nexports.Guild = Guild;\n", "'use strict';\n\nconst BaseGuild = require('./BaseGuild');\nconst PermissionsBitField = require('../util/PermissionsBitField');\n\n/**\n * A partial guild received when using {@link GuildManager#fetch} to fetch multiple guilds.\n * @extends {BaseGuild}\n */\nclass OAuth2Guild extends BaseGuild {\n  constructor(client, data) {\n    super(client, data);\n\n    /**\n     * Whether the client user is the owner of the guild\n     * @type {boolean}\n     */\n    this.owner = data.owner;\n\n    /**\n     * The permissions that the client user has in this guild\n     * @type {Readonly<PermissionsBitField>}\n     */\n    this.permissions = new PermissionsBitField(BigInt(data.permissions)).freeze();\n  }\n}\n\nmodule.exports = OAuth2Guild;\n", "'use strict';\n\nconst process = require('node:process');\nconst { setTimeout, clearTimeout } = require('node:timers');\nconst { Collection } = require('@discordjs/collection');\nconst { makeURLSearchParams } = require('@discordjs/rest');\nconst { Routes, RouteBases } = require('discord-api-types/v10');\nconst CachedManager = require('./CachedManager');\nconst ShardClientUtil = require('../sharding/ShardClientUtil');\nconst { Guild } = require('../structures/Guild');\nconst GuildChannel = require('../structures/GuildChannel');\nconst GuildEmoji = require('../structures/GuildEmoji');\nconst { GuildMember } = require('../structures/GuildMember');\nconst Invite = require('../structures/Invite');\nconst OAuth2Guild = require('../structures/OAuth2Guild');\nconst { Role } = require('../structures/Role');\nconst { resolveImage } = require('../util/DataResolver');\nconst Events = require('../util/Events');\nconst PermissionsBitField = require('../util/PermissionsBitField');\nconst SystemChannelFlagsBitField = require('../util/SystemChannelFlagsBitField');\nconst { resolveColor } = require('../util/Util');\n\nlet cacheWarningEmitted = false;\n\n/**\n * Manages API methods for Guilds and stores their cache.\n * @extends {CachedManager}\n */\nclass GuildManager extends CachedManager {\n  constructor(client, iterable) {\n    super(client, Guild, iterable);\n    if (!cacheWarningEmitted && this._cache.constructor.name !== 'Collection') {\n      cacheWarningEmitted = true;\n      process.emitWarning(\n        `Overriding the cache handling for ${this.constructor.name} is unsupported and breaks functionality.`,\n        'UnsupportedCacheOverwriteWarning',\n      );\n    }\n  }\n\n  /**\n   * The cache of this Manager\n   * @type {Collection<Snowflake, Guild>}\n   * @name GuildManager#cache\n   */\n\n  /**\n   * Data that resolves to give a Guild object. This can be:\n   * * A Guild object\n   * * A GuildChannel object\n   * * A GuildEmoji object\n   * * A Role object\n   * * A Snowflake\n   * * An Invite object\n   * @typedef {Guild|GuildChannel|GuildMember|GuildEmoji|Role|Snowflake|Invite} GuildResolvable\n   */\n\n  /**\n   * Partial data for a Role.\n   * @typedef {Object} PartialRoleData\n   * @property {Snowflake|number} [id] The role's id, used to set channel overrides.\n   * This is a placeholder and will be replaced by the API after consumption\n   * @property {string} [name] The name of the role\n   * @property {ColorResolvable} [color] The color of the role, either a hex string or a base 10 number\n   * @property {boolean} [hoist] Whether the role should be hoisted\n   * @property {number} [position] The position of the role\n   * @property {PermissionResolvable} [permissions] The permissions of the role\n   * @property {boolean} [mentionable] Whether the role should be mentionable\n   */\n\n  /**\n   * Partial overwrite data.\n   * @typedef {Object} PartialOverwriteData\n   * @property {Snowflake|number} id The id of the {@link Role} or {@link User} this overwrite belongs to\n   * @property {OverwriteType} [type] The type of this overwrite\n   * @property {PermissionResolvable} [allow] The permissions to allow\n   * @property {PermissionResolvable} [deny] The permissions to deny\n   */\n\n  /**\n   * Partial data for a Channel.\n   * @typedef {Object} PartialChannelData\n   * @property {Snowflake|number} [id] The channel's id, used to set its parent.\n   * This is a placeholder and will be replaced by the API after consumption\n   * @property {Snowflake|number} [parentId] The parent id for this channel\n   * @property {ChannelType.GuildText|ChannelType.GuildVoice|ChannelType.GuildCategory} [type] The type of the channel\n   * @property {string} name The name of the channel\n   * @property {?string} [topic] The topic of the text channel\n   * @property {boolean} [nsfw] Whether the channel is NSFW\n   * @property {number} [bitrate] The bitrate of the voice channel\n   * @property {number} [userLimit] The user limit of the channel\n   * @property {?string} [rtcRegion] The RTC region of the channel\n   * @property {VideoQualityMode} [videoQualityMode] The camera video quality mode of the channel\n   * @property {PartialOverwriteData[]} [permissionOverwrites]\n   * Overwrites of the channel\n   * @property {number} [rateLimitPerUser] The rate limit per user (slowmode) of the channel in seconds\n   */\n\n  /**\n   * Resolves a {@link GuildResolvable} to a {@link Guild} object.\n   * @method resolve\n   * @memberof GuildManager\n   * @instance\n   * @param {GuildResolvable} guild The guild resolvable to identify\n   * @returns {?Guild}\n   */\n  resolve(guild) {\n    if (\n      guild instanceof GuildChannel ||\n      guild instanceof GuildMember ||\n      guild instanceof GuildEmoji ||\n      guild instanceof Role ||\n      (guild instanceof Invite && guild.guild)\n    ) {\n      return super.resolve(guild.guild);\n    }\n    return super.resolve(guild);\n  }\n\n  /**\n   * Resolves a {@link GuildResolvable} to a {@link Guild} id string.\n   * @method resolveId\n   * @memberof GuildManager\n   * @instance\n   * @param {GuildResolvable} guild The guild resolvable to identify\n   * @returns {?Snowflake}\n   */\n  resolveId(guild) {\n    if (\n      guild instanceof GuildChannel ||\n      guild instanceof GuildMember ||\n      guild instanceof GuildEmoji ||\n      guild instanceof Role ||\n      (guild instanceof Invite && guild.guild)\n    ) {\n      return super.resolveId(guild.guild.id);\n    }\n    return super.resolveId(guild);\n  }\n\n  /**\n   * Options used to create a guild.\n   * @typedef {Object} GuildCreateOptions\n   * @property {string} name The name of the guild\n   * @property {?(BufferResolvable|Base64Resolvable)} [icon=null] The icon for the guild\n   * @property {GuildVerificationLevel} [verificationLevel] The verification level for the guild\n   * @property {GuildDefaultMessageNotifications} [defaultMessageNotifications] The default message notifications\n   * for the guild\n   * @property {GuildExplicitContentFilter} [explicitContentFilter] The explicit content filter level for the guild\n   * @property {PartialRoleData[]} [roles=[]] The roles for this guild,\n   * @property {PartialChannelData[]} [channels=[]] The channels for this guild\n   * @property {Snowflake|number} [afkChannelId] The AFK channel's id\n   * @property {number} [afkTimeout] The AFK timeout in seconds\n   * the first element of this array is used to change properties of the guild's everyone role.\n   * @property {Snowflake|number} [systemChannelId] The system channel's id\n   * @property {SystemChannelFlagsResolvable} [systemChannelFlags] The flags of the system channel\n   */\n  /* eslint-enable max-len */\n\n  /**\n   * Creates a guild.\n   * <warn>This is only available to bots in fewer than 10 guilds.</warn>\n   * @param {GuildCreateOptions} options Options for creating the guild\n   * @returns {Promise<Guild>} The guild that was created\n   */\n  async create({\n    name,\n    icon = null,\n    verificationLevel,\n    defaultMessageNotifications,\n    explicitContentFilter,\n    roles = [],\n    channels = [],\n    afkChannelId,\n    afkTimeout,\n    systemChannelId,\n    systemChannelFlags,\n  }) {\n    const data = await this.client.rest.post(Routes.guilds(), {\n      body: {\n        name,\n        icon: icon && (await resolveImage(icon)),\n        verification_level: verificationLevel,\n        default_message_notifications: defaultMessageNotifications,\n        explicit_content_filter: explicitContentFilter,\n        roles: roles.map(({ color, permissions, ...options }) => ({\n          ...options,\n          color: color && resolveColor(color),\n          permissions: permissions === undefined ? undefined : PermissionsBitField.resolve(permissions).toString(),\n        })),\n        channels: channels.map(\n          ({\n            parentId,\n            userLimit,\n            rtcRegion,\n            videoQualityMode,\n            permissionOverwrites,\n            rateLimitPerUser,\n            ...options\n          }) => ({\n            ...options,\n            parent_id: parentId,\n            user_limit: userLimit,\n            rtc_region: rtcRegion,\n            video_quality_mode: videoQualityMode,\n            permission_overwrites: permissionOverwrites?.map(({ allow, deny, ...permissionOverwriteOptions }) => ({\n              ...permissionOverwriteOptions,\n              allow: allow === undefined ? undefined : PermissionsBitField.resolve(allow).toString(),\n              deny: deny === undefined ? undefined : PermissionsBitField.resolve(deny).toString(),\n            })),\n            rate_limit_per_user: rateLimitPerUser,\n          }),\n        ),\n        afk_channel_id: afkChannelId,\n        afk_timeout: afkTimeout,\n        system_channel_id: systemChannelId,\n        system_channel_flags:\n          systemChannelFlags === undefined ? undefined : SystemChannelFlagsBitField.resolve(systemChannelFlags),\n      },\n    });\n\n    return (\n      this.client.guilds.cache.get(data.id) ??\n      new Promise(resolve => {\n        const handleGuild = guild => {\n          if (guild.id === data.id) {\n            clearTimeout(timeout);\n            this.client.decrementMaxListeners();\n            resolve(guild);\n          }\n        };\n        this.client.incrementMaxListeners();\n        this.client.once(Events.GuildCreate, handleGuild);\n\n        const timeout = setTimeout(() => {\n          this.client.removeListener(Events.GuildCreate, handleGuild);\n          this.client.decrementMaxListeners();\n          resolve(this.client.guilds._add(data));\n        }, 10_000).unref();\n      })\n    );\n  }\n\n  /**\n   * Options used to fetch a single guild.\n   * @typedef {BaseFetchOptions} FetchGuildOptions\n   * @property {GuildResolvable} guild The guild to fetch\n   * @property {boolean} [withCounts=true] Whether the approximate member and presence counts should be returned\n   */\n\n  /**\n   * Options used to fetch multiple guilds.\n   * @typedef {Object} FetchGuildsOptions\n   * @property {Snowflake} [before] Get guilds before this guild id\n   * @property {Snowflake} [after] Get guilds after this guild id\n   * @property {number} [limit] Maximum number of guilds to request (1-200)\n   */\n\n  /**\n   * Obtains one or multiple guilds from Discord, or the guild cache if it's already available.\n   * @param {GuildResolvable|FetchGuildOptions|FetchGuildsOptions} [options] The guild's id or options\n   * @returns {Promise<Guild|Collection<Snowflake, OAuth2Guild>>}\n   */\n  async fetch(options = {}) {\n    const id = this.resolveId(options) ?? this.resolveId(options.guild);\n\n    if (id) {\n      if (!options.force) {\n        const existing = this.cache.get(id);\n        if (existing) return existing;\n      }\n\n      const data = await this.client.rest.get(Routes.guild(id), {\n        query: makeURLSearchParams({ with_counts: options.withCounts ?? true }),\n      });\n      data.shardId = ShardClientUtil.shardIdForGuildId(id, this.client.options.shardCount);\n      return this._add(data, options.cache);\n    }\n\n    const data = await this.client.rest.get(Routes.userGuilds(), { query: makeURLSearchParams(options) });\n    return data.reduce((coll, guild) => coll.set(guild.id, new OAuth2Guild(this.client, guild)), new Collection());\n  }\n\n  /**\n   * Returns a URL for the PNG widget of a guild.\n   * @param {GuildResolvable} guild The guild of the widget image\n   * @param {GuildWidgetStyle} [style] The style for the widget image\n   * @returns {string}\n   */\n  widgetImageURL(guild, style) {\n    const urlSearchParams = String(makeURLSearchParams({ style }));\n\n    return `${RouteBases.api}${Routes.guildWidgetImage(this.resolveId(guild))}${\n      urlSearchParams ? `?${urlSearchParams}` : ''\n    }`;\n  }\n}\n\nmodule.exports = GuildManager;\n", "'use strict';\n\nconst { ChannelType, Routes } = require('discord-api-types/v10');\nconst CachedManager = require('./CachedManager');\nconst { DiscordjsError, ErrorCodes } = require('../errors');\nconst { GuildMember } = require('../structures/GuildMember');\nconst { Message } = require('../structures/Message');\nconst ThreadMember = require('../structures/ThreadMember');\nconst User = require('../structures/User');\n\n/**\n * Manages API methods for users and stores their cache.\n * @extends {CachedManager}\n */\nclass UserManager extends CachedManager {\n  constructor(client, iterable) {\n    super(client, User, iterable);\n  }\n\n  /**\n   * The cache of this manager\n   * @type {Collection<Snowflake, User>}\n   * @name UserManager#cache\n   */\n\n  /**\n   * Data that resolves to give a User object. This can be:\n   * * A User object\n   * * A Snowflake\n   * * A Message object (resolves to the message author)\n   * * A GuildMember object\n   * * A ThreadMember object\n   * @typedef {User|Snowflake|Message|GuildMember|ThreadMember} UserResolvable\n   */\n\n  /**\n   * The DM between the client's user and a user\n   * @param {Snowflake} userId The user id\n   * @returns {?DMChannel}\n   * @private\n   */\n  dmChannel(userId) {\n    return (\n      this.client.channels.cache.find(channel => channel.type === ChannelType.DM && channel.recipientId === userId) ??\n      null\n    );\n  }\n\n  /**\n   * Creates a {@link DMChannel} between the client and a user.\n   * @param {UserResolvable} user The UserResolvable to identify\n   * @param {BaseFetchOptions} [options] Additional options for this fetch\n   * @returns {Promise<DMChannel>}\n   */\n  async createDM(user, { cache = true, force = false } = {}) {\n    const id = this.resolveId(user);\n\n    if (!force) {\n      const dmChannel = this.dmChannel(id);\n      if (dmChannel && !dmChannel.partial) return dmChannel;\n    }\n\n    const data = await this.client.rest.post(Routes.userChannels(), { body: { recipient_id: id } });\n    return this.client.channels._add(data, null, { cache });\n  }\n\n  /**\n   * Deletes a {@link DMChannel} (if one exists) between the client and a user. Resolves with the channel if successful.\n   * @param {UserResolvable} user The UserResolvable to identify\n   * @returns {Promise<DMChannel>}\n   */\n  async deleteDM(user) {\n    const id = this.resolveId(user);\n    const dmChannel = this.dmChannel(id);\n    if (!dmChannel) throw new DiscordjsError(ErrorCodes.UserNoDMChannel);\n    await this.client.rest.delete(Routes.channel(dmChannel.id));\n    this.client.channels._remove(dmChannel.id);\n    return dmChannel;\n  }\n\n  /**\n   * Obtains a user from Discord, or the user cache if it's already available.\n   * @param {UserResolvable} user The user to fetch\n   * @param {BaseFetchOptions} [options] Additional options for this fetch\n   * @returns {Promise<User>}\n   */\n  async fetch(user, { cache = true, force = false } = {}) {\n    const id = this.resolveId(user);\n    if (!force) {\n      const existing = this.cache.get(id);\n      if (existing && !existing.partial) return existing;\n    }\n\n    const data = await this.client.rest.get(Routes.user(id));\n    return this._add(data, cache);\n  }\n\n  /**\n   * Fetches a user's flags.\n   * @param {UserResolvable} user The UserResolvable to identify\n   * @param {BaseFetchOptions} [options] Additional options for this fetch\n   * @returns {Promise<UserFlagsBitField>}\n   */\n  async fetchFlags(user, options) {\n    return (await this.fetch(user, options)).flags;\n  }\n\n  /**\n   * Sends a message to a user.\n   * @param {UserResolvable} user The UserResolvable to identify\n   * @param {string|MessagePayload|MessageCreateOptions} options The options to provide\n   * @returns {Promise<Message>}\n   */\n  async send(user, options) {\n    return (await this.createDM(user)).send(options);\n  }\n\n  /**\n   * Resolves a {@link UserResolvable} to a {@link User} object.\n   * @param {UserResolvable} user The UserResolvable to identify\n   * @returns {?User}\n   */\n  resolve(user) {\n    if (user instanceof GuildMember || user instanceof ThreadMember) return user.user;\n    if (user instanceof Message) return user.author;\n    return super.resolve(user);\n  }\n\n  /**\n   * Resolves a {@link UserResolvable} to a {@link User} id.\n   * @param {UserResolvable} user The UserResolvable to identify\n   * @returns {?Snowflake}\n   */\n  resolveId(user) {\n    if (user instanceof ThreadMember) return user.id;\n    if (user instanceof GuildMember) return user.user.id;\n    if (user instanceof Message) return user.author.id;\n    return super.resolveId(user);\n  }\n}\n\nmodule.exports = UserManager;\n", "'use strict';\n\nconst { GatewayOpcodes, ActivityType } = require('discord-api-types/v10');\nconst { Presence } = require('./Presence');\nconst { DiscordjsTypeError, ErrorCodes } = require('../errors');\n\n/**\n * Represents the client's presence.\n * @extends {Presence}\n */\nclass ClientPresence extends Presence {\n  constructor(client, data = {}) {\n    super(client, Object.assign(data, { status: data.status ?? 'online', user: { id: null } }));\n  }\n\n  /**\n   * Sets the client's presence\n   * @param {PresenceData} presence The data to set the presence to\n   * @returns {ClientPresence}\n   */\n  set(presence) {\n    const packet = this._parse(presence);\n    this._patch(packet);\n    if (presence.shardId === undefined) {\n      this.client.ws.broadcast({ op: GatewayOpcodes.PresenceUpdate, d: packet });\n    } else if (Array.isArray(presence.shardId)) {\n      for (const shardId of presence.shardId) {\n        this.client.ws.shards.get(shardId).send({ op: GatewayOpcodes.PresenceUpdate, d: packet });\n      }\n    } else {\n      this.client.ws.shards.get(presence.shardId).send({ op: GatewayOpcodes.PresenceUpdate, d: packet });\n    }\n    return this;\n  }\n\n  /**\n   * Parses presence data into a packet ready to be sent to Discord\n   * @param {PresenceData} presence The data to parse\n   * @returns {GatewayPresenceUpdateData}\n   * @private\n   */\n  _parse({ status, since, afk, activities }) {\n    const data = {\n      activities: [],\n      afk: typeof afk === 'boolean' ? afk : false,\n      since: typeof since === 'number' && !Number.isNaN(since) ? since : null,\n      status: status ?? this.status,\n    };\n    if (activities?.length) {\n      for (const [i, activity] of activities.entries()) {\n        if (typeof activity.name !== 'string') {\n          throw new DiscordjsTypeError(ErrorCodes.InvalidType, `activities[${i}].name`, 'string');\n        }\n\n        activity.type ??= ActivityType.Playing;\n\n        if (activity.type === ActivityType.Custom && !activity.state) {\n          activity.state = activity.name;\n          activity.name = 'Custom Status';\n        }\n\n        data.activities.push({\n          type: activity.type,\n          name: activity.name,\n          state: activity.state,\n          url: activity.url,\n        });\n      }\n    } else if (!activities && (status || afk || since) && this.activities.length) {\n      data.activities.push(\n        ...this.activities.map(activity => ({\n          name: activity.name,\n          state: activity.state ?? undefined,\n          type: activity.type,\n          url: activity.url ?? undefined,\n        })),\n      );\n    }\n\n    return data;\n  }\n}\n\nmodule.exports = ClientPresence;\n", "'use strict';\n\nconst { Collection } = require('@discordjs/collection');\nconst { DiscordSnowflake } = require('@sapphire/snowflake');\nconst Base = require('./Base');\nconst { Sticker } = require('./Sticker');\n\n/**\n * Represents a pack of standard stickers.\n * @extends {Base}\n */\nclass StickerPack extends Base {\n  constructor(client, pack) {\n    super(client);\n    /**\n     * The Sticker pack's id\n     * @type {Snowflake}\n     */\n    this.id = pack.id;\n\n    /**\n     * The stickers in the pack\n     * @type {Collection<Snowflake, Sticker>}\n     */\n    this.stickers = new Collection(pack.stickers.map(sticker => [sticker.id, new Sticker(client, sticker)]));\n\n    /**\n     * The name of the sticker pack\n     * @type {string}\n     */\n    this.name = pack.name;\n\n    /**\n     * The id of the pack's SKU\n     * @type {Snowflake}\n     */\n    this.skuId = pack.sku_id;\n\n    /**\n     * The id of a sticker in the pack which is shown as the pack's icon\n     * @type {?Snowflake}\n     */\n    this.coverStickerId = pack.cover_sticker_id ?? null;\n\n    /**\n     * The description of the sticker pack\n     * @type {string}\n     */\n    this.description = pack.description;\n\n    /**\n     * The id of the sticker pack's banner image\n     * @type {?Snowflake}\n     */\n    this.bannerId = pack.banner_asset_id ?? null;\n  }\n\n  /**\n   * The timestamp the sticker was created at\n   * @type {number}\n   * @readonly\n   */\n  get createdTimestamp() {\n    return DiscordSnowflake.timestampFrom(this.id);\n  }\n\n  /**\n   * The time the sticker was created at\n   * @type {Date}\n   * @readonly\n   */\n  get createdAt() {\n    return new Date(this.createdTimestamp);\n  }\n\n  /**\n   * The sticker which is shown as the pack's icon\n   * @type {?Sticker}\n   * @readonly\n   */\n  get coverSticker() {\n    return this.coverStickerId && this.stickers.get(this.coverStickerId);\n  }\n\n  /**\n   * The URL to this sticker pack's banner.\n   * @param {ImageURLOptions} [options={}] Options for the image URL\n   * @returns {?string}\n   */\n  bannerURL(options = {}) {\n    return this.bannerId && this.client.rest.cdn.stickerPackBanner(this.bannerId, options);\n  }\n}\n\nmodule.exports = StickerPack;\n", "'use strict';\n\nconst { flatten } = require('../util/Util');\n\n/**\n * Represents a Discord voice region for guilds.\n */\nclass VoiceRegion {\n  constructor(data) {\n    /**\n     * The region's id\n     * @type {string}\n     */\n    this.id = data.id;\n\n    /**\n     * Name of the region\n     * @type {string}\n     */\n    this.name = data.name;\n\n    /**\n     * Whether the region is deprecated\n     * @type {boolean}\n     */\n    this.deprecated = data.deprecated;\n\n    /**\n     * Whether the region is optimal\n     * @type {boolean}\n     */\n    this.optimal = data.optimal;\n\n    /**\n     * Whether the region is custom\n     * @type {boolean}\n     */\n    this.custom = data.custom;\n  }\n\n  toJSON() {\n    return flatten(this);\n  }\n}\n\nmodule.exports = VoiceRegion;\n", "'use strict';\n\nconst Base = require('./Base');\n\n/**\n * Represents a WidgetMember.\n * @extends {Base}\n */\nclass WidgetMember extends Base {\n  /**\n   * Activity sent in a {@link WidgetMember}.\n   * @typedef {Object} WidgetActivity\n   * @property {string} name The name of the activity\n   */\n\n  constructor(client, data) {\n    super(client);\n\n    /**\n     * The id of the user. It's an arbitrary number.\n     * @type {string}\n     */\n    this.id = data.id;\n\n    /**\n     * The username of the member.\n     * @type {string}\n     */\n    this.username = data.username;\n\n    /**\n     * The discriminator of the member.\n     * @type {string}\n     */\n    this.discriminator = data.discriminator;\n\n    /**\n     * The avatar of the member.\n     * @type {?string}\n     */\n    this.avatar = data.avatar;\n\n    /**\n     * The status of the member.\n     * @type {PresenceStatus}\n     */\n    this.status = data.status;\n\n    /**\n     * If the member is server deafened\n     * @type {?boolean}\n     */\n    this.deaf = data.deaf ?? null;\n\n    /**\n     * If the member is server muted\n     * @type {?boolean}\n     */\n    this.mute = data.mute ?? null;\n\n    /**\n     * If the member is self deafened\n     * @type {?boolean}\n     */\n    this.selfDeaf = data.self_deaf ?? null;\n\n    /**\n     * If the member is self muted\n     * @type {?boolean}\n     */\n    this.selfMute = data.self_mute ?? null;\n\n    /**\n     * If the member is suppressed\n     * @type {?boolean}\n     */\n    this.suppress = data.suppress ?? null;\n\n    /**\n     * The id of the voice channel the member is in, if any\n     * @type {?Snowflake}\n     */\n    this.channelId = data.channel_id ?? null;\n\n    /**\n     * The avatar URL of the member.\n     * @type {string}\n     */\n    this.avatarURL = data.avatar_url;\n\n    /**\n     * The activity of the member.\n     * @type {?WidgetActivity}\n     */\n    this.activity = data.activity ?? null;\n  }\n}\n\nmodule.exports = WidgetMember;\n", "'use strict';\n\nconst { Collection } = require('@discordjs/collection');\nconst { Routes } = require('discord-api-types/v10');\nconst Base = require('./Base');\nconst WidgetMember = require('./WidgetMember');\n\n/**\n * Represents a Widget.\n * @extends {Base}\n */\nclass Widget extends Base {\n  constructor(client, data) {\n    super(client);\n    this._patch(data);\n  }\n\n  /**\n   * Represents a channel in a Widget\n   * @typedef {Object} WidgetChannel\n   * @property {Snowflake} id Id of the channel\n   * @property {string} name Name of the channel\n   * @property {number} position Position of the channel\n   */\n\n  _patch(data) {\n    /**\n     * The id of the guild.\n     * @type {Snowflake}\n     */\n    this.id = data.id;\n\n    if ('name' in data) {\n      /**\n       * The name of the guild.\n       * @type {string}\n       */\n      this.name = data.name;\n    }\n\n    if ('instant_invite' in data) {\n      /**\n       * The invite of the guild.\n       * @type {?string}\n       */\n      this.instantInvite = data.instant_invite;\n    }\n\n    /**\n     * The list of channels in the guild.\n     * @type {Collection<Snowflake, WidgetChannel>}\n     */\n    this.channels = new Collection();\n    for (const channel of data.channels) {\n      this.channels.set(channel.id, channel);\n    }\n\n    /**\n     * The list of members in the guild.\n     * These strings are just arbitrary numbers, they aren't Snowflakes.\n     * @type {Collection<string, WidgetMember>}\n     */\n    this.members = new Collection();\n    for (const member of data.members) {\n      this.members.set(member.id, new WidgetMember(this.client, member));\n    }\n\n    if ('presence_count' in data) {\n      /**\n       * The number of members online.\n       * @type {number}\n       */\n      this.presenceCount = data.presence_count;\n    }\n  }\n\n  /**\n   * Update the Widget.\n   * @returns {Promise<Widget>}\n   */\n  async fetch() {\n    const data = await this.client.rest.get(Routes.guildWidgetJSON(this.id));\n    this._patch(data);\n    return this;\n  }\n\n  /**\n   * Returns a URL for the PNG widget of the guild.\n   * @param {GuildWidgetStyle} [style] The style for the widget image\n   * @returns {string}\n   */\n  imageURL(style) {\n    return this.client.guilds.widgetImageURL(this.id, style);\n  }\n}\n\nmodule.exports = Widget;\n", "'use strict';\nconst { GatewayIntentBits } = require('discord-api-types/v10');\nconst BitField = require('./BitField');\n\n/**\n * Data structure that makes it easy to calculate intents.\n * @extends {BitField}\n */\nclass IntentsBitField extends BitField {\n  /**\n   * Numeric WebSocket intents\n   * @type {GatewayIntentBits}\n   * @memberof IntentsBitField\n   */\n  static Flags = GatewayIntentBits;\n}\n\n/**\n * @name IntentsBitField\n * @kind constructor\n * @memberof IntentsBitField\n * @param {IntentsResolvable} [bits=0] Bit(s) to read from\n */\n\n/**\n * Data that can be resolved to give a permission number. This can be:\n * * A string (see {@link IntentsBitField.Flags})\n * * An intents flag\n * * An instance of {@link IntentsBitField}\n * * An array of IntentsResolvable\n * @typedef {string|number|IntentsBitField|IntentsResolvable[]} IntentsResolvable\n */\n\nmodule.exports = IntentsBitField;\n", "'use strict';\n\nconst { setInterval, clearInterval } = require('node:timers');\nconst { ThreadChannelTypes, SweeperKeys } = require('./Constants');\nconst Events = require('./Events');\nconst { DiscordjsTypeError, ErrorCodes } = require('../errors');\n\n/**\n * @typedef {Function} GlobalSweepFilter\n * @returns {?Function} Return `null` to skip sweeping, otherwise a function passed to `sweep()`,\n * See {@link https://discord.js.org/docs/packages/collection/stable/Collection:Class#sweep Collection#sweep}\n * for the definition of this function.\n */\n\n/**\n * A container for all cache sweeping intervals and their associated sweep methods.\n */\nclass Sweepers {\n  constructor(client, options) {\n    /**\n     * The client that instantiated this\n     * @type {Client}\n     * @readonly\n     */\n    Object.defineProperty(this, 'client', { value: client });\n\n    /**\n     * The options the sweepers were instantiated with\n     * @type {SweeperOptions}\n     */\n    this.options = options;\n\n    /**\n     * A record of interval timeout that is used to sweep the indicated items, or null if not being swept\n     * @type {Object<SweeperKey, ?Timeout>}\n     */\n    this.intervals = Object.fromEntries(SweeperKeys.map(key => [key, null]));\n\n    for (const key of SweeperKeys) {\n      if (!(key in options)) continue;\n\n      this._validateProperties(key);\n\n      const clonedOptions = { ...this.options[key] };\n\n      // Handle cases that have a \"lifetime\"\n      if (!('filter' in clonedOptions)) {\n        switch (key) {\n          case 'invites':\n            clonedOptions.filter = this.constructor.expiredInviteSweepFilter(clonedOptions.lifetime);\n            break;\n          case 'messages':\n            clonedOptions.filter = this.constructor.outdatedMessageSweepFilter(clonedOptions.lifetime);\n            break;\n          case 'threads':\n            clonedOptions.filter = this.constructor.archivedThreadSweepFilter(clonedOptions.lifetime);\n        }\n      }\n\n      this._initInterval(key, `sweep${key[0].toUpperCase()}${key.slice(1)}`, clonedOptions);\n    }\n  }\n\n  /**\n   * Sweeps all guild and global application commands and removes the ones which are indicated by the filter.\n   * @param {Function} filter The function used to determine which commands will be removed from the caches.\n   * @returns {number} Amount of commands that were removed from the caches\n   */\n  sweepApplicationCommands(filter) {\n    const { guilds, items: guildCommands } = this._sweepGuildDirectProp('commands', filter, { emit: false });\n\n    const globalCommands = this.client.application?.commands.cache.sweep(filter) ?? 0;\n\n    this.client.emit(\n      Events.CacheSweep,\n      `Swept ${globalCommands} global application commands and ${guildCommands} guild commands in ${guilds} guilds.`,\n    );\n    return guildCommands + globalCommands;\n  }\n\n  /**\n   * Sweeps all auto moderation rules and removes the ones which are indicated by the filter.\n   * @param {Function} filter The function used to determine\n   * which auto moderation rules will be removed from the caches\n   * @returns {number} Amount of auto moderation rules that were removed from the caches\n   */\n  sweepAutoModerationRules(filter) {\n    return this._sweepGuildDirectProp('autoModerationRules', filter).items;\n  }\n\n  /**\n   * Sweeps all guild bans and removes the ones which are indicated by the filter.\n   * @param {Function} filter The function used to determine which bans will be removed from the caches.\n   * @returns {number} Amount of bans that were removed from the caches\n   */\n  sweepBans(filter) {\n    return this._sweepGuildDirectProp('bans', filter).items;\n  }\n\n  /**\n   * Sweeps all guild emojis and removes the ones which are indicated by the filter.\n   * @param {Function} filter The function used to determine which emojis will be removed from the caches.\n   * @returns {number} Amount of emojis that were removed from the caches\n   */\n  sweepEmojis(filter) {\n    return this._sweepGuildDirectProp('emojis', filter).items;\n  }\n\n  /**\n   * Sweeps all client application entitlements and removes the ones which are indicated by the filter.\n   * @param {Function} filter The function used to determine which entitlements will be removed from the caches.\n   * @returns {number} Amount of entitlements that were removed from the caches\n   */\n  sweepEntitlements(filter) {\n    if (typeof filter !== 'function') {\n      throw new DiscordjsTypeError(ErrorCodes.InvalidType, 'filter', 'function');\n    }\n\n    const entitlements = this.client.application.entitlements.cache.sweep(filter);\n\n    this.client.emit(Events.CacheSweep, `Swept ${entitlements} entitlements.`);\n\n    return entitlements;\n  }\n\n  /**\n   * Sweeps all guild invites and removes the ones which are indicated by the filter.\n   * @param {Function} filter The function used to determine which invites will be removed from the caches.\n   * @returns {number} Amount of invites that were removed from the caches\n   */\n  sweepInvites(filter) {\n    return this._sweepGuildDirectProp('invites', filter).items;\n  }\n\n  /**\n   * Sweeps all guild members and removes the ones which are indicated by the filter.\n   * <info>It is highly recommended to keep the client guild member cached</info>\n   * @param {Function} filter The function used to determine which guild members will be removed from the caches.\n   * @returns {number} Amount of guild members that were removed from the caches\n   */\n  sweepGuildMembers(filter) {\n    return this._sweepGuildDirectProp('members', filter, { outputName: 'guild members' }).items;\n  }\n\n  /**\n   * Sweeps all text-based channels' messages and removes the ones which are indicated by the filter.\n   * @param {Function} filter The function used to determine which messages will be removed from the caches.\n   * @returns {number} Amount of messages that were removed from the caches\n   * @example\n   * // Remove all messages older than 1800 seconds from the messages cache\n   * const amount = sweepers.sweepMessages(\n   *   Sweepers.filterByLifetime({\n   *     lifetime: 1800,\n   *     getComparisonTimestamp: m => m.editedTimestamp ?? m.createdTimestamp,\n   *   })(),\n   * );\n   * console.log(`Successfully removed ${amount} messages from the cache.`);\n   */\n  sweepMessages(filter) {\n    if (typeof filter !== 'function') {\n      throw new DiscordjsTypeError(ErrorCodes.InvalidType, 'filter', 'function');\n    }\n    let channels = 0;\n    let messages = 0;\n\n    for (const channel of this.client.channels.cache.values()) {\n      if (!channel.isTextBased()) continue;\n\n      channels++;\n      messages += channel.messages.cache.sweep(filter);\n    }\n    this.client.emit(Events.CacheSweep, `Swept ${messages} messages in ${channels} text-based channels.`);\n    return messages;\n  }\n\n  /**\n   * Sweeps all presences and removes the ones which are indicated by the filter.\n   * @param {Function} filter The function used to determine which presences will be removed from the caches.\n   * @returns {number} Amount of presences that were removed from the caches\n   */\n  sweepPresences(filter) {\n    return this._sweepGuildDirectProp('presences', filter).items;\n  }\n\n  /**\n   * Sweeps all message reactions and removes the ones which are indicated by the filter.\n   * @param {Function} filter The function used to determine which reactions will be removed from the caches.\n   * @returns {number} Amount of reactions that were removed from the caches\n   */\n  sweepReactions(filter) {\n    if (typeof filter !== 'function') {\n      throw new DiscordjsTypeError(ErrorCodes.InvalidType, 'filter', 'function');\n    }\n    let channels = 0;\n    let messages = 0;\n    let reactions = 0;\n\n    for (const channel of this.client.channels.cache.values()) {\n      if (!channel.isTextBased()) continue;\n      channels++;\n\n      for (const message of channel.messages.cache.values()) {\n        messages++;\n        reactions += message.reactions.cache.sweep(filter);\n      }\n    }\n    this.client.emit(\n      Events.CacheSweep,\n      `Swept ${reactions} reactions on ${messages} messages in ${channels} text-based channels.`,\n    );\n    return reactions;\n  }\n\n  /**\n   * Sweeps all guild stage instances and removes the ones which are indicated by the filter.\n   * @param {Function} filter The function used to determine which stage instances will be removed from the caches.\n   * @returns {number} Amount of stage instances that were removed from the caches\n   */\n  sweepStageInstances(filter) {\n    return this._sweepGuildDirectProp('stageInstances', filter, { outputName: 'stage instances' }).items;\n  }\n\n  /**\n   * Sweeps all guild stickers and removes the ones which are indicated by the filter.\n   * @param {Function} filter The function used to determine which stickers will be removed from the caches.\n   * @returns {number} Amount of stickers that were removed from the caches\n   */\n  sweepStickers(filter) {\n    return this._sweepGuildDirectProp('stickers', filter).items;\n  }\n\n  /**\n   * Sweeps all thread members and removes the ones which are indicated by the filter.\n   * <info>It is highly recommended to keep the client thread member cached</info>\n   * @param {Function} filter The function used to determine which thread members will be removed from the caches.\n   * @returns {number} Amount of thread members that were removed from the caches\n   */\n  sweepThreadMembers(filter) {\n    if (typeof filter !== 'function') {\n      throw new DiscordjsTypeError(ErrorCodes.InvalidType, 'filter', 'function');\n    }\n\n    let threads = 0;\n    let members = 0;\n    for (const channel of this.client.channels.cache.values()) {\n      if (!ThreadChannelTypes.includes(channel.type)) continue;\n      threads++;\n      members += channel.members.cache.sweep(filter);\n    }\n    this.client.emit(Events.CacheSweep, `Swept ${members} thread members in ${threads} threads.`);\n    return members;\n  }\n\n  /**\n   * Sweeps all threads and removes the ones which are indicated by the filter.\n   * @param {Function} filter The function used to determine which threads will be removed from the caches.\n   * @returns {number} filter Amount of threads that were removed from the caches\n   * @example\n   * // Remove all threads archived greater than 1 day ago from all the channel caches\n   * const amount = sweepers.sweepThreads(\n   *   Sweepers.filterByLifetime({\n   *     getComparisonTimestamp: t => t.archivedTimestamp,\n   *     excludeFromSweep: t => !t.archived,\n   *   })(),\n   * );\n   * console.log(`Successfully removed ${amount} threads from the cache.`);\n   */\n  sweepThreads(filter) {\n    if (typeof filter !== 'function') {\n      throw new DiscordjsTypeError(ErrorCodes.InvalidType, 'filter', 'function');\n    }\n\n    let threads = 0;\n    for (const [key, val] of this.client.channels.cache.entries()) {\n      if (!ThreadChannelTypes.includes(val.type)) continue;\n      if (filter(val, key, this.client.channels.cache)) {\n        threads++;\n        this.client.channels._remove(key);\n      }\n    }\n    this.client.emit(Events.CacheSweep, `Swept ${threads} threads.`);\n    return threads;\n  }\n\n  /**\n   * Sweeps all users and removes the ones which are indicated by the filter.\n   * @param {Function} filter The function used to determine which users will be removed from the caches.\n   * @returns {number} Amount of users that were removed from the caches\n   */\n  sweepUsers(filter) {\n    if (typeof filter !== 'function') {\n      throw new DiscordjsTypeError(ErrorCodes.InvalidType, 'filter', 'function');\n    }\n\n    const users = this.client.users.cache.sweep(filter);\n\n    this.client.emit(Events.CacheSweep, `Swept ${users} users.`);\n\n    return users;\n  }\n\n  /**\n   * Sweeps all guild voice states and removes the ones which are indicated by the filter.\n   * @param {Function} filter The function used to determine which voice states will be removed from the caches.\n   * @returns {number} Amount of voice states that were removed from the caches\n   */\n  sweepVoiceStates(filter) {\n    return this._sweepGuildDirectProp('voiceStates', filter, { outputName: 'voice states' }).items;\n  }\n\n  /**\n   * Cancels all sweeping intervals\n   * @returns {void}\n   */\n  destroy() {\n    for (const key of SweeperKeys) {\n      if (this.intervals[key]) clearInterval(this.intervals[key]);\n    }\n  }\n\n  /**\n   * Options for generating a filter function based on lifetime\n   * @typedef {Object} LifetimeFilterOptions\n   * @property {number} [lifetime=14400] How long, in seconds, an entry should stay in the collection\n   * before it is considered sweepable.\n   * @property {Function} [getComparisonTimestamp=e => e?.createdTimestamp] A function that takes an entry, key,\n   * and the collection and returns a timestamp to compare against in order to determine the lifetime of the entry.\n   * @property {Function} [excludeFromSweep=() => false] A function that takes an entry, key, and the collection\n   * and returns a boolean, `true` when the entry should not be checked for sweepability.\n   */\n\n  /**\n   * Create a sweepFilter function that uses a lifetime to determine sweepability.\n   * @param {LifetimeFilterOptions} [options={}] The options used to generate the filter function\n   * @returns {GlobalSweepFilter}\n   */\n  static filterByLifetime({\n    lifetime = 14400,\n    getComparisonTimestamp = e => e?.createdTimestamp,\n    excludeFromSweep = () => false,\n  } = {}) {\n    if (typeof lifetime !== 'number') {\n      throw new DiscordjsTypeError(ErrorCodes.InvalidType, 'lifetime', 'number');\n    }\n    if (typeof getComparisonTimestamp !== 'function') {\n      throw new DiscordjsTypeError(ErrorCodes.InvalidType, 'getComparisonTimestamp', 'function');\n    }\n    if (typeof excludeFromSweep !== 'function') {\n      throw new DiscordjsTypeError(ErrorCodes.InvalidType, 'excludeFromSweep', 'function');\n    }\n    return () => {\n      if (lifetime <= 0) return null;\n      const lifetimeMs = lifetime * 1_000;\n      const now = Date.now();\n      return (entry, key, coll) => {\n        if (excludeFromSweep(entry, key, coll)) {\n          return false;\n        }\n        const comparisonTimestamp = getComparisonTimestamp(entry, key, coll);\n        if (!comparisonTimestamp || typeof comparisonTimestamp !== 'number') return false;\n        return now - comparisonTimestamp > lifetimeMs;\n      };\n    };\n  }\n\n  /**\n   * Creates a sweep filter that sweeps archived threads\n   * @param {number} [lifetime=14400] How long a thread has to be archived to be valid for sweeping\n   * @returns {GlobalSweepFilter}\n   */\n  static archivedThreadSweepFilter(lifetime = 14400) {\n    return this.filterByLifetime({\n      lifetime,\n      getComparisonTimestamp: e => e.archiveTimestamp,\n      excludeFromSweep: e => !e.archived,\n    });\n  }\n\n  /**\n   * Creates a sweep filter that sweeps expired invites\n   * @param {number} [lifetime=14400] How long ago an invite has to have expired to be valid for sweeping\n   * @returns {GlobalSweepFilter}\n   */\n  static expiredInviteSweepFilter(lifetime = 14400) {\n    return this.filterByLifetime({\n      lifetime,\n      getComparisonTimestamp: i => i.expiresTimestamp,\n    });\n  }\n\n  /**\n   * Creates a sweep filter that sweeps outdated messages (edits taken into account)\n   * @param {number} [lifetime=3600] How long ago a message has to have been sent or edited to be valid for sweeping\n   * @returns {GlobalSweepFilter}\n   */\n  static outdatedMessageSweepFilter(lifetime = 3600) {\n    return this.filterByLifetime({\n      lifetime,\n      getComparisonTimestamp: m => m.editedTimestamp ?? m.createdTimestamp,\n    });\n  }\n\n  /**\n   * Configuration options for emitting the cache sweep client event\n   * @typedef {Object} SweepEventOptions\n   * @property {boolean} [emit=true] Whether to emit the client event in this method\n   * @property {string} [outputName] A name to output in the client event if it should differ from the key\n   * @private\n   */\n\n  /**\n   * Sweep a direct sub property of all guilds\n   * @param {string} key The name of the property\n   * @param {Function} filter Filter function passed to sweep\n   * @param {SweepEventOptions} [eventOptions={}] Options for the Client event emitted here\n   * @returns {Object} Object containing the number of guilds swept and the number of items swept\n   * @private\n   */\n  _sweepGuildDirectProp(key, filter, { emit = true, outputName } = {}) {\n    if (typeof filter !== 'function') {\n      throw new DiscordjsTypeError(ErrorCodes.InvalidType, 'filter', 'function');\n    }\n\n    let guilds = 0;\n    let items = 0;\n\n    for (const guild of this.client.guilds.cache.values()) {\n      // We may be unable to sweep the cache if the guild is unavailable and was never patched\n      if (!guild.available) continue;\n\n      const { cache } = guild[key];\n\n      guilds++;\n      items += cache.sweep(filter);\n    }\n\n    if (emit) {\n      this.client.emit(Events.CacheSweep, `Swept ${items} ${outputName ?? key} in ${guilds} guilds.`);\n    }\n\n    return { guilds, items };\n  }\n\n  /**\n   * Validates a set of properties\n   * @param {string} key Key of the options object to check\n   * @private\n   */\n  _validateProperties(key) {\n    const props = this.options[key];\n    if (typeof props !== 'object') {\n      throw new DiscordjsTypeError(ErrorCodes.InvalidType, `sweepers.${key}`, 'object', true);\n    }\n    if (typeof props.interval !== 'number') {\n      throw new DiscordjsTypeError(ErrorCodes.InvalidType, `sweepers.${key}.interval`, 'number');\n    }\n    // Invites, Messages, and Threads can be provided a lifetime parameter, which we use to generate the filter\n    if (['invites', 'messages', 'threads'].includes(key) && !('filter' in props)) {\n      if (typeof props.lifetime !== 'number') {\n        throw new DiscordjsTypeError(ErrorCodes.InvalidType, `sweepers.${key}.lifetime`, 'number');\n      }\n      return;\n    }\n    if (typeof props.filter !== 'function') {\n      throw new DiscordjsTypeError(ErrorCodes.InvalidType, `sweepers.${key}.filter`, 'function');\n    }\n  }\n\n  /**\n   * Initialize an interval for sweeping\n   * @param {string} intervalKey The name of the property that stores the interval for this sweeper\n   * @param {string} sweepKey The name of the function that sweeps the desired caches\n   * @param {Object} opts Validated options for a sweep\n   * @private\n   */\n  _initInterval(intervalKey, sweepKey, opts) {\n    if (opts.interval <= 0 || opts.interval === Infinity) return;\n    this.intervals[intervalKey] = setInterval(() => {\n      const sweepFn = opts.filter();\n      if (sweepFn === null) return;\n      if (typeof sweepFn !== 'function') throw new DiscordjsTypeError(ErrorCodes.SweepFilterReturn);\n      this[sweepKey](sweepFn);\n    }, opts.interval * 1_000).unref();\n  }\n}\n\nmodule.exports = Sweepers;\n", "'use strict';\n\nconst process = require('node:process');\nconst { Collection } = require('@discordjs/collection');\nconst { makeURLSearchParams } = require('@discordjs/rest');\nconst { OAuth2Scopes, Routes } = require('discord-api-types/v10');\nconst BaseClient = require('./BaseClient');\nconst ActionsManager = require('./actions/ActionsManager');\nconst ClientVoiceManager = require('./voice/ClientVoiceManager');\nconst WebSocketManager = require('./websocket/WebSocketManager');\nconst { DiscordjsError, DiscordjsTypeError, DiscordjsRangeError, ErrorCodes } = require('../errors');\nconst BaseGuildEmojiManager = require('../managers/BaseGuildEmojiManager');\nconst ChannelManager = require('../managers/ChannelManager');\nconst GuildManager = require('../managers/GuildManager');\nconst UserManager = require('../managers/UserManager');\nconst ShardClientUtil = require('../sharding/ShardClientUtil');\nconst ClientPresence = require('../structures/ClientPresence');\nconst GuildPreview = require('../structures/GuildPreview');\nconst GuildTemplate = require('../structures/GuildTemplate');\nconst Invite = require('../structures/Invite');\nconst { Sticker } = require('../structures/Sticker');\nconst StickerPack = require('../structures/StickerPack');\nconst VoiceRegion = require('../structures/VoiceRegion');\nconst Webhook = require('../structures/Webhook');\nconst Widget = require('../structures/Widget');\nconst { resolveInviteCode, resolveGuildTemplateCode } = require('../util/DataResolver');\nconst Events = require('../util/Events');\nconst IntentsBitField = require('../util/IntentsBitField');\nconst Options = require('../util/Options');\nconst PermissionsBitField = require('../util/PermissionsBitField');\nconst Status = require('../util/Status');\nconst Sweepers = require('../util/Sweepers');\n\nlet deprecationEmittedForPremiumStickerPacks = false;\n\n/**\n * The main hub for interacting with the Discord API, and the starting point for any bot.\n * @extends {BaseClient}\n */\nclass Client extends BaseClient {\n  /**\n   * @param {ClientOptions} options Options for the client\n   */\n  constructor(options) {\n    super(options);\n\n    const data = require('node:worker_threads').workerData ?? process.env;\n    const defaults = Options.createDefault();\n\n    if (this.options.shards === defaults.shards) {\n      if ('SHARDS' in data) {\n        this.options.shards = JSON.parse(data.SHARDS);\n      }\n    }\n\n    if (this.options.shardCount === defaults.shardCount) {\n      if ('SHARD_COUNT' in data) {\n        this.options.shardCount = Number(data.SHARD_COUNT);\n      } else if (Array.isArray(this.options.shards)) {\n        this.options.shardCount = this.options.shards.length;\n      }\n    }\n\n    const typeofShards = typeof this.options.shards;\n\n    if (typeofShards === 'undefined' && typeof this.options.shardCount === 'number') {\n      this.options.shards = Array.from({ length: this.options.shardCount }, (_, i) => i);\n    }\n\n    if (typeofShards === 'number') this.options.shards = [this.options.shards];\n\n    if (Array.isArray(this.options.shards)) {\n      this.options.shards = [\n        ...new Set(\n          this.options.shards.filter(item => !isNaN(item) && item >= 0 && item < Infinity && item === (item | 0)),\n        ),\n      ];\n    }\n\n    this._validateOptions();\n\n    /**\n     * The WebSocket manager of the client\n     * @type {WebSocketManager}\n     */\n    this.ws = new WebSocketManager(this);\n\n    /**\n     * The action manager of the client\n     * @type {ActionsManager}\n     * @private\n     */\n    this.actions = new ActionsManager(this);\n\n    /**\n     * The voice manager of the client\n     * @type {ClientVoiceManager}\n     */\n    this.voice = new ClientVoiceManager(this);\n\n    /**\n     * Shard helpers for the client (only if the process was spawned from a {@link ShardingManager})\n     * @type {?ShardClientUtil}\n     */\n    this.shard = process.env.SHARDING_MANAGER\n      ? ShardClientUtil.singleton(this, process.env.SHARDING_MANAGER_MODE)\n      : null;\n\n    /**\n     * All of the {@link User} objects that have been cached at any point, mapped by their ids\n     * @type {UserManager}\n     */\n    this.users = new UserManager(this);\n\n    /**\n     * All of the guilds the client is currently handling, mapped by their ids -\n     * as long as sharding isn't being used, this will be *every* guild the bot is a member of\n     * @type {GuildManager}\n     */\n    this.guilds = new GuildManager(this);\n\n    /**\n     * All of the {@link BaseChannel}s that the client is currently handling, mapped by their ids -\n     * as long as sharding isn't being used, this will be *every* channel in *every* guild the bot\n     * is a member of. Note that DM channels will not be initially cached, and thus not be present\n     * in the Manager without their explicit fetching or use.\n     * @type {ChannelManager}\n     */\n    this.channels = new ChannelManager(this);\n\n    /**\n     * The sweeping functions and their intervals used to periodically sweep caches\n     * @type {Sweepers}\n     */\n    this.sweepers = new Sweepers(this, this.options.sweepers);\n\n    /**\n     * The presence of the Client\n     * @private\n     * @type {ClientPresence}\n     */\n    this.presence = new ClientPresence(this, this.options.presence);\n\n    Object.defineProperty(this, 'token', { writable: true });\n    if (!this.token && 'DISCORD_TOKEN' in process.env) {\n      /**\n       * Authorization token for the logged in bot.\n       * If present, this defaults to `process.env.DISCORD_TOKEN` when instantiating the client\n       * <warn>This should be kept private at all times.</warn>\n       * @type {?string}\n       */\n      this.token = process.env.DISCORD_TOKEN;\n    } else {\n      this.token = null;\n    }\n\n    /**\n     * User that the client is logged in as\n     * @type {?ClientUser}\n     */\n    this.user = null;\n\n    /**\n     * The application of this bot\n     * @type {?ClientApplication}\n     */\n    this.application = null;\n\n    /**\n     * Timestamp of the time the client was last {@link Status.Ready} at\n     * @type {?number}\n     */\n    this.readyTimestamp = null;\n  }\n\n  /**\n   * All custom emojis that the client has access to, mapped by their ids\n   * @type {BaseGuildEmojiManager}\n   * @readonly\n   */\n  get emojis() {\n    const emojis = new BaseGuildEmojiManager(this);\n    for (const guild of this.guilds.cache.values()) {\n      if (guild.available) for (const emoji of guild.emojis.cache.values()) emojis.cache.set(emoji.id, emoji);\n    }\n    return emojis;\n  }\n\n  /**\n   * Time at which the client was last regarded as being in the {@link Status.Ready} state\n   * (each time the client disconnects and successfully reconnects, this will be overwritten)\n   * @type {?Date}\n   * @readonly\n   */\n  get readyAt() {\n    return this.readyTimestamp && new Date(this.readyTimestamp);\n  }\n\n  /**\n   * How long it has been since the client last entered the {@link Status.Ready} state in milliseconds\n   * @type {?number}\n   * @readonly\n   */\n  get uptime() {\n    return this.readyTimestamp && Date.now() - this.readyTimestamp;\n  }\n\n  /**\n   * Logs the client in, establishing a WebSocket connection to Discord.\n   * @param {string} [token=this.token] Token of the account to log in with\n   * @returns {Promise<string>} Token of the account used\n   * @example\n   * client.login('my token');\n   */\n  async login(token = this.token) {\n    if (!token || typeof token !== 'string') throw new DiscordjsError(ErrorCodes.TokenInvalid);\n    this.token = token = token.replace(/^(Bot|Bearer)\\s*/i, '');\n    this.rest.setToken(token);\n    this.emit(Events.Debug, `Provided token: ${this._censoredToken}`);\n\n    if (this.options.presence) {\n      this.options.ws.presence = this.presence._parse(this.options.presence);\n    }\n\n    this.emit(Events.Debug, 'Preparing to connect to the gateway...');\n\n    try {\n      await this.ws.connect();\n      return this.token;\n    } catch (error) {\n      await this.destroy();\n      throw error;\n    }\n  }\n\n  /**\n   * Returns whether the client has logged in, indicative of being able to access\n   * properties such as `user` and `application`.\n   * @returns {boolean}\n   */\n  isReady() {\n    return !this.ws.destroyed && this.ws.status === Status.Ready;\n  }\n\n  /**\n   * Logs out, terminates the connection to Discord, and destroys the client.\n   * @returns {Promise<void>}\n   */\n  async destroy() {\n    super.destroy();\n\n    this.sweepers.destroy();\n    await this.ws.destroy();\n    this.token = null;\n    this.rest.setToken(null);\n  }\n\n  /**\n   * Options used when fetching an invite from Discord.\n   * @typedef {Object} ClientFetchInviteOptions\n   * @property {Snowflake} [guildScheduledEventId] The id of the guild scheduled event to include with\n   * the invite\n   */\n\n  /**\n   * Obtains an invite from Discord.\n   * @param {InviteResolvable} invite Invite code or URL\n   * @param {ClientFetchInviteOptions} [options] Options for fetching the invite\n   * @returns {Promise<Invite>}\n   * @example\n   * client.fetchInvite('https://discord.gg/djs')\n   *   .then(invite => console.log(`Obtained invite with code: ${invite.code}`))\n   *   .catch(console.error);\n   */\n  async fetchInvite(invite, options) {\n    const code = resolveInviteCode(invite);\n    const query = makeURLSearchParams({\n      with_counts: true,\n      with_expiration: true,\n      guild_scheduled_event_id: options?.guildScheduledEventId,\n    });\n    const data = await this.rest.get(Routes.invite(code), { query });\n    return new Invite(this, data);\n  }\n\n  /**\n   * Obtains a template from Discord.\n   * @param {GuildTemplateResolvable} template Template code or URL\n   * @returns {Promise<GuildTemplate>}\n   * @example\n   * client.fetchGuildTemplate('https://discord.new/FKvmczH2HyUf')\n   *   .then(template => console.log(`Obtained template with code: ${template.code}`))\n   *   .catch(console.error);\n   */\n  async fetchGuildTemplate(template) {\n    const code = resolveGuildTemplateCode(template);\n    const data = await this.rest.get(Routes.template(code));\n    return new GuildTemplate(this, data);\n  }\n\n  /**\n   * Obtains a webhook from Discord.\n   * @param {Snowflake} id The webhook's id\n   * @param {string} [token] Token for the webhook\n   * @returns {Promise<Webhook>}\n   * @example\n   * client.fetchWebhook('id', 'token')\n   *   .then(webhook => console.log(`Obtained webhook with name: ${webhook.name}`))\n   *   .catch(console.error);\n   */\n  async fetchWebhook(id, token) {\n    const data = await this.rest.get(Routes.webhook(id, token), { auth: token === undefined });\n    return new Webhook(this, { token, ...data });\n  }\n\n  /**\n   * Obtains the available voice regions from Discord.\n   * @returns {Promise<Collection<string, VoiceRegion>>}\n   * @example\n   * client.fetchVoiceRegions()\n   *   .then(regions => console.log(`Available regions are: ${regions.map(region => region.name).join(', ')}`))\n   *   .catch(console.error);\n   */\n  async fetchVoiceRegions() {\n    const apiRegions = await this.rest.get(Routes.voiceRegions());\n    const regions = new Collection();\n    for (const region of apiRegions) regions.set(region.id, new VoiceRegion(region));\n    return regions;\n  }\n\n  /**\n   * Obtains a sticker from Discord.\n   * @param {Snowflake} id The sticker's id\n   * @returns {Promise<Sticker>}\n   * @example\n   * client.fetchSticker('id')\n   *   .then(sticker => console.log(`Obtained sticker with name: ${sticker.name}`))\n   *   .catch(console.error);\n   */\n  async fetchSticker(id) {\n    const data = await this.rest.get(Routes.sticker(id));\n    return new Sticker(this, data);\n  }\n\n  /**\n   * Options for fetching sticker packs.\n   * @typedef {Object} StickerPackFetchOptions\n   * @property {Snowflake} [packId] The id of the sticker pack to fetch\n   */\n\n  /**\n   * Obtains the list of available sticker packs.\n   * @param {StickerPackFetchOptions} [options={}] Options for fetching sticker packs\n   * @returns {Promise<Collection<Snowflake, StickerPack>|StickerPack>}\n   * A collection of sticker packs, or a single sticker pack if a packId was provided\n   * @example\n   * client.fetchStickerPacks()\n   *   .then(packs => console.log(`Available sticker packs are: ${packs.map(pack => pack.name).join(', ')}`))\n   *   .catch(console.error);\n   * @example\n   * client.fetchStickerPacks({ packId: '751604115435421716' })\n   *   .then(pack => console.log(`Sticker pack name: ${pack.name}`))\n   *   .catch(console.error);\n   */\n  async fetchStickerPacks({ packId } = {}) {\n    if (packId) {\n      const data = await this.rest.get(Routes.stickerPack(packId));\n      return new StickerPack(this, data);\n    }\n\n    const data = await this.rest.get(Routes.stickerPacks());\n    return new Collection(data.sticker_packs.map(stickerPack => [stickerPack.id, new StickerPack(this, stickerPack)]));\n  }\n\n  /**\n   * Obtains the list of available sticker packs.\n   * @returns {Promise<Collection<Snowflake, StickerPack>>}\n   * @deprecated Use {@link Client#fetchStickerPacks} instead.\n   */\n  fetchPremiumStickerPacks() {\n    if (!deprecationEmittedForPremiumStickerPacks) {\n      process.emitWarning(\n        'The Client#fetchPremiumStickerPacks() method is deprecated. Use Client#fetchStickerPacks() instead.',\n        'DeprecationWarning',\n      );\n\n      deprecationEmittedForPremiumStickerPacks = true;\n    }\n\n    return this.fetchStickerPacks();\n  }\n\n  /**\n   * Obtains a guild preview from Discord, available for all guilds the bot is in and all Discoverable guilds.\n   * @param {GuildResolvable} guild The guild to fetch the preview for\n   * @returns {Promise<GuildPreview>}\n   */\n  async fetchGuildPreview(guild) {\n    const id = this.guilds.resolveId(guild);\n    if (!id) throw new DiscordjsTypeError(ErrorCodes.InvalidType, 'guild', 'GuildResolvable');\n    const data = await this.rest.get(Routes.guildPreview(id));\n    return new GuildPreview(this, data);\n  }\n\n  /**\n   * Obtains the widget data of a guild from Discord, available for guilds with the widget enabled.\n   * @param {GuildResolvable} guild The guild to fetch the widget data for\n   * @returns {Promise<Widget>}\n   */\n  async fetchGuildWidget(guild) {\n    const id = this.guilds.resolveId(guild);\n    if (!id) throw new DiscordjsTypeError(ErrorCodes.InvalidType, 'guild', 'GuildResolvable');\n    const data = await this.rest.get(Routes.guildWidgetJSON(id));\n    return new Widget(this, data);\n  }\n\n  /**\n   * Options for {@link Client#generateInvite}.\n   * @typedef {Object} InviteGenerationOptions\n   * @property {OAuth2Scopes[]} scopes Scopes that should be requested\n   * @property {PermissionResolvable} [permissions] Permissions to request\n   * @property {GuildResolvable} [guild] Guild to preselect\n   * @property {boolean} [disableGuildSelect] Whether to disable the guild selection\n   */\n\n  /**\n   * Generates a link that can be used to invite the bot to a guild.\n   * @param {InviteGenerationOptions} [options={}] Options for the invite\n   * @returns {string}\n   * @example\n   * const link = client.generateInvite({\n   *   scopes: [OAuth2Scopes.ApplicationsCommands],\n   * });\n   * console.log(`Generated application invite link: ${link}`);\n   * @example\n   * const link = client.generateInvite({\n   *   permissions: [\n   *     PermissionFlagsBits.SendMessages,\n   *     PermissionFlagsBits.ManageGuild,\n   *     PermissionFlagsBits.MentionEveryone,\n   *   ],\n   *   scopes: [OAuth2Scopes.Bot],\n   * });\n   * console.log(`Generated bot invite link: ${link}`);\n   */\n  generateInvite(options = {}) {\n    if (typeof options !== 'object') throw new DiscordjsTypeError(ErrorCodes.InvalidType, 'options', 'object', true);\n    if (!this.application) throw new DiscordjsError(ErrorCodes.ClientNotReady, 'generate an invite link');\n\n    const { scopes } = options;\n    if (scopes === undefined) {\n      throw new DiscordjsTypeError(ErrorCodes.InvalidMissingScopes);\n    }\n    if (!Array.isArray(scopes)) {\n      throw new DiscordjsTypeError(ErrorCodes.InvalidType, 'scopes', 'Array of Invite Scopes', true);\n    }\n    if (!scopes.some(scope => [OAuth2Scopes.Bot, OAuth2Scopes.ApplicationsCommands].includes(scope))) {\n      throw new DiscordjsTypeError(ErrorCodes.InvalidMissingScopes);\n    }\n    if (!scopes.includes(OAuth2Scopes.Bot) && options.permissions) {\n      throw new DiscordjsTypeError(ErrorCodes.InvalidScopesWithPermissions);\n    }\n    const validScopes = Object.values(OAuth2Scopes);\n    const invalidScope = scopes.find(scope => !validScopes.includes(scope));\n    if (invalidScope) {\n      throw new DiscordjsTypeError(ErrorCodes.InvalidElement, 'Array', 'scopes', invalidScope);\n    }\n\n    const query = makeURLSearchParams({\n      client_id: this.application.id,\n      scope: scopes.join(' '),\n      disable_guild_select: options.disableGuildSelect,\n    });\n\n    if (options.permissions) {\n      const permissions = PermissionsBitField.resolve(options.permissions);\n      if (permissions) query.set('permissions', permissions.toString());\n    }\n\n    if (options.guild) {\n      const guildId = this.guilds.resolveId(options.guild);\n      if (!guildId) throw new DiscordjsTypeError(ErrorCodes.InvalidType, 'options.guild', 'GuildResolvable');\n      query.set('guild_id', guildId);\n    }\n\n    return `${this.options.rest.api}${Routes.oauth2Authorization()}?${query}`;\n  }\n\n  toJSON() {\n    return super.toJSON({\n      actions: false,\n      presence: false,\n    });\n  }\n\n  /**\n   * Partially censored client token for debug logging purposes.\n   * @type {?string}\n   * @readonly\n   * @private\n   */\n  get _censoredToken() {\n    if (!this.token) return null;\n\n    return this.token\n      .split('.')\n      .map((val, i) => (i > 1 ? val.replace(/./g, '*') : val))\n      .join('.');\n  }\n\n  /**\n   * Calls {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/eval} on a script\n   * with the client as `this`.\n   * @param {string} script Script to eval\n   * @returns {*}\n   * @private\n   */\n  _eval(script) {\n    return eval(script);\n  }\n\n  /**\n   * Validates the client options.\n   * @param {ClientOptions} [options=this.options] Options to validate\n   * @private\n   */\n  _validateOptions(options = this.options) {\n    if (options.intents === undefined) {\n      throw new DiscordjsTypeError(ErrorCodes.ClientMissingIntents);\n    } else {\n      options.intents = new IntentsBitField(options.intents).freeze();\n    }\n    if (typeof options.shardCount !== 'number' || isNaN(options.shardCount) || options.shardCount < 1) {\n      throw new DiscordjsTypeError(ErrorCodes.ClientInvalidOption, 'shardCount', 'a number greater than or equal to 1');\n    }\n    if (options.shards && !(options.shards === 'auto' || Array.isArray(options.shards))) {\n      throw new DiscordjsTypeError(ErrorCodes.ClientInvalidOption, 'shards', \"'auto', a number or array of numbers\");\n    }\n    if (options.shards && !options.shards.length) throw new DiscordjsRangeError(ErrorCodes.ClientInvalidProvidedShards);\n    if (typeof options.makeCache !== 'function') {\n      throw new DiscordjsTypeError(ErrorCodes.ClientInvalidOption, 'makeCache', 'a function');\n    }\n    if (typeof options.sweepers !== 'object' || options.sweepers === null) {\n      throw new DiscordjsTypeError(ErrorCodes.ClientInvalidOption, 'sweepers', 'an object');\n    }\n    if (!Array.isArray(options.partials)) {\n      throw new DiscordjsTypeError(ErrorCodes.ClientInvalidOption, 'partials', 'an Array');\n    }\n    if (typeof options.waitGuildTimeout !== 'number' || isNaN(options.waitGuildTimeout)) {\n      throw new DiscordjsTypeError(ErrorCodes.ClientInvalidOption, 'waitGuildTimeout', 'a number');\n    }\n    if (typeof options.failIfNotExists !== 'boolean') {\n      throw new DiscordjsTypeError(ErrorCodes.ClientInvalidOption, 'failIfNotExists', 'a boolean');\n    }\n    if (typeof options.enforceNonce !== 'boolean') {\n      throw new DiscordjsTypeError(ErrorCodes.ClientInvalidOption, 'enforceNonce', 'a boolean');\n    }\n    if (\n      (typeof options.allowedMentions !== 'object' && options.allowedMentions !== undefined) ||\n      options.allowedMentions === null\n    ) {\n      throw new DiscordjsTypeError(ErrorCodes.ClientInvalidOption, 'allowedMentions', 'an object');\n    }\n    if (typeof options.presence !== 'object' || options.presence === null) {\n      throw new DiscordjsTypeError(ErrorCodes.ClientInvalidOption, 'presence', 'an object');\n    }\n    if (typeof options.ws !== 'object' || options.ws === null) {\n      throw new DiscordjsTypeError(ErrorCodes.ClientInvalidOption, 'ws', 'an object');\n    }\n    if (typeof options.rest !== 'object' || options.rest === null) {\n      throw new DiscordjsTypeError(ErrorCodes.ClientInvalidOption, 'rest', 'an object');\n    }\n    if (typeof options.jsonTransformer !== 'function') {\n      throw new DiscordjsTypeError(ErrorCodes.ClientInvalidOption, 'jsonTransformer', 'a function');\n    }\n  }\n}\n\nmodule.exports = Client;\n\n/**\n * @class SnowflakeUtil\n * @classdesc This class is an alias for {@link https://www.npmjs.com/package/@sapphire/snowflake @sapphire/snowflake}'s\n * `DiscordSnowflake` class.\n *\n * Check their documentation\n * {@link https://www.sapphirejs.dev/docs/Documentation/api-utilities/classes/sapphire_snowflake.Snowflake here}\n * ({@link https://www.sapphirejs.dev/docs/Guide/utilities/snowflake guide})\n * to see what you can do.\n * @hideconstructor\n */\n\n/**\n * A {@link https://developer.twitter.com/en/docs/twitter-ids Twitter snowflake},\n * except the epoch is 2015-01-01T00:00:00.000Z.\n *\n * If we have a snowflake '266241948824764416' we can represent it as binary:\n * ```\n * 64                                          22     17     12          0\n *  000000111011000111100001101001000101000000  00001  00000  000000000000\n *  number of milliseconds since Discord epoch  worker  pid    increment\n * ```\n * @typedef {string} Snowflake\n */\n\n/**\n * Emitted for general debugging information.\n * @event Client#debug\n * @param {string} info The debug information\n */\n\n/**\n * Emitted for general warnings.\n * @event Client#warn\n * @param {string} info The warning\n */\n\n/**\n * @external Collection\n * @see {@link https://discord.js.org/docs/packages/collection/stable/Collection:Class}\n */\n\n/**\n * @external ImageURLOptions\n * @see {@link https://discord.js.org/docs/packages/rest/stable/ImageURLOptions:Interface}\n */\n\n/**\n * @external BaseImageURLOptions\n * @see {@link https://discord.js.org/docs/packages/rest/stable/BaseImageURLOptions:Interface}\n */\n", "'use strict';\n\n/**\n * @typedef {Object} ShardEvents\n * @property {string} Death death\n * @property {string} Disconnect disconnect\n * @property {string} Error error\n * @property {string} Message message\n * @property {string} Ready ready\n * @property {string} Reconnecting reconnecting\n * @property {string} Resume resume\n * @property {string} Spawn spawn\n */\n\n// JSDoc for IntelliSense purposes\n/**\n * @type {ShardEvents}\n * @ignore\n */\nmodule.exports = {\n  Death: 'death',\n  Disconnect: 'disconnect',\n  Error: 'error',\n  Message: 'message',\n  Ready: 'ready',\n  Reconnecting: 'reconnecting',\n  Resume: 'resume',\n  Spawn: 'spawn',\n};\n", "'use strict';\n\nconst EventEmitter = require('node:events');\nconst path = require('node:path');\nconst process = require('node:process');\nconst { setTimeout, clearTimeout } = require('node:timers');\nconst { setTimeout: sleep } = require('node:timers/promises');\nconst { SHARE_ENV } = require('node:worker_threads');\nconst { DiscordjsError, ErrorCodes } = require('../errors');\nconst ShardEvents = require('../util/ShardEvents');\nconst { makeError, makePlainError } = require('../util/Util');\n\nlet childProcess = null;\nlet Worker = null;\n\n/**\n * A self-contained shard created by the {@link ShardingManager}. Each one has a {@link ChildProcess} that contains\n * an instance of the bot and its {@link Client}. When its child process/worker exits for any reason, the shard will\n * spawn a new one to replace it as necessary.\n * @extends {EventEmitter}\n */\nclass Shard extends EventEmitter {\n  constructor(manager, id) {\n    super();\n\n    switch (manager.mode) {\n      case 'process':\n        childProcess = require('node:child_process');\n        break;\n      case 'worker':\n        Worker = require('node:worker_threads').Worker;\n        break;\n    }\n\n    /**\n     * Manager that created the shard\n     * @type {ShardingManager}\n     */\n    this.manager = manager;\n\n    /**\n     * The shard's id in the manager\n     * @type {number}\n     */\n    this.id = id;\n\n    /**\n     * Whether to pass silent flag to the shard's process (only when {@link ShardingManager#mode} is `process`)\n     * @type {boolean}\n     */\n    this.silent = manager.silent;\n\n    /**\n     * Arguments for the shard's process/worker\n     * @type {string[]}\n     */\n    this.args = manager.shardArgs ?? [];\n\n    /**\n     * Arguments for the shard's process/worker executable\n     * @type {string[]}\n     */\n    this.execArgv = manager.execArgv;\n\n    /**\n     * Environment variables for the shard's process, or workerData for the shard's worker\n     * @type {Object}\n     */\n    this.env = Object.assign({}, process.env, {\n      SHARDING_MANAGER: true,\n      SHARDS: this.id,\n      SHARD_COUNT: this.manager.totalShards,\n      DISCORD_TOKEN: this.manager.token,\n    });\n\n    /**\n     * Whether the shard's {@link Client} is ready\n     * @type {boolean}\n     */\n    this.ready = false;\n\n    /**\n     * Process of the shard (if {@link ShardingManager#mode} is `process`)\n     * @type {?ChildProcess}\n     */\n    this.process = null;\n\n    /**\n     * Worker of the shard (if {@link ShardingManager#mode} is `worker`)\n     * @type {?Worker}\n     */\n    this.worker = null;\n\n    /**\n     * Ongoing promises for calls to {@link Shard#eval}, mapped by the `script` they were called with\n     * @type {Map<string, Promise>}\n     * @private\n     */\n    this._evals = new Map();\n\n    /**\n     * Ongoing promises for calls to {@link Shard#fetchClientValue}, mapped by the `prop` they were called with\n     * @type {Map<string, Promise>}\n     * @private\n     */\n    this._fetches = new Map();\n\n    /**\n     * Listener function for the {@link ChildProcess}' `exit` event\n     * @type {Function}\n     * @private\n     */\n    this._exitListener = null;\n  }\n\n  /**\n   * Forks a child process or creates a worker thread for the shard.\n   * <warn>You should not need to call this manually.</warn>\n   * @param {number} [timeout=30000] The amount in milliseconds to wait until the {@link Client} has become ready\n   * before resolving (`-1` or `Infinity` for no wait)\n   * @returns {Promise<ChildProcess>}\n   */\n  spawn(timeout = 30_000) {\n    if (this.process) throw new DiscordjsError(ErrorCodes.ShardingProcessExists, this.id);\n    if (this.worker) throw new DiscordjsError(ErrorCodes.ShardingWorkerExists, this.id);\n\n    this._exitListener = this._handleExit.bind(this, undefined, timeout);\n\n    switch (this.manager.mode) {\n      case 'process':\n        this.process = childProcess\n          .fork(path.resolve(this.manager.file), this.args, {\n            env: this.env,\n            execArgv: this.execArgv,\n            silent: this.silent,\n          })\n          .on('message', this._handleMessage.bind(this))\n          .on('exit', this._exitListener);\n        break;\n      case 'worker':\n        this.worker = new Worker(path.resolve(this.manager.file), {\n          workerData: this.env,\n          env: SHARE_ENV,\n          execArgv: this.execArgv,\n          argv: this.args,\n        })\n          .on('message', this._handleMessage.bind(this))\n          .on('exit', this._exitListener);\n        break;\n    }\n\n    this._evals.clear();\n    this._fetches.clear();\n\n    const child = this.process ?? this.worker;\n\n    /**\n     * Emitted upon the creation of the shard's child process/worker.\n     * @event Shard#spawn\n     * @param {ChildProcess|Worker} process Child process/worker that was created\n     */\n    this.emit(ShardEvents.Spawn, child);\n\n    if (timeout === -1 || timeout === Infinity) return Promise.resolve(child);\n    return new Promise((resolve, reject) => {\n      const cleanup = () => {\n        clearTimeout(spawnTimeoutTimer);\n        this.off('ready', onReady);\n        this.off('disconnect', onDisconnect);\n        this.off('death', onDeath);\n      };\n\n      const onReady = () => {\n        cleanup();\n        resolve(child);\n      };\n\n      const onDisconnect = () => {\n        cleanup();\n        reject(new DiscordjsError(ErrorCodes.ShardingReadyDisconnected, this.id));\n      };\n\n      const onDeath = () => {\n        cleanup();\n        reject(new DiscordjsError(ErrorCodes.ShardingReadyDied, this.id));\n      };\n\n      const onTimeout = () => {\n        cleanup();\n        reject(new DiscordjsError(ErrorCodes.ShardingReadyTimeout, this.id));\n      };\n\n      const spawnTimeoutTimer = setTimeout(onTimeout, timeout);\n      this.once('ready', onReady);\n      this.once('disconnect', onDisconnect);\n      this.once('death', onDeath);\n    });\n  }\n\n  /**\n   * Immediately kills the shard's process/worker and does not restart it.\n   */\n  kill() {\n    if (this.process) {\n      this.process.removeListener('exit', this._exitListener);\n      this.process.kill();\n    } else {\n      this.worker.removeListener('exit', this._exitListener);\n      this.worker.terminate();\n    }\n\n    this._handleExit(false);\n  }\n\n  /**\n   * Options used to respawn a shard.\n   * @typedef {Object} ShardRespawnOptions\n   * @property {number} [delay=500] How long to wait between killing the process/worker and\n   * restarting it (in milliseconds)\n   * @property {number} [timeout=30000] The amount in milliseconds to wait until the {@link Client}\n   * has become ready before resolving (`-1` or `Infinity` for no wait)\n   */\n\n  /**\n   * Kills and restarts the shard's process/worker.\n   * @param {ShardRespawnOptions} [options] Options for respawning the shard\n   * @returns {Promise<ChildProcess>}\n   */\n  async respawn({ delay = 500, timeout = 30_000 } = {}) {\n    this.kill();\n    if (delay > 0) await sleep(delay);\n    return this.spawn(timeout);\n  }\n\n  /**\n   * Sends a message to the shard's process/worker.\n   * @param {*} message Message to send to the shard\n   * @returns {Promise<Shard>}\n   */\n  send(message) {\n    return new Promise((resolve, reject) => {\n      if (this.process) {\n        this.process.send(message, err => {\n          if (err) reject(err);\n          else resolve(this);\n        });\n      } else {\n        this.worker.postMessage(message);\n        resolve(this);\n      }\n    });\n  }\n\n  /**\n   * Fetches a client property value of the shard.\n   * @param {string} prop Name of the client property to get, using periods for nesting\n   * @returns {Promise<*>}\n   * @example\n   * shard.fetchClientValue('guilds.cache.size')\n   *   .then(count => console.log(`${count} guilds in shard ${shard.id}`))\n   *   .catch(console.error);\n   */\n  fetchClientValue(prop) {\n    // Shard is dead (maybe respawning), don't cache anything and error immediately\n    if (!this.process && !this.worker) {\n      return Promise.reject(new DiscordjsError(ErrorCodes.ShardingNoChildExists, this.id));\n    }\n\n    // Cached promise from previous call\n    if (this._fetches.has(prop)) return this._fetches.get(prop);\n\n    const promise = new Promise((resolve, reject) => {\n      const child = this.process ?? this.worker;\n\n      const listener = message => {\n        if (message?._fetchProp !== prop) return;\n        child.removeListener('message', listener);\n        this.decrementMaxListeners(child);\n        this._fetches.delete(prop);\n        if (!message._error) resolve(message._result);\n        else reject(makeError(message._error));\n      };\n\n      this.incrementMaxListeners(child);\n      child.on('message', listener);\n\n      this.send({ _fetchProp: prop }).catch(err => {\n        child.removeListener('message', listener);\n        this.decrementMaxListeners(child);\n        this._fetches.delete(prop);\n        reject(err);\n      });\n    });\n\n    this._fetches.set(prop, promise);\n    return promise;\n  }\n\n  /**\n   * Evaluates a script or function on the shard, in the context of the {@link Client}.\n   * @param {string|Function} script JavaScript to run on the shard\n   * @param {*} [context] The context for the eval\n   * @returns {Promise<*>} Result of the script execution\n   */\n  eval(script, context) {\n    // Stringify the script if it's a Function\n    const _eval = typeof script === 'function' ? `(${script})(this, ${JSON.stringify(context)})` : script;\n\n    // Shard is dead (maybe respawning), don't cache anything and error immediately\n    if (!this.process && !this.worker) {\n      return Promise.reject(new DiscordjsError(ErrorCodes.ShardingNoChildExists, this.id));\n    }\n\n    // Cached promise from previous call\n    if (this._evals.has(_eval)) return this._evals.get(_eval);\n\n    const promise = new Promise((resolve, reject) => {\n      const child = this.process ?? this.worker;\n\n      const listener = message => {\n        if (message?._eval !== _eval) return;\n        child.removeListener('message', listener);\n        this.decrementMaxListeners(child);\n        this._evals.delete(_eval);\n        if (!message._error) resolve(message._result);\n        else reject(makeError(message._error));\n      };\n\n      this.incrementMaxListeners(child);\n      child.on('message', listener);\n\n      this.send({ _eval }).catch(err => {\n        child.removeListener('message', listener);\n        this.decrementMaxListeners(child);\n        this._evals.delete(_eval);\n        reject(err);\n      });\n    });\n\n    this._evals.set(_eval, promise);\n    return promise;\n  }\n\n  /**\n   * Handles a message received from the child process/worker.\n   * @param {*} message Message received\n   * @private\n   */\n  _handleMessage(message) {\n    if (message) {\n      // Shard is ready\n      if (message._ready) {\n        this.ready = true;\n        /**\n         * Emitted upon the shard's {@link Client#event:shardReady} event.\n         * @event Shard#ready\n         */\n        this.emit(ShardEvents.Ready);\n        return;\n      }\n\n      // Shard has disconnected\n      if (message._disconnect) {\n        this.ready = false;\n        /**\n         * Emitted upon the shard's {@link Client#event:shardDisconnect} event.\n         * @event Shard#disconnect\n         */\n        this.emit(ShardEvents.Disconnect);\n        return;\n      }\n\n      // Shard is attempting to reconnect\n      if (message._reconnecting) {\n        this.ready = false;\n        /**\n         * Emitted upon the shard's {@link Client#event:shardReconnecting} event.\n         * @event Shard#reconnecting\n         */\n        this.emit(ShardEvents.Reconnecting);\n        return;\n      }\n\n      // Shard has resumed\n      if (message._resume) {\n        this.ready = true;\n        /**\n         * Emitted upon the shard's {@link Client#event:shardResume} event.\n         * @event Shard#resume\n         */\n        this.emit(ShardEvents.Resume);\n        return;\n      }\n\n      // Shard is requesting a property fetch\n      if (message._sFetchProp) {\n        const resp = { _sFetchProp: message._sFetchProp, _sFetchPropShard: message._sFetchPropShard };\n        this.manager.fetchClientValues(message._sFetchProp, message._sFetchPropShard).then(\n          results => this.send({ ...resp, _result: results }),\n          err => this.send({ ...resp, _error: makePlainError(err) }),\n        );\n        return;\n      }\n\n      // Shard is requesting an eval broadcast\n      if (message._sEval) {\n        const resp = { _sEval: message._sEval, _sEvalShard: message._sEvalShard };\n        this.manager._performOnShards('eval', [message._sEval], message._sEvalShard).then(\n          results => this.send({ ...resp, _result: results }),\n          err => this.send({ ...resp, _error: makePlainError(err) }),\n        );\n        return;\n      }\n\n      // Shard is requesting a respawn of all shards\n      if (message._sRespawnAll) {\n        const { shardDelay, respawnDelay, timeout } = message._sRespawnAll;\n        this.manager.respawnAll({ shardDelay, respawnDelay, timeout }).catch(() => {\n          // Do nothing\n        });\n        return;\n      }\n    }\n\n    /**\n     * Emitted upon receiving a message from the child process/worker.\n     * @event Shard#message\n     * @param {*} message Message that was received\n     */\n    this.emit(ShardEvents.Message, message);\n  }\n\n  /**\n   * Handles the shard's process/worker exiting.\n   * @param {boolean} [respawn=this.manager.respawn] Whether to spawn the shard again\n   * @param {number} [timeout] The amount in milliseconds to wait until the {@link Client}\n   * has become ready (`-1` or `Infinity` for no wait)\n   * @private\n   */\n  _handleExit(respawn = this.manager.respawn, timeout) {\n    /**\n     * Emitted upon the shard's child process/worker exiting.\n     * @event Shard#death\n     * @param {ChildProcess|Worker} process Child process/worker that exited\n     */\n    this.emit(ShardEvents.Death, this.process ?? this.worker);\n\n    this.ready = false;\n    this.process = null;\n    this.worker = null;\n    this._evals.clear();\n    this._fetches.clear();\n\n    if (respawn) this.spawn(timeout).catch(err => this.emit(ShardEvents.Error, err));\n  }\n\n  /**\n   * Increments max listeners by one for a given emitter, if they are not zero.\n   * @param {EventEmitter|process} emitter The emitter that emits the events.\n   * @private\n   */\n  incrementMaxListeners(emitter) {\n    const maxListeners = emitter.getMaxListeners();\n    if (maxListeners !== 0) {\n      emitter.setMaxListeners(maxListeners + 1);\n    }\n  }\n\n  /**\n   * Decrements max listeners by one for a given emitter, if they are not zero.\n   * @param {EventEmitter|process} emitter The emitter that emits the events.\n   * @private\n   */\n  decrementMaxListeners(emitter) {\n    const maxListeners = emitter.getMaxListeners();\n    if (maxListeners !== 0) {\n      emitter.setMaxListeners(maxListeners - 1);\n    }\n  }\n}\n\nmodule.exports = Shard;\n", "'use strict';\n\nconst EventEmitter = require('node:events');\nconst fs = require('node:fs');\nconst path = require('node:path');\nconst process = require('node:process');\nconst { setTimeout: sleep } = require('node:timers/promises');\nconst { Collection } = require('@discordjs/collection');\nconst Shard = require('./Shard');\nconst { DiscordjsError, DiscordjsTypeError, DiscordjsRangeError, ErrorCodes } = require('../errors');\nconst { fetchRecommendedShardCount } = require('../util/Util');\n\n/**\n * This is a utility class that makes multi-process sharding of a bot an easy and painless experience.\n * It works by spawning a self-contained {@link ChildProcess} or {@link Worker} for each individual shard, each\n * containing its own instance of your bot's {@link Client}. They all have a line of communication with the master\n * process, and there are several useful methods that utilise it in order to simplify tasks that are normally difficult\n * with sharding. It can spawn a specific number of shards or the amount that Discord suggests for the bot, and takes a\n * path to your main bot script to launch for each one.\n * @extends {EventEmitter}\n */\nclass ShardingManager extends EventEmitter {\n  /**\n   * The mode to spawn shards with for a {@link ShardingManager}. Can be either one of:\n   * * 'process' to use child processes\n   * * 'worker' to use {@link Worker} threads\n   * @typedef {string} ShardingManagerMode\n   */\n\n  /**\n   * The options to spawn shards with for a {@link ShardingManager}.\n   * @typedef {Object} ShardingManagerOptions\n   * @property {string|number} [totalShards='auto'] Number of total shards of all shard managers or \"auto\"\n   * @property {string|number[]} [shardList='auto'] List of shards to spawn or \"auto\"\n   * @property {ShardingManagerMode} [mode='process'] Which mode to use for shards\n   * @property {boolean} [respawn=true] Whether shards should automatically respawn upon exiting\n   * @property {boolean} [silent=false] Whether to pass the silent flag to child process\n   * (only available when mode is set to 'process')\n   * @property {string[]} [shardArgs=[]] Arguments to pass to the shard script when spawning\n   * @property {string[]} [execArgv=[]] Arguments to pass to the shard script executable when spawning\n   * @property {string} [token] Token to use for automatic shard count and passing to shards\n   */\n\n  /**\n   * @param {string} file Path to your shard script file\n   * @param {ShardingManagerOptions} [options] Options for the sharding manager\n   */\n  constructor(file, options) {\n    super();\n    const _options = {\n      totalShards: 'auto',\n      mode: 'process',\n      respawn: true,\n      silent: false,\n      shardArgs: [],\n      execArgv: [],\n      token: process.env.DISCORD_TOKEN,\n      ...options,\n    };\n\n    /**\n     * Path to the shard script file\n     * @type {string}\n     */\n    this.file = file;\n    if (!file) throw new DiscordjsError(ErrorCodes.ClientInvalidOption, 'File', 'specified.');\n    if (!path.isAbsolute(file)) this.file = path.resolve(process.cwd(), file);\n    const stats = fs.statSync(this.file);\n    if (!stats.isFile()) throw new DiscordjsError(ErrorCodes.ClientInvalidOption, 'File', 'a file');\n\n    /**\n     * List of shards this sharding manager spawns\n     * @type {string|number[]}\n     */\n    this.shardList = _options.shardList ?? 'auto';\n    if (this.shardList !== 'auto') {\n      if (!Array.isArray(this.shardList)) {\n        throw new DiscordjsTypeError(ErrorCodes.ClientInvalidOption, 'shardList', 'an array.');\n      }\n      this.shardList = [...new Set(this.shardList)];\n      if (this.shardList.length < 1) {\n        throw new DiscordjsRangeError(ErrorCodes.ClientInvalidOption, 'shardList', 'at least 1 id.');\n      }\n      if (\n        this.shardList.some(\n          shardId => typeof shardId !== 'number' || isNaN(shardId) || !Number.isInteger(shardId) || shardId < 0,\n        )\n      ) {\n        throw new DiscordjsTypeError(ErrorCodes.ClientInvalidOption, 'shardList', 'an array of positive integers.');\n      }\n    }\n\n    /**\n     * Amount of shards that all sharding managers spawn in total\n     * @type {number}\n     */\n    this.totalShards = _options.totalShards || 'auto';\n    if (this.totalShards !== 'auto') {\n      if (typeof this.totalShards !== 'number' || isNaN(this.totalShards)) {\n        throw new DiscordjsTypeError(ErrorCodes.ClientInvalidOption, 'Amount of shards', 'a number.');\n      }\n      if (this.totalShards < 1) {\n        throw new DiscordjsRangeError(ErrorCodes.ClientInvalidOption, 'Amount of shards', 'at least 1.');\n      }\n      if (!Number.isInteger(this.totalShards)) {\n        throw new DiscordjsRangeError(ErrorCodes.ClientInvalidOption, 'Amount of shards', 'an integer.');\n      }\n    }\n\n    /**\n     * Mode for shards to spawn with\n     * @type {ShardingManagerMode}\n     */\n    this.mode = _options.mode;\n    if (this.mode !== 'process' && this.mode !== 'worker') {\n      throw new DiscordjsRangeError(ErrorCodes.ClientInvalidOption, 'Sharding mode', '\"process\" or \"worker\"');\n    }\n\n    /**\n     * Whether shards should automatically respawn upon exiting\n     * @type {boolean}\n     */\n    this.respawn = _options.respawn;\n\n    /**\n     * Whether to pass the silent flag to child process (only when {@link ShardingManager#mode} is `process`)\n     * @type {boolean}\n     */\n    this.silent = _options.silent;\n\n    /**\n     * An array of arguments to pass to shards (only when {@link ShardingManager#mode} is `process`)\n     * @type {string[]}\n     */\n    this.shardArgs = _options.shardArgs;\n\n    /**\n     * An array of arguments to pass to the executable (only when {@link ShardingManager#mode} is `process`)\n     * @type {string[]}\n     */\n    this.execArgv = _options.execArgv;\n\n    /**\n     * Token to use for obtaining the automatic shard count, and passing to shards\n     * @type {?string}\n     */\n    this.token = _options.token?.replace(/^Bot\\s*/i, '') ?? null;\n\n    /**\n     * A collection of shards that this manager has spawned\n     * @type {Collection<number, Shard>}\n     */\n    this.shards = new Collection();\n\n    process.env.SHARDING_MANAGER = true;\n    process.env.SHARDING_MANAGER_MODE = this.mode;\n    process.env.DISCORD_TOKEN = this.token;\n  }\n\n  /**\n   * Creates a single shard.\n   * <warn>Using this method is usually not necessary if you use the spawn method.</warn>\n   * @param {number} [id=this.shards.size] Id of the shard to create\n   * <info>This is usually not necessary to manually specify.</info>\n   * @returns {Shard} Note that the created shard needs to be explicitly spawned using its spawn method.\n   */\n  createShard(id = this.shards.size) {\n    const shard = new Shard(this, id);\n    this.shards.set(id, shard);\n    /**\n     * Emitted upon creating a shard.\n     * @event ShardingManager#shardCreate\n     * @param {Shard} shard Shard that was created\n     */\n    this.emit('shardCreate', shard);\n    return shard;\n  }\n\n  /**\n   * Options used to spawn multiple shards.\n   * @typedef {Object} MultipleShardSpawnOptions\n   * @property {number|string} [amount=this.totalShards] Number of shards to spawn\n   * @property {number} [delay=5500] How long to wait in between spawning each shard (in milliseconds)\n   * @property {number} [timeout=30000] The amount in milliseconds to wait until the {@link Client} has become ready\n   */\n\n  /**\n   * Spawns multiple shards.\n   * @param {MultipleShardSpawnOptions} [options] Options for spawning shards\n   * @returns {Promise<Collection<number, Shard>>}\n   */\n  async spawn({ amount = this.totalShards, delay = 5500, timeout = 30_000 } = {}) {\n    // Obtain/verify the number of shards to spawn\n    if (amount === 'auto') {\n      amount = await fetchRecommendedShardCount(this.token);\n    } else {\n      if (typeof amount !== 'number' || isNaN(amount)) {\n        throw new DiscordjsTypeError(ErrorCodes.ClientInvalidOption, 'Amount of shards', 'a number.');\n      }\n      if (amount < 1) throw new DiscordjsRangeError(ErrorCodes.ClientInvalidOption, 'Amount of shards', 'at least 1.');\n      if (!Number.isInteger(amount)) {\n        throw new DiscordjsTypeError(ErrorCodes.ClientInvalidOption, 'Amount of shards', 'an integer.');\n      }\n    }\n\n    // Make sure this many shards haven't already been spawned\n    if (this.shards.size >= amount) throw new DiscordjsError(ErrorCodes.ShardingAlreadySpawned, this.shards.size);\n    if (this.shardList === 'auto' || this.totalShards === 'auto' || this.totalShards !== amount) {\n      this.shardList = [...Array(amount).keys()];\n    }\n    if (this.totalShards === 'auto' || this.totalShards !== amount) {\n      this.totalShards = amount;\n    }\n\n    if (this.shardList.some(shardId => shardId >= amount)) {\n      throw new DiscordjsRangeError(\n        ErrorCodes.ClientInvalidOption,\n        'Amount of shards',\n        'bigger than the highest shardId in the shardList option.',\n      );\n    }\n\n    // Spawn the shards\n    for (const shardId of this.shardList) {\n      const promises = [];\n      const shard = this.createShard(shardId);\n      promises.push(shard.spawn(timeout));\n      if (delay > 0 && this.shards.size !== this.shardList.length) promises.push(sleep(delay));\n      await Promise.all(promises); // eslint-disable-line no-await-in-loop\n    }\n\n    return this.shards;\n  }\n\n  /**\n   * Sends a message to all shards.\n   * @param {*} message Message to be sent to the shards\n   * @returns {Promise<Shard[]>}\n   */\n  broadcast(message) {\n    const promises = [];\n    for (const shard of this.shards.values()) promises.push(shard.send(message));\n    return Promise.all(promises);\n  }\n\n  /**\n   * Options for {@link ShardingManager#broadcastEval} and {@link ShardClientUtil#broadcastEval}.\n   * @typedef {Object} BroadcastEvalOptions\n   * @property {number} [shard] Shard to run script on, all if undefined\n   * @property {*} [context] The JSON-serializable values to call the script with\n   */\n\n  /**\n   * Evaluates a script on all shards, or a given shard, in the context of the {@link Client}s.\n   * @param {Function} script JavaScript to run on each shard\n   * @param {BroadcastEvalOptions} [options={}] The options for the broadcast\n   * @returns {Promise<*|Array<*>>} Results of the script execution\n   */\n  broadcastEval(script, options = {}) {\n    if (typeof script !== 'function') {\n      return Promise.reject(new DiscordjsTypeError(ErrorCodes.ShardingInvalidEvalBroadcast));\n    }\n    return this._performOnShards('eval', [`(${script})(this, ${JSON.stringify(options.context)})`], options.shard);\n  }\n\n  /**\n   * Fetches a client property value of each shard, or a given shard.\n   * @param {string} prop Name of the client property to get, using periods for nesting\n   * @param {number} [shard] Shard to fetch property from, all if undefined\n   * @returns {Promise<*|Array<*>>}\n   * @example\n   * manager.fetchClientValues('guilds.cache.size')\n   *   .then(results => console.log(`${results.reduce((prev, val) => prev + val, 0)} total guilds`))\n   *   .catch(console.error);\n   */\n  fetchClientValues(prop, shard) {\n    return this._performOnShards('fetchClientValue', [prop], shard);\n  }\n\n  /**\n   * Runs a method with given arguments on all shards, or a given shard.\n   * @param {string} method Method name to run on each shard\n   * @param {Array<*>} args Arguments to pass through to the method call\n   * @param {number} [shard] Shard to run on, all if undefined\n   * @returns {Promise<*|Array<*>>} Results of the method execution\n   * @private\n   */\n  _performOnShards(method, args, shard) {\n    if (this.shards.size === 0) return Promise.reject(new DiscordjsError(ErrorCodes.ShardingNoShards));\n\n    if (typeof shard === 'number') {\n      if (this.shards.has(shard)) return this.shards.get(shard)[method](...args);\n      return Promise.reject(new DiscordjsError(ErrorCodes.ShardingShardNotFound, shard));\n    }\n\n    if (this.shards.size !== this.shardList.length) {\n      return Promise.reject(new DiscordjsError(ErrorCodes.ShardingInProcess));\n    }\n\n    const promises = [];\n    for (const sh of this.shards.values()) promises.push(sh[method](...args));\n    return Promise.all(promises);\n  }\n\n  /**\n   * Options used to respawn all shards.\n   * @typedef {Object} MultipleShardRespawnOptions\n   * @property {number} [shardDelay=5000] How long to wait between shards (in milliseconds)\n   * @property {number} [respawnDelay=500] How long to wait between killing a shard's process and restarting it\n   * (in milliseconds)\n   * @property {number} [timeout=30000] The amount in milliseconds to wait for a shard to become ready before\n   * continuing to another (`-1` or `Infinity` for no wait)\n   */\n\n  /**\n   * Kills all running shards and respawns them.\n   * @param {MultipleShardRespawnOptions} [options] Options for respawning shards\n   * @returns {Promise<Collection<number, Shard>>}\n   */\n  async respawnAll({ shardDelay = 5_000, respawnDelay = 500, timeout = 30_000 } = {}) {\n    let s = 0;\n    for (const shard of this.shards.values()) {\n      const promises = [shard.respawn({ delay: respawnDelay, timeout })];\n      if (++s < this.shards.size && shardDelay > 0) promises.push(sleep(shardDelay));\n      await Promise.all(promises); // eslint-disable-line no-await-in-loop\n    }\n    return this.shards;\n  }\n}\n\nmodule.exports = ShardingManager;\n", "'use strict';\n\nconst { deprecate } = require('node:util');\nconst {\n  blockQuote,\n  bold,\n  channelMention,\n  codeBlock,\n  formatEmoji,\n  hideLinkEmbed,\n  hyperlink,\n  inlineCode,\n  italic,\n  quote,\n  roleMention,\n  spoiler,\n  strikethrough,\n  time,\n  TimestampStyles,\n  underscore,\n  userMention,\n} = require('@discordjs/formatters');\n\n/**\n * Formats an application command name and id into an application command mention.\n * @method chatInputApplicationCommandMention\n * @param {string} commandName The name of the application command\n * @param {string|Snowflake} subcommandGroupOrSubOrId\n * The subcommand group name, subcommand name, or application command id\n * @param {string|Snowflake} [subcommandNameOrId] The subcommand name or application command id\n * @param {string} [commandId] The id of the application command\n * @returns {string}\n */\n\n/**\n * Wraps the content inside a code block with an optional language.\n * @method codeBlock\n * @param {string} contentOrLanguage The language to use or content if a second parameter isn't provided\n * @param {string} [content] The content to wrap\n * @returns {string}\n */\n\n/**\n * Wraps the content inside \\`backticks\\`, which formats it as inline code.\n * @method inlineCode\n * @param {string} content The content to wrap\n * @returns {string}\n */\n\n/**\n * Formats the content into italic text.\n * @method italic\n * @param {string} content The content to wrap\n * @returns {string}\n */\n\n/**\n * Formats the content into bold text.\n * @method bold\n * @param {string} content The content to wrap\n * @returns {string}\n */\n\n/**\n * Formats the content into underscored text.\n * @method underscore\n * @param {string} content The content to wrap\n * @returns {string}\n */\n\n/**\n * Formats the content into strike-through text.\n * @method strikethrough\n * @param {string} content The content to wrap\n * @returns {string}\n */\n\n/**\n * Formats the content into a quote.\n * <info>This needs to be at the start of the line for Discord to format it.</info>\n * @method quote\n * @param {string} content The content to wrap\n * @returns {string}\n */\n\n/**\n * Formats the content into a block quote.\n * <info>This needs to be at the start of the line for Discord to format it.</info>\n * @method blockQuote\n * @param {string} content The content to wrap\n * @returns {string}\n */\n\n/**\n * Wraps the URL into `<>`, which stops it from embedding.\n * @method hideLinkEmbed\n * @param {string} content The content to wrap\n * @returns {string}\n */\n\n/**\n * Formats the content and the URL into a masked URL with an optional title.\n * @method hyperlink\n * @param {string} content The content to display\n * @param {string} url The URL the content links to\n * @param {string} [title] The title shown when hovering on the masked link\n * @returns {string}\n */\n\n/**\n * Formats the content into spoiler text.\n * @method spoiler\n * @param {string} content The content to spoiler\n * @returns {string}\n */\n\n/**\n * Formats a user id into a user mention.\n * @method userMention\n * @param {Snowflake} userId The user id to format\n * @returns {string}\n */\n\n/**\n * Formats a channel id into a channel mention.\n * @method channelMention\n * @param {Snowflake} channelId The channel id to format\n * @returns {string}\n */\n\n/**\n * Formats a role id into a role mention.\n * @method roleMention\n * @param {Snowflake} roleId The role id to format\n * @returns {string}\n */\n\n/**\n * Formats an emoji id into a fully qualified emoji identifier.\n * @method formatEmoji\n * @param {Snowflake} emojiId The emoji id to format\n * @param {boolean} [animated=false] Whether the emoji is animated\n * @returns {string}\n */\n\n/**\n * Formats a channel link for a channel.\n * @method channelLink\n * @param {Snowflake} channelId The id of the channel\n * @param {Snowflake} [guildId] The id of the guild\n * @returns {string}\n */\n\n/**\n * Formats a message link for a channel.\n * @method messageLink\n * @param {Snowflake} channelId The id of the channel\n * @param {Snowflake} messageId The id of the message\n * @param {Snowflake} [guildId] The id of the guild\n * @returns {string}\n */\n\n/**\n * A message formatting timestamp style, as defined in\n * [here](https://discord.com/developers/docs/reference#message-formatting-timestamp-styles).\n * * `t` Short time format, consisting of hours and minutes, e.g. 16:20.\n * * `T` Long time format, consisting of hours, minutes, and seconds, e.g. 16:20:30.\n * * `d` Short date format, consisting of day, month, and year, e.g. 20/04/2021.\n * * `D` Long date format, consisting of day, month, and year, e.g. 20 April 2021.\n * * `f` Short date-time format, consisting of short date and short time formats, e.g. 20 April 2021 16:20.\n * * `F` Long date-time format, consisting of long date and short time formats, e.g. Tuesday, 20 April 2021 16:20.\n * * `R` Relative time format, consisting of a relative duration format, e.g. 2 months ago.\n * @typedef {string} TimestampStylesString\n */\n\n/**\n * Formats a date into a short date-time string.\n * @method time\n * @param {number|Date} [date] The date to format\n * @param {TimestampStylesString} [style] The style to use\n * @returns {string}\n */\n\n/**\n * Contains various Discord-specific functions for formatting messages.\n * @deprecated This class is redundant as all methods of the class can be imported from discord.js directly.\n */\nclass Formatters extends null {\n  /**\n   * Formats the content into a block quote.\n   * <info>This needs to be at the start of the line for Discord to format it.</info>\n   * @method blockQuote\n   * @memberof Formatters\n   * @param {string} content The content to wrap\n   * @returns {string}\n   * @deprecated Import this method directly from discord.js instead.\n   */\n  static blockQuote = deprecate(\n    blockQuote,\n    'Formatters.blockQuote() is deprecated. Import this method directly from discord.js instead.',\n  );\n\n  /**\n   * Formats the content into bold text.\n   * @method bold\n   * @memberof Formatters\n   * @param {string} content The content to wrap\n   * @returns {string}\n   * @deprecated Import this method directly from discord.js instead.\n   */\n  static bold = deprecate(\n    bold,\n    'Formatters.bold() is deprecated. Import this method directly from discord.js instead.',\n  );\n\n  /**\n   * Formats a channel id into a channel mention.\n   * @method channelMention\n   * @memberof Formatters\n   * @param {Snowflake} channelId The channel id to format\n   * @returns {string}\n   * @deprecated Import this method directly from discord.js instead.\n   */\n  static channelMention = deprecate(\n    channelMention,\n    'Formatters.channelMention() is deprecated. Import this method directly from discord.js instead.',\n  );\n\n  /**\n   * Wraps the content inside a code block with an optional language.\n   * @method codeBlock\n   * @memberof Formatters\n   * @param {string} contentOrLanguage The language to use or content if a second parameter isn't provided\n   * @param {string} [content] The content to wrap\n   * @returns {string}\n   * @deprecated Import this method directly from discord.js instead.\n   */\n  static codeBlock = deprecate(\n    codeBlock,\n    'Formatters.codeBlock() is deprecated. Import this method directly from discord.js instead.',\n  );\n\n  /**\n   * Formats an emoji id into a fully qualified emoji identifier.\n   * @method formatEmoji\n   * @memberof Formatters\n   * @param {string} emojiId The emoji id to format\n   * @param {boolean} [animated=false] Whether the emoji is animated\n   * @returns {string}\n   * @deprecated Import this method directly from discord.js instead.\n   */\n  static formatEmoji = deprecate(\n    formatEmoji,\n    'Formatters.formatEmoji() is deprecated. Import this method directly from discord.js instead.',\n  );\n\n  /**\n   * Wraps the URL into `<>`, which stops it from embedding.\n   * @method hideLinkEmbed\n   * @memberof Formatters\n   * @param {string} content The content to wrap\n   * @returns {string}\n   * @deprecated Import this method directly from discord.js instead.\n   */\n  static hideLinkEmbed = deprecate(\n    hideLinkEmbed,\n    'Formatters.hideLinkEmbed() is deprecated. Import this method directly from discord.js instead.',\n  );\n\n  /**\n   * Formats the content and the URL into a masked URL with an optional title.\n   * @method hyperlink\n   * @memberof Formatters\n   * @param {string} content The content to display\n   * @param {string} url The URL the content links to\n   * @param {string} [title] The title shown when hovering on the masked link\n   * @returns {string}\n   * @deprecated Import this method directly from discord.js instead.\n   */\n  static hyperlink = deprecate(\n    hyperlink,\n    'Formatters.hyperlink() is deprecated. Import this method directly from discord.js instead.',\n  );\n\n  /**\n   * Wraps the content inside \\`backticks\\`, which formats it as inline code.\n   * @method inlineCode\n   * @memberof Formatters\n   * @param {string} content The content to wrap\n   * @returns {string}\n   * @deprecated Import this method directly from discord.js instead.\n   */\n  static inlineCode = deprecate(\n    inlineCode,\n    'Formatters.inlineCode() is deprecated. Import this method directly from discord.js instead.',\n  );\n\n  /**\n   * Formats the content into italic text.\n   * @method italic\n   * @memberof Formatters\n   * @param {string} content The content to wrap\n   * @returns {string}\n   * @deprecated Import this method directly from discord.js instead.\n   */\n  static italic = deprecate(\n    italic,\n    'Formatters.italic() is deprecated. Import this method directly from discord.js instead.',\n  );\n\n  /**\n   * Formats the content into a quote. This needs to be at the start of the line for Discord to format it.\n   * @method quote\n   * @memberof Formatters\n   * @param {string} content The content to wrap\n   * @returns {string}\n   * @deprecated Import this method directly from discord.js instead.\n   */\n  static quote = deprecate(\n    quote,\n    'Formatters.quote() is deprecated. Import this method directly from discord.js instead.',\n  );\n\n  /**\n   * Formats a role id into a role mention.\n   * @method roleMention\n   * @memberof Formatters\n   * @param {Snowflake} roleId The role id to format\n   * @returns {string}\n   * @deprecated Import this method directly from discord.js instead.\n   */\n  static roleMention = deprecate(\n    roleMention,\n    'Formatters.roleMention() is deprecated. Import this method directly from discord.js instead.',\n  );\n\n  /**\n   * Formats the content into spoiler text.\n   * @method spoiler\n   * @memberof Formatters\n   * @param {string} content The content to spoiler\n   * @returns {string}\n   * @deprecated Import this method directly from discord.js instead.\n   */\n  static spoiler = deprecate(\n    spoiler,\n    'Formatters.spoiler() is deprecated. Import this method directly from discord.js instead.',\n  );\n\n  /**\n   * Formats the content into strike-through text.\n   * @method strikethrough\n   * @memberof Formatters\n   * @param {string} content The content to wrap\n   * @returns {string}\n   * @deprecated Import this method directly from discord.js instead.\n   */\n  static strikethrough = deprecate(\n    strikethrough,\n    'Formatters.strikethrough() is deprecated. Import this method directly from discord.js instead.',\n  );\n\n  /**\n   * Formats a date into a short date-time string.\n   * @method time\n   * @memberof Formatters\n   * @param {number|Date} [date] The date to format\n   * @param {TimestampStylesString} [style] The style to use\n   * @returns {string}\n   * @deprecated Import this method directly from discord.js instead.\n   */\n  static time = deprecate(\n    time,\n    'Formatters.time() is deprecated. Import this method directly from discord.js instead.',\n  );\n\n  /**\n   * The message formatting timestamp\n   * [styles](https://discord.com/developers/docs/reference#message-formatting-timestamp-styles) supported by Discord.\n   * @type {Object<string, TimestampStylesString>}\n   * @memberof Formatters\n   * @deprecated Import this property directly from discord.js instead.\n   */\n  static TimestampStyles = TimestampStyles;\n\n  /**\n   * Formats the content into underscored text.\n   * @method underscore\n   * @memberof Formatters\n   * @param {string} content The content to wrap\n   * @returns {string}\n   * @deprecated Import this method directly from discord.js instead.\n   */\n  static underscore = deprecate(\n    underscore,\n    'Formatters.underscore() is deprecated. Import this method directly from discord.js instead.',\n  );\n\n  /**\n   * Formats a user id into a user mention.\n   * @method userMention\n   * @memberof Formatters\n   * @param {Snowflake} userId The user id to format\n   * @returns {string}\n   * @deprecated Import this method directly from discord.js instead.\n   */\n  static userMention = deprecate(\n    userMention,\n    'Formatters.userMention() is deprecated. Import this method directly from discord.js instead.',\n  );\n}\n\nmodule.exports = Formatters;\n", "'use strict';\n\nconst { EmbedBuilder: BuildersEmbed, embedLength } = require('@discordjs/builders');\nconst { isJSONEncodable } = require('@discordjs/util');\nconst { toSnakeCase } = require('../util/Transformers');\nconst { resolveColor } = require('../util/Util');\n\n/**\n * Represents an embed builder.\n * @extends {BuildersEmbed}\n */\nclass EmbedBuilder extends BuildersEmbed {\n  constructor(data) {\n    super(toSnakeCase(data));\n  }\n\n  /**\n   * Sets the color of this embed\n   * @param {?ColorResolvable} color The color of the embed\n   * @returns {EmbedBuilder}\n   */\n  setColor(color) {\n    return super.setColor(color && resolveColor(color));\n  }\n\n  /**\n   * Creates a new embed builder from JSON data\n   * @param {EmbedBuilder|Embed|APIEmbed} other The other data\n   * @returns {EmbedBuilder}\n   */\n  static from(other) {\n    return new this(isJSONEncodable(other) ? other.toJSON() : other);\n  }\n\n  /**\n   * The accumulated length for the embed title, description, fields, footer text, and author name.\n   * @type {number}\n   * @readonly\n   */\n  get length() {\n    return embedLength(this.data);\n  }\n}\n\nmodule.exports = EmbedBuilder;\n\n/**\n * @external BuildersEmbed\n * @see {@link https://discord.js.org/docs/packages/builders/stable/EmbedBuilder:Class}\n */\n", "'use strict';\n\nconst { basename, flatten } = require('../util/Util');\n\n/**\n * Represents an attachment builder\n */\nclass AttachmentBuilder {\n  /**\n   * @param {BufferResolvable|Stream} attachment The file\n   * @param {AttachmentData} [data] Extra data\n   */\n  constructor(attachment, data = {}) {\n    /**\n     * The file associated with this attachment.\n     * @type {BufferResolvable|Stream}\n     */\n    this.attachment = attachment;\n    /**\n     * The name of this attachment\n     * @type {?string}\n     */\n    this.name = data.name;\n    /**\n     * The description of the attachment\n     * @type {?string}\n     */\n    this.description = data.description;\n  }\n\n  /**\n   * Sets the description of this attachment.\n   * @param {string} description The description of the file\n   * @returns {AttachmentBuilder} This attachment\n   */\n  setDescription(description) {\n    this.description = description;\n    return this;\n  }\n\n  /**\n   * Sets the file of this attachment.\n   * @param {BufferResolvable|Stream} attachment The file\n   * @returns {AttachmentBuilder} This attachment\n   */\n  setFile(attachment) {\n    this.attachment = attachment;\n    return this;\n  }\n\n  /**\n   * Sets the name of this attachment.\n   * @param {string} name The name of the file\n   * @returns {AttachmentBuilder} This attachment\n   */\n  setName(name) {\n    this.name = name;\n    return this;\n  }\n\n  /**\n   * Sets whether this attachment is a spoiler\n   * @param {boolean} [spoiler=true] Whether the attachment should be marked as a spoiler\n   * @returns {AttachmentBuilder} This attachment\n   */\n  setSpoiler(spoiler = true) {\n    if (spoiler === this.spoiler) return this;\n\n    if (!spoiler) {\n      while (this.spoiler) {\n        this.name = this.name.slice('SPOILER_'.length);\n      }\n      return this;\n    }\n    this.name = `SPOILER_${this.name}`;\n    return this;\n  }\n\n  /**\n   * Whether or not this attachment has been marked as a spoiler\n   * @type {boolean}\n   * @readonly\n   */\n  get spoiler() {\n    return basename(this.name).startsWith('SPOILER_');\n  }\n\n  toJSON() {\n    return flatten(this);\n  }\n\n  /**\n   * Makes a new builder instance from a preexisting attachment structure.\n   * @param {AttachmentBuilder|Attachment|AttachmentPayload} other The builder to construct a new instance from\n   * @returns {AttachmentBuilder}\n   */\n  static from(other) {\n    return new AttachmentBuilder(other.attachment, {\n      name: other.name,\n      description: other.description,\n    });\n  }\n}\n\nmodule.exports = AttachmentBuilder;\n\n/**\n * @typedef {Object} AttachmentData\n * @property {string} [name] The name of the attachment\n * @property {string} [description] The description of the attachment\n */\n", "'use strict';\n\nconst { ModalBuilder: BuildersModal, ComponentBuilder } = require('@discordjs/builders');\nconst { isJSONEncodable } = require('@discordjs/util');\nconst { toSnakeCase } = require('../util/Transformers');\n\n/**\n * Represents a modal builder.\n * @extends {BuildersModal}\n */\nclass ModalBuilder extends BuildersModal {\n  constructor({ components, ...data } = {}) {\n    super({\n      ...toSnakeCase(data),\n      components: components?.map(component =>\n        component instanceof ComponentBuilder ? component : toSnakeCase(component),\n      ),\n    });\n  }\n\n  /**\n   * Creates a new modal builder from JSON data\n   * @param {ModalBuilder|APIModalComponent} other The other data\n   * @returns {ModalBuilder}\n   */\n  static from(other) {\n    return new this(isJSONEncodable(other) ? other.toJSON() : other);\n  }\n}\n\nmodule.exports = ModalBuilder;\n\n/**\n * @external BuildersModal\n * @see {@link https://discord.js.org/docs/packages/builders/stable/ModalBuilder:Class}\n */\n", "'use strict';\n\nconst process = require('node:process');\nconst StringSelectMenuBuilder = require('./StringSelectMenuBuilder');\n\nlet deprecationEmitted = false;\n\n/**\n * @deprecated Use {@link StringSelectMenuBuilder} instead.\n * @extends {StringSelectMenuBuilder}\n */\nclass SelectMenuBuilder extends StringSelectMenuBuilder {\n  constructor(...params) {\n    super(...params);\n\n    if (!deprecationEmitted) {\n      process.emitWarning(\n        'The SelectMenuBuilder class is deprecated. Use StringSelectMenuBuilder instead.',\n        'DeprecationWarning',\n      );\n      deprecationEmitted = true;\n    }\n  }\n}\n\nmodule.exports = SelectMenuBuilder;\n", "'use strict';\n\nconst process = require('node:process');\nconst StringSelectMenuComponent = require('./StringSelectMenuComponent');\n\nlet deprecationEmitted = false;\n\n/**\n * @deprecated Use {@link StringSelectMenuComponent} instead.\n * @extends {StringSelectMenuComponent}\n */\nclass SelectMenuComponent extends StringSelectMenuComponent {\n  constructor(...params) {\n    super(...params);\n\n    if (!deprecationEmitted) {\n      process.emitWarning(\n        'The SelectMenuComponent class is deprecated. Use StringSelectMenuComponent instead.',\n        'DeprecationWarning',\n      );\n      deprecationEmitted = true;\n    }\n  }\n}\n\nmodule.exports = SelectMenuComponent;\n", "'use strict';\n\nconst process = require('node:process');\nconst StringSelectMenuInteraction = require('./StringSelectMenuInteraction');\n\nlet deprecationEmitted = false;\n\n/**\n * @deprecated Use {@link StringSelectMenuInteraction} instead.\n * @extends {StringSelectMenuInteraction}\n */\nclass SelectMenuInteraction extends StringSelectMenuInteraction {\n  constructor(...params) {\n    super(...params);\n\n    if (!deprecationEmitted) {\n      process.emitWarning(\n        'The SelectMenuInteraction class is deprecated. Use StringSelectMenuInteraction instead.',\n        'DeprecationWarning',\n      );\n      deprecationEmitted = true;\n    }\n  }\n}\n\nmodule.exports = SelectMenuInteraction;\n", "'use strict';\n\nconst { SelectMenuOptionBuilder: BuildersSelectMenuOption } = require('@discordjs/builders');\nconst { isJSONEncodable } = require('@discordjs/util');\nconst { toSnakeCase } = require('../util/Transformers');\nconst { resolvePartialEmoji } = require('../util/Util');\n\n/**\n * Represents a select menu option builder.\n * @extends {BuildersSelectMenuOption}\n */\nclass StringSelectMenuOptionBuilder extends BuildersSelectMenuOption {\n  constructor({ emoji, ...data } = {}) {\n    super(\n      toSnakeCase({\n        ...data,\n        emoji: emoji && typeof emoji === 'string' ? resolvePartialEmoji(emoji) : emoji,\n      }),\n    );\n  }\n\n  /**\n   * Sets the emoji to display on this option\n   * @param {ComponentEmojiResolvable} emoji The emoji to display on this option\n   * @returns {StringSelectMenuOptionBuilder}\n   */\n  setEmoji(emoji) {\n    if (typeof emoji === 'string') {\n      return super.setEmoji(resolvePartialEmoji(emoji));\n    }\n    return super.setEmoji(emoji);\n  }\n\n  /**\n   * Creates a new select menu option builder from JSON data\n   * @param {StringSelectMenuOptionBuilder|APISelectMenuOption} other The other data\n   * @returns {StringSelectMenuOptionBuilder}\n   */\n  static from(other) {\n    return new this(isJSONEncodable(other) ? other.toJSON() : other);\n  }\n}\n\nmodule.exports = StringSelectMenuOptionBuilder;\n\n/**\n * @external BuildersSelectMenuOption\n * @see {@link https://discord.js.org/docs/packages/builders/stable/StringSelectMenuOptionBuilder:Class}\n */\n", "'use strict';\n\nconst process = require('node:process');\nconst StringSelectMenuOptionBuilder = require('./StringSelectMenuOptionBuilder');\n\nlet deprecationEmitted = false;\n\n/**\n * @deprecated Use {@link StringSelectMenuOptionBuilder} instead.\n * @extends {StringSelectMenuOptionBuilder}\n */\nclass SelectMenuOptionBuilder extends StringSelectMenuOptionBuilder {\n  constructor(...params) {\n    super(...params);\n\n    if (!deprecationEmitted) {\n      process.emitWarning(\n        'The SelectMenuOptionBuilder class is deprecated. Use StringSelectMenuOptionBuilder instead.',\n        'DeprecationWarning',\n      );\n      deprecationEmitted = true;\n    }\n  }\n}\n\nmodule.exports = SelectMenuOptionBuilder;\n", "'use strict';\n\nconst { polyfillDispose } = require('@discordjs/util');\nconst { __exportStar } = require('tslib');\n\npolyfillDispose();\n\n// \"Root\" classes (starting points)\nexports.BaseClient = require('./client/BaseClient');\nexports.Client = require('./client/Client');\nexports.Shard = require('./sharding/Shard');\nexports.ShardClientUtil = require('./sharding/ShardClientUtil');\nexports.ShardingManager = require('./sharding/ShardingManager');\nexports.WebhookClient = require('./client/WebhookClient');\n\n// Errors\nexports.DiscordjsError = require('./errors/DJSError').DiscordjsError;\nexports.DiscordjsTypeError = require('./errors/DJSError').DiscordjsTypeError;\nexports.DiscordjsRangeError = require('./errors/DJSError').DiscordjsRangeError;\nexports.DiscordjsErrorCodes = require('./errors/ErrorCodes');\n\n// Utilities\nexports.ActivityFlagsBitField = require('./util/ActivityFlagsBitField');\nexports.ApplicationFlagsBitField = require('./util/ApplicationFlagsBitField');\nexports.AttachmentFlagsBitField = require('./util/AttachmentFlagsBitField');\nexports.BaseManager = require('./managers/BaseManager');\nexports.BitField = require('./util/BitField');\nexports.ChannelFlagsBitField = require('./util/ChannelFlagsBitField');\nexports.Collection = require('@discordjs/collection').Collection;\nexports.Constants = require('./util/Constants');\nexports.Colors = require('./util/Colors');\n__exportStar(require('./util/DataResolver.js'), exports);\nexports.Events = require('./util/Events');\nexports.Formatters = require('./util/Formatters');\nexports.GuildMemberFlagsBitField = require('./util/GuildMemberFlagsBitField').GuildMemberFlagsBitField;\nexports.IntentsBitField = require('./util/IntentsBitField');\nexports.LimitedCollection = require('./util/LimitedCollection');\nexports.MessageFlagsBitField = require('./util/MessageFlagsBitField');\nexports.Options = require('./util/Options');\nexports.Partials = require('./util/Partials');\nexports.PermissionsBitField = require('./util/PermissionsBitField');\nexports.RoleFlagsBitField = require('./util/RoleFlagsBitField');\nexports.ShardEvents = require('./util/ShardEvents');\nexports.SKUFlagsBitField = require('./util/SKUFlagsBitField').SKUFlagsBitField;\nexports.Status = require('./util/Status');\nexports.SnowflakeUtil = require('@sapphire/snowflake').DiscordSnowflake;\nexports.Sweepers = require('./util/Sweepers');\nexports.SystemChannelFlagsBitField = require('./util/SystemChannelFlagsBitField');\nexports.ThreadMemberFlagsBitField = require('./util/ThreadMemberFlagsBitField');\nexports.UserFlagsBitField = require('./util/UserFlagsBitField');\n__exportStar(require('./util/Util.js'), exports);\nexports.WebSocketShardEvents = require('./util/WebSocketShardEvents');\nexports.version = require('../package.json').version;\n\n// Managers\nexports.ApplicationCommandManager = require('./managers/ApplicationCommandManager');\nexports.ApplicationEmojiManager = require('./managers/ApplicationEmojiManager');\nexports.ApplicationCommandPermissionsManager = require('./managers/ApplicationCommandPermissionsManager');\nexports.AutoModerationRuleManager = require('./managers/AutoModerationRuleManager');\nexports.BaseGuildEmojiManager = require('./managers/BaseGuildEmojiManager');\nexports.CachedManager = require('./managers/CachedManager');\nexports.ChannelManager = require('./managers/ChannelManager');\nexports.ClientVoiceManager = require('./client/voice/ClientVoiceManager');\nexports.DataManager = require('./managers/DataManager');\nexports.DMMessageManager = require('./managers/DMMessageManager');\nexports.EntitlementManager = require('./managers/EntitlementManager').EntitlementManager;\nexports.GuildApplicationCommandManager = require('./managers/GuildApplicationCommandManager');\nexports.GuildBanManager = require('./managers/GuildBanManager');\nexports.GuildChannelManager = require('./managers/GuildChannelManager');\nexports.GuildEmojiManager = require('./managers/GuildEmojiManager');\nexports.GuildEmojiRoleManager = require('./managers/GuildEmojiRoleManager');\nexports.GuildForumThreadManager = require('./managers/GuildForumThreadManager');\nexports.GuildInviteManager = require('./managers/GuildInviteManager');\nexports.GuildManager = require('./managers/GuildManager');\nexports.GuildMemberManager = require('./managers/GuildMemberManager');\nexports.GuildMemberRoleManager = require('./managers/GuildMemberRoleManager');\nexports.GuildMessageManager = require('./managers/GuildMessageManager');\nexports.GuildScheduledEventManager = require('./managers/GuildScheduledEventManager');\nexports.GuildStickerManager = require('./managers/GuildStickerManager');\nexports.GuildTextThreadManager = require('./managers/GuildTextThreadManager');\nexports.MessageManager = require('./managers/MessageManager');\nexports.PermissionOverwriteManager = require('./managers/PermissionOverwriteManager');\nexports.PresenceManager = require('./managers/PresenceManager');\nexports.ReactionManager = require('./managers/ReactionManager');\nexports.ReactionUserManager = require('./managers/ReactionUserManager');\nexports.RoleManager = require('./managers/RoleManager');\nexports.StageInstanceManager = require('./managers/StageInstanceManager');\nexports.ThreadManager = require('./managers/ThreadManager');\nexports.ThreadMemberManager = require('./managers/ThreadMemberManager');\nexports.UserManager = require('./managers/UserManager');\nexports.VoiceStateManager = require('./managers/VoiceStateManager');\nexports.WebSocketManager = require('./client/websocket/WebSocketManager');\nexports.WebSocketShard = require('./client/websocket/WebSocketShard');\n\n// Structures\nexports.ActionRow = require('./structures/ActionRow');\nexports.ActionRowBuilder = require('./structures/ActionRowBuilder');\nexports.Activity = require('./structures/Presence').Activity;\nexports.AnonymousGuild = require('./structures/AnonymousGuild');\nexports.Application = require('./structures/interfaces/Application');\nexports.ApplicationCommand = require('./structures/ApplicationCommand');\nexports.ApplicationEmoji = require('./structures/ApplicationEmoji');\nexports.ApplicationRoleConnectionMetadata =\n  require('./structures/ApplicationRoleConnectionMetadata').ApplicationRoleConnectionMetadata;\nexports.AutocompleteInteraction = require('./structures/AutocompleteInteraction');\nexports.AutoModerationActionExecution = require('./structures/AutoModerationActionExecution');\nexports.AutoModerationRule = require('./structures/AutoModerationRule');\nexports.Base = require('./structures/Base');\nexports.BaseGuild = require('./structures/BaseGuild');\nexports.BaseGuildEmoji = require('./structures/BaseGuildEmoji');\nexports.BaseGuildTextChannel = require('./structures/BaseGuildTextChannel');\nexports.BaseGuildVoiceChannel = require('./structures/BaseGuildVoiceChannel');\nexports.ButtonBuilder = require('./structures/ButtonBuilder');\nexports.ButtonComponent = require('./structures/ButtonComponent');\nexports.ButtonInteraction = require('./structures/ButtonInteraction');\nexports.CategoryChannel = require('./structures/CategoryChannel');\nexports.BaseChannel = require('./structures/BaseChannel').BaseChannel;\nexports.ChatInputCommandInteraction = require('./structures/ChatInputCommandInteraction');\nexports.ClientApplication = require('./structures/ClientApplication');\nexports.ClientPresence = require('./structures/ClientPresence');\nexports.ClientUser = require('./structures/ClientUser');\nexports.CommandInteraction = require('./structures/CommandInteraction');\nexports.Collector = require('./structures/interfaces/Collector');\nexports.CommandInteractionOptionResolver = require('./structures/CommandInteractionOptionResolver');\nexports.Component = require('./structures/Component');\nexports.ContextMenuCommandInteraction = require('./structures/ContextMenuCommandInteraction');\nexports.DMChannel = require('./structures/DMChannel');\nexports.Embed = require('./structures/Embed');\nexports.EmbedBuilder = require('./structures/EmbedBuilder');\nexports.Emoji = require('./structures/Emoji').Emoji;\nexports.Entitlement = require('./structures/Entitlement').Entitlement;\nexports.ForumChannel = require('./structures/ForumChannel');\nexports.Guild = require('./structures/Guild').Guild;\nexports.GuildAuditLogs = require('./structures/GuildAuditLogs');\nexports.GuildAuditLogsEntry = require('./structures/GuildAuditLogsEntry');\nexports.GuildBan = require('./structures/GuildBan');\nexports.GuildChannel = require('./structures/GuildChannel');\nexports.GuildEmoji = require('./structures/GuildEmoji');\nexports.GuildMember = require('./structures/GuildMember').GuildMember;\nexports.GuildOnboarding = require('./structures/GuildOnboarding').GuildOnboarding;\nexports.GuildOnboardingPrompt = require('./structures/GuildOnboardingPrompt').GuildOnboardingPrompt;\nexports.GuildOnboardingPromptOption = require('./structures/GuildOnboardingPromptOption').GuildOnboardingPromptOption;\nexports.GuildPreview = require('./structures/GuildPreview');\nexports.GuildPreviewEmoji = require('./structures/GuildPreviewEmoji');\nexports.GuildScheduledEvent = require('./structures/GuildScheduledEvent').GuildScheduledEvent;\nexports.GuildTemplate = require('./structures/GuildTemplate');\nexports.Integration = require('./structures/Integration');\nexports.IntegrationApplication = require('./structures/IntegrationApplication');\nexports.BaseInteraction = require('./structures/BaseInteraction');\nexports.InteractionCollector = require('./structures/InteractionCollector');\nexports.InteractionResponse = require('./structures/InteractionResponse');\nexports.InteractionWebhook = require('./structures/InteractionWebhook');\nexports.Invite = require('./structures/Invite');\nexports.InviteStageInstance = require('./structures/InviteStageInstance');\nexports.InviteGuild = require('./structures/InviteGuild');\nexports.Message = require('./structures/Message').Message;\nexports.Attachment = require('./structures/Attachment');\nexports.AttachmentBuilder = require('./structures/AttachmentBuilder');\nexports.ModalBuilder = require('./structures/ModalBuilder');\nexports.MediaChannel = require('./structures/MediaChannel');\nexports.MessageCollector = require('./structures/MessageCollector');\nexports.MessageComponentInteraction = require('./structures/MessageComponentInteraction');\nexports.MessageContextMenuCommandInteraction = require('./structures/MessageContextMenuCommandInteraction');\nexports.MessageMentions = require('./structures/MessageMentions');\nexports.MessagePayload = require('./structures/MessagePayload');\nexports.MessageReaction = require('./structures/MessageReaction');\nexports.ModalSubmitInteraction = require('./structures/ModalSubmitInteraction');\nexports.ModalSubmitFields = require('./structures/ModalSubmitFields');\nexports.NewsChannel = require('./structures/NewsChannel');\nexports.OAuth2Guild = require('./structures/OAuth2Guild');\nexports.PartialGroupDMChannel = require('./structures/PartialGroupDMChannel');\nexports.PermissionOverwrites = require('./structures/PermissionOverwrites');\nexports.Poll = require('./structures/Poll').Poll;\nexports.PollAnswer = require('./structures/PollAnswer').PollAnswer;\nexports.Presence = require('./structures/Presence').Presence;\nexports.ReactionCollector = require('./structures/ReactionCollector');\nexports.ReactionEmoji = require('./structures/ReactionEmoji');\nexports.RichPresenceAssets = require('./structures/Presence').RichPresenceAssets;\nexports.Role = require('./structures/Role').Role;\nexports.SelectMenuBuilder = require('./structures/SelectMenuBuilder');\nexports.ChannelSelectMenuBuilder = require('./structures/ChannelSelectMenuBuilder');\nexports.MentionableSelectMenuBuilder = require('./structures/MentionableSelectMenuBuilder');\nexports.RoleSelectMenuBuilder = require('./structures/RoleSelectMenuBuilder');\nexports.StringSelectMenuBuilder = require('./structures/StringSelectMenuBuilder');\nexports.UserSelectMenuBuilder = require('./structures/UserSelectMenuBuilder');\nexports.BaseSelectMenuComponent = require('./structures/BaseSelectMenuComponent');\nexports.SelectMenuComponent = require('./structures/SelectMenuComponent');\nexports.ChannelSelectMenuComponent = require('./structures/ChannelSelectMenuComponent');\nexports.MentionableSelectMenuComponent = require('./structures/MentionableSelectMenuComponent');\nexports.RoleSelectMenuComponent = require('./structures/RoleSelectMenuComponent');\nexports.StringSelectMenuComponent = require('./structures/StringSelectMenuComponent');\nexports.UserSelectMenuComponent = require('./structures/UserSelectMenuComponent');\nexports.SelectMenuInteraction = require('./structures/SelectMenuInteraction');\nexports.ChannelSelectMenuInteraction = require('./structures/ChannelSelectMenuInteraction');\nexports.MentionableSelectMenuInteraction = require('./structures/MentionableSelectMenuInteraction');\nexports.MentionableSelectMenuInteraction = require('./structures/MentionableSelectMenuInteraction');\nexports.RoleSelectMenuInteraction = require('./structures/RoleSelectMenuInteraction');\nexports.StringSelectMenuInteraction = require('./structures/StringSelectMenuInteraction');\nexports.UserSelectMenuInteraction = require('./structures/UserSelectMenuInteraction');\nexports.SelectMenuOptionBuilder = require('./structures/SelectMenuOptionBuilder');\nexports.SKU = require('./structures/SKU').SKU;\nexports.StringSelectMenuOptionBuilder = require('./structures/StringSelectMenuOptionBuilder');\nexports.StageChannel = require('./structures/StageChannel');\nexports.StageInstance = require('./structures/StageInstance').StageInstance;\nexports.Sticker = require('./structures/Sticker').Sticker;\nexports.StickerPack = require('./structures/StickerPack');\nexports.Team = require('./structures/Team');\nexports.TeamMember = require('./structures/TeamMember');\nexports.TextChannel = require('./structures/TextChannel');\nexports.TextInputBuilder = require('./structures/TextInputBuilder');\nexports.TextInputComponent = require('./structures/TextInputComponent');\nexports.ThreadChannel = require('./structures/ThreadChannel');\nexports.ThreadMember = require('./structures/ThreadMember');\nexports.ThreadOnlyChannel = require('./structures/ThreadOnlyChannel');\nexports.Typing = require('./structures/Typing');\nexports.User = require('./structures/User');\nexports.UserContextMenuCommandInteraction = require('./structures/UserContextMenuCommandInteraction');\nexports.VoiceChannel = require('./structures/VoiceChannel');\nexports.VoiceRegion = require('./structures/VoiceRegion');\nexports.VoiceState = require('./structures/VoiceState');\nexports.Webhook = require('./structures/Webhook');\nexports.Widget = require('./structures/Widget');\nexports.WidgetMember = require('./structures/WidgetMember');\nexports.WelcomeChannel = require('./structures/WelcomeChannel');\nexports.WelcomeScreen = require('./structures/WelcomeScreen');\n\n// External\n__exportStar(require('discord-api-types/v10'), exports);\n__exportStar(require('@discordjs/builders'), exports);\n__exportStar(require('@discordjs/formatters'), exports);\n__exportStar(require('@discordjs/rest'), exports);\n__exportStar(require('@discordjs/util'), exports);\n__exportStar(require('@discordjs/ws'), exports);\n"],
  "mappings": "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ACf,CAAC;AAED,QAAI,OAAO;AAAA,MACP;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACJ,GAAG;AAAA,MACC,MAAM;AAAA,MACN,WAAW;AAAA,IACf,CAAC;AAED,QAAI,OAAO;AAAA,MACP;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACJ,GAAG;AAAA,MACC,MAAM;AAAA,MACN,WAAW;AAAA,IACf,CAAC;AAED,QAAI,OAAO;AAAA,MACP;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,M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AAA,MAAM,KAAU;AAAA,MAAK,KAAU;AAAA,MAAK,KAAU;AAAA,MAAK,KAAU;AAAA,MACvE,KAAU;AAAA,MAAM,KAAU;AAAA,MAC1B,KAAU;AAAA,MAAM,KAAU;AAAA,MAAK,KAAU;AAAA,MACzC,KAAU;AAAA,MAAM,KAAU;AAAA,MAAK,KAAU;AAAA,MAAK,KAAU;AAAA,MAAK,KAAU;AAAA,MACvE,KAAU;AAAA,MAAM,KAAU;AAAA,MAAK,KAAU;AAAA,MAAK,KAAU;AAAA,MAAK,KAAU;AAAA,MACvE,KAAU;AAAA,MAAM,KAAU;AAAA,MAAK,KAAU;AAAA,MAAK,KAAU;AAAA,MACxD,KAAU;AAAA,MAAM,KAAU;AAAA,MAAK,KAAU;AAAA,MAAK,KAAU;AAAA,MACxD,KAAU;AAAA,MAAM,KAAU;AAAA,MAAK,KAAU;AAAA,MACzC,KAAU;AAAA,MAAM,KAAU;AAAA,MAAK,KAAU;AAAA,MACzC,KAAU;AAAA,MAAM,KAAU;AAAA,MAAK,KAAU;AAAA,MACzC,KAAU;AAAA,MAAM,KAAU;AAAA,MAAK,KAAU;AAAA,MACzC,KAAU;AAAA,MAAM,KAAU;AAAA,MAAK,KAAU;AAAA,MAAK,KAAU;AAAA,MACxD,KAAU;AAAA,MAAM,KAAU;AAAA,MAAK,KAAU;AAAA,MAAK,KAAU;AAAA,MACxD,KAAU;AAAA,MAAM,KAAU;AAAA,MAAK,KAAU;AAAA,MACzC,KAAU;AAAA,MAAM,KAAU;AAAA,MAAK,KAAU;AAAA,MACzC,KAAU;AAAA,MAAM,KAAU;AAAA,MAAK,KAAU;AAAA,MAAK,KAAU;AAAA,MAAK,KAAU;AAAA,MAAK,KAAU;AAAA,MACtF,KAAU;AAAA,MAAM,KAAU;AAAA,MAAK,KAAU;AAAA,MAAK,KAAU;AAAA,MAAK,KAAU;AAAA,MAAK,KAAU;AAAA,MACtF,KAAU;AAAA,MAAM,KAAU;AAAA,MAC1B,KAAU;AAAA,MAAM,KAAU;AAAA,MAAK,KAAU;AAAA,MACzC,KAAU;AAAA,MAAM,KAAU;AAAA,MAAK,KAAU;AAAA,MACzC,KAAU;AAAA,MAAM,KAAU;AAAA,MAAK,KAAU;AAAA,MACzC,KAAU;AAAA,MAAM,KAAU;AAAA,MAC1B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K;AAAA,QACL,KAAK;AACH,iBAAO;AAAA,QACT,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AACH,iBAAO;AAAA,QACT,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AACH,iBAAO;AAAA,QACT,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AACH,iBAAO;AAAA,QACT,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AACH,iBAAO;AAAA,QACT,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AACH,iBAAO;AAAA,QACT,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AACH,iBAAO;AAAA,QACT,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AACH,iBAAO;AAAA,QACT,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AACH,iBAAO;AAAA,QACT,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AACH,iBAAO;AAAA,QACT,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AACH,iBAAO;AAAA,QACT,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AACH,iBAAO;AAAA,QACT,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AACH,iBAAO;AAAA,QACT,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AACH,iBAAO;AAAA,QACT,KAAK;AACH,iBAAO;AAAA,QACT,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AACH,iBAAO;AAAA,QACT,KAAK;AAAA,QACL,KAAK;AACH,iBAAO;AAAA,QACT,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AACH,iBAAO;AAAA,QACT,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AACH,iBAAO;AAAA,QACT,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AACH,iBAAO;AAAA,QACT,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AACH,iBAAO;AAAA,QACT,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AACH,iBAAO;AAAA,QACT,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AACH,iBAAO;AAAA,QACT,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AACH,iBAAO;AAAA,QACT,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AACH,iBAAO;AAAA,QACT,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AACH,iBAAO;AAAA,QACT,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AACH,iBAAO;AAAA,QACT,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AACH,iBAAO;AAAA,QACT,KAAK;AAAA,QACL,KAAK;AACH,iBAAO;AAAA,QACT,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AACH,iBAAO;AAAA,QACT,KAAK;AACH,iBAAO;AAAA,QACT,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AACH,iBAAO;AAAA,QACT,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AACH,iBAAO;AAAA,QACT,KAAK;AAAA,QACL,KAAK;AACH,iBAAO;AAAA,QACT,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AACH,iBAAO;AAAA,QACT,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AACH,iBAAO;AAAA,QACT,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AACH,iBAAO;AAAA,QACT,K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",
  "names": ["v", "d", "b", "__assign", "o", "exports", "__exportStar", "exports", "GatewayOpcodes", "GatewayCloseCodes", "GatewayIntentBits", "GatewayDispatchEvents", "exports", "exports", "ApplicationFlags", "exports", "ApplicationRoleConnectionMetadataType", "AuditLogEvent", "exports", "AuditLogOptionsType", "AutoModerationRuleTriggerType", "exports", "AutoModerationRuleKeywordPresetType", "AutoModerationRuleEventType", "AutoModerationActionType", "SortOrderType", "exports", "ForumLayoutType", "ChannelType", "VideoQualityMode", "MessageType", "MessageActivityType", "MessageReferenceType", "MessageFlags", "OverwriteType", "ThreadAutoArchiveDuration", "ThreadMemberFlags", "EmbedType", "AttachmentFlags", "AllowedMentionsTypes", "ComponentType", "ButtonStyle", "TextInputStyle", "SelectMenuDefaultValueType", "ChannelFlags", "PresenceUpdateStatus", "exports", "ActivityPlatform", "ActivityType", "ActivityFlags", "GuildDefaultMessageNotifications", "exports", "GuildExplicitContentFilter", "GuildMFALevel", "GuildNSFWLevel", "GuildVerificationLevel", "GuildPremiumTier", "GuildHubType", "GuildSystemChannelFlags", "GuildFeature", "GuildMemberFlags", "IntegrationExpireBehavior", "GuildWidgetStyle", "MembershipScreeningFieldType", "GuildOnboardingMode", "GuildOnboardingPromptType", "GuildScheduledEventRecurrenceRuleFrequency", "exports", "GuildScheduledEventRecurrenceRuleWeekday", "GuildScheduledEventRecurrenceRuleMonth", "GuildScheduledEventEntityType", "GuildScheduledEventStatus", "GuildScheduledEventPrivacyLevel", "exports", "exports", "exports", "require_channel", "exports", "exports", "exports", "exports", "exports", "ApplicationCommandOptionType", "exports", "exports", "exports", "exports", "exports", "__exportStar", "exports", "exports", "ApplicationCommandPermissionType", "exports", "__exportStar", "exports", "ApplicationCommandType", "ApplicationIntegrationType", "InteractionContextType", "exports", "require_base", "exports", "exports", "exports", "exports", "InteractionType", "exports", "InteractionResponseType", "__exportStar", "exports", "InviteType", "exports", "InviteTargetType", "OAuth2Scopes", "exports", "PollLayoutType", "exports", "RoleFlags", "exports", "StageInstancePrivacyLevel", "exports", "StickerType", "exports", "StickerFormatType", "TeamMemberMembershipState", "exports", "TeamMemberRole", "UserFlags", "exports", "UserPremiumType", "ConnectionService", "ConnectionVisibility", "WebhookType", "exports", "EntitlementType", "exports", "SKUFlags", "SKUType", "__exportStar", "exports", "RESTJSONErrorCodes", "exports", "Locale", "require_application", "exports", "require_auditLog", "exports", "require_autoModeration", "exports", "ReactionType", "exports", "require_emoji", "exports", "require_gateway", "exports", "require_guild", "exports", "require_guildScheduledEvent", "exports", "require_interactions", "exports", "require_invite", "exports", "require_oauth2", "exports", "require_poll", "exports", "require_stageInstance", "exports", "require_sticker", "exports", "require_template", "exports", "require_user", "exports", "require_voice", "exports", "require_webhook", "exports", "EntitlementOwnerType", "exports", "__exportStar", "exports", "ImageFormat", "RPCErrorCodes", "exports", "RPCCloseEventCodes", "__exportStar", "exports", "exports", "__exportStar", "exports", "__export", "Collection", "module", "__toCommonJS", "__publicField", "__export", "module", "__toCommonJS", "_AsyncEventEmitter", "exports", "hex", "exports", "exports", "require_dist", "exports", "__importDefault", "__export", "makeURLSearchParams", "module", "__toCommonJS", "RESTEvents", "global", "RequestMethod", "_a", "limit", "offset", "res", "require_common", "exports", "__exportStar", "exports", "GatewayOpcodes", "GatewayCloseCodes", "GatewayIntentBits", "GatewayDispatchEvents", "exports", "exports", "ApplicationFlags", "exports", "ApplicationRoleConnectionMetadataType", "AuditLogEvent", "exports", "AuditLogOptionsType", "AutoModerationRuleTriggerType", "exports", "AutoModerationRuleKeywordPresetType", "AutoModerationRuleEventType", "AutoModerationActionType", "SortOrderType", "exports", "ForumLayoutType", "ChannelType", "VideoQualityMode", "MessageType", "MessageActivityType", "MessageReferenceType", "MessageFlags", "OverwriteType", "ThreadAutoArchiveDuration", "ThreadMemberFlags", "EmbedType", "AttachmentFlags", "AllowedMentionsTypes", "ComponentType", "ButtonStyle", "TextInputStyle", "SelectMenuDefaultValueType", "ChannelFlags", "PresenceUpdateStatus", "exports", "ActivityPlatform", "ActivityType", "ActivityFlags", "GuildDefaultMessageNotifications", "exports", "GuildExplicitContentFilter", "GuildMFALevel", "GuildNSFWLevel", "GuildVerificationLevel", "GuildPremiumTier", "GuildHubType", "GuildSystemChannelFlags", "GuildFeature", "GuildMemberFlags", "IntegrationExpireBehavior", "GuildWidgetStyle", "MembershipScreeningFieldType", "GuildOnboardingMode", "GuildOnboardingPromptType", "GuildScheduledEventRecurrenceRuleFrequency", "exports", "GuildScheduledEventRecurrenceRuleWeekday", "GuildScheduledEventRecurrenceRuleMonth", "GuildScheduledEventEntityType", "GuildScheduledEventStatus", "GuildScheduledEventPrivacyLevel", "require_attachment", "exports", "require_base", "exports", "require_boolean", "exports", "require_channel", "exports", "require_integer", "exports", "require_mentionable", "exports", "require_number", "exports", "require_role", "exports", "ApplicationCommandOptionType", "exports", "require_string", "exports", "require_subcommand", "exports", "require_subcommandGroup", "exports", "require_user", "exports", "__exportStar", "exports", "require_contextMenu", "exports", "ApplicationCommandPermissionType", "exports", "__exportStar", "exports", "ApplicationCommandType", "ApplicationIntegrationType", "InteractionContextType", "EntryPointCommandHandlerType", "require_autocomplete", "exports", "require_base", "exports", "require_messageComponents", "exports", "require_modalSubmit", "exports", "require_ping", "exports", "InteractionType", "exports", "InteractionResponseType", "__exportStar", "exports", "InviteType", "exports", "InviteTargetType", "OAuth2Scopes", "exports", "PollLayoutType", "exports", "RoleFlags", "exports", "StageInstancePrivacyLevel", "exports", "StickerType", "exports", "StickerFormatType", "TeamMemberMembershipState", "exports", "TeamMemberRole", "UserFlags", "exports", "UserPremiumType", "ConnectionService", "ConnectionVisibility", "WebhookType", "exports", "EntitlementType", "exports", "SKUFlags", "SKUType", "SubscriptionStatus", "__exportStar", "exports", "RESTJSONErrorCodes", "exports", "Locale", "require_application", "exports", "require_auditLog", "exports", "require_autoModeration", "exports", "ReactionType", "exports", "require_emoji", "exports", "require_gateway", "exports", "require_guild", "exports", "require_guildScheduledEvent", "exports", "require_interactions", "exports", "require_invite", "exports", "require_oauth2", "exports", "require_poll", "exports", "require_stageInstance", "exports", "require_sticker", "exports", "require_template", "exports", "require_user", "exports", "require_voice", "exports", "require_webhook", "exports", "EntitlementOwnerType", "exports", "__exportStar", "exports", "ImageFormat", "RPCErrorCodes", "exports", "RPCCloseEventCodes", "__exportStar", "exports", "exports", "__exportStar", "exports", "exports", "module", "exports", "module", "exports", "module", "ErrorCodes", "DiscordjsError", "exports", "module", "exports", "module", "Symbol", "exports", "module", "exports", "module", "exports", "module", "Collection", "DiscordjsTypeError", "ErrorCodes", "exports", "module", "Options", "Collection", "exports", "module", "require_errors", "exports", "module", "exports", "module", "require_tree", "exports", "module", "require_util", "exports", "module", "Blob", "idx", "stream", "err", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "err", "exports", "module", "session", "onConnectTimeout", "exports", "module", "exports", "require_constants", "exports", "ERROR", "TYPE", "FLAGS", "LENIENT_FLAGS", "METHODS", "FINISH", "HEADER_STATE", "exports", "module", "Buffer", "exports", "module", "Buffer", "require_constants", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "keys", "require_util", "exports", "module", "performance", "require_symbols", "exports", "module", "exports", "module", "Blob", "exports", "module", "FormData", "entry", "exports", "module", "exports", "module", "FormData", "Blob", "chunk", "value", "exports", "module", "client", "exports", "module", "client", "socket", "headers", "exports", "module", "exports", "module", "exports", "module", "Client", "connect", "socket", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "Client", "exports", "module", "pool", "dispatcher", "exports", "module", "Client", "exports", "module", "URL", "opts", "_a", "exports", "module", "exports", "module", "err", "exports", "module", "exports", "module", "self", "consume", "require_util", "exports", "module", "exports", "module", "exports", "module", "self", "exports", "module", "callback", "res", "opaque", "exports", "module", "body", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "mockDispatch", "exports", "module", "replyParameters", "newMockDispatch", "exports", "module", "Client", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "require_global", "exports", "module", "exports", "module", "_a", "exports", "module", "opts", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "FormData", "Response", "exports", "module", "require_request", "exports", "module", "FinalizationRegistry", "exports", "module", "fetch", "require_symbols", "exports", "module", "exports", "module", "exports", "module", "require_util", "exports", "module", "type", "exports", "module", "require_symbols", "exports", "module", "require_util", "exports", "module", "exports", "module", "Response", "request", "exports", "module", "cache", "require_constants", "exports", "module", "require_util", "exports", "module", "exports", "module", "exports", "module", "require_events", "exports", "module", "_eventInit", "require_constants", "exports", "module", "require_symbols", "exports", "module", "require_util", "exports", "module", "exports", "module", "buffer", "exports", "module", "exports", "module", "exports", "module", "body", "exports", "module", "node", "exports", "module", "require_util", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "Client", "fetch", "exports", "module", "exports", "module", "DiscordjsRangeError", "ErrorCodes", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "exports", "Routes", "exports", "module", "exports", "module", "DiscordjsError", "ErrorCodes", "exports", "exports", "module", "exports", "module", "PermissionsBitField", "exports", "module", "exports", "DiscordjsError", "ErrorCodes", "PermissionsBitField", "exports", "module", "DiscordjsTypeError", "ErrorCodes", "PermissionsBitField", "exports", "module", "process", "Collection", "Routes", "DiscordjsTypeError", "ErrorCodes", "exports", "module", "DiscordjsError", "ErrorCodes", "PermissionsBitField", "exports", "exports", "exports", "module", "Collection", "Routes", "fetch", "DiscordjsError", "DiscordjsRangeError", "DiscordjsTypeError", "ErrorCodes", "exports", "module", "Routes", "DiscordjsTypeError", "ErrorCodes", "Options", "BaseClient", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "Events", "exports", "module", "require_AutoModerationActionExecution", "exports", "module", "Events", "exports", "module", "Events", "exports", "module", "Events", "exports", "module", "Events", "exports", "module", "Events", "exports", "module", "Events", "exports", "module", "exports", "module", "exports", "module", "setTimeout", "clearTimeout", "Collection", "DiscordjsTypeError", "ErrorCodes", "exports", "module", "Collection", "Events", "exports", "module", "Events", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "DiscordjsError", "ErrorCodes", "exports", "module", "exports", "module", "exports", "module", "Collection", "exports", "module", "makeURLSearchParams", "Routes", "exports", "module", "exports", "process", "exports", "module", "exports", "module", "Collection", "exports", "module", "exports", "module", "Routes", "DiscordjsError", "ErrorCodes", "Invite", "exports", "module", "setTimeout", "clearTimeout", "Routes", "Events", "GuildTemplate", "exports", "module", "Buffer", "fetch", "DiscordjsError", "DiscordjsTypeError", "ErrorCodes", "Invite", "resolveInviteCode", "resolveGuildTemplateCode", "GuildTemplate", "exports", "module", "exports", "module", "Collection", "PermissionsBitField", "exports", "exports", "module", "exports", "module", "Collection", "exports", "module", "Collection", "Routes", "DiscordjsError", "DiscordjsTypeError", "ErrorCodes", "data", "exports", "module", "PermissionsBitField", "exports", "module", "Collection", "makeURLSearchParams", "Routes", "DiscordjsTypeError", "ErrorCodes", "PermissionsBitField", "exports", "module", "exports", "module", "Collection", "Routes", "DiscordjsTypeError", "ErrorCodes", "exports", "exports", "Collection", "makeURLSearchParams", "Routes", "ErrorCodes", "DiscordjsTypeError", "exports", "module", "exports", "module", "Collection", "Routes", "PermissionsBitField", "exports", "module", "exports", "module", "Collection", "exports", "exports", "Collection", "DiscordjsError", "ErrorCodes", "exports", "module", "Collection", "Events", "exports", "Routes", "DiscordjsError", "ErrorCodes", "Sticker", "exports", "module", "exports", "module", "Collection", "DiscordjsTypeError", "ErrorCodes", "exports", "module", "DiscordjsError", "ErrorCodes", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "Collection", "makeURLSearchParams", "Routes", "DiscordjsError", "ErrorCodes", "exports", "module", "Routes", "exports", "module", "Routes", "exports", "Collection", "Sticker", "DiscordjsError", "ErrorCodes", "PermissionsBitField", "exports", "module", "makeURLSearchParams", "Routes", "DiscordjsError", "ErrorCodes", "Webhook", "exports", "module", "BaseClient", "DiscordjsError", "ErrorCodes", "Webhook", "exports", "module", "Routes", "DiscordjsError", "DiscordjsTypeError", "ErrorCodes", "exports", "module", "Collection", "Routes", "DiscordjsTypeError", "ErrorCodes", "exports", "exports", "DiscordjsError", "ErrorCodes", "PermissionsBitField", "exports", "module", "Collection", "makeURLSearchParams", "Routes", "DiscordjsTypeError", "ErrorCodes", "exports", "module", "Webhook", "exports", "module", "Buffer", "DiscordjsError", "DiscordjsRangeError", "ErrorCodes", "Webhook", "exports", "module", "exports", "module", "Collection", "Routes", "DiscordjsTypeError", "DiscordjsError", "ErrorCodes", "exports", "module", "exports", "module", "exports", "module", "Routes", "DiscordjsTypeError", "ErrorCodes", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "Collection", "makeURLSearchParams", "Routes", "DiscordjsTypeError", "ErrorCodes", "exports", "module", "Routes", "DiscordjsError", "DiscordjsRangeError", "ErrorCodes", "exports", "module", "Collection", "makeURLSearchParams", "Routes", "DiscordjsTypeError", "ErrorCodes", "_a", "_b", "exports", "module", "Routes", "DiscordjsTypeError", "ErrorCodes", "exports", "module", "exports", "module", "Routes", "DiscordjsError", "ErrorCodes", "exports", "module", "Collection", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "DiscordjsError", "ErrorCodes", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "Events", "exports", "module", "Events", "exports", "module", "Events", "exports", "module", "Collection", "exports", "Collection", "exports", "Collection", "exports", "module", "Routes", "exports", "exports", "module", "Invite", "Sticker", "Webhook", "exports", "module", "Events", "exports", "module", "Events", "exports", "module", "exports", "module", "Events", "exports", "module", "exports", "module", "Events", "exports", "module", "Events", "exports", "module", "Events", "exports", "module", "Events", "exports", "module", "exports", "module", "Events", "exports", "module", "exports", "module", "Events", "Status", "exports", "module", "Events", "Status", "exports", "module", "Events", "exports", "module", "Events", "exports", "module", "Events", "exports", "module", "exports", "module", "Events", "exports", "module", "Events", "exports", "module", "Events", "exports", "module", "Events", "exports", "module", "Events", "exports", "module", "Events", "exports", "module", "Events", "exports", "module", "Events", "exports", "module", "exports", "module", "Events", "exports", "module", "DiscordjsTypeError", "ErrorCodes", "exports", "module", "Routes", "DiscordjsError", "ErrorCodes", "exports", "module", "DiscordjsError", "ErrorCodes", "exports", "module", "Routes", "DiscordjsError", "ErrorCodes", "exports", "module", "exports", "module", "exports", "module", "Collection", "exports", "module", "exports", "module", "exports", "module", "Collection", "Events", "exports", "module", "exports", "module", "exports", "module", "Collection", "DiscordjsTypeError", "ErrorCodes", "exports", "module", "exports", "module", "Collection", "exports", "module", "exports", "module", "exports", "module", "Collection", "Events", "exports", "module", "Events", "exports", "module", "Events", "exports", "module", "Invite", "Events", "exports", "module", "Events", "exports", "module", "Events", "exports", "module", "Collection", "Events", "exports", "module", "Events", "exports", "module", "Events", "exports", "module", "Events", "exports", "module", "Events", "exports", "module", "Events", "exports", "module", "Events", "exports", "module", "exports", "module", "Events", "exports", "module", "Events", "exports", "module", "Events", "exports", "module", "Events", "exports", "module", "Events", "exports", "module", "Events", "exports", "module", "Collection", "Events", "exports", "module", "Events", "exports", "module", "Collection", "Events", "exports", "module", "exports", "module", "Events", "exports", "module", "Events", "exports", "module", "Events", "exports", "module", "process", "exports", "module", "ActionsManager", "exports", "module", "Events", "ClientVoiceManager", "exports", "module", "__export", "Collection", "module", "__toCommonJS", "require_timers", "exports", "module", "require_promises", "exports", "module", "exports", "module", "exports", "module", "require_common", "exports", "__exportStar", "exports", "GatewayOpcodes", "GatewayCloseCodes", "GatewayIntentBits", "GatewayDispatchEvents", "exports", "exports", "ApplicationFlags", "exports", "ApplicationRoleConnectionMetadataType", "AuditLogEvent", "exports", "AuditLogOptionsType", "AutoModerationRuleTriggerType", "exports", "AutoModerationRuleKeywordPresetType", "AutoModerationRuleEventType", "AutoModerationActionType", "SortOrderType", "exports", "ForumLayoutType", "ChannelType", "VideoQualityMode", "MessageType", "MessageActivityType", "MessageFlags", "OverwriteType", "ThreadAutoArchiveDuration", "ThreadMemberFlags", "EmbedType", "AttachmentFlags", "AllowedMentionsTypes", "ComponentType", "ButtonStyle", "TextInputStyle", "SelectMenuDefaultValueType", "ChannelFlags", "PresenceUpdateStatus", "exports", "ActivityPlatform", "ActivityType", "ActivityFlags", "GuildDefaultMessageNotifications", "exports", "GuildExplicitContentFilter", "GuildMFALevel", "GuildNSFWLevel", "GuildVerificationLevel", "GuildPremiumTier", "GuildHubType", "GuildSystemChannelFlags", "GuildFeature", "GuildMemberFlags", "IntegrationExpireBehavior", "GuildWidgetStyle", "MembershipScreeningFieldType", "GuildOnboardingMode", "GuildOnboardingPromptType", "GuildScheduledEventEntityType", "exports", "GuildScheduledEventStatus", "GuildScheduledEventPrivacyLevel", "require_attachment", "exports", "require_base", "exports", "require_boolean", "exports", "require_channel", "exports", "require_integer", "exports", "require_mentionable", "exports", "require_number", "exports", "require_role", "exports", "ApplicationCommandOptionType", "exports", "require_string", "exports", "require_subcommand", "exports", "require_subcommandGroup", "exports", "require_user", "exports", "__exportStar", "exports", "require_contextMenu", "exports", "ApplicationCommandPermissionType", "exports", "__exportStar", "exports", "ApplicationCommandType", "require_autocomplete", "exports", "require_base", "exports", "require_messageComponents", "exports", "require_modalSubmit", "exports", "require_ping", "exports", "InteractionType", "exports", "InteractionResponseType", "__exportStar", "exports", "InviteType", "exports", "InviteTargetType", "OAuth2Scopes", "exports", "PollLayoutType", "exports", "RoleFlags", "exports", "StageInstancePrivacyLevel", "exports", "StickerType", "exports", "StickerFormatType", "TeamMemberMembershipState", "exports", "TeamMemberRole", "UserFlags", "exports", "UserPremiumType", "ConnectionService", "ConnectionVisibility", "WebhookType", "exports", "EntitlementType", "exports", "SKUFlags", "SKUType", "__exportStar", "exports", "RESTJSONErrorCodes", "exports", "Locale", "require_application", "exports", "require_auditLog", "exports", "require_autoModeration", "exports", "require_channel", "exports", "require_emoji", "exports", "require_gateway", "exports", "require_guild", "exports", "require_guildScheduledEvent", "exports", "require_interactions", "exports", "require_invite", "exports", "require_oauth2", "exports", "require_poll", "exports", "require_stageInstance", "exports", "require_sticker", "exports", "require_template", "exports", "require_user", "exports", "require_voice", "exports", "require_webhook", "exports", "EntitlementOwnerType", "exports", "__exportStar", "exports", "ImageFormat", "RPCErrorCodes", "exports", "RPCCloseEventCodes", "__exportStar", "exports", "exports", "__exportStar", "exports", "__export", "WebSocketManager", "module", "__toCommonJS", "import_node_worker_threads", "import_collection", "WorkerSendPayloadOp", "WorkerReceivePayloadOp", "_a", "workerData", "resolve", "payload", "import_node_events", "import_promises", "import_util", "import_async_queue", "import_v10", "sleep", "Encoding", "CompressionMethod", "process", "WebSocketShardEvents", "WebSocketShardStatus", "WebSocketShardDestroyRecovery", "CloseCodes", "version", "session", "import_async_event_emitter", "exports", "module", "exports", "module", "process", "setTimeout", "clearTimeout", "Status", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "Events", "exports", "module", "Events", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "Events", "Status", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "Collection", "Events", "exports", "module", "Events", "Status", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "Events", "exports", "module", "exports", "module", "Routes", "exports", "module", "exports", "module", "Events", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "Events", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "process", "setImmediate", "Collection", "DiscordjsError", "ErrorCodes", "Events", "Status", "WebSocketManager", "exports", "module", "BaseGuildEmojiManager", "exports", "module", "process", "Routes", "Events", "ChannelManager", "exports", "module", "process", "DiscordjsError", "DiscordjsTypeError", "ErrorCodes", "Events", "ShardClientUtil", "script", "exports", "module", "Collection", "Webhook", "exports", "Collection", "exports", "module", "exports", "module", "Collection", "Routes", "Sticker", "GuildPreview", "exports", "module", "Collection", "Routes", "exports", "module", "exports", "module", "process", "Collection", "makeURLSearchParams", "Routes", "DiscordjsTypeError", "DiscordjsError", "ErrorCodes", "exports", "module", "process", "Collection", "Routes", "DiscordjsError", "DiscordjsTypeError", "ErrorCodes", "Webhook", "data", "exports", "module", "Collection", "Routes", "BaseGuildEmojiManager", "DiscordjsError", "DiscordjsTypeError", "ErrorCodes", "exports", "module", "Collection", "Routes", "DiscordjsError", "ErrorCodes", "Invite", "resolveInviteCode", "exports", "module", "setTimeout", "clearTimeout", "Collection", "makeURLSearchParams", "Routes", "DiscordjsError", "DiscordjsTypeError", "DiscordjsRangeError", "ErrorCodes", "Events", "exports", "module", "Collection", "makeURLSearchParams", "Routes", "DiscordjsTypeError", "DiscordjsError", "ErrorCodes", "data", "exports", "module", "Collection", "Routes", "DiscordjsTypeError", "ErrorCodes", "Sticker", "exports", "module", "exports", "exports", "module", "exports", "module", "process", "Collection", "Routes", "DiscordjsTypeError", "ErrorCodes", "PermissionsBitField", "exports", "module", "Routes", "DiscordjsTypeError", "DiscordjsError", "ErrorCodes", "exports", "module", "Routes", "exports", "module", "exports", "Collection", "makeURLSearchParams", "Routes", "GuildPreview", "GuildTemplate", "Webhook", "DiscordjsError", "DiscordjsTypeError", "ErrorCodes", "Status", "_a", "_b", "exports", "module", "PermissionsBitField", "exports", "module", "process", "setTimeout", "clearTimeout", "Collection", "makeURLSearchParams", "Routes", "ShardClientUtil", "Invite", "Events", "PermissionsBitField", "GuildManager", "data", "exports", "module", "Routes", "DiscordjsError", "ErrorCodes", "UserManager", "exports", "module", "DiscordjsTypeError", "ErrorCodes", "ClientPresence", "exports", "module", "Collection", "Sticker", "StickerPack", "exports", "module", "VoiceRegion", "exports", "module", "exports", "module", "Collection", "Routes", "Widget", "exports", "module", "IntentsBitField", "exports", "module", "setInterval", "clearInterval", "Events", "DiscordjsTypeError", "ErrorCodes", "Sweepers", "data", "exports", "module", "exports", "module", "process", "setTimeout", "clearTimeout", "DiscordjsError", "ErrorCodes", "script", "exports", "module", "process", "Collection", "DiscordjsError", "DiscordjsTypeError", "DiscordjsRangeError", "ErrorCodes", "script", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "process", "exports", "module", "process", "exports", "module", "process", "exports", "module", "exports", "module", "process", "exports", "__exportStar"]
}
